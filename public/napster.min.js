var DrmStreamingPlayer = (function(e) {
  var t = {}
  function r(n) {
    if (t[n]) {
      return t[n].exports
    }
    var i = (t[n] = { i: n, l: false, exports: {} })
    e[n].call(i.exports, i, i.exports, r)
    i.l = true
    return i.exports
  }
  r.m = e
  r.c = t
  r.i = function(e) {
    return e
  }
  r.d = function(e, t, n) {
    if (!r.o(e, t)) {
      Object.defineProperty(e, t, { configurable: false, enumerable: true, get: n })
    }
  }
  r.n = function(e) {
    var t =
      e && e.__esModule
        ? function t() {
            return e['default']
          }
        : function t() {
            return e
          }
    r.d(t, 'a', t)
    return t
  }
  r.o = function(e, t) {
    return Object.prototype.hasOwnProperty.call(e, t)
  }
  r.p = ''
  return r((r.s = 142))
})([
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      var e = undefined
      var t = []
      var r = {}
      var n = {}
      function i(e, t, r, n) {
        if (!n[e] && t) {
          n[e] = { instance: t, override: r }
        }
      }
      function a(e, r) {
        for (var n in t) {
          var i = t[n]
          if (i.context === e && i.name === r) {
            return i.instance
          }
        }
        return null
      }
      function s(e, r, n) {
        for (var i in t) {
          var a = t[i]
          if (a.context === e && a.name === r) {
            t[i].instance = n
            return
          }
        }
        t.push({ name: r, context: e, instance: n })
      }
      function o(e, t) {
        return t[e]
      }
      function u(e, t, r) {
        if (e in r) {
          r[e] = t
        }
      }
      function l(e, t) {
        u(e, t, n)
      }
      function f(e) {
        return o(e, n)
      }
      function d(e) {
        var t = o(e.__dashjs_factory_name, n)
        if (!t) {
          t = function(t) {
            if (t === undefined) {
              t = {}
            }
            return {
              create: function r() {
                return v(e, t, arguments)
              },
            }
          }
          n[e.__dashjs_factory_name] = t
        }
        return t
      }
      function c(e, t) {
        u(e, t, r)
      }
      function h(e) {
        return o(e, r)
      }
      function p(e) {
        var n = o(e.__dashjs_factory_name, r)
        if (!n) {
          n = function(r) {
            var n = undefined
            if (r === undefined) {
              r = {}
            }
            return {
              getInstance: function i() {
                if (!n) {
                  n = a(r, e.__dashjs_factory_name)
                }
                if (!n) {
                  n = v(e, r, arguments)
                  t.push({ name: e.__dashjs_factory_name, context: r, instance: n })
                }
                return n
              },
            }
          }
          r[e.__dashjs_factory_name] = n
        }
        return n
      }
      function v(t, r, n) {
        var i = undefined
        var a = t.__dashjs_factory_name
        var s = r[a]
        if (s) {
          var o = s.instance
          if (s.override) {
            i = t.apply({ context: r }, n)
            o = o.apply({ context: r, factory: e, parent: i }, n)
            for (var u in o) {
              if (i.hasOwnProperty(u)) {
                i[u] = o[u]
              }
            }
          } else {
            return o.apply({ context: r, factory: e }, n)
          }
        } else {
          i = t.apply({ context: r }, n)
        }
        i.getClassName = function() {
          return a
        }
        return i
      }
      e = {
        extend: i,
        getSingletonInstance: a,
        setSingletonInstance: s,
        getSingletonFactory: p,
        getSingletonFactoryByName: h,
        updateSingletonFactory: c,
        getClassFactory: d,
        getClassFactoryByName: f,
        updateClassFactory: l,
      }
      return e
    })()
    t['default'] = n
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(2)
    var a = n(i)
    var s = r(4)
    var o = n(s)
    var u = r(0)
    var l = n(u)
    var f = 0
    var d = 1
    var c = 2
    var h = 3
    var p = 4
    var v = 5
    function g() {
      var e = this.context
      var t = (0, a['default'])(e).getInstance()
      var r = []
      var n = undefined,
        i = undefined,
        s = undefined,
        u = undefined,
        l = undefined
      function g() {
        i = true
        s = true
        l = h
        u = new Date().getTime()
        if (typeof window !== 'undefined' && window.console) {
          r[d] = m(window.console.error)
          r[c] = m(window.console.error)
          r[h] = m(window.console.warn)
          r[p] = m(window.console.info)
          r[v] = m(window.console.debug)
        }
      }
      function m(e) {
        if (e && e.bind) {
          return e.bind(window.console)
        }
        return window.console.log.bind(window.console)
      }
      function y(e) {
        return {
          fatal: A.bind(e),
          error: I.bind(e),
          warn: C.bind(e),
          info: R.bind(e),
          debug: D.bind(e),
        }
      }
      function _(e) {
        l = e
      }
      function T() {
        return l
      }
      function E(e) {
        i = e
      }
      function b(e) {
        s = e
      }
      function S(e) {
        if (e) {
          l = v
        } else {
          l = f
        }
      }
      function w() {
        return l !== f
      }
      function A() {
        for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) {
          t[r] = arguments[r]
        }
        O.apply(undefined, [d, this].concat(t))
      }
      function I() {
        for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) {
          t[r] = arguments[r]
        }
        O.apply(undefined, [c, this].concat(t))
      }
      function C() {
        for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) {
          t[r] = arguments[r]
        }
        O.apply(undefined, [h, this].concat(t))
      }
      function R() {
        for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) {
          t[r] = arguments[r]
        }
        O.apply(undefined, [p, this].concat(t))
      }
      function D() {
        for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) {
          t[r] = arguments[r]
        }
        O.apply(undefined, [v, this].concat(t))
      }
      function O(e, n) {
        var a = ''
        var f = null
        if (i) {
          f = new Date().getTime()
          a += '[' + (f - u) + ']'
        }
        if (s && n && n.getClassName) {
          a += '[' + n.getClassName() + ']'
          if (n.getType) {
            a += '[' + n.getType() + ']'
          }
        }
        if (a.length > 0) {
          a += ' '
        }
        for (var d = arguments.length, c = Array(d > 2 ? d - 2 : 0), h = 2; h < d; h++) {
          c[h - 2] = arguments[h]
        }
        Array.apply(null, c).forEach(function(e) {
          a += e + ' '
        })
        if (r[e] && l >= e) {
          r[e](a)
        }
        t.trigger(o['default'].LOG, { message: a, level: e })
      }
      n = {
        getLogger: y,
        setLogTimestampVisible: E,
        setCalleeNameVisible: b,
        setLogToBrowserConsole: S,
        getLogToBrowserConsole: w,
        setLogLevel: _,
        getLogLevel: T,
      }
      g()
      return n
    }
    g.__dashjs_factory_name = 'Debug'
    var m = l['default'].getSingletonFactory(g)
    m.LOG_LEVEL_NONE = f
    m.LOG_LEVEL_FATAL = d
    m.LOG_LEVEL_ERROR = c
    m.LOG_LEVEL_WARNING = h
    m.LOG_LEVEL_INFO = p
    m.LOG_LEVEL_DEBUG = v
    l['default'].updateSingletonFactory(g.__dashjs_factory_name, m)
    t['default'] = m
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = 0
    var o = 5e3
    function u() {
      var e = {}
      function t(t, r, n) {
        var a = arguments.length <= 3 || arguments[3] === undefined ? s : arguments[3]
        if (!t) {
          throw new Error('event type cannot be null or undefined')
        }
        if (!r || typeof r !== 'function') {
          throw new Error('listener must be a function: ' + r)
        }
        if (i(t, r, n) >= 0) return
        e[t] = e[t] || []
        var o = { callback: r, scope: n, priority: a }
        var u = e[t].some(function(r, n) {
          if (r && a > r.priority) {
            e[t].splice(n, 0, o)
            return true
          }
        })
        if (!u) {
          e[t].push(o)
        }
      }
      function r(t, r, n) {
        if (!t || !r || !e[t]) return
        var a = i(t, r, n)
        if (a < 0) return
        e[t][a] = null
      }
      function n(t, r) {
        if (!t || !e[t]) return
        r = r || {}
        if (r.hasOwnProperty('type'))
          throw new Error("'type' is a reserved word for event dispatching")
        r.type = t
        e[t] = e[t].filter(function(e) {
          return e
        })
        e[t].forEach(function(e) {
          return e && e.callback.call(e.scope, r)
        })
      }
      function i(t, r, n) {
        var i = -1
        if (!e[t]) return i
        e[t].some(function(e, t) {
          if (e && e.callback === r && (!n || n === e.scope)) {
            i = t
            return true
          }
        })
        return i
      }
      function a() {
        e = {}
      }
      var o = { on: t, off: r, trigger: n, reset: a }
      return o
    }
    u.__dashjs_factory_name = 'EventBus'
    var l = a['default'].getSingletonFactory(u)
    l.EVENT_PRIORITY_LOW = s
    l.EVENT_PRIORITY_HIGH = o
    a['default'].updateSingletonFactory(u.__dashjs_factory_name, l)
    t['default'] = l
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = (function() {
      n(e, [
        {
          key: 'init',
          value: function e() {
            this.STREAM = 'stream'
            this.VIDEO = 'video'
            this.AUDIO = 'audio'
            this.TEXT = 'text'
            this.FRAGMENTED_TEXT = 'fragmentedText'
            this.EMBEDDED_TEXT = 'embeddedText'
            this.MUXED = 'muxed'
            this.IMAGE = 'image'
            this.LOCATION = 'Location'
            this.INITIALIZE = 'initialize'
            this.TEXT_SHOWING = 'showing'
            this.TEXT_HIDDEN = 'hidden'
            this.CC1 = 'CC1'
            this.CC3 = 'CC3'
            this.STPP = 'stpp'
            this.TTML = 'ttml'
            this.VTT = 'vtt'
            this.WVTT = 'wvtt'
            this.UTF8 = 'utf-8'
            this.SUGGESTED_PRESENTATION_DELAY = 'suggestedPresentationDelay'
            this.SCHEME_ID_URI = 'schemeIdUri'
            this.START_TIME = 'starttime'
            this.ABR_STRATEGY_DYNAMIC = 'abrDynamic'
            this.ABR_STRATEGY_BOLA = 'abrBola'
            this.ABR_STRATEGY_THROUGHPUT = 'abrThroughput'
            this.MOVING_AVERAGE_SLIDING_WINDOW = 'slidingWindow'
            this.MOVING_AVERAGE_EWMA = 'ewma'
            this.BAD_ARGUMENT_ERROR = 'Invalid Arguments'
            this.MISSING_CONFIG_ERROR = 'Missing config parameter(s)'
          },
        },
      ])
      function e() {
        i(this, e)
        this.init()
      }
      return e
    })()
    var s = new a()
    t['default'] = s
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(186)
    var u = i(o)
    var l = (function(e) {
      s(t, e)
      function t() {
        a(this, t)
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).apply(this, arguments)
      }
      return t
    })(u['default'])
    var f = new l()
    t['default'] = f
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e(t, r, i) {
      n(this, e)
      this.code = t || null
      this.message = r || null
      this.data = i || null
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(101)
    var u = i(o)
    var l = (function(e) {
      s(t, e)
      function t() {
        a(this, t)
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(this)
        this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE = 10
        this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE = 11
        this.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE = 12
        this.SEGMENTS_UPDATE_FAILED_ERROR_CODE = 13
        this.SEGMENTS_UNAVAILABLE_ERROR_CODE = 14
        this.SEGMENT_BASE_LOADER_ERROR_CODE = 15
        this.TIME_SYNC_FAILED_ERROR_CODE = 16
        this.FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE = 17
        this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE = 18
        this.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE = 19
        this.APPEND_ERROR_CODE = 20
        this.REMOVE_ERROR_CODE = 21
        this.DATA_UPDATE_FAILED_ERROR_CODE = 22
        this.CAPABILITY_MEDIASOURCE_ERROR_CODE = 23
        this.CAPABILITY_MEDIAKEYS_ERROR_CODE = 24
        this.DOWNLOAD_ERROR_ID_MANIFEST_CODE = 25
        this.DOWNLOAD_ERROR_ID_MANIFEST = 'manifest'
        this.DOWNLOAD_ERROR_ID_SIDX_CODE = 26
        this.DOWNLOAD_ERROR_ID_CONTENT_CODE = 27
        this.DOWNLOAD_ERROR_ID_CONTENT = 'content'
        this.DOWNLOAD_ERROR_ID_INITIALIZATION_CODE = 28
        this.DOWNLOAD_ERROR_ID_INITIALIZATION = 'initialization'
        this.DOWNLOAD_ERROR_ID_XLINK_CODE = 29
        this.DOWNLOAD_ERROR_ID_XLINK = 'xlink'
        this.MANIFEST_ERROR_ID_CODEC_CODE = 30
        this.MANIFEST_ERROR_ID_PARSE_CODE = 31
        this.MANIFEST_ERROR_ID_NOSTREAMS_CODE = 32
        this.TIMED_TEXT_ERROR_ID_PARSE_CODE = 33
        this.MANIFEST_ERROR_ID_MULTIPLEXED_CODE = 34
        this.MEDIASOURCE_TYPE_UNSUPPORTED_CODE = 35
        this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE = 'parsing failed for '
        this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE = 'Failed loading manifest: '
        this.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE = 'Failed loading Xlink element: '
        this.SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE = 'Segments update failed'
        this.SEGMENTS_UNAVAILABLE_ERROR_MESSAGE = 'no segments are available yet'
        this.SEGMENT_BASE_LOADER_ERROR_MESSAGE = 'error loading segments'
        this.TIME_SYNC_FAILED_ERROR_MESSAGE = 'Failed to synchronize time'
        this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE = 'request is null'
        this.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE = 'Failed to resolve a valid URL'
        this.APPEND_ERROR_MESSAGE = 'chunk is not defined'
        this.REMOVE_ERROR_MESSAGE = 'buffer is not defined'
        this.DATA_UPDATE_FAILED_ERROR_MESSAGE = 'Data update failed'
        this.CAPABILITY_MEDIASOURCE_ERROR_MESSAGE = 'mediasource is not supported'
        this.CAPABILITY_MEDIAKEYS_ERROR_MESSAGE = 'mediakeys is not supported'
        this.TIMED_TEXT_ERROR_MESSAGE_PARSE = 'parsing error :'
        this.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE = 'Error creating source buffer of type : '
      }
      return t
    })(u['default'])
    var f = new l()
    t['default'] = f
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.tcpid = null
      this.type = null
      this.url = null
      this.actualurl = null
      this.range = null
      this.trequest = null
      this.tresponse = null
      this.responsecode = null
      this.interval = null
      this.trace = []
      this._stream = null
      this._tfinish = null
      this._mediaduration = null
      this._responseHeaders = null
      this._serviceLocation = null
    }
    var a = function e() {
      n(this, e)
      this.s = null
      this.d = null
      this.b = []
    }
    i.GET = 'GET'
    i.HEAD = 'HEAD'
    i.MPD_TYPE = 'MPD'
    i.XLINK_EXPANSION_TYPE = 'XLinkExpansion'
    i.INIT_SEGMENT_TYPE = 'InitializationSegment'
    i.INDEX_SEGMENT_TYPE = 'IndexSegment'
    i.MEDIA_SEGMENT_TYPE = 'MediaSegment'
    i.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment'
    i.OTHER_TYPE = 'other'
    t.HTTPRequest = i
    t.HTTPRequestTrace = a
  },
  function(e, t) {
    var r = (e.exports =
      typeof window != 'undefined' && window.Math == Math
        ? window
        : typeof self != 'undefined' && self.Math == Math
        ? self
        : Function('return this')())
    if (typeof __g == 'number') __g = r
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = (function() {
      n(e, [
        {
          key: 'init',
          value: function e() {
            this.BASE_URL = 'BaseURL'
            this.SEGMENT_BASE = 'SegmentBase'
            this.SEGMENT_TEMPLATE = 'SegmentTemplate'
            this.SEGMENT_LIST = 'SegmentList'
            this.SEGMENT_URL = 'SegmentURL'
            this.SEGMENT_TIMELINE = 'SegmentTimeline'
            this.SEGMENT_PROFILES = 'segmentProfiles'
            this.ADAPTATION_SET = 'AdaptationSet'
            this.REPRESENTATION = 'Representation'
            this.REPRESENTATION_INDEX = 'RepresentationIndex'
            this.SUB_REPRESENTATION = 'SubRepresentation'
            this.INITIALIZATION = 'Initialization'
            this.INITIALIZATION_MINUS = 'initialization'
            this.MPD = 'MPD'
            this.PERIOD = 'Period'
            this.ASSET_IDENTIFIER = 'AssetIdentifier'
            this.EVENT_STREAM = 'EventStream'
            this.ID = 'id'
            this.PROFILES = 'profiles'
            this.SERVICE_LOCATION = 'serviceLocation'
            this.RANGE = 'range'
            this.INDEX = 'index'
            this.MEDIA = 'media'
            this.BYTE_RANGE = 'byteRange'
            this.INDEX_RANGE = 'indexRange'
            this.MEDIA_RANGE = 'mediaRange'
            this.VALUE = 'value'
            this.CONTENT_TYPE = 'contentType'
            this.MIME_TYPE = 'mimeType'
            this.BITSTREAM_SWITCHING = 'BitstreamSwitching'
            this.BITSTREAM_SWITCHING_MINUS = 'bitstreamSwitching'
            this.CODECS = 'codecs'
            this.DEPENDENCY_ID = 'dependencyId'
            this.MEDIA_STREAM_STRUCTURE_ID = 'mediaStreamStructureId'
            this.METRICS = 'Metrics'
            this.METRICS_MINUS = 'metrics'
            this.REPORTING = 'Reporting'
            this.WIDTH = 'width'
            this.HEIGHT = 'height'
            this.SAR = 'sar'
            this.FRAMERATE = 'frameRate'
            this.AUDIO_SAMPLING_RATE = 'audioSamplingRate'
            this.MAXIMUM_SAP_PERIOD = 'maximumSAPPeriod'
            this.START_WITH_SAP = 'startWithSAP'
            this.MAX_PLAYOUT_RATE = 'maxPlayoutRate'
            this.CODING_DEPENDENCY = 'codingDependency'
            this.SCAN_TYPE = 'scanType'
            this.FRAME_PACKING = 'FramePacking'
            this.AUDIO_CHANNEL_CONFIGURATION = 'AudioChannelConfiguration'
            this.CONTENT_PROTECTION = 'ContentProtection'
            this.ESSENTIAL_PROPERTY = 'EssentialProperty'
            this.SUPPLEMENTAL_PROPERTY = 'SupplementalProperty'
            this.INBAND_EVENT_STREAM = 'InbandEventStream'
            this.ACCESSIBILITY = 'Accessibility'
            this.ROLE = 'Role'
            this.RATING = 'Rating'
            this.CONTENT_COMPONENT = 'ContentComponent'
            this.SUBSET = 'Subset'
            this.LANG = 'lang'
            this.VIEWPOINT = 'Viewpoint'
            this.ROLE_ASARRAY = 'Role_asArray'
            this.ACCESSIBILITY_ASARRAY = 'Accessibility_asArray'
            this.AUDIOCHANNELCONFIGURATION_ASARRAY = 'AudioChannelConfiguration_asArray'
            this.CONTENTPROTECTION_ASARRAY = 'ContentProtection_asArray'
            this.MAIN = 'main'
            this.DYNAMIC = 'dynamic'
            this.MEDIA_PRESENTATION_DURATION = 'mediaPresentationDuration'
            this.MINIMUM_UPDATE_PERIOD = 'minimumUpdatePeriod'
            this.CODEC_PRIVATE_DATA = 'codecPrivateData'
            this.BANDWITH = 'bandwidth'
            this.SOURCE_URL = 'sourceURL'
            this.TIMESCALE = 'timescale'
            this.DURATION = 'duration'
            this.START_NUMBER = 'startNumber'
            this.PRESENTATION_TIME_OFFSET = 'presentationTimeOffset'
            this.AVAILABILITY_START_TIME = 'availabilityStartTime'
            this.AVAILABILITY_END_TIME = 'availabilityEndTime'
            this.TIMESHIFT_BUFFER_DEPTH = 'timeShiftBufferDepth'
            this.MAX_SEGMENT_DURATION = 'maxSegmentDuration'
            this.PRESENTATION_TIME = 'presentationTime'
            this.MIN_BUFFER_TIME = 'minBufferTime'
            this.MAX_SUBSEGMENT_DURATION = 'maxSubsegmentDuration'
            this.START = 'start'
            this.AVAILABILITY_TIME_OFFSET = 'availabilityTimeOffset'
            this.AVAILABILITY_TIME_COMPLETE = 'availabilityTimeComplete'
            this.CENC_DEFAULT_KID = 'cenc:default_KID'
            this.DVB_PRIORITY = 'dvb:priority'
            this.DVB_WEIGHT = 'dvb:weight'
          },
        },
      ])
      function e() {
        i(this, e)
        this.init()
      }
      return e
    })()
    var s = new a()
    t['default'] = s
    e.exports = t['default']
  },
  function(e, t, r) {
    var n = r(93)('wks')
    var i = r(97)
    var a = r(8).Symbol
    var s = typeof a == 'function'
    var o = (e.exports = function(e) {
      return n[e] || (n[e] = (s && a[e]) || (s ? a : i)('Symbol.' + e))
    })
    o.store = n
  },
  function(e, t, r) {
    'use strict'
    t.__esModule = true
    t.default = function(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
  },
  function(e, t, r) {
    'use strict'
    t.__esModule = true
    var n = r(143)
    var i = a(n)
    function a(e) {
      return e && e.__esModule ? e : { default: e }
    }
    t.default = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          ;(0, i.default)(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
  },
  function(e, t) {
    var r = (e.exports = { version: '2.5.6' })
    if (typeof __e == 'number') __e = r
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = -1
    var o = { DEFAULT: 0.5, STRONG: 1, WEAK: 0 }
    function u(e, t, r) {
      var n = undefined,
        i = undefined,
        a = undefined,
        u = undefined
      function l(e) {
        var t = o.DEFAULT
        if (e === o.DEFAULT || e === o.STRONG || e === o.WEAK) {
          t = e
        }
        return t
      }
      i = e === undefined ? s : e
      a = l(r)
      u = t === undefined ? null : t
      n = { quality: i, reason: u, priority: a }
      return n
    }
    u.__dashjs_factory_name = 'SwitchRequest'
    var l = a['default'].getClassFactory(u)
    l.NO_CHANGE = s
    l.PRIORITY = o
    a['default'].updateClassFactory(u.__dashjs_factory_name, l)
    t['default'] = l
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    function s() {
      var e = undefined
      var t = /^[a-z][a-z0-9+\-.]*:/i
      var r = /^https?:\/\//i
      var n = /^https:\/\//i
      var i = /^([a-z][a-z0-9+\-.]*:\/\/[^\/]+)\/?/i
      var a = function e(t, r) {
        try {
          return new window.URL(t, r).toString()
        } catch (e) {
          return t
        }
      }
      var s = function e(t, r) {
        var n = u
        if (!r) {
          return t
        }
        if (!d(t)) {
          return t
        }
        if (c(t)) {
          n = l
        }
        if (h(t)) {
          n = f
        }
        var i = n(r)
        var a = i.charAt(i.length - 1) !== '/' && t.charAt(0) !== '/' ? '/' : ''
        return [i, t].join(a)
      }
      function o() {
        try {
          var t = new window.URL('x', 'http://y')
          e = a
        } catch (e) {
        } finally {
          e = e || s
        }
      }
      function u(e) {
        var t = e.indexOf('/')
        var r = e.lastIndexOf('/')
        if (t !== -1) {
          if (r === t + 1) {
            return e
          }
          if (e.indexOf('?') !== -1) {
            e = e.substring(0, e.indexOf('?'))
          }
          return e.substring(0, r + 1)
        }
        return ''
      }
      function l(e) {
        var t = e.match(i)
        if (t) {
          return t[1]
        }
        return ''
      }
      function f(e) {
        var r = e.match(t)
        if (r) {
          return r[0]
        }
        return ''
      }
      function d(e) {
        return !t.test(e)
      }
      function c(e) {
        return d(e) && e.charAt(0) === '/'
      }
      function h(e) {
        return e.indexOf('//') === 0
      }
      function p(e) {
        return r.test(e)
      }
      function v(e) {
        return n.test(e)
      }
      function g(t, r) {
        return e(t, r)
      }
      o()
      var m = {
        parseBaseUrl: u,
        parseOrigin: l,
        parseScheme: f,
        isRelative: d,
        isPathAbsolute: c,
        isSchemeRelative: h,
        isHTTPURL: p,
        isHTTPS: v,
        resolve: g,
      }
      return m
    }
    s.__dashjs_factory_name = 'URLUtils'
    t['default'] = a['default'].getSingletonFactory(s)
    e.exports = t['default']
  },
  function(e, t) {
    var r
    r = (function() {
      return this
    })()
    try {
      r = r || Function('return this')() || (1, eval)('this')
    } catch (e) {
      if (typeof window === 'object') r = window
    }
    e.exports = r
  },
  function(e, t, r) {
    var n = r(30)
    e.exports = function(e) {
      if (!n(e)) throw TypeError(e + ' is not an object!')
      return e
    }
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    t.unescapeDollarsInTemplate = u
    t.replaceIDForTemplate = l
    t.replaceTokenForTemplate = f
    t.getIndexBasedSegment = d
    t.getTimeBasedSegment = c
    t.getSegmentByIndex = h
    t.decideSegmentListRangeForTemplate = p
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(64)
    var a = n(i)
    function s(e, t) {
      while (e.length < t) {
        e = '0' + e
      }
      return e
    }
    function o(e, t) {
      return e.representation.startNumber + t
    }
    function u(e) {
      return e ? e.split('$$').join('$') : e
    }
    function l(e, t) {
      if (!t || !e || e.indexOf('$RepresentationID$') === -1) {
        return e
      }
      var r = t.toString()
      return e.split('$RepresentationID$').join(r)
    }
    function f(e, t, r) {
      var n = '%0'
      var i = undefined,
        a = undefined,
        o = undefined,
        u = undefined,
        l = undefined,
        f = undefined
      var d = t.length
      var c = n.length
      if (!e) {
        return e
      }
      while (true) {
        i = e.indexOf('$' + t)
        if (i < 0) {
          return e
        }
        a = e.indexOf('$', i + d)
        if (a < 0) {
          return e
        }
        o = e.indexOf(n, i + d)
        if (o > i && o < a) {
          u = e.charAt(a - 1)
          l = parseInt(e.substring(o + c, a - 1), 10)
          switch (u) {
            case 'd':
            case 'i':
            case 'u':
              f = s(r.toString(), l)
              break
            case 'x':
              f = s(r.toString(16), l)
              break
            case 'X':
              f = s(r.toString(16), l).toUpperCase()
              break
            case 'o':
              f = s(r.toString(8), l)
              break
            default:
              return e
          }
        } else {
          f = r
        }
        e = e.substring(0, i) + f + e.substring(a + 1)
      }
    }
    function d(e, t, r, n) {
      var i = undefined,
        s = undefined,
        u = undefined,
        l = undefined
      s = r.segmentDuration
      if (isNaN(s)) {
        s = r.adaptation.period.duration
      }
      u = parseFloat((r.adaptation.period.start + n * s).toFixed(5))
      l = parseFloat((u + s).toFixed(5))
      i = new a['default']()
      i.representation = r
      i.duration = s
      i.presentationStartTime = u
      i.mediaStartTime = e.calcMediaTimeFromPresentationTime(i.presentationStartTime, r)
      i.availabilityStartTime = e.calcAvailabilityStartTimeFromPresentationTime(
        i.presentationStartTime,
        r.adaptation.period.mpd,
        t
      )
      i.availabilityEndTime = e.calcAvailabilityEndTimeFromPresentationTime(
        l,
        r.adaptation.period.mpd,
        t
      )
      i.wallStartTime = e.calcWallTimeForSegment(i, t)
      i.replacementNumber = o(i, n)
      i.availabilityIdx = n
      return i
    }
    function c(e, t, r, n, i, s, u, l, d, c) {
      var h = n / s
      var p = Math.min(i / s, r.adaptation.period.mpd.maxSegmentDuration)
      var v = undefined,
        g = undefined,
        m = undefined
      v = e.calcPresentationTimeFromMediaTime(h, r)
      g = v + p
      m = new a['default']()
      m.representation = r
      m.duration = p
      m.mediaStartTime = h
      m.presentationStartTime = v
      m.availabilityStartTime = r.adaptation.period.mpd.manifest.loadedTime
      m.availabilityEndTime = e.calcAvailabilityEndTimeFromPresentationTime(
        g,
        r.adaptation.period.mpd,
        t
      )
      m.wallStartTime = e.calcWallTimeForSegment(m, t)
      m.replacementTime = c ? c : n
      m.replacementNumber = o(m, d)
      u = f(u, 'Number', m.replacementNumber)
      u = f(u, 'Time', m.replacementTime)
      m.media = u
      m.mediaRange = l
      m.availabilityIdx = d
      return m
    }
    function h(e, t) {
      if (!t || !t.segments) return null
      var r = t.segments.length
      var n = undefined,
        i = undefined
      if (e < r) {
        n = t.segments[e]
        if (n && n.availabilityIdx === e) {
          return n
        }
      }
      for (i = 0; i < r; i++) {
        n = t.segments[i]
        if (n && n.availabilityIdx === e) {
          return n
        }
      }
      return null
    }
    function p(e, t, r, n, i, a) {
      var s = r.segmentDuration
      var o = r.adaptation.period.mpd.manifest.minBufferTime
      var u = r.segmentAvailabilityRange
      var l = {
        start: e.calcPeriodRelativeTimeFromMpdRelativeTime(r, u ? u.start : NaN),
        end: e.calcPeriodRelativeTimeFromMpdRelativeTime(r, u ? u.end : NaN),
      }
      var f = r.segments
      var d = 2 * s
      var c = a || Math.max(2 * o, 10 * s)
      var p = NaN
      var v = null
      var g = undefined,
        m = undefined,
        y = undefined
      l.start = Math.max(l.start, 0)
      if (t && !e.isTimeSyncCompleted()) {
        g = Math.floor(l.start / s)
        m = Math.floor(l.end / s)
        y = { start: g, end: m }
        return y
      }
      if (f && f.length > 0) {
        v = h(i, r)
        if (v) {
          p = e.calcPeriodRelativeTimeFromMpdRelativeTime(r, v.presentationStartTime)
        } else {
          p = i > 0 ? i * s : e.calcPeriodRelativeTimeFromMpdRelativeTime(r, n)
        }
      } else {
        p = i > 0 ? i * s : t ? l.end : l.start
      }
      g = Math.floor(Math.max(p - d, l.start) / s)
      m = Math.floor(Math.min(g + c / s, l.end / s))
      y = { start: g, end: m }
      return y
    }
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = (function() {
      n(e, [
        {
          key: 'init',
          value: function e() {
            this.CLEARKEY_KEYSTEM_STRING = 'org.w3.clearkey'
            this.WIDEVINE_KEYSTEM_STRING = 'com.widevine.alpha'
            this.PLAYREADY_KEYSTEM_STRING = 'com.microsoft.playready'
          },
        },
      ])
      function e() {
        i(this, e)
        this.init()
      }
      return e
    })()
    var s = new a()
    t['default'] = s
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(46)
    var o = n(s)
    var u = r(109)
    var l = n(u)
    var f = r(216)
    var d = n(f)
    var c = r(44)
    var h = n(c)
    var p = r(65)
    var v = n(p)
    var g = r(2)
    var m = n(g)
    var y = r(4)
    var _ = n(y)
    var T = r(36)
    var E = n(T)
    var b = r(0)
    var S = n(b)
    var w = r(1)
    var A = n(w)
    var I = r(75)
    var C = n(I)
    var R = r(5)
    var D = n(R)
    var O = r(6)
    var M = n(O)
    var k = r(7)
    var P = 'bufferLoaded'
    var N = 'bufferStalled'
    var L = 0.5
    var x = 0.5
    var F = 0.01
    var U = 22
    var B = 'BufferController'
    function j(e) {
      e = e || {}
      var t = this.context
      var r = (0, m['default'])(t).getInstance()
      var n = e.metricsModel
      var i = e.mediaPlayerModel
      var s = e.errHandler
      var u = e.streamController
      var f = e.mediaController
      var c = e.adapter
      var p = e.textController
      var g = e.abrController
      var y = e.playbackController
      var T = e.type
      var b = e.streamProcessor
      var S = undefined,
        w = undefined,
        I = undefined,
        R = undefined,
        O = undefined,
        j = undefined,
        G = undefined,
        q = undefined,
        H = undefined,
        V = undefined,
        K = undefined,
        Y = undefined,
        W = undefined,
        z = undefined,
        X = undefined,
        $ = undefined,
        Q = undefined,
        J = undefined,
        Z = undefined,
        ee = undefined,
        te = undefined
      function re() {
        w = (0, A['default'])(t)
          .getInstance()
          .getLogger(S)
        $ = (0, C['default'])(t).getInstance()
        et()
      }
      function ne() {
        return B
      }
      function ie(e) {
        ze(e)
        I = g.getQualityFor(T, b.getStreamInfo())
        r.on(_['default'].DATA_UPDATE_COMPLETED, Fe, this)
        r.on(_['default'].INIT_FRAGMENT_LOADED, ue, this)
        r.on(_['default'].MEDIA_FRAGMENT_LOADED, fe, this)
        r.on(_['default'].QUALITY_CHANGE_REQUESTED, pe, this)
        r.on(_['default'].STREAM_COMPLETED, Ue, this)
        r.on(_['default'].PLAYBACK_PLAYING, be, this)
        r.on(_['default'].PLAYBACK_PROGRESS, Te, this)
        r.on(_['default'].PLAYBACK_TIME_UPDATED, Te, this)
        r.on(_['default'].PLAYBACK_RATE_CHANGED, Ge, this)
        r.on(_['default'].PLAYBACK_SEEKING, ve, this)
        r.on(_['default'].PLAYBACK_SEEKED, ge, this)
        r.on(_['default'].PLAYBACK_STALLED, Ee, this)
        r.on(_['default'].WALLCLOCK_TIME_UPDATED, je, this)
        r.on(_['default'].CURRENT_TRACK_CHANGED, Be, this, m['default'].EVENT_PRIORITY_HIGH)
        r.on(_['default'].SOURCEBUFFER_REMOVE_COMPLETED, Le, this)
      }
      function ae(e, r) {
        if (!$ || !e || !b) return null
        if (G) {
          try {
            if (r && r[T]) {
              V = (0, l['default'])(t).create(G, e, he.bind(this), r[T])
            } else {
              V = (0, l['default'])(t).create(G, e, he.bind(this))
            }
            if (typeof V.getBuffer().initialize === 'function') {
              V.getBuffer().initialize(T, b)
            }
          } catch (e) {
            w.fatal('Caught error on create SourceBuffer: ' + e)
            s.mediaSourceError('Error creating ' + T + ' source buffer.')
            s.error(
              new D['default'](
                M['default'].MEDIASOURCE_TYPE_UNSUPPORTED_CODE,
                M['default'].MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE + T
              )
            )
          }
        } else {
          V = (0, d['default'])(t).create(he.bind(this))
        }
        xe(b.getRepresentationInfo(I).MSETimeOffset)
        return V
      }
      function se() {
        if (V && K && typeof K.discharge === 'function') {
          var e = K.getAllBufferRanges()
          if (e.length > 0) {
            var t = 'Beginning ' + T + 'PreBuffer discharge, adding buffer for:'
            for (var r = 0; r < e.length; r++) {
              t += ' start: ' + e.start(r) + ', end: ' + e.end(r) + ';'
            }
            w.debug(t)
          } else {
            w.debug(
              'PreBuffer discharge requested, but there were no media segments in the PreBuffer.'
            )
          }
          var n = K.discharge()
          var i = null
          for (var a = 0; a < n.length; a++) {
            var s = n[a]
            var o = $.extract(s.streamId, s.representationId)
            if (o) {
              if (i !== o) {
                V.append(o)
                i = o
              }
              V.append(s)
            }
          }
          K.reset()
          K = null
        }
      }
      function oe() {
        return b && u && b.getStreamInfo()
      }
      function ue(e) {
        if (e.fragmentModel !== b.getFragmentModel()) return
        w.info('Init fragment finished loading saving to', T + "'s init cache")
        $.save(e.chunk)
        w.debug(
          'Append Init fragment',
          T,
          ' with representationId:',
          e.chunk.representationId,
          ' and quality:',
          e.chunk.quality,
          ', data size:',
          e.chunk.bytes.byteLength
        )
        de(e.chunk)
      }
      function le(e, t, n) {
        var i = $.extract(e, t)
        ee = n === true ? n : false
        if (i) {
          w.info(
            'Append Init fragment',
            T,
            ' with representationId:',
            i.representationId,
            ' and quality:',
            i.quality,
            ', data size:',
            i.bytes.byteLength
          )
          de(i)
        } else {
          r.trigger(_['default'].INIT_REQUESTED, { sender: S })
        }
      }
      function fe(e) {
        if (e.fragmentModel !== b.getFragmentModel()) return
        var t = e.chunk
        var r = t.bytes
        var n = t.quality
        var i = b.getRepresentationInfo(n)
        var a = c.getEventsFor(i.mediaInfo, b)
        var s = c.getEventsFor(i, b)
        if ((a && a.length > 0) || (s && s.length > 0)) {
          var u = b
            .getFragmentModel()
            .getRequests({
              state: o['default'].FRAGMENT_MODEL_EXECUTED,
              quality: n,
              index: t.index,
            })[0]
          var l = Oe(r, u, a, s)
          b.addInbandEvents(l)
        }
        if (ee) {
          te = t
          var f = V && V.getAllBufferRanges()
          if (f && f.length > 0 && y.getTimeToStreamEnd() > L) {
            w.debug('Clearing buffer because track changed - ' + (f.end(f.length - 1) + x))
            Pe([{ start: 0, end: f.end(f.length - 1) + x, force: true }])
          }
        } else {
          de(t)
        }
      }
      function de(e) {
        V.append(e)
        if (e.mediaInfo.type === a['default'].VIDEO) {
          r.trigger(_['default'].VIDEO_CHUNK_RECEIVED, { chunk: e })
        }
      }
      function ce(e) {
        if (e && e.length > 0) {
          for (var t = 0, r = e.length; t < r; t++) {
            w.debug(
              'Buffered Range for type:',
              T,
              ':',
              e.start(t),
              ' - ',
              e.end(t),
              ' currentTime = ',
              y.getTime()
            )
          }
        }
      }
      function he(e) {
        if (e.error) {
          if (e.error.code === U) {
            j = Je() * 0.8
            w.warn('Quota exceeded for type: ' + T + ', Critical Buffer: ' + j)
            if (j > 0) {
              var t = Math.max(0.2 * j, 1)
              var n = j - t
              i.setBufferToKeep(parseFloat(t.toFixed(5)))
              i.setBufferAheadToKeep(parseFloat(n.toFixed(5)))
            }
          }
          if (e.error.code === U || !Ze()) {
            w.warn('Clearing playback buffer to overcome quota exceed situation for type: ' + T)
            r.trigger(_['default'].QUOTA_EXCEEDED, { sender: S, criticalBufferLevel: j })
            me()
          }
          return
        }
        W = e.chunk
        if (W && !isNaN(W.index)) {
          q = Math.max(W.index, q)
          Ce()
        }
        var a = V.getAllBufferRanges()
        if (W.segmentType === k.HTTPRequest.MEDIA_SEGMENT_TYPE) {
          ce(a)
          Te()
        } else {
          if (ee) {
            var s = y.getTime()
            w.debug('AppendToBuffer seek target should be ' + s)
            b.getScheduleController().setSeekTarget(s)
            c.setIndexHandlerTime(b, s)
          }
        }
        var o = {
          sender: S,
          quality: W.quality,
          startTime: W.start,
          index: W.index,
          bufferedRanges: a,
        }
        if (W && !W.endFragment) {
          r.trigger(_['default'].BYTES_APPENDED, o)
        } else if (W) {
          r.trigger(_['default'].BYTES_APPENDED_END_FRAGMENT, o)
        }
      }
      function pe(e) {
        if (I === e.newQuality || T !== e.mediaType || b.getStreamInfo().id !== e.streamInfo.id)
          return
        xe(b.getRepresentationInfo(e.newQuality).MSETimeOffset)
        I = e.newQuality
      }
      function ve() {
        if (R) {
          J = true
          R = false
          H = Number.POSITIVE_INFINITY
        }
        if (T !== a['default'].FRAGMENTED_TEXT) {
          me()
        } else {
          Te()
        }
      }
      function ge() {
        Q = undefined
      }
      function me() {
        var e = ye()
        if (!e || e.length === 0) {
          Te()
        }
        Pe(e)
      }
      function ye() {
        var e = []
        var t = V.getAllBufferRanges()
        if (!t || t.length === 0) {
          return e
        }
        var r = y.getTime()
        var n = t.end(t.length - 1) + x
        var i = b
          .getFragmentModel()
          .getRequests({ state: o['default'].FRAGMENT_MODEL_EXECUTED, time: r, threshold: F })[0]
        if (!i) {
          w.debug(
            'getAllRangesWithSafetyFactor for',
            T,
            '- No request found in current time position, removing full buffer 0 -',
            n
          )
          e.push({ start: 0, end: n })
        } else {
          var a = { start: 0, end: i.startTime - L }
          var s = b
            .getFragmentModel()
            .getRequests({
              state: o['default'].FRAGMENT_MODEL_EXECUTED,
              time: i.startTime - i.duration / 2,
              threshold: F,
            })[0]
          if (s && s.startTime != i.startTime) {
            a.end = s.startTime
          }
          if (a.start < a.end && a.end > t.start(0)) {
            e.push(a)
          }
          var u = { start: i.startTime + i.duration + L, end: n }
          var l = b
            .getFragmentModel()
            .getRequests({
              state: o['default'].FRAGMENT_MODEL_EXECUTED,
              time: i.startTime + i.duration + L,
              threshold: F,
            })[0]
          if (l && l.startTime !== i.startTime) {
            u.start = l.startTime + l.duration + L
          }
          if (u.start < u.end && u.start < n) {
            e.push(u)
          }
        }
        return e
      }
      function _e() {
        var e = y.getTime()
        if (Q) {
          var t = V.getAllBufferRanges()
          if (t && t.length) {
            e = Math.max(t.start(0), Q)
          }
        }
        return e
      }
      function Te() {
        if (!ee || (T === a['default'].FRAGMENTED_TEXT && p.isTextEnabled())) {
          Ae()
          Ie()
        }
      }
      function Ee() {
        Re()
      }
      function be() {
        Re()
      }
      function Se(e, t) {
        var r = V.getAllBufferRanges()
        var n = 0
        var i = 0
        var a = null
        var s = null
        var o = 0
        var u = undefined,
          l = undefined
        var f = t || 0.15
        if (r !== null && r !== undefined) {
          for (l = 0, u = r.length; l < u; l++) {
            n = r.start(l)
            i = r.end(l)
            if (a === null) {
              o = Math.abs(n - e)
              if (e >= n && e < i) {
                a = n
                s = i
              } else if (o <= f) {
                a = n
                s = i
              }
            } else {
              o = n - s
              if (o <= f) {
                s = i
              } else {
                break
              }
            }
          }
          if (a !== null) {
            return { start: a, end: s }
          }
        }
        return null
      }
      function we(e, t) {
        var r = undefined,
          n = undefined
        r = Se(e, t)
        if (r === null) {
          n = 0
        } else {
          n = r.end - e
        }
        return n
      }
      function Ae() {
        if (y) {
          O = we(_e() || 0)
          r.trigger(_['default'].BUFFER_LEVEL_UPDATED, { sender: S, bufferLevel: O })
          Re()
        }
      }
      function Ie() {
        if (!oe()) return
        n.addBufferState(T, Y, b.getScheduleController().getBufferTarget())
        n.addBufferLevel(T, new Date(), O * 1e3)
      }
      function Ce() {
        var e = q >= H - 1
        if (e && !R && V.discharge === undefined) {
          R = true
          w.debug('checkIfBufferingCompleted trigger BUFFERING_COMPLETED')
          r.trigger(_['default'].BUFFERING_COMPLETED, { sender: S, streamInfo: b.getStreamInfo() })
        }
      }
      function Re() {
        if (T !== 'audio' && T !== 'video') return
        if (J && !R && y && y.getTimeToStreamEnd() - O < L) {
          J = false
          R = true
          w.debug('checkIfSufficientBuffer trigger BUFFERING_COMPLETED')
          r.trigger(_['default'].BUFFERING_COMPLETED, { sender: S, streamInfo: b.getStreamInfo() })
        }
        if (((!i.getLowLatencyEnabled() && O < L) || O === 0) && !R) {
          De(N)
        } else {
          if (R || O >= i.getStableBufferTime()) {
            De(P)
          }
        }
      }
      function De(e) {
        if (
          Y === e ||
          (e === N && y.getTime() === 0) ||
          (T === a['default'].FRAGMENTED_TEXT && !p.isTextEnabled())
        ) {
          return
        }
        Y = e
        Ie()
        r.trigger(_['default'].BUFFER_LEVEL_STATE_CHANGED, {
          sender: S,
          state: e,
          mediaType: T,
          streamInfo: b.getStreamInfo(),
        })
        r.trigger(e === P ? _['default'].BUFFER_LOADED : _['default'].BUFFER_EMPTY, {
          mediaType: T,
        })
        w.debug(
          e === P
            ? 'Got enough buffer to start for ' + T
            : 'Waiting for more buffer before starting playback for ' + T
        )
      }
      function Oe(e, r, n, i) {
        var a = Math.max(!r || isNaN(r.startTime) ? 0 : r.startTime, 0)
        var s = []
        var o = []
        var u = n.concat(i)
        for (var l = 0, f = u.length; l < f; l++) {
          s[u[l].schemeIdUri + '/' + u[l].value] = u[l]
        }
        var d = (0, E['default'])(t)
          .getInstance()
          .parse(e)
        var h = d.getBoxes('emsg')
        for (var l = 0, f = h.length; l < f; l++) {
          var p = c.getEvent(h[l], s, a)
          if (p) {
            o.push(p)
          }
        }
        return o
      }
      function Me() {
        if (!V || T === a['default'].FRAGMENTED_TEXT) {
          return
        }
        if (!R) {
          Pe(ke())
        }
      }
      function ke() {
        var e = []
        var t = V.getAllBufferRanges()
        if (!t || t.length === 0) {
          return e
        }
        var r = y.getTime()
        var n = { start: Math.max(0, r - i.getBufferToKeep()), end: r + i.getBufferAheadToKeep() }
        var a = b
          .getFragmentModel()
          .getRequests({ state: o['default'].FRAGMENT_MODEL_EXECUTED, time: r, threshold: F })[0]
        if (a) {
          n.start = Math.min(a.startTime, n.start)
          n.end = Math.max(a.startTime + a.duration, n.end)
        } else if (r === 0 && y.getIsDynamic()) {
          return []
        }
        if (t.start(0) <= n.start) {
          var s = { start: 0, end: n.start }
          for (var u = 0; u < t.length && t.end(u) <= n.start; u++) {
            s.end = t.end(u)
          }
          if (s.start < s.end) {
            e.push(s)
          }
        }
        if (t.end(t.length - 1) >= n.end) {
          var l = { start: n.end, end: t.end(t.length - 1) + F }
          if (l.start < l.end) {
            e.push(l)
          }
        }
        return e
      }
      function Pe(e) {
        if (!e || !V || e.length === 0) return
        Z.push.apply(Z, e)
        if (X) {
          return
        }
        Ne()
      }
      function Ne() {
        if (Z.length === 0 || !V) {
          w.debug('Nothing to prune, halt pruning')
          Z = []
          X = false
          return
        }
        var e = V.getBuffer()
        if (!e || !e.buffered || e.buffered.length === 0) {
          w.debug('SourceBuffer is empty (or does not exist), halt pruning')
          Z = []
          X = false
          return
        }
        var t = Z.shift()
        w.debug('Removing', T, 'buffer from:', t.start, 'to', t.end)
        X = true
        var r = y.getTime()
        if (r < t.end) {
          R = false
          q = 0
          if (!ee) {
            b.getScheduleController().setSeekTarget(r)
            c.setIndexHandlerTime(b, r)
          }
        }
        V.remove(t.start, t.end, t.force)
      }
      function Le(e) {
        if (V !== e.buffer) return
        w.debug('onRemoved buffer from:', e.from, 'to', e.to)
        var t = V.getAllBufferRanges()
        ce(t)
        if (Z.length === 0) {
          X = false
        }
        if (e.unintended) {
          w.warn(
            'Detected unintended removal from:',
            e.from,
            'to',
            e.to,
            'setting index handler time to',
            e.from
          )
          c.setIndexHandlerTime(b, e.from)
        }
        if (X) {
          Ne()
        } else {
          if (!ee) {
            w.debug('onRemoved : call updateBufferLevel')
            Ae()
          } else {
            ee = false
            if (te) {
              de(te)
            }
          }
          r.trigger(_['default'].BUFFER_CLEARED, {
            sender: S,
            from: e.from,
            to: e.to,
            unintended: e.unintended,
            hasEnoughSpaceToAppend: Ze(),
          })
        }
      }
      function xe(e) {
        if (V && V.updateTimestampOffset) {
          V.updateTimestampOffset(e)
        }
      }
      function Fe(e) {
        if (e.sender.getStreamProcessor() !== b || e.error) return
        xe(e.currentRepresentation.MSETimeOffset)
      }
      function Ue(e) {
        if (e.fragmentModel !== b.getFragmentModel()) return
        H = e.request.index
        Ce()
      }
      function Be(e) {
        var t = V && V.getAllBufferRanges()
        if (
          !t ||
          e.newMediaInfo.type !== T ||
          e.newMediaInfo.streamInfo.id !== b.getStreamInfo().id
        )
          return
        w.info('Track change asked')
        if (f.getSwitchMode(T) === v['default'].TRACK_SWITCH_MODE_ALWAYS_REPLACE) {
          if (t && t.length > 0 && y.getTimeToStreamEnd() > L) {
            R = false
            H = Number.POSITIVE_INFINITY
          }
        }
      }
      function je() {
        z++
        var e = z * (i.getWallclockTimeUpdateInterval() / 1e3)
        if (e >= i.getBufferPruningInterval()) {
          z = 0
          Me()
        }
      }
      function Ge() {
        Re()
      }
      function qe() {
        return T
      }
      function He() {
        return b
      }
      function Ve(e) {
        Q = e
      }
      function Ke() {
        return V
      }
      function Ye(e) {
        V = e
      }
      function We() {
        return O
      }
      function ze(e, t) {
        G = e
        if (V && t) {
          if (typeof V.discharge === 'function') {
            K = V
            ae(t)
          }
        }
      }
      function Xe() {
        return G
      }
      function $e() {
        return R
      }
      function Qe() {
        return X
      }
      function Je() {
        var e = V.getAllBufferRanges()
        var t = 0
        var r = undefined,
          n = undefined
        if (!e) return t
        for (n = 0, r = e.length; n < r; n++) {
          t += e.end(n) - e.start(n)
        }
        return t
      }
      function Ze() {
        var e = Je()
        return e < j
      }
      function et(e, t) {
        j = Number.POSITIVE_INFINITY
        Y = undefined
        I = h['default'].QUALITY_DEFAULT
        H = Number.POSITIVE_INFINITY
        q = 0
        W = null
        R = false
        X = false
        J = false
        O = 0
        z = 0
        Z = []
        if (V) {
          if (!e) {
            V.abort()
          }
          V.reset(t)
          V = null
        }
        ee = false
      }
      function tt(e, t) {
        r.off(_['default'].DATA_UPDATE_COMPLETED, Fe, this)
        r.off(_['default'].QUALITY_CHANGE_REQUESTED, pe, this)
        r.off(_['default'].INIT_FRAGMENT_LOADED, ue, this)
        r.off(_['default'].MEDIA_FRAGMENT_LOADED, fe, this)
        r.off(_['default'].STREAM_COMPLETED, Ue, this)
        r.off(_['default'].CURRENT_TRACK_CHANGED, Be, this)
        r.off(_['default'].PLAYBACK_PLAYING, be, this)
        r.off(_['default'].PLAYBACK_PROGRESS, Te, this)
        r.off(_['default'].PLAYBACK_TIME_UPDATED, Te, this)
        r.off(_['default'].PLAYBACK_RATE_CHANGED, Ge, this)
        r.off(_['default'].PLAYBACK_SEEKING, ve, this)
        r.off(_['default'].PLAYBACK_SEEKED, ge, this)
        r.off(_['default'].PLAYBACK_STALLED, Ee, this)
        r.off(_['default'].WALLCLOCK_TIME_UPDATED, je, this)
        r.off(_['default'].SOURCEBUFFER_REMOVE_COMPLETED, Le, this)
        et(e, t)
      }
      S = {
        getBufferControllerType: ne,
        initialize: ie,
        createBuffer: ae,
        dischargePreBuffer: se,
        getType: qe,
        getStreamProcessor: He,
        setSeekStartTime: Ve,
        getBuffer: Ke,
        setBuffer: Ye,
        getBufferLevel: We,
        getRangeAt: Se,
        setMediaSource: ze,
        getMediaSource: Xe,
        getIsBufferingCompleted: $e,
        switchInitData: le,
        getIsPruningInProgress: Qe,
        reset: tt,
      }
      re()
      return S
    }
    j.__dashjs_factory_name = B
    var G = S['default'].getClassFactory(j)
    G.BUFFER_LOADED = P
    G.BUFFER_EMPTY = N
    S['default'].updateClassFactory(j.__dashjs_factory_name, G)
    t['default'] = G
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.action = e.ACTION_DOWNLOAD
      this.startTime = NaN
      this.mediaType = null
      this.mediaInfo = null
      this.type = null
      this.duration = NaN
      this.timescale = NaN
      this.range = null
      this.url = null
      this.serviceLocation = null
      this.requestStartDate = null
      this.firstByteDate = null
      this.requestEndDate = null
      this.quality = NaN
      this.index = NaN
      this.availabilityStartTime = null
      this.availabilityEndTime = null
      this.wallStartTime = null
      this.bytesLoaded = NaN
      this.bytesTotal = NaN
      this.delayLoadingTime = NaN
      this.responseType = 'arraybuffer'
      this.representationId = null
    }
    i.ACTION_DOWNLOAD = 'download'
    i.ACTION_COMPLETE = 'complete'
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    var n = r(51)
    var i =
      Object.keys ||
      function(e) {
        var t = []
        for (var r in e) {
          t.push(r)
        }
        return t
      }
    e.exports = d
    var a = r(33)
    a.inherits = r(28)
    var s = r(125)
    var o = r(79)
    a.inherits(d, s)
    {
      var u = i(o.prototype)
      for (var l = 0; l < u.length; l++) {
        var f = u[l]
        if (!d.prototype[f]) d.prototype[f] = o.prototype[f]
      }
    }
    function d(e) {
      if (!(this instanceof d)) return new d(e)
      s.call(this, e)
      o.call(this, e)
      if (e && e.readable === false) this.readable = false
      if (e && e.writable === false) this.writable = false
      this.allowHalfOpen = true
      if (e && e.allowHalfOpen === false) this.allowHalfOpen = false
      this.once('end', c)
    }
    Object.defineProperty(d.prototype, 'writableHighWaterMark', {
      enumerable: false,
      get: function() {
        return this._writableState.highWaterMark
      },
    })
    function c() {
      if (this.allowHalfOpen || this._writableState.ended) return
      n.nextTick(h, this)
    }
    function h(e) {
      e.end()
    }
    Object.defineProperty(d.prototype, 'destroyed', {
      get: function() {
        if (this._readableState === undefined || this._writableState === undefined) {
          return false
        }
        return this._readableState.destroyed && this._writableState.destroyed
      },
      set: function(e) {
        if (this._readableState === undefined || this._writableState === undefined) {
          return
        }
        this._readableState.destroyed = e
        this._writableState.destroyed = e
      },
    })
    d.prototype._destroy = function(e, t) {
      this.push(null)
      this.end()
      n.nextTick(t, e)
    }
  },
  function(e, t, r) {
    e.exports = !r(87)(function() {
      return (
        Object.defineProperty({}, 'a', {
          get: function() {
            return 7
          },
        }).a != 7
      )
    })
  },
  function(e, t, r) {
    var n = r(32)
    var i = r(92)
    e.exports = r(23)
      ? function(e, t, r) {
          return n.f(e, t, i(1, r))
        }
      : function(e, t, r) {
          e[t] = r
          return e
        }
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = (function() {
      n(e, [
        {
          key: 'init',
          value: function e() {
            this.TCP_CONNECTION = 'TcpList'
            this.HTTP_REQUEST = 'HttpList'
            this.TRACK_SWITCH = 'RepSwitchList'
            this.BUFFER_LEVEL = 'BufferLevel'
            this.BUFFER_STATE = 'BufferState'
            this.DVR_INFO = 'DVRInfo'
            this.DROPPED_FRAMES = 'DroppedFrames'
            this.SCHEDULING_INFO = 'SchedulingInfo'
            this.REQUESTS_QUEUE = 'RequestsQueue'
            this.MANIFEST_UPDATE = 'ManifestUpdate'
            this.MANIFEST_UPDATE_STREAM_INFO = 'ManifestUpdatePeriodInfo'
            this.MANIFEST_UPDATE_TRACK_INFO = 'ManifestUpdateRepresentationInfo'
            this.PLAY_LIST = 'PlayList'
            this.DVB_ERRORS = 'DVBErrors'
          },
        },
      ])
      function e() {
        i(this, e)
        this.init()
      }
      return e
    })()
    var s = new a()
    t['default'] = s
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = (function() {
      function e() {
        i(this, e)
      }
      n(e, null, [
        {
          key: 'findCencContentProtection',
          value: function e(t) {
            var r = null
            for (var n = 0; n < t.length; ++n) {
              var i = t[n]
              if (
                i.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&
                i.value.toLowerCase() === 'cenc'
              )
                r = i
            }
            return r
          },
        },
        {
          key: 'getPSSHData',
          value: function e(t) {
            var r = 8
            var n = new DataView(t)
            var i = n.getUint8(r)
            r += 20
            if (i > 0) {
              r += 4 + 16 * n.getUint32(r)
            }
            r += 4
            return t.slice(r)
          },
        },
        {
          key: 'getPSSHForKeySystem',
          value: function t(r, n) {
            var i = e.parsePSSHList(n)
            if (i.hasOwnProperty(r.uuid.toLowerCase())) {
              return i[r.uuid.toLowerCase()]
            }
            return null
          },
        },
        {
          key: 'parseInitDataFromContentProtection',
          value: function e(t, r) {
            if ('pssh' in t) {
              return r.decodeArray(t.pssh.__text).buffer
            }
            return null
          },
        },
        {
          key: 'parsePSSHList',
          value: function e(t) {
            if (t === null) return []
            var r = new DataView(t.buffer || t)
            var n = false
            var i = {}
            var a = 0
            while (!n) {
              var s = undefined,
                o = undefined,
                u = undefined,
                l = undefined,
                f = undefined
              var d = a
              if (a >= r.buffer.byteLength) break
              s = r.getUint32(a)
              o = a + s
              a += 4
              if (r.getUint32(a) !== 1886614376) {
                a = o
                continue
              }
              a += 4
              u = r.getUint8(a)
              if (u !== 0 && u !== 1) {
                a = o
                continue
              }
              a++
              a += 3
              l = ''
              var c = undefined,
                h = undefined
              for (c = 0; c < 4; c++) {
                h = r.getUint8(a + c).toString(16)
                l += h.length === 1 ? '0' + h : h
              }
              a += 4
              l += '-'
              for (c = 0; c < 2; c++) {
                h = r.getUint8(a + c).toString(16)
                l += h.length === 1 ? '0' + h : h
              }
              a += 2
              l += '-'
              for (c = 0; c < 2; c++) {
                h = r.getUint8(a + c).toString(16)
                l += h.length === 1 ? '0' + h : h
              }
              a += 2
              l += '-'
              for (c = 0; c < 2; c++) {
                h = r.getUint8(a + c).toString(16)
                l += h.length === 1 ? '0' + h : h
              }
              a += 2
              l += '-'
              for (c = 0; c < 6; c++) {
                h = r.getUint8(a + c).toString(16)
                l += h.length === 1 ? '0' + h : h
              }
              a += 6
              l = l.toLowerCase()
              f = r.getUint32(a)
              a += 4
              i[l] = r.buffer.slice(d, o)
              a = o
            }
            return i
          },
        },
      ])
      return e
    })()
    t['default'] = a
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    t.checkParameterType = s
    t.checkInteger = o
    t.checkRange = u
    t.checkIsVideoOrAudioType = l
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    function s(e, t) {
      if (typeof e !== t) {
        throw a['default'].BAD_ARGUMENT_ERROR
      }
    }
    function o(e) {
      var t = e !== null && !isNaN(e) && e % 1 === 0
      if (!t) {
        throw a['default'].BAD_ARGUMENT_ERROR + ' : argument is not an integer'
      }
    }
    function u(e, t, r) {
      if (e < t || e > r) {
        throw a['default'].BAD_ARGUMENT_ERROR + ' : argument out of range'
      }
    }
    function l(e) {
      if (typeof e !== 'string' || (e !== a['default'].AUDIO && e !== a['default'].VIDEO)) {
        throw a['default'].BAD_ARGUMENT_ERROR
      }
    }
  },
  function(e, t) {
    if (typeof Object.create === 'function') {
      e.exports = function e(t, r) {
        if (r) {
          t.super_ = r
          t.prototype = Object.create(r.prototype, {
            constructor: { value: t, enumerable: false, writable: true, configurable: true },
          })
        }
      }
    } else {
      e.exports = function e(t, r) {
        if (r) {
          t.super_ = r
          var n = function() {}
          n.prototype = r.prototype
          t.prototype = new n()
          t.prototype.constructor = t
        }
      }
    }
  },
  function(e, t, r) {
    var n = r(8)
    var i = r(13)
    var a = r(40)
    var s = r(24)
    var o = r(41)
    var u = 'prototype'
    var l = function(e, t, r) {
      var f = e & l.F
      var d = e & l.G
      var c = e & l.S
      var h = e & l.P
      var p = e & l.B
      var v = e & l.W
      var g = d ? i : i[t] || (i[t] = {})
      var m = g[u]
      var y = d ? n : c ? n[t] : (n[t] || {})[u]
      var _, T, E
      if (d) r = t
      for (_ in r) {
        T = !f && y && y[_] !== undefined
        if (T && o(g, _)) continue
        E = T ? y[_] : r[_]
        g[_] =
          d && typeof y[_] != 'function'
            ? r[_]
            : p && T
            ? a(E, n)
            : v && y[_] == E
            ? (function(e) {
                var t = function(t, r, n) {
                  if (this instanceof e) {
                    switch (arguments.length) {
                      case 0:
                        return new e()
                      case 1:
                        return new e(t)
                      case 2:
                        return new e(t, r)
                    }
                    return new e(t, r, n)
                  }
                  return e.apply(this, arguments)
                }
                t[u] = e[u]
                return t
              })(E)
            : h && typeof E == 'function'
            ? a(Function.call, E)
            : E
        if (h) {
          ;(g.virtual || (g.virtual = {}))[_] = E
          if (e & l.R && m && !m[_]) s(m, _, E)
        }
      }
    }
    l.F = 1
    l.G = 2
    l.S = 4
    l.P = 8
    l.B = 16
    l.W = 32
    l.U = 64
    l.R = 128
    e.exports = l
  },
  function(e, t) {
    e.exports = function(e) {
      return typeof e === 'object' ? e !== null : typeof e === 'function'
    }
  },
  function(e, t) {
    e.exports = {}
  },
  function(e, t, r) {
    var n = r(17)
    var i = r(152)
    var a = r(172)
    var s = Object.defineProperty
    t.f = r(23)
      ? Object.defineProperty
      : function e(t, r, o) {
          n(t)
          r = a(r, true)
          n(o)
          if (i)
            try {
              return s(t, r, o)
            } catch (e) {}
          if ('get' in o || 'set' in o) throw TypeError('Accessors not supported!')
          if ('value' in o) t[r] = o.value
          return t
        }
  },
  function(e, t, r) {
    ;(function(e) {
      function r(e) {
        if (Array.isArray) {
          return Array.isArray(e)
        }
        return g(e) === '[object Array]'
      }
      t.isArray = r
      function n(e) {
        return typeof e === 'boolean'
      }
      t.isBoolean = n
      function i(e) {
        return e === null
      }
      t.isNull = i
      function a(e) {
        return e == null
      }
      t.isNullOrUndefined = a
      function s(e) {
        return typeof e === 'number'
      }
      t.isNumber = s
      function o(e) {
        return typeof e === 'string'
      }
      t.isString = o
      function u(e) {
        return typeof e === 'symbol'
      }
      t.isSymbol = u
      function l(e) {
        return e === void 0
      }
      t.isUndefined = l
      function f(e) {
        return g(e) === '[object RegExp]'
      }
      t.isRegExp = f
      function d(e) {
        return typeof e === 'object' && e !== null
      }
      t.isObject = d
      function c(e) {
        return g(e) === '[object Date]'
      }
      t.isDate = c
      function h(e) {
        return g(e) === '[object Error]' || e instanceof Error
      }
      t.isError = h
      function p(e) {
        return typeof e === 'function'
      }
      t.isFunction = p
      function v(e) {
        return (
          e === null ||
          typeof e === 'boolean' ||
          typeof e === 'number' ||
          typeof e === 'string' ||
          typeof e === 'symbol' ||
          typeof e === 'undefined'
        )
      }
      t.isPrimitive = v
      t.isBuffer = e.isBuffer
      function g(e) {
        return Object.prototype.toString.call(e)
      }
    }.call(t, r(37).Buffer))
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function i(e, t, r) {
      if (t in e) {
        Object.defineProperty(e, t, {
          value: r,
          enumerable: true,
          configurable: true,
          writable: true,
        })
      } else {
        e[t] = r
      }
      return e
    }
    var a = r(66)
    var s = n(a)
    var o = r(254)
    var u = n(o)
    var l = r(7)
    var f = r(0)
    var d = n(f)
    var c = r(6)
    var h = n(c)
    var p = r(5)
    var v = n(p)
    function g(e) {
      e = e || {}
      var t = this.context
      var r = e.errHandler
      var n = e.metricsModel
      var a = e.mediaPlayerModel
      var o = e.requestModifier
      var f = e.boxParser
      var d = e.useFetch || false
      var c = undefined,
        p = undefined,
        g = undefined,
        m = undefined,
        y = undefined,
        _ = undefined
      function T() {
        var e, t
        p = []
        g = []
        m = []
        y = ((e = {}),
        i(e, l.HTTPRequest.MPD_TYPE, h['default'].DOWNLOAD_ERROR_ID_MANIFEST),
        i(e, l.HTTPRequest.XLINK_EXPANSION_TYPE, h['default'].DOWNLOAD_ERROR_ID_XLINK),
        i(e, l.HTTPRequest.INIT_SEGMENT_TYPE, h['default'].DOWNLOAD_ERROR_ID_INITIALIZATION),
        i(e, l.HTTPRequest.MEDIA_SEGMENT_TYPE, h['default'].DOWNLOAD_ERROR_ID_CONTENT),
        i(e, l.HTTPRequest.INDEX_SEGMENT_TYPE, h['default'].DOWNLOAD_ERROR_ID_CONTENT),
        i(
          e,
          l.HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE,
          h['default'].DOWNLOAD_ERROR_ID_CONTENT
        ),
        i(e, l.HTTPRequest.OTHER_TYPE, h['default'].DOWNLOAD_ERROR_ID_CONTENT),
        e)
        _ = ((t = {}),
        i(t, l.HTTPRequest.MPD_TYPE, h['default'].DOWNLOAD_ERROR_ID_MANIFEST_CODE),
        i(t, l.HTTPRequest.XLINK_EXPANSION_TYPE, h['default'].DOWNLOAD_ERROR_ID_XLINK_CODE),
        i(t, l.HTTPRequest.INIT_SEGMENT_TYPE, h['default'].DOWNLOAD_ERROR_ID_INITIALIZATION_CODE),
        i(t, l.HTTPRequest.MEDIA_SEGMENT_TYPE, h['default'].DOWNLOAD_ERROR_ID_CONTENT_CODE),
        i(t, l.HTTPRequest.INDEX_SEGMENT_TYPE, h['default'].DOWNLOAD_ERROR_ID_CONTENT_CODE),
        i(
          t,
          l.HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE,
          h['default'].DOWNLOAD_ERROR_ID_CONTENT_CODE
        ),
        i(t, l.HTTPRequest.OTHER_TYPE, h['default'].DOWNLOAD_ERROR_ID_CONTENT_CODE),
        t)
      }
      function E(e, i) {
        var c = e.request
        var h = []
        var T = true
        var b = true
        var S = new Date()
        var w = S
        var A = 0
        var I = undefined
        if (!o || !n || !r) {
          throw new Error('config object is not correct or missing')
        }
        var C = function e(t) {
          b = false
          c.requestStartDate = S
          c.requestEndDate = new Date()
          c.firstByteDate = c.firstByteDate || S
          if (!c.checkExistenceOnly) {
            n.addHttpRequest(
              c.mediaType,
              null,
              c.type,
              c.url,
              I.response ? I.response.responseURL : null,
              c.serviceLocation || null,
              c.range || null,
              c.requestStartDate,
              c.firstByteDate,
              c.requestEndDate,
              I.response ? I.response.status : null,
              c.duration,
              I.response && I.response.getAllResponseHeaders
                ? I.response.getAllResponseHeaders()
                : I.response
                ? I.response.responseHeaders
                : [],
              t ? h : null
            )
            if (c.type === l.HTTPRequest.MPD_TYPE) {
              n.addManifestUpdate('stream', c.type, c.requestStartDate, c.requestEndDate)
            }
          }
        }
        var R = function t() {
          if (p.indexOf(I) === -1) {
            return
          } else {
            p.splice(p.indexOf(I), 1)
          }
          if (b) {
            C(false)
            if (i > 0) {
              ;(function() {
                i--
                var t = { config: e }
                m.push(t)
                t.timeout = setTimeout(function() {
                  if (m.indexOf(t) === -1) {
                    return
                  } else {
                    m.splice(m.indexOf(t), 1)
                  }
                  E(e, i)
                }, a.getRetryIntervalForType(c.type))
              })()
            } else {
              r.downloadError(y[c.type], c.url, c)
              r.error(
                new v['default'](_[c.type], c.url + ' is not available', {
                  request: c,
                  response: I.response,
                })
              )
              if (e.error) {
                e.error(c, 'error', I.response.statusText)
              }
              if (e.complete) {
                e.complete(c, I.response.statusText)
              }
            }
          }
        }
        var D = function t(r) {
          var n = new Date()
          if (T) {
            T = false
            if (!r.lengthComputable || (r.lengthComputable && r.total !== r.loaded)) {
              c.firstByteDate = n
            }
          }
          if (r.lengthComputable) {
            c.bytesLoaded = r.loaded
            c.bytesTotal = r.total
          }
          if (!r.noTrace) {
            h.push({
              s: w,
              d: r.time ? r.time : n.getTime() - w.getTime(),
              b: [r.loaded ? r.loaded - A : 0],
            })
            w = n
            A = r.loaded
          }
          if (e.progress && r) {
            e.progress(r)
          }
        }
        var O = function t() {
          if (I.response.status >= 200 && I.response.status <= 299) {
            C(true)
            if (e.success) {
              e.success(I.response.response, I.response.statusText, I.response.responseURL)
            }
            if (e.complete) {
              e.complete(c, I.response.statusText)
            }
          }
        }
        var M = function t() {
          if (e.abort) {
            e.abort(c)
          }
        }
        var k = undefined
        if (
          d &&
          window.fetch &&
          c.responseType === 'arraybuffer' &&
          c.type === l.HTTPRequest.MEDIA_SEGMENT_TYPE
        ) {
          k = (0, u['default'])(t).create({ requestModifier: o, boxParser: f })
        } else {
          k = (0, s['default'])(t).create({ requestModifier: o, boxParser: f })
        }
        var P = o.modifyRequestURL(c.url)
        var N = c.checkExistenceOnly ? l.HTTPRequest.HEAD : l.HTTPRequest.GET
        var L = a.getXHRWithCredentialsForType(c.type)
        I = {
          url: P,
          method: N,
          withCredentials: L,
          request: c,
          onload: O,
          onend: R,
          onerror: R,
          progress: D,
          onabort: M,
          loader: k,
        }
        var x = new Date().getTime()
        if (isNaN(c.delayLoadingTime) || x >= c.delayLoadingTime) {
          p.push(I)
          k.load(I)
        } else {
          ;(function() {
            var e = { httpRequest: I }
            g.push(e)
            e.delayTimeout = setTimeout(function() {
              if (g.indexOf(e) === -1) {
                return
              } else {
                g.splice(g.indexOf(e), 1)
              }
              try {
                S = new Date()
                w = S
                p.push(e.httpRequest)
                k.load(e.httpRequest)
              } catch (t) {
                e.httpRequest.onerror()
              }
            }, c.delayLoadingTime - x)
          })()
        }
      }
      function b(e) {
        if (e.request) {
          E(e, a.getRetryAttemptsForType(e.request.type))
        }
      }
      function S() {
        m.forEach(function(e) {
          clearTimeout(e.timeout)
          if (e.config.request && e.config.abort) {
            e.config.abort(e.config.request)
          }
        })
        m = []
        g.forEach(function(e) {
          return clearTimeout(e.delayTimeout)
        })
        g = []
        p.forEach(function(e) {
          e.onloadend = e.onerror = e.onprogress = undefined
          e.loader.abort(e)
          e.onabort()
        })
        p = []
      }
      c = { load: b, abort: S }
      T()
      return c
    }
    g.__dashjs_factory_name = 'HTTPLoader'
    var m = d['default'].getClassFactory(g)
    t['default'] = m
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(101)
    var u = i(o)
    var l = (function(e) {
      s(t, e)
      function t() {
        a(this, t)
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(this)
        this.MEDIA_KEYERR_CODE = 100
        this.MEDIA_KEYERR_UNKNOWN_CODE = 101
        this.MEDIA_KEYERR_CLIENT_CODE = 102
        this.MEDIA_KEYERR_SERVICE_CODE = 103
        this.MEDIA_KEYERR_OUTPUT_CODE = 104
        this.MEDIA_KEYERR_HARDWARECHANGE_CODE = 105
        this.MEDIA_KEYERR_DOMAIN_CODE = 106
        this.MEDIA_KEY_MESSAGE_ERROR_CODE = 107
        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE = 108
        this.SERVER_CERTIFICATE_UPDATED_ERROR_CODE = 109
        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE = 110
        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE = 111
        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE = 112
        this.KEY_SESSION_CREATED_ERROR_CODE = 113
        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE = 114
        this.MEDIA_KEYERR_UNKNOWN_MESSAGE =
          "An unspecified error occurred. This value is used for errors that don't match any of the other codes."
        this.MEDIA_KEYERR_CLIENT_MESSAGE = 'The Key System could not be installed or updated.'
        this.MEDIA_KEYERR_SERVICE_MESSAGE =
          'The message passed into update indicated an error from the license service.'
        this.MEDIA_KEYERR_OUTPUT_MESSAGE =
          'There is no available output device with the required characteristics for the content protection system.'
        this.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE =
          'A hardware configuration change caused a content protection error.'
        this.MEDIA_KEYERR_DOMAIN_MESSAGE =
          'An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.'
        this.MEDIA_KEY_MESSAGE_ERROR_MESSAGE =
          'Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!'
        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE = 'DRM: Empty key message from CDM'
        this.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE = 'Error updating server certificate -- '
        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE =
          'DRM: KeyStatusChange error! -- License has expired'
        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE =
          'DRM: No license server URL specified!'
        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE = 'DRM: KeySystem Access Denied! -- '
        this.KEY_SESSION_CREATED_ERROR_MESSAGE = 'DRM: unable to create session! --'
        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE = 'DRM: licenser error! --'
      }
      return t
    })(u['default'])
    var f = new l()
    t['default'] = f
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(1)
    var a = n(i)
    var s = r(292)
    var o = n(s)
    var u = r(0)
    var l = n(u)
    var f = r(54)
    var d = n(f)
    var c = r(301)
    var h = n(c)
    function p() {
      var e = undefined,
        t = undefined
      var r = this.context
      function n() {
        e = (0, a['default'])(r)
          .getInstance()
          .getLogger(t)
      }
      function i(e) {
        if (!e) return null
        if (e.fileStart === undefined) {
          e.fileStart = 0
        }
        var t = d['default'].parseBuffer(e)
        var n = (0, o['default'])(r).create()
        n.setData(t)
        return n
      }
      function s(e, t, r) {
        if (r === undefined) {
          r = 0
        }
        if (!t || r + 8 >= t.byteLength) {
          return new h['default'](0, false)
        }
        var n = t instanceof ArrayBuffer ? new Uint8Array(t) : t
        var i = undefined
        var a = 0
        while (r < n.byteLength) {
          var s = f(n, r)
          var o = c(n, r + 4)
          if (s === 0) {
            break
          }
          if (r + s <= n.byteLength) {
            if (e.indexOf(o) >= 0) {
              i = new h['default'](r, true, s)
            } else {
              a = r + s
            }
          }
          r += s
        }
        if (!i) {
          return new h['default'](a, false)
        }
        return i
      }
      function u(e) {
        if (!e || e.byteLength === 0) {
          return { sampleList: [], lastSequenceNumber: NaN, totalDuration: NaN, numSequences: NaN }
        }
        var t = i(e)
        var r = t.getBoxes('moof')
        var n = t.getBoxes('mfhd')
        var a = undefined,
          s = undefined,
          o = undefined,
          u = undefined,
          l = undefined,
          f = undefined,
          d = undefined,
          c = undefined,
          h = undefined,
          p = undefined,
          v = undefined,
          g = undefined,
          m = undefined,
          y = undefined,
          _ = undefined,
          T = undefined,
          E = undefined
        T = t.getBoxes('moof').length
        _ = n[n.length - 1].sequence_number
        o = 0
        f = []
        var b = -1
        var S = -1
        for (v = 0; v < r.length; v++) {
          var w = r[v]
          var A = w.getChildBoxes('traf')
          for (h = 0; h < A.length; h++) {
            var I = A[h]
            var C = I.getChildBox('tfhd')
            var R = I.getChildBox('tfdt')
            l = R.baseMediaDecodeTime
            var D = I.getChildBoxes('trun')
            var O = I.getChildBoxes('subs')
            for (p = 0; p < D.length; p++) {
              var M = D[p]
              o = M.sample_count
              y = (C.base_data_offset || 0) + (M.data_offset || 0)
              for (c = 0; c < o; c++) {
                d = M.samples[c]
                a = d.sample_duration !== undefined ? d.sample_duration : C.default_sample_duration
                u = d.sample_size !== undefined ? d.sample_size : C.default_sample_size
                s =
                  d.sample_composition_time_offset !== undefined
                    ? d.sample_composition_time_offset
                    : 0
                var k = {
                  dts: l,
                  cts: l + s,
                  duration: a,
                  offset: w.offset + y,
                  size: u,
                  subSizes: [u],
                }
                if (O) {
                  for (g = 0; g < O.length; g++) {
                    var P = O[g]
                    if (b < P.entry_count - 1 && c > S) {
                      b++
                      S += P.entries[b].sample_delta
                    }
                    if (c == S) {
                      k.subSizes = []
                      var N = P.entries[b]
                      for (m = 0; m < N.subsample_count; m++) {
                        k.subSizes.push(N.subsamples[m].subsample_size)
                      }
                    }
                  }
                }
                f.push(k)
                y += u
                l += a
              }
            }
            E = l - R.baseMediaDecodeTime
          }
        }
        return { sampleList: f, lastSequenceNumber: _, totalDuration: E, numSequences: T }
      }
      function l(e) {
        var t = i(e)
        var r = t ? t.getBox('mdhd') : undefined
        return r ? r.timescale : NaN
      }
      function f(e, t) {
        return (
          (e[t + 3] >>> 0) |
          ((e[t + 2] << 8) >>> 0) |
          ((e[t + 1] << 16) >>> 0) |
          ((e[t] << 24) >>> 0)
        )
      }
      function c(e, t) {
        return (
          String.fromCharCode(e[t++]) +
          String.fromCharCode(e[t++]) +
          String.fromCharCode(e[t++]) +
          String.fromCharCode(e[t])
        )
      }
      function p(t) {
        var r = null
        var n = undefined,
          a = undefined
        var s = i(t)
        if (!s) {
          return r
        }
        var o = s.getBox('ftyp')
        var u = s.getBox('moov')
        e.debug('Searching for initialization.')
        if (u && u.isComplete) {
          n = o ? o.offset : u.offset
          a = u.offset + u.size - 1
          r = n + '-' + a
          e.debug('Found the initialization.  Range: ' + r)
        }
        return r
      }
      t = {
        parse: i,
        findLastTopIsoBoxCompleted: s,
        getMediaTimescaleFromMoov: l,
        getSamplesInfo: u,
        findInitRange: p,
      }
      n()
      return t
    }
    p.__dashjs_factory_name = 'BoxParser'
    t['default'] = l['default'].getSingletonFactory(p)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    ;(function(e) {
      /*!
       * The buffer module from node.js, for the browser.
       *
       * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
       * @license  MIT
       */
      var n = r(144)
      var i = r(320)
      var a = r(124)
      t.Buffer = l
      t.SlowBuffer = _
      t.INSPECT_MAX_BYTES = 50
      l.TYPED_ARRAY_SUPPORT = e.TYPED_ARRAY_SUPPORT !== undefined ? e.TYPED_ARRAY_SUPPORT : s()
      t.kMaxLength = o()
      function s() {
        try {
          var e = new Uint8Array(1)
          e.__proto__ = {
            __proto__: Uint8Array.prototype,
            foo: function() {
              return 42
            },
          }
          return (
            e.foo() === 42 && typeof e.subarray === 'function' && e.subarray(1, 1).byteLength === 0
          )
        } catch (e) {
          return false
        }
      }
      function o() {
        return l.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
      }
      function u(e, t) {
        if (o() < t) {
          throw new RangeError('Invalid typed array length')
        }
        if (l.TYPED_ARRAY_SUPPORT) {
          e = new Uint8Array(t)
          e.__proto__ = l.prototype
        } else {
          if (e === null) {
            e = new l(t)
          }
          e.length = t
        }
        return e
      }
      function l(e, t, r) {
        if (!l.TYPED_ARRAY_SUPPORT && !(this instanceof l)) {
          return new l(e, t, r)
        }
        if (typeof e === 'number') {
          if (typeof t === 'string') {
            throw new Error('If encoding is specified then the first argument must be a string')
          }
          return h(this, e)
        }
        return f(this, e, t, r)
      }
      l.poolSize = 8192
      l._augment = function(e) {
        e.__proto__ = l.prototype
        return e
      }
      function f(e, t, r, n) {
        if (typeof t === 'number') {
          throw new TypeError('"value" argument must not be a number')
        }
        if (typeof ArrayBuffer !== 'undefined' && t instanceof ArrayBuffer) {
          return g(e, t, r, n)
        }
        if (typeof t === 'string') {
          return p(e, t, r)
        }
        return m(e, t)
      }
      l.from = function(e, t, r) {
        return f(null, e, t, r)
      }
      if (l.TYPED_ARRAY_SUPPORT) {
        l.prototype.__proto__ = Uint8Array.prototype
        l.__proto__ = Uint8Array
        if (typeof Symbol !== 'undefined' && Symbol.species && l[Symbol.species] === l) {
          Object.defineProperty(l, Symbol.species, { value: null, configurable: true })
        }
      }
      function d(e) {
        if (typeof e !== 'number') {
          throw new TypeError('"size" argument must be a number')
        } else if (e < 0) {
          throw new RangeError('"size" argument must not be negative')
        }
      }
      function c(e, t, r, n) {
        d(t)
        if (t <= 0) {
          return u(e, t)
        }
        if (r !== undefined) {
          return typeof n === 'string' ? u(e, t).fill(r, n) : u(e, t).fill(r)
        }
        return u(e, t)
      }
      l.alloc = function(e, t, r) {
        return c(null, e, t, r)
      }
      function h(e, t) {
        d(t)
        e = u(e, t < 0 ? 0 : y(t) | 0)
        if (!l.TYPED_ARRAY_SUPPORT) {
          for (var r = 0; r < t; ++r) {
            e[r] = 0
          }
        }
        return e
      }
      l.allocUnsafe = function(e) {
        return h(null, e)
      }
      l.allocUnsafeSlow = function(e) {
        return h(null, e)
      }
      function p(e, t, r) {
        if (typeof r !== 'string' || r === '') {
          r = 'utf8'
        }
        if (!l.isEncoding(r)) {
          throw new TypeError('"encoding" must be a valid string encoding')
        }
        var n = T(t, r) | 0
        e = u(e, n)
        var i = e.write(t, r)
        if (i !== n) {
          e = e.slice(0, i)
        }
        return e
      }
      function v(e, t) {
        var r = t.length < 0 ? 0 : y(t.length) | 0
        e = u(e, r)
        for (var n = 0; n < r; n += 1) {
          e[n] = t[n] & 255
        }
        return e
      }
      function g(e, t, r, n) {
        t.byteLength
        if (r < 0 || t.byteLength < r) {
          throw new RangeError("'offset' is out of bounds")
        }
        if (t.byteLength < r + (n || 0)) {
          throw new RangeError("'length' is out of bounds")
        }
        if (r === undefined && n === undefined) {
          t = new Uint8Array(t)
        } else if (n === undefined) {
          t = new Uint8Array(t, r)
        } else {
          t = new Uint8Array(t, r, n)
        }
        if (l.TYPED_ARRAY_SUPPORT) {
          e = t
          e.__proto__ = l.prototype
        } else {
          e = v(e, t)
        }
        return e
      }
      function m(e, t) {
        if (l.isBuffer(t)) {
          var r = y(t.length) | 0
          e = u(e, r)
          if (e.length === 0) {
            return e
          }
          t.copy(e, 0, 0, r)
          return e
        }
        if (t) {
          if (
            (typeof ArrayBuffer !== 'undefined' && t.buffer instanceof ArrayBuffer) ||
            'length' in t
          ) {
            if (typeof t.length !== 'number' || te(t.length)) {
              return u(e, 0)
            }
            return v(e, t)
          }
          if (t.type === 'Buffer' && a(t.data)) {
            return v(e, t.data)
          }
        }
        throw new TypeError(
          'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.'
        )
      }
      function y(e) {
        if (e >= o()) {
          throw new RangeError(
            'Attempt to allocate Buffer larger than maximum ' +
              'size: 0x' +
              o().toString(16) +
              ' bytes'
          )
        }
        return e | 0
      }
      function _(e) {
        if (+e != e) {
          e = 0
        }
        return l.alloc(+e)
      }
      l.isBuffer = function e(t) {
        return !!(t != null && t._isBuffer)
      }
      l.compare = function e(t, r) {
        if (!l.isBuffer(t) || !l.isBuffer(r)) {
          throw new TypeError('Arguments must be Buffers')
        }
        if (t === r) return 0
        var n = t.length
        var i = r.length
        for (var a = 0, s = Math.min(n, i); a < s; ++a) {
          if (t[a] !== r[a]) {
            n = t[a]
            i = r[a]
            break
          }
        }
        if (n < i) return -1
        if (i < n) return 1
        return 0
      }
      l.isEncoding = function e(t) {
        switch (String(t).toLowerCase()) {
          case 'hex':
          case 'utf8':
          case 'utf-8':
          case 'ascii':
          case 'latin1':
          case 'binary':
          case 'base64':
          case 'ucs2':
          case 'ucs-2':
          case 'utf16le':
          case 'utf-16le':
            return true
          default:
            return false
        }
      }
      l.concat = function e(t, r) {
        if (!a(t)) {
          throw new TypeError('"list" argument must be an Array of Buffers')
        }
        if (t.length === 0) {
          return l.alloc(0)
        }
        var n
        if (r === undefined) {
          r = 0
          for (n = 0; n < t.length; ++n) {
            r += t[n].length
          }
        }
        var i = l.allocUnsafe(r)
        var s = 0
        for (n = 0; n < t.length; ++n) {
          var o = t[n]
          if (!l.isBuffer(o)) {
            throw new TypeError('"list" argument must be an Array of Buffers')
          }
          o.copy(i, s)
          s += o.length
        }
        return i
      }
      function T(e, t) {
        if (l.isBuffer(e)) {
          return e.length
        }
        if (
          typeof ArrayBuffer !== 'undefined' &&
          typeof ArrayBuffer.isView === 'function' &&
          (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)
        ) {
          return e.byteLength
        }
        if (typeof e !== 'string') {
          e = '' + e
        }
        var r = e.length
        if (r === 0) return 0
        var n = false
        for (;;) {
          switch (t) {
            case 'ascii':
            case 'latin1':
            case 'binary':
              return r
            case 'utf8':
            case 'utf-8':
            case undefined:
              return $(e).length
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return r * 2
            case 'hex':
              return r >>> 1
            case 'base64':
              return Z(e).length
            default:
              if (n) return $(e).length
              t = ('' + t).toLowerCase()
              n = true
          }
        }
      }
      l.byteLength = T
      function E(e, t, r) {
        var n = false
        if (t === undefined || t < 0) {
          t = 0
        }
        if (t > this.length) {
          return ''
        }
        if (r === undefined || r > this.length) {
          r = this.length
        }
        if (r <= 0) {
          return ''
        }
        r >>>= 0
        t >>>= 0
        if (r <= t) {
          return ''
        }
        if (!e) e = 'utf8'
        while (true) {
          switch (e) {
            case 'hex':
              return F(this, t, r)
            case 'utf8':
            case 'utf-8':
              return k(this, t, r)
            case 'ascii':
              return L(this, t, r)
            case 'latin1':
            case 'binary':
              return x(this, t, r)
            case 'base64':
              return M(this, t, r)
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return U(this, t, r)
            default:
              if (n) throw new TypeError('Unknown encoding: ' + e)
              e = (e + '').toLowerCase()
              n = true
          }
        }
      }
      l.prototype._isBuffer = true
      function b(e, t, r) {
        var n = e[t]
        e[t] = e[r]
        e[r] = n
      }
      l.prototype.swap16 = function e() {
        var t = this.length
        if (t % 2 !== 0) {
          throw new RangeError('Buffer size must be a multiple of 16-bits')
        }
        for (var r = 0; r < t; r += 2) {
          b(this, r, r + 1)
        }
        return this
      }
      l.prototype.swap32 = function e() {
        var t = this.length
        if (t % 4 !== 0) {
          throw new RangeError('Buffer size must be a multiple of 32-bits')
        }
        for (var r = 0; r < t; r += 4) {
          b(this, r, r + 3)
          b(this, r + 1, r + 2)
        }
        return this
      }
      l.prototype.swap64 = function e() {
        var t = this.length
        if (t % 8 !== 0) {
          throw new RangeError('Buffer size must be a multiple of 64-bits')
        }
        for (var r = 0; r < t; r += 8) {
          b(this, r, r + 7)
          b(this, r + 1, r + 6)
          b(this, r + 2, r + 5)
          b(this, r + 3, r + 4)
        }
        return this
      }
      l.prototype.toString = function e() {
        var t = this.length | 0
        if (t === 0) return ''
        if (arguments.length === 0) return k(this, 0, t)
        return E.apply(this, arguments)
      }
      l.prototype.equals = function e(t) {
        if (!l.isBuffer(t)) throw new TypeError('Argument must be a Buffer')
        if (this === t) return true
        return l.compare(this, t) === 0
      }
      l.prototype.inspect = function e() {
        var r = ''
        var n = t.INSPECT_MAX_BYTES
        if (this.length > 0) {
          r = this.toString('hex', 0, n)
            .match(/.{2}/g)
            .join(' ')
          if (this.length > n) r += ' ... '
        }
        return '<Buffer ' + r + '>'
      }
      l.prototype.compare = function e(t, r, n, i, a) {
        if (!l.isBuffer(t)) {
          throw new TypeError('Argument must be a Buffer')
        }
        if (r === undefined) {
          r = 0
        }
        if (n === undefined) {
          n = t ? t.length : 0
        }
        if (i === undefined) {
          i = 0
        }
        if (a === undefined) {
          a = this.length
        }
        if (r < 0 || n > t.length || i < 0 || a > this.length) {
          throw new RangeError('out of range index')
        }
        if (i >= a && r >= n) {
          return 0
        }
        if (i >= a) {
          return -1
        }
        if (r >= n) {
          return 1
        }
        r >>>= 0
        n >>>= 0
        i >>>= 0
        a >>>= 0
        if (this === t) return 0
        var s = a - i
        var o = n - r
        var u = Math.min(s, o)
        var f = this.slice(i, a)
        var d = t.slice(r, n)
        for (var c = 0; c < u; ++c) {
          if (f[c] !== d[c]) {
            s = f[c]
            o = d[c]
            break
          }
        }
        if (s < o) return -1
        if (o < s) return 1
        return 0
      }
      function S(e, t, r, n, i) {
        if (e.length === 0) return -1
        if (typeof r === 'string') {
          n = r
          r = 0
        } else if (r > 2147483647) {
          r = 2147483647
        } else if (r < -2147483648) {
          r = -2147483648
        }
        r = +r
        if (isNaN(r)) {
          r = i ? 0 : e.length - 1
        }
        if (r < 0) r = e.length + r
        if (r >= e.length) {
          if (i) return -1
          else r = e.length - 1
        } else if (r < 0) {
          if (i) r = 0
          else return -1
        }
        if (typeof t === 'string') {
          t = l.from(t, n)
        }
        if (l.isBuffer(t)) {
          if (t.length === 0) {
            return -1
          }
          return w(e, t, r, n, i)
        } else if (typeof t === 'number') {
          t = t & 255
          if (l.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {
            if (i) {
              return Uint8Array.prototype.indexOf.call(e, t, r)
            } else {
              return Uint8Array.prototype.lastIndexOf.call(e, t, r)
            }
          }
          return w(e, [t], r, n, i)
        }
        throw new TypeError('val must be string, number or Buffer')
      }
      function w(e, t, r, n, i) {
        var a = 1
        var s = e.length
        var o = t.length
        if (n !== undefined) {
          n = String(n).toLowerCase()
          if (n === 'ucs2' || n === 'ucs-2' || n === 'utf16le' || n === 'utf-16le') {
            if (e.length < 2 || t.length < 2) {
              return -1
            }
            a = 2
            s /= 2
            o /= 2
            r /= 2
          }
        }
        function u(e, t) {
          if (a === 1) {
            return e[t]
          } else {
            return e.readUInt16BE(t * a)
          }
        }
        var l
        if (i) {
          var f = -1
          for (l = r; l < s; l++) {
            if (u(e, l) === u(t, f === -1 ? 0 : l - f)) {
              if (f === -1) f = l
              if (l - f + 1 === o) return f * a
            } else {
              if (f !== -1) l -= l - f
              f = -1
            }
          }
        } else {
          if (r + o > s) r = s - o
          for (l = r; l >= 0; l--) {
            var d = true
            for (var c = 0; c < o; c++) {
              if (u(e, l + c) !== u(t, c)) {
                d = false
                break
              }
            }
            if (d) return l
          }
        }
        return -1
      }
      l.prototype.includes = function e(t, r, n) {
        return this.indexOf(t, r, n) !== -1
      }
      l.prototype.indexOf = function e(t, r, n) {
        return S(this, t, r, n, true)
      }
      l.prototype.lastIndexOf = function e(t, r, n) {
        return S(this, t, r, n, false)
      }
      function A(e, t, r, n) {
        r = Number(r) || 0
        var i = e.length - r
        if (!n) {
          n = i
        } else {
          n = Number(n)
          if (n > i) {
            n = i
          }
        }
        var a = t.length
        if (a % 2 !== 0) throw new TypeError('Invalid hex string')
        if (n > a / 2) {
          n = a / 2
        }
        for (var s = 0; s < n; ++s) {
          var o = parseInt(t.substr(s * 2, 2), 16)
          if (isNaN(o)) return s
          e[r + s] = o
        }
        return s
      }
      function I(e, t, r, n) {
        return ee($(t, e.length - r), e, r, n)
      }
      function C(e, t, r, n) {
        return ee(Q(t), e, r, n)
      }
      function R(e, t, r, n) {
        return C(e, t, r, n)
      }
      function D(e, t, r, n) {
        return ee(Z(t), e, r, n)
      }
      function O(e, t, r, n) {
        return ee(J(t, e.length - r), e, r, n)
      }
      l.prototype.write = function e(t, r, n, i) {
        if (r === undefined) {
          i = 'utf8'
          n = this.length
          r = 0
        } else if (n === undefined && typeof r === 'string') {
          i = r
          n = this.length
          r = 0
        } else if (isFinite(r)) {
          r = r | 0
          if (isFinite(n)) {
            n = n | 0
            if (i === undefined) i = 'utf8'
          } else {
            i = n
            n = undefined
          }
        } else {
          throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported')
        }
        var a = this.length - r
        if (n === undefined || n > a) n = a
        if ((t.length > 0 && (n < 0 || r < 0)) || r > this.length) {
          throw new RangeError('Attempt to write outside buffer bounds')
        }
        if (!i) i = 'utf8'
        var s = false
        for (;;) {
          switch (i) {
            case 'hex':
              return A(this, t, r, n)
            case 'utf8':
            case 'utf-8':
              return I(this, t, r, n)
            case 'ascii':
              return C(this, t, r, n)
            case 'latin1':
            case 'binary':
              return R(this, t, r, n)
            case 'base64':
              return D(this, t, r, n)
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
              return O(this, t, r, n)
            default:
              if (s) throw new TypeError('Unknown encoding: ' + i)
              i = ('' + i).toLowerCase()
              s = true
          }
        }
      }
      l.prototype.toJSON = function e() {
        return { type: 'Buffer', data: Array.prototype.slice.call(this._arr || this, 0) }
      }
      function M(e, t, r) {
        if (t === 0 && r === e.length) {
          return n.fromByteArray(e)
        } else {
          return n.fromByteArray(e.slice(t, r))
        }
      }
      function k(e, t, r) {
        r = Math.min(e.length, r)
        var n = []
        var i = t
        while (i < r) {
          var a = e[i]
          var s = null
          var o = a > 239 ? 4 : a > 223 ? 3 : a > 191 ? 2 : 1
          if (i + o <= r) {
            var u, l, f, d
            switch (o) {
              case 1:
                if (a < 128) {
                  s = a
                }
                break
              case 2:
                u = e[i + 1]
                if ((u & 192) === 128) {
                  d = ((a & 31) << 6) | (u & 63)
                  if (d > 127) {
                    s = d
                  }
                }
                break
              case 3:
                u = e[i + 1]
                l = e[i + 2]
                if ((u & 192) === 128 && (l & 192) === 128) {
                  d = ((a & 15) << 12) | ((u & 63) << 6) | (l & 63)
                  if (d > 2047 && (d < 55296 || d > 57343)) {
                    s = d
                  }
                }
                break
              case 4:
                u = e[i + 1]
                l = e[i + 2]
                f = e[i + 3]
                if ((u & 192) === 128 && (l & 192) === 128 && (f & 192) === 128) {
                  d = ((a & 15) << 18) | ((u & 63) << 12) | ((l & 63) << 6) | (f & 63)
                  if (d > 65535 && d < 1114112) {
                    s = d
                  }
                }
            }
          }
          if (s === null) {
            s = 65533
            o = 1
          } else if (s > 65535) {
            s -= 65536
            n.push(((s >>> 10) & 1023) | 55296)
            s = 56320 | (s & 1023)
          }
          n.push(s)
          i += o
        }
        return N(n)
      }
      var P = 4096
      function N(e) {
        var t = e.length
        if (t <= P) {
          return String.fromCharCode.apply(String, e)
        }
        var r = ''
        var n = 0
        while (n < t) {
          r += String.fromCharCode.apply(String, e.slice(n, (n += P)))
        }
        return r
      }
      function L(e, t, r) {
        var n = ''
        r = Math.min(e.length, r)
        for (var i = t; i < r; ++i) {
          n += String.fromCharCode(e[i] & 127)
        }
        return n
      }
      function x(e, t, r) {
        var n = ''
        r = Math.min(e.length, r)
        for (var i = t; i < r; ++i) {
          n += String.fromCharCode(e[i])
        }
        return n
      }
      function F(e, t, r) {
        var n = e.length
        if (!t || t < 0) t = 0
        if (!r || r < 0 || r > n) r = n
        var i = ''
        for (var a = t; a < r; ++a) {
          i += X(e[a])
        }
        return i
      }
      function U(e, t, r) {
        var n = e.slice(t, r)
        var i = ''
        for (var a = 0; a < n.length; a += 2) {
          i += String.fromCharCode(n[a] + n[a + 1] * 256)
        }
        return i
      }
      l.prototype.slice = function e(t, r) {
        var n = this.length
        t = ~~t
        r = r === undefined ? n : ~~r
        if (t < 0) {
          t += n
          if (t < 0) t = 0
        } else if (t > n) {
          t = n
        }
        if (r < 0) {
          r += n
          if (r < 0) r = 0
        } else if (r > n) {
          r = n
        }
        if (r < t) r = t
        var i
        if (l.TYPED_ARRAY_SUPPORT) {
          i = this.subarray(t, r)
          i.__proto__ = l.prototype
        } else {
          var a = r - t
          i = new l(a, undefined)
          for (var s = 0; s < a; ++s) {
            i[s] = this[s + t]
          }
        }
        return i
      }
      function B(e, t, r) {
        if (e % 1 !== 0 || e < 0) throw new RangeError('offset is not uint')
        if (e + t > r) throw new RangeError('Trying to access beyond buffer length')
      }
      l.prototype.readUIntLE = function e(t, r, n) {
        t = t | 0
        r = r | 0
        if (!n) B(t, r, this.length)
        var i = this[t]
        var a = 1
        var s = 0
        while (++s < r && (a *= 256)) {
          i += this[t + s] * a
        }
        return i
      }
      l.prototype.readUIntBE = function e(t, r, n) {
        t = t | 0
        r = r | 0
        if (!n) {
          B(t, r, this.length)
        }
        var i = this[t + --r]
        var a = 1
        while (r > 0 && (a *= 256)) {
          i += this[t + --r] * a
        }
        return i
      }
      l.prototype.readUInt8 = function e(t, r) {
        if (!r) B(t, 1, this.length)
        return this[t]
      }
      l.prototype.readUInt16LE = function e(t, r) {
        if (!r) B(t, 2, this.length)
        return this[t] | (this[t + 1] << 8)
      }
      l.prototype.readUInt16BE = function e(t, r) {
        if (!r) B(t, 2, this.length)
        return (this[t] << 8) | this[t + 1]
      }
      l.prototype.readUInt32LE = function e(t, r) {
        if (!r) B(t, 4, this.length)
        return (this[t] | (this[t + 1] << 8) | (this[t + 2] << 16)) + this[t + 3] * 16777216
      }
      l.prototype.readUInt32BE = function e(t, r) {
        if (!r) B(t, 4, this.length)
        return this[t] * 16777216 + ((this[t + 1] << 16) | (this[t + 2] << 8) | this[t + 3])
      }
      l.prototype.readIntLE = function e(t, r, n) {
        t = t | 0
        r = r | 0
        if (!n) B(t, r, this.length)
        var i = this[t]
        var a = 1
        var s = 0
        while (++s < r && (a *= 256)) {
          i += this[t + s] * a
        }
        a *= 128
        if (i >= a) i -= Math.pow(2, 8 * r)
        return i
      }
      l.prototype.readIntBE = function e(t, r, n) {
        t = t | 0
        r = r | 0
        if (!n) B(t, r, this.length)
        var i = r
        var a = 1
        var s = this[t + --i]
        while (i > 0 && (a *= 256)) {
          s += this[t + --i] * a
        }
        a *= 128
        if (s >= a) s -= Math.pow(2, 8 * r)
        return s
      }
      l.prototype.readInt8 = function e(t, r) {
        if (!r) B(t, 1, this.length)
        if (!(this[t] & 128)) return this[t]
        return (255 - this[t] + 1) * -1
      }
      l.prototype.readInt16LE = function e(t, r) {
        if (!r) B(t, 2, this.length)
        var n = this[t] | (this[t + 1] << 8)
        return n & 32768 ? n | 4294901760 : n
      }
      l.prototype.readInt16BE = function e(t, r) {
        if (!r) B(t, 2, this.length)
        var n = this[t + 1] | (this[t] << 8)
        return n & 32768 ? n | 4294901760 : n
      }
      l.prototype.readInt32LE = function e(t, r) {
        if (!r) B(t, 4, this.length)
        return this[t] | (this[t + 1] << 8) | (this[t + 2] << 16) | (this[t + 3] << 24)
      }
      l.prototype.readInt32BE = function e(t, r) {
        if (!r) B(t, 4, this.length)
        return (this[t] << 24) | (this[t + 1] << 16) | (this[t + 2] << 8) | this[t + 3]
      }
      l.prototype.readFloatLE = function e(t, r) {
        if (!r) B(t, 4, this.length)
        return i.read(this, t, true, 23, 4)
      }
      l.prototype.readFloatBE = function e(t, r) {
        if (!r) B(t, 4, this.length)
        return i.read(this, t, false, 23, 4)
      }
      l.prototype.readDoubleLE = function e(t, r) {
        if (!r) B(t, 8, this.length)
        return i.read(this, t, true, 52, 8)
      }
      l.prototype.readDoubleBE = function e(t, r) {
        if (!r) B(t, 8, this.length)
        return i.read(this, t, false, 52, 8)
      }
      function j(e, t, r, n, i, a) {
        if (!l.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance')
        if (t > i || t < a) throw new RangeError('"value" argument is out of bounds')
        if (r + n > e.length) throw new RangeError('Index out of range')
      }
      l.prototype.writeUIntLE = function e(t, r, n, i) {
        t = +t
        r = r | 0
        n = n | 0
        if (!i) {
          var a = Math.pow(2, 8 * n) - 1
          j(this, t, r, n, a, 0)
        }
        var s = 1
        var o = 0
        this[r] = t & 255
        while (++o < n && (s *= 256)) {
          this[r + o] = (t / s) & 255
        }
        return r + n
      }
      l.prototype.writeUIntBE = function e(t, r, n, i) {
        t = +t
        r = r | 0
        n = n | 0
        if (!i) {
          var a = Math.pow(2, 8 * n) - 1
          j(this, t, r, n, a, 0)
        }
        var s = n - 1
        var o = 1
        this[r + s] = t & 255
        while (--s >= 0 && (o *= 256)) {
          this[r + s] = (t / o) & 255
        }
        return r + n
      }
      l.prototype.writeUInt8 = function e(t, r, n) {
        t = +t
        r = r | 0
        if (!n) j(this, t, r, 1, 255, 0)
        if (!l.TYPED_ARRAY_SUPPORT) t = Math.floor(t)
        this[r] = t & 255
        return r + 1
      }
      function G(e, t, r, n) {
        if (t < 0) t = 65535 + t + 1
        for (var i = 0, a = Math.min(e.length - r, 2); i < a; ++i) {
          e[r + i] = (t & (255 << (8 * (n ? i : 1 - i)))) >>> ((n ? i : 1 - i) * 8)
        }
      }
      l.prototype.writeUInt16LE = function e(t, r, n) {
        t = +t
        r = r | 0
        if (!n) j(this, t, r, 2, 65535, 0)
        if (l.TYPED_ARRAY_SUPPORT) {
          this[r] = t & 255
          this[r + 1] = t >>> 8
        } else {
          G(this, t, r, true)
        }
        return r + 2
      }
      l.prototype.writeUInt16BE = function e(t, r, n) {
        t = +t
        r = r | 0
        if (!n) j(this, t, r, 2, 65535, 0)
        if (l.TYPED_ARRAY_SUPPORT) {
          this[r] = t >>> 8
          this[r + 1] = t & 255
        } else {
          G(this, t, r, false)
        }
        return r + 2
      }
      function q(e, t, r, n) {
        if (t < 0) t = 4294967295 + t + 1
        for (var i = 0, a = Math.min(e.length - r, 4); i < a; ++i) {
          e[r + i] = (t >>> ((n ? i : 3 - i) * 8)) & 255
        }
      }
      l.prototype.writeUInt32LE = function e(t, r, n) {
        t = +t
        r = r | 0
        if (!n) j(this, t, r, 4, 4294967295, 0)
        if (l.TYPED_ARRAY_SUPPORT) {
          this[r + 3] = t >>> 24
          this[r + 2] = t >>> 16
          this[r + 1] = t >>> 8
          this[r] = t & 255
        } else {
          q(this, t, r, true)
        }
        return r + 4
      }
      l.prototype.writeUInt32BE = function e(t, r, n) {
        t = +t
        r = r | 0
        if (!n) j(this, t, r, 4, 4294967295, 0)
        if (l.TYPED_ARRAY_SUPPORT) {
          this[r] = t >>> 24
          this[r + 1] = t >>> 16
          this[r + 2] = t >>> 8
          this[r + 3] = t & 255
        } else {
          q(this, t, r, false)
        }
        return r + 4
      }
      l.prototype.writeIntLE = function e(t, r, n, i) {
        t = +t
        r = r | 0
        if (!i) {
          var a = Math.pow(2, 8 * n - 1)
          j(this, t, r, n, a - 1, -a)
        }
        var s = 0
        var o = 1
        var u = 0
        this[r] = t & 255
        while (++s < n && (o *= 256)) {
          if (t < 0 && u === 0 && this[r + s - 1] !== 0) {
            u = 1
          }
          this[r + s] = (((t / o) >> 0) - u) & 255
        }
        return r + n
      }
      l.prototype.writeIntBE = function e(t, r, n, i) {
        t = +t
        r = r | 0
        if (!i) {
          var a = Math.pow(2, 8 * n - 1)
          j(this, t, r, n, a - 1, -a)
        }
        var s = n - 1
        var o = 1
        var u = 0
        this[r + s] = t & 255
        while (--s >= 0 && (o *= 256)) {
          if (t < 0 && u === 0 && this[r + s + 1] !== 0) {
            u = 1
          }
          this[r + s] = (((t / o) >> 0) - u) & 255
        }
        return r + n
      }
      l.prototype.writeInt8 = function e(t, r, n) {
        t = +t
        r = r | 0
        if (!n) j(this, t, r, 1, 127, -128)
        if (!l.TYPED_ARRAY_SUPPORT) t = Math.floor(t)
        if (t < 0) t = 255 + t + 1
        this[r] = t & 255
        return r + 1
      }
      l.prototype.writeInt16LE = function e(t, r, n) {
        t = +t
        r = r | 0
        if (!n) j(this, t, r, 2, 32767, -32768)
        if (l.TYPED_ARRAY_SUPPORT) {
          this[r] = t & 255
          this[r + 1] = t >>> 8
        } else {
          G(this, t, r, true)
        }
        return r + 2
      }
      l.prototype.writeInt16BE = function e(t, r, n) {
        t = +t
        r = r | 0
        if (!n) j(this, t, r, 2, 32767, -32768)
        if (l.TYPED_ARRAY_SUPPORT) {
          this[r] = t >>> 8
          this[r + 1] = t & 255
        } else {
          G(this, t, r, false)
        }
        return r + 2
      }
      l.prototype.writeInt32LE = function e(t, r, n) {
        t = +t
        r = r | 0
        if (!n) j(this, t, r, 4, 2147483647, -2147483648)
        if (l.TYPED_ARRAY_SUPPORT) {
          this[r] = t & 255
          this[r + 1] = t >>> 8
          this[r + 2] = t >>> 16
          this[r + 3] = t >>> 24
        } else {
          q(this, t, r, true)
        }
        return r + 4
      }
      l.prototype.writeInt32BE = function e(t, r, n) {
        t = +t
        r = r | 0
        if (!n) j(this, t, r, 4, 2147483647, -2147483648)
        if (t < 0) t = 4294967295 + t + 1
        if (l.TYPED_ARRAY_SUPPORT) {
          this[r] = t >>> 24
          this[r + 1] = t >>> 16
          this[r + 2] = t >>> 8
          this[r + 3] = t & 255
        } else {
          q(this, t, r, false)
        }
        return r + 4
      }
      function H(e, t, r, n, i, a) {
        if (r + n > e.length) throw new RangeError('Index out of range')
        if (r < 0) throw new RangeError('Index out of range')
      }
      function V(e, t, r, n, a) {
        if (!a) {
          H(e, t, r, 4, 3.4028234663852886e38, -3.4028234663852886e38)
        }
        i.write(e, t, r, n, 23, 4)
        return r + 4
      }
      l.prototype.writeFloatLE = function e(t, r, n) {
        return V(this, t, r, true, n)
      }
      l.prototype.writeFloatBE = function e(t, r, n) {
        return V(this, t, r, false, n)
      }
      function K(e, t, r, n, a) {
        if (!a) {
          H(e, t, r, 8, 1.7976931348623157e308, -1.7976931348623157e308)
        }
        i.write(e, t, r, n, 52, 8)
        return r + 8
      }
      l.prototype.writeDoubleLE = function e(t, r, n) {
        return K(this, t, r, true, n)
      }
      l.prototype.writeDoubleBE = function e(t, r, n) {
        return K(this, t, r, false, n)
      }
      l.prototype.copy = function e(t, r, n, i) {
        if (!n) n = 0
        if (!i && i !== 0) i = this.length
        if (r >= t.length) r = t.length
        if (!r) r = 0
        if (i > 0 && i < n) i = n
        if (i === n) return 0
        if (t.length === 0 || this.length === 0) return 0
        if (r < 0) {
          throw new RangeError('targetStart out of bounds')
        }
        if (n < 0 || n >= this.length) throw new RangeError('sourceStart out of bounds')
        if (i < 0) throw new RangeError('sourceEnd out of bounds')
        if (i > this.length) i = this.length
        if (t.length - r < i - n) {
          i = t.length - r + n
        }
        var a = i - n
        var s
        if (this === t && n < r && r < i) {
          for (s = a - 1; s >= 0; --s) {
            t[s + r] = this[s + n]
          }
        } else if (a < 1e3 || !l.TYPED_ARRAY_SUPPORT) {
          for (s = 0; s < a; ++s) {
            t[s + r] = this[s + n]
          }
        } else {
          Uint8Array.prototype.set.call(t, this.subarray(n, n + a), r)
        }
        return a
      }
      l.prototype.fill = function e(t, r, n, i) {
        if (typeof t === 'string') {
          if (typeof r === 'string') {
            i = r
            r = 0
            n = this.length
          } else if (typeof n === 'string') {
            i = n
            n = this.length
          }
          if (t.length === 1) {
            var a = t.charCodeAt(0)
            if (a < 256) {
              t = a
            }
          }
          if (i !== undefined && typeof i !== 'string') {
            throw new TypeError('encoding must be a string')
          }
          if (typeof i === 'string' && !l.isEncoding(i)) {
            throw new TypeError('Unknown encoding: ' + i)
          }
        } else if (typeof t === 'number') {
          t = t & 255
        }
        if (r < 0 || this.length < r || this.length < n) {
          throw new RangeError('Out of range index')
        }
        if (n <= r) {
          return this
        }
        r = r >>> 0
        n = n === undefined ? this.length : n >>> 0
        if (!t) t = 0
        var s
        if (typeof t === 'number') {
          for (s = r; s < n; ++s) {
            this[s] = t
          }
        } else {
          var o = l.isBuffer(t) ? t : $(new l(t, i).toString())
          var u = o.length
          for (s = 0; s < n - r; ++s) {
            this[s + r] = o[s % u]
          }
        }
        return this
      }
      var Y = /[^+\/0-9A-Za-z-_]/g
      function W(e) {
        e = z(e).replace(Y, '')
        if (e.length < 2) return ''
        while (e.length % 4 !== 0) {
          e = e + '='
        }
        return e
      }
      function z(e) {
        if (e.trim) return e.trim()
        return e.replace(/^\s+|\s+$/g, '')
      }
      function X(e) {
        if (e < 16) return '0' + e.toString(16)
        return e.toString(16)
      }
      function $(e, t) {
        t = t || Infinity
        var r
        var n = e.length
        var i = null
        var a = []
        for (var s = 0; s < n; ++s) {
          r = e.charCodeAt(s)
          if (r > 55295 && r < 57344) {
            if (!i) {
              if (r > 56319) {
                if ((t -= 3) > -1) a.push(239, 191, 189)
                continue
              } else if (s + 1 === n) {
                if ((t -= 3) > -1) a.push(239, 191, 189)
                continue
              }
              i = r
              continue
            }
            if (r < 56320) {
              if ((t -= 3) > -1) a.push(239, 191, 189)
              i = r
              continue
            }
            r = (((i - 55296) << 10) | (r - 56320)) + 65536
          } else if (i) {
            if ((t -= 3) > -1) a.push(239, 191, 189)
          }
          i = null
          if (r < 128) {
            if ((t -= 1) < 0) break
            a.push(r)
          } else if (r < 2048) {
            if ((t -= 2) < 0) break
            a.push((r >> 6) | 192, (r & 63) | 128)
          } else if (r < 65536) {
            if ((t -= 3) < 0) break
            a.push((r >> 12) | 224, ((r >> 6) & 63) | 128, (r & 63) | 128)
          } else if (r < 1114112) {
            if ((t -= 4) < 0) break
            a.push((r >> 18) | 240, ((r >> 12) & 63) | 128, ((r >> 6) & 63) | 128, (r & 63) | 128)
          } else {
            throw new Error('Invalid code point')
          }
        }
        return a
      }
      function Q(e) {
        var t = []
        for (var r = 0; r < e.length; ++r) {
          t.push(e.charCodeAt(r) & 255)
        }
        return t
      }
      function J(e, t) {
        var r, n, i
        var a = []
        for (var s = 0; s < e.length; ++s) {
          if ((t -= 2) < 0) break
          r = e.charCodeAt(s)
          n = r >> 8
          i = r % 256
          a.push(i)
          a.push(n)
        }
        return a
      }
      function Z(e) {
        return n.toByteArray(W(e))
      }
      function ee(e, t, r, n) {
        for (var i = 0; i < n; ++i) {
          if (i + r >= t.length || i >= e.length) break
          t[i + r] = e[i]
        }
        return i
      }
      function te(e) {
        return e !== e
      }
    }.call(t, r(16)))
  },
  function(e, t) {
    e.exports = function(e) {
      if (typeof e != 'function') throw TypeError(e + ' is not a function!')
      return e
    }
  },
  function(e, t) {
    var r = {}.toString
    e.exports = function(e) {
      return r.call(e).slice(8, -1)
    }
  },
  function(e, t, r) {
    var n = r(38)
    e.exports = function(e, t, r) {
      n(e)
      if (t === undefined) return e
      switch (r) {
        case 1:
          return function(r) {
            return e.call(t, r)
          }
        case 2:
          return function(r, n) {
            return e.call(t, r, n)
          }
        case 3:
          return function(r, n, i) {
            return e.call(t, r, n, i)
          }
      }
      return function() {
        return e.apply(t, arguments)
      }
    }
  },
  function(e, t) {
    var r = {}.hasOwnProperty
    e.exports = function(e, t) {
      return r.call(e, t)
    }
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = (function() {
      function e() {
        i(this, e)
      }
      n(e, [
        {
          key: 'extend',
          value: function e(t, r) {
            if (!t) return
            var n = r ? r.override : false
            var i = r ? r.publicOnly : false
            for (var a in t) {
              if (!t.hasOwnProperty(a) || (this[a] && !n)) continue
              if (i && t[a].indexOf('public_') === -1) continue
              this[a] = t[a]
            }
          },
        },
      ])
      return e
    })()
    t['default'] = a
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = (function() {
      function e(t, r) {
        i(this, e)
        this._test = t
        this._converter = r
      }
      n(e, [
        {
          key: 'test',
          get: function e() {
            return this._test
          },
        },
        {
          key: 'converter',
          get: function e() {
            return this._converter
          },
        },
      ])
      return e
    })()
    t['default'] = a
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(114)
    var a = n(i)
    var s = r(3)
    var o = n(s)
    var u = r(25)
    var l = n(u)
    var f = r(118)
    var d = n(f)
    var c = r(46)
    var h = n(c)
    var p = r(2)
    var v = n(p)
    var g = r(4)
    var m = n(g)
    var y = r(0)
    var _ = n(y)
    var T = r(271)
    var E = n(T)
    var b = r(14)
    var S = n(b)
    var w = r(272)
    var A = n(w)
    var I = r(270)
    var C = n(I)
    var R = r(273)
    var D = n(R)
    var O = r(7)
    var M = r(1)
    var k = n(M)
    var P = r(27)
    var N = 'abandonload'
    var L = 'allowload'
    var x = 1e3
    var F = 100
    var U = 0
    function B() {
      var e = this.context
      var t = (0, k['default'])(e).getInstance()
      var r = (0, v['default'])(e).getInstance()
      var n = undefined,
        i = undefined,
        s = undefined,
        u = undefined,
        f = undefined,
        c = undefined,
        p = undefined,
        g = undefined,
        y = undefined,
        _ = undefined,
        T = undefined,
        b = undefined,
        w = undefined,
        I = undefined,
        R = undefined,
        M = undefined,
        B = undefined,
        j = undefined,
        G = undefined,
        q = undefined,
        H = undefined,
        V = undefined,
        K = undefined,
        Y = undefined,
        W = undefined,
        z = undefined,
        X = undefined,
        $ = undefined,
        Q = undefined,
        J = undefined
      function Z() {
        i = t.getLogger(n)
        ne()
      }
      function ee(t, n) {
        Y[t] = (0, A['default'])(e).create()
        _[t] = n
        T[t] = T[t] || {}
        T[t].state = L
        X[t] = false
        r.on(m['default'].LOADING_PROGRESS, Qe, this)
        if (t == o['default'].VIDEO) {
          r.on(m['default'].QUALITY_CHANGE_RENDERED, oe, this)
          W = (0, C['default'])(e).create()
          Xe()
        }
        r.on(m['default'].METRIC_ADDED, ue, this)
        r.on(m['default'].PERIOD_SWITCH_COMPLETED, re, this)
        z = (0, D['default'])(e).create({ mediaPlayerModel: H })
      }
      function te(e) {
        delete _[e]
      }
      function re() {
        s = (0, a['default'])(e).create({
          metricsModel: $,
          dashMetrics: Q,
          mediaPlayerModel: H,
          adapter: G,
        })
        s.initialize()
      }
      function ne() {
        f = { video: true, audio: true }
        c = {}
        p = {}
        g = {}
        y = {}
        T = {}
        _ = {}
        Y = {}
        X = {}
        w = false
        J = true
        I = false
        if (R === undefined) {
          R = false
        }
        K = undefined
        W = undefined
        z = undefined
        clearTimeout(b)
        b = null
      }
      function ie() {
        ne()
        r.off(m['default'].LOADING_PROGRESS, Qe, this)
        r.off(m['default'].QUALITY_CHANGE_RENDERED, oe, this)
        r.off(m['default'].METRIC_ADDED, ue, this)
        r.off(m['default'].PERIOD_SWITCH_COMPLETED, re, this)
        if (s) {
          s.reset()
        }
      }
      function ae(e) {
        if (!e) return
        if (e.streamController) {
          u = e.streamController
        }
        if (e.domStorage) {
          V = e.domStorage
        }
        if (e.mediaPlayerModel) {
          H = e.mediaPlayerModel
        }
        if (e.metricsModel) {
          $ = e.metricsModel
        }
        if (e.dashMetrics) {
          Q = e.dashMetrics
        }
        if (e.adapter) {
          G = e.adapter
        }
        if (e.manifestModel) {
          j = e.manifestModel
        }
        if (e.videoModel) {
          q = e.videoModel
        }
      }
      function se() {
        if (!V || !V.hasOwnProperty('getSavedBitrateSettings')) {
          throw new Error(o['default'].MISSING_CONFIG_ERROR)
        }
      }
      function oe(e) {
        if (e.mediaType === o['default'].VIDEO) {
          K = e.oldQuality
          W.push(K, q.getPlaybackQuality())
        }
      }
      function ue(e) {
        if (
          e.metric === l['default'].HTTP_REQUEST &&
          e.value &&
          e.value.type === O.HTTPRequest.MEDIA_SEGMENT_TYPE &&
          (e.mediaType === o['default'].AUDIO || e.mediaType === o['default'].VIDEO)
        ) {
          z.push(e.mediaType, e.value, J)
        }
        if (
          e.metric === l['default'].BUFFER_LEVEL &&
          (e.mediaType === o['default'].AUDIO || e.mediaType === o['default'].VIDEO)
        ) {
          Ue(e.mediaType, 0.001 * e.value.level)
        }
      }
      function le(e, t) {
        var r = undefined
        c[t] = c[t] || {}
        if (!c[t].hasOwnProperty(e)) {
          c[t][e] = 0
        }
        r = Ye(c[t][e], e)
        r = We(r, e, c[t][e])
        r = $e(r, e)
        return r
      }
      function fe(e) {
        if (e && _ && _[e]) {
          var t = _[e].getStreamInfo()
          if (t && t.id) {
            var r = le(e, t.id)
            var n = Fe(_[e].getMediaInfo())
            return n[r] ? n[r] : null
          }
        }
        return null
      }
      function de(e) {
        se()
        var t = V.getSavedBitrateSettings(e)
        if (!g.hasOwnProperty(e)) {
          if (y.hasOwnProperty(e)) {
            var r = j.getValue()
            var n = G.getAdaptationForType(r, 0, e).Representation
            if (Array.isArray(n)) {
              var i = Math.max(Math.round(n.length * y[e]) - 1, 0)
              g[e] = n[i].bandwidth
            } else {
              g[e] = 0
            }
          } else if (!isNaN(t)) {
            g[e] = t
          } else {
            g[e] = e === o['default'].VIDEO ? x : F
          }
        }
        return g[e]
      }
      function ce(e, t) {
        ;(0, P.checkIsVideoOrAudioType)(e)
        ;(0, P.checkParameterType)(t, 'number')
        g[e] = t
      }
      function he(e) {
        if (!y.hasOwnProperty(e)) {
          return null
        }
        return y[e]
      }
      function pe(e, t) {
        y[e] = t
      }
      function ve(e) {
        if (g.hasOwnProperty('max') && g.max.hasOwnProperty(e)) {
          return g.max[e]
        }
        return NaN
      }
      function ge(e) {
        if (g.hasOwnProperty('min') && g.min.hasOwnProperty(e)) {
          return g.min[e]
        }
        return NaN
      }
      function me(e, t) {
        ;(0, P.checkParameterType)(t, 'number')
        ;(0, P.checkIsVideoOrAudioType)(e)
        g.max = g.max || {}
        g.max[e] = t
      }
      function ye(e, t) {
        ;(0, P.checkParameterType)(t, 'number')
        ;(0, P.checkIsVideoOrAudioType)(e)
        g.min = g.min || {}
        g.min[e] = t
      }
      function _e(e) {
        var t = ve(e)
        if (t) {
          return xe(_[e].getMediaInfo(), t)
        } else {
          return undefined
        }
      }
      function Te(e) {
        var t = ge(e)
        if (t) {
          var r = _[e].getMediaInfo()
          var n = Fe(r)
          var i = xe(r, t)
          if (n[i] && i < n.length - 1 && n[i].bitrate < t * 1e3) {
            i++
          }
          return i
        } else {
          return undefined
        }
      }
      function Ee(e) {
        if (y.hasOwnProperty('max') && y.max.hasOwnProperty(e)) {
          return y.max[e]
        }
        return 1
      }
      function be(e, t) {
        y.max = y.max || {}
        y.max[e] = t
      }
      function Se(e) {
        return f[e]
      }
      function we(e, t) {
        ;(0, P.checkParameterType)(t, 'boolean')
        ;(0, P.checkIsVideoOrAudioType)(e)
        f[e] = t
      }
      function Ae() {
        return w
      }
      function Ie(e) {
        ;(0, P.checkParameterType)(e, 'boolean')
        w = e
      }
      function Ce() {
        return I
      }
      function Re(e) {
        ;(0, P.checkParameterType)(e, 'boolean')
        I = e
      }
      function De() {
        return J
      }
      function Oe(e) {
        ;(0, P.checkParameterType)(e, 'boolean')
        J = e
      }
      function Me(r) {
        if (r && _ && _[r]) {
          var a = _[r].getStreamInfo()
          var o = a ? a.id : null
          var u = He(r)
          var l = (0, E['default'])(e).create({
            abrController: n,
            streamProcessor: _[r],
            currentValue: u,
            switchHistory: Y[r],
            droppedFramesHistory: W,
            useBufferOccupancyABR: Be(r),
          })
          if (W) {
            var f = q.getPlaybackQuality()
            if (f) {
              W.push(K, f)
            }
          }
          if (Se(r)) {
            var d = Te(r)
            var c = le(r, o)
            var h = s.getMaxQuality(l)
            var p = h.quality
            if (d !== undefined && p < d) {
              p = d
            }
            if (p > c) {
              p = c
            }
            Y[r].push({ oldValue: u, newValue: p })
            if (p > S['default'].NO_CHANGE && p != u) {
              if (T[r].state === L || p > u) {
                Pe(r, u, p, c, h.reason)
              }
            } else if (t.getLogToBrowserConsole()) {
              var v = Q.getCurrentBufferLevel($.getReadOnlyMetricsFor(r))
              i.debug('AbrController (' + r + ') stay on ' + u + '/' + c + ' (buffer: ' + v + ')')
            }
          }
        }
      }
      function ke(e, t, r, n) {
        var i = t.id
        var a = He(e)
        ;(0, P.checkInteger)(r)
        var s = le(e, i)
        if (r !== a && r >= 0 && r <= s) {
          Pe(e, a, r, s, n)
        }
      }
      function Pe(e, n, a, s, o) {
        if (e && _[e]) {
          var u = _[e].getStreamInfo()
          var l = u ? u.id : null
          if (t.getLogToBrowserConsole()) {
            var f = Q.getCurrentBufferLevel($.getReadOnlyMetricsFor(e))
            i.info(
              'AbrController (' +
                e +
                ') switch from ' +
                n +
                ' to ' +
                a +
                '/' +
                s +
                ' (buffer: ' +
                f +
                ') ' +
                (o ? JSON.stringify(o) : '.')
            )
          }
          Ve(e, l, a)
          r.trigger(m['default'].QUALITY_CHANGE_REQUESTED, {
            mediaType: e,
            streamInfo: u,
            oldQuality: n,
            newQuality: a,
            reason: o,
          })
        }
      }
      function Ne(e, t) {
        T[e].state = t
      }
      function Le(e) {
        return T[e] ? T[e].state : null
      }
      function xe(e, t, r) {
        var n = e && e.type ? _[e.type].getRepresentationInfo() : null
        if (J && r && n && n.fragmentDuration) {
          r = r / 1e3
          var i = n.fragmentDuration
          if (r > i) {
            return 0
          } else {
            var a = r / i
            t = t * (1 - a)
          }
        }
        var s = Fe(e)
        for (var o = s.length - 1; o >= 0; o--) {
          var u = s[o]
          if (t * 1e3 >= u.bitrate) {
            return o
          }
        }
        return U
      }
      function Fe(e) {
        var t = []
        if (!e || !e.bitrateList) return t
        var r = e.bitrateList
        var n = e.type
        var i = undefined
        for (var a = 0, s = r.length; a < s; a++) {
          i = new d['default']()
          i.mediaType = n
          i.qualityIndex = a
          i.bitrate = r[a].bandwidth
          i.width = r[a].width
          i.height = r[a].height
          i.scanType = r[a].scanType
          t.push(i)
        }
        return t
      }
      function Ue(e, t) {
        var r = H.getABRStrategy()
        if (r === o['default'].ABR_STRATEGY_BOLA) {
          X[e] = true
          return
        } else if (r === o['default'].ABR_STRATEGY_THROUGHPUT) {
          X[e] = false
          return
        }
        var n = H.getStableBufferTime()
        var a = n
        var s = 0.5 * n
        var u = X[e]
        var l = t > (u ? s : a)
        X[e] = l
        if (l !== u) {
          if (l) {
            i.info(
              'AbrController (' +
                e +
                ') switching from throughput to buffer occupancy ABR rule (buffer: ' +
                t.toFixed(3) +
                ').'
            )
          } else {
            i.info(
              'AbrController (' +
                e +
                ') switching from buffer occupancy to throughput ABR rule (buffer: ' +
                t.toFixed(3) +
                ').'
            )
          }
        }
      }
      function Be(e) {
        return X[e]
      }
      function je() {
        return z
      }
      function Ge(e) {
        var t = e.type
        var r = e.streamInfo.id
        var n = e.representationCount - 1
        Ke(t, r, n)
        return n
      }
      function qe(e) {
        var t = e ? e.id : null
        var r = He(o['default'].AUDIO)
        var n = He(o['default'].VIDEO)
        var i = r === le(o['default'].AUDIO, t) && n === le(o['default'].VIDEO, t)
        return i
      }
      function He(e) {
        if (e && _[e]) {
          var t = _[e].getStreamInfo()
          var r = t ? t.id : null
          var n = undefined
          if (r) {
            p[r] = p[r] || {}
            if (!p[r].hasOwnProperty(e)) {
              p[r][e] = U
            }
            n = p[r][e]
            return n
          }
        }
        return U
      }
      function Ve(e, t, r) {
        p[t] = p[t] || {}
        p[t][e] = r
      }
      function Ke(e, t, r) {
        c[t] = c[t] || {}
        c[t][e] = r
      }
      function Ye(e, t) {
        var r = e
        if (!_[t]) {
          return r
        }
        var n = Te(t)
        if (n !== undefined) {
          r = Math.max(e, n)
        }
        var i = _e(t)
        if (i !== undefined) {
          r = Math.min(r, i)
        }
        return r
      }
      function We(e, t, r) {
        var n = Ee(t)
        if (isNaN(n) || n >= 1 || n < 0) {
          return e
        }
        return Math.min(e, Math.round(r * n))
      }
      function ze(e) {
        R = e
      }
      function Xe() {
        if (q) {
          var e = I && window.hasOwnProperty('devicePixelRatio')
          var t = e ? window.devicePixelRatio : 1
          M = q.getClientWidth() * t
          B = q.getClientHeight() * t
        }
      }
      function $e(e, t) {
        if (t !== o['default'].VIDEO || !w || !_[t]) {
          return e
        }
        if (!R) {
          Xe()
        }
        var r = j.getValue()
        var n = G.getAdaptationForType(r, 0, t).Representation
        var i = e
        if (M > 0 && B > 0) {
          while (i > 0 && n[i] && M < n[i].width && M - n[i - 1].width < n[i].width - M) {
            i = i - 1
          }
          if (n.length - 2 >= i && n[i].width === n[i + 1].width) {
            i = Math.min(e, i + 1)
          }
        }
        return i
      }
      function Qe(t) {
        var r = t.request.mediaType
        if (Se(r)) {
          var i = _[r]
          if (!i) return
          var a = (0, E['default'])(e).create({
            abrController: n,
            streamProcessor: i,
            currentRequest: t.request,
            useBufferOccupancyABR: Be(r),
          })
          var o = s.shouldAbandonFragment(a)
          if (o.quality > S['default'].NO_CHANGE) {
            var l = i.getFragmentModel()
            var f = l.getRequests({
              state: h['default'].FRAGMENT_MODEL_LOADING,
              index: t.request.index,
            })[0]
            if (f) {
              l.abortRequests()
              Ne(r, N)
              Y[r].reset()
              Y[r].push({
                oldValue: He(r, u.getActiveStreamInfo()),
                newValue: o.quality,
                confidence: 1,
                reason: o.reason,
              })
              ke(r, u.getActiveStreamInfo(), o.quality, o.reason)
              clearTimeout(b)
              b = setTimeout(function() {
                Ne(r, L)
                b = null
              }, H.getAbandonLoadTimeout())
            }
          }
        }
      }
      n = {
        isPlayingAtTopQuality: qe,
        updateTopQualityIndex: Ge,
        getThroughputHistory: je,
        getBitrateList: Fe,
        getQualityForBitrate: xe,
        getMaxAllowedBitrateFor: ve,
        getTopBitrateInfoFor: fe,
        getMinAllowedBitrateFor: ge,
        setMaxAllowedBitrateFor: me,
        setMinAllowedBitrateFor: ye,
        getMaxAllowedIndexFor: _e,
        getMinAllowedIndexFor: Te,
        getMaxAllowedRepresentationRatioFor: Ee,
        setMaxAllowedRepresentationRatioFor: be,
        getInitialBitrateFor: de,
        setInitialBitrateFor: ce,
        getInitialRepresentationRatioFor: he,
        setInitialRepresentationRatioFor: pe,
        setAutoSwitchBitrateFor: we,
        getAutoSwitchBitrateFor: Se,
        getUseDeadTimeLatency: De,
        setUseDeadTimeLatency: Oe,
        setLimitBitrateByPortal: Ie,
        getLimitBitrateByPortal: Ae,
        getUsePixelRatioInLimitBitrateByPortal: Ce,
        setUsePixelRatioInLimitBitrateByPortal: Re,
        getQualityFor: He,
        getAbandonmentStateFor: Le,
        setPlaybackQuality: ke,
        checkPlaybackQuality: Me,
        getTopQualityIndexFor: le,
        setElementSize: Xe,
        setWindowResizeEventCalled: ze,
        createAbrRulesCollection: re,
        registerStreamType: ee,
        unRegisterStreamType: te,
        setConfig: ae,
        reset: ie,
      }
      Z()
      return n
    }
    B.__dashjs_factory_name = 'AbrController'
    var j = _['default'].getSingletonFactory(B)
    j.ABANDON_LOAD = N
    j.QUALITY_DEFAULT = U
    _['default'].updateSingletonFactory(B.__dashjs_factory_name, j)
    t['default'] = j
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(42)
    var u = i(o)
    var l = (function(e) {
      s(t, e)
      function t() {
        a(this, t)
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(this)
        this.METRICS_INITIALISATION_COMPLETE = 'internal_metricsReportingInitialized'
        this.BECAME_REPORTING_PLAYER = 'internal_becameReportingPlayer'
      }
      return t
    })(u['default'])
    var f = new l()
    t['default'] = f
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(2)
    var a = n(i)
    var s = r(4)
    var o = n(s)
    var u = r(0)
    var l = n(u)
    var f = r(21)
    var d = n(f)
    var c = r(1)
    var h = n(c)
    var p = 'loading'
    var v = 'executed'
    var g = 'canceled'
    var m = 'failed'
    function y(e) {
      e = e || {}
      var t = this.context
      var r = (0, a['default'])(t).getInstance()
      var n = e.metricsModel
      var i = e.fragmentLoader
      var s = undefined,
        u = undefined,
        l = undefined,
        f = undefined,
        c = undefined
      function g() {
        u = (0, h['default'])(t)
          .getInstance()
          .getLogger(s)
        U()
        r.on(o['default'].LOADING_COMPLETED, L, s)
        r.on(o['default'].LOADING_DATA_PROGRESS, x, s)
        r.on(o['default'].LOADING_ABANDONED, F, s)
      }
      function y(e) {
        l = e
      }
      function _() {
        return l
      }
      function T(e) {
        var t = function e(t, r) {
          return t.action === d['default'].ACTION_COMPLETE && t.action === r.action
        }
        var r = function e(t, r) {
          return (
            !isNaN(t.index) &&
            t.startTime === r.startTime &&
            t.adaptationIndex === r.adaptationIndex &&
            t.type === r.type
          )
        }
        var n = function e(t, r) {
          return isNaN(t.index) && isNaN(r.index) && t.quality === r.quality
        }
        var i = function i(a) {
          var s = false
          a.some(function(i) {
            if (r(e, i) || n(e, i) || t(e, i)) {
              s = true
              return s
            }
          })
          return s
        }
        if (!e) {
          return false
        }
        return i(f)
      }
      function E(e) {
        var t = false
        var r = 0
        var n = undefined
        t = T(e)
        if (!t) {
          for (r = 0; r < c.length; r++) {
            n = c[r]
            if (e.url === n.url && e.startTime === n.startTime) {
              t = true
            }
          }
        }
        return t
      }
      function b(e) {
        var t = e ? (e.state instanceof Array ? e.state : [e.state]) : []
        var r = []
        t.forEach(function(t) {
          var n = P(t)
          r = r.concat(k(n, e))
        })
        return r
      }
      function S(e) {
        return isNaN(e.duration) ? 0.25 : Math.min(e.duration / 8, 0.5)
      }
      function w(e) {
        f = f.filter(function(t) {
          var r = S(t)
          return isNaN(t.startTime) || (e !== undefined ? t.startTime >= e - r : false)
        })
      }
      function A(e) {
        f = f.filter(function(t) {
          return isNaN(t.startTime) || (e !== undefined ? t.startTime + t.duration < e : false)
        })
      }
      function I(e, t) {
        if (t <= e + 0.5) {
          return
        }
        f = f.filter(function(r) {
          var n = S(r)
          return (
            isNaN(r.startTime) ||
            r.startTime >= t - n ||
            isNaN(r.duration) ||
            r.startTime + r.duration <= e + n
          )
        })
      }
      function C(e, t) {
        if (!e || e.length === 0) {
          w()
          return
        }
        var r = 0
        for (var n = 0, i = e.length; n < i; n++) {
          I(r, e.start(n))
          r = e.end(n)
        }
        if (t > 0) {
          I(r, t)
        }
      }
      function R() {
        i.abort()
        c = []
      }
      function D(e) {
        switch (e.action) {
          case d['default'].ACTION_COMPLETE:
            f.push(e)
            N(e, v)
            u.debug('executeRequest trigger STREAM_COMPLETED')
            r.trigger(o['default'].STREAM_COMPLETED, { request: e, fragmentModel: this })
            break
          case d['default'].ACTION_DOWNLOAD:
            N(e, p)
            c.push(e)
            O(e)
            break
          default:
            u.warn('Unknown request action.')
        }
      }
      function O(e) {
        r.trigger(o['default'].FRAGMENT_LOADING_STARTED, { sender: s, request: e })
        i.load(e)
      }
      function M(e, t, r) {
        var n = e.length - 1
        for (var i = n; i >= 0; i--) {
          var a = e[i]
          var s = a.startTime
          var o = s + a.duration
          r = !isNaN(r) ? r : S(a)
          if ((!isNaN(s) && !isNaN(o) && t + r >= s && t - r < o) || (isNaN(s) && isNaN(t))) {
            return a
          }
        }
        return null
      }
      function k(e, t) {
        if (t.hasOwnProperty('time')) {
          return [M(e, t.time, t.threshold)]
        }
        return e.filter(function(e) {
          for (var r in t) {
            if (r === 'state') continue
            if (t.hasOwnProperty(r) && e[r] != t[r]) return false
          }
          return true
        })
      }
      function P(e) {
        var t = undefined
        switch (e) {
          case p:
            t = c
            break
          case v:
            t = f
            break
          default:
            t = []
        }
        return t
      }
      function N(e, t) {
        n.addSchedulingInfo(
          e.mediaType,
          new Date(),
          e.type,
          e.startTime,
          e.availabilityStartTime,
          e.duration,
          e.quality,
          e.range,
          t
        )
        n.addRequestsQueue(e.mediaType, c, f)
      }
      function L(e) {
        if (e.sender !== i) return
        c.splice(c.indexOf(e.request), 1)
        if (e.response && !e.error) {
          f.push(e.request)
        }
        N(e.request, e.error ? m : v)
        r.trigger(o['default'].FRAGMENT_LOADING_COMPLETED, {
          request: e.request,
          response: e.response,
          error: e.error,
          sender: this,
        })
      }
      function x(e) {
        if (e.sender !== i) return
        r.trigger(o['default'].FRAGMENT_LOADING_PROGRESS, {
          request: e.request,
          response: e.response,
          error: e.error,
          sender: this,
        })
      }
      function F(e) {
        if (e.sender !== i) return
        r.trigger(o['default'].FRAGMENT_LOADING_ABANDONED, {
          streamProcessor: this.getStreamProcessor(),
          request: e.request,
          mediaType: e.mediaType,
        })
      }
      function U() {
        f = []
        c = []
      }
      function B() {
        r.off(o['default'].LOADING_COMPLETED, L, this)
        r.off(o['default'].LOADING_DATA_PROGRESS, x, this)
        r.off(o['default'].LOADING_ABANDONED, F, this)
        if (i) {
          i.reset()
        }
        U()
      }
      function j(e) {
        f.push(e)
      }
      s = {
        setStreamProcessor: y,
        getStreamProcessor: _,
        getRequests: b,
        isFragmentLoaded: T,
        isFragmentLoadedOrPending: E,
        removeExecutedRequestsBeforeTime: w,
        removeExecutedRequestsAfterTime: A,
        syncExecutedRequestsWithBufferedRange: C,
        abortRequests: R,
        executeRequest: D,
        reset: B,
        addExecutedRequest: j,
      }
      g()
      return s
    }
    y.__dashjs_factory_name = 'FragmentModel'
    var _ = l['default'].getClassFactory(y)
    _.FRAGMENT_MODEL_LOADING = p
    _.FRAGMENT_MODEL_EXECUTED = v
    _.FRAGMENT_MODEL_CANCELED = g
    _.FRAGMENT_MODEL_FAILED = m
    l['default'].updateClassFactory(y.__dashjs_factory_name, _)
    t['default'] = _
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(26)
    var a = n(i)
    var s = r(258)
    var o = n(s)
    var u = r(260)
    var l = n(u)
    var f = r(261)
    var d = n(f)
    var c = r(259)
    var h = n(c)
    var p = r(266)
    var v = n(p)
    var g = r(267)
    var m = n(g)
    var y = r(268)
    var _ = n(y)
    var T = r(265)
    var E = n(T)
    var b = r(19)
    var S = n(b)
    function w() {
      var e = this.context
      var t = undefined,
        r = undefined,
        n = undefined,
        i = undefined,
        s = undefined,
        u = undefined,
        f = undefined
      function c(e) {
        if (!e) return
        if (e.debug) {
          r = e.debug
          n = r.getLogger(t)
        }
        if (e.BASE64) {
          s = e.BASE64
        }
      }
      function p() {
        i = []
        var t = undefined
        t = (0, h['default'])(e).getInstance({ BASE64: s })
        i.push(t)
        t = (0, d['default'])(e).getInstance({ BASE64: s })
        i.push(t)
        t = (0, o['default'])(e).getInstance({ BASE64: s })
        i.push(t)
        u = t
        t = (0, l['default'])(e).getInstance({ BASE64: s, debug: r })
        i.push(t)
        f = t
      }
      function g() {
        return i
      }
      function y(e) {
        for (var t = 0; t < i.length; t++) {
          if (i[t].systemString === e) {
            return i[t]
          }
        }
        return null
      }
      function T(e) {
        return e === u || e === f
      }
      function b(e, t) {
        if (e.byteLength === t.byteLength) {
          var r = new Uint8Array(e)
          var n = new Uint8Array(t)
          for (var i = 0; i < r.length; i++) {
            if (r[i] !== n[i]) {
              return false
            }
          }
          return true
        }
        return false
      }
      function w(e) {
        var t = undefined,
          r = undefined,
          n = undefined,
          a = undefined
        var s = []
        if (e) {
          for (n = 0; n < i.length; ++n) {
            r = i[n]
            for (a = 0; a < e.length; ++a) {
              t = e[a]
              if (t.schemeIdUri.toLowerCase() === r.schemeIdURI) {
                var o = r.getInitData(t)
                if (!!o) {
                  s.push({
                    ks: i[n],
                    initData: o,
                    cdmData: r.getCDMData(),
                    sessionId: r.getSessionId(t),
                  })
                } else if (this.isClearKey(r)) {
                  s.push({ ks: r, initData: null })
                }
              }
            }
          }
        }
        return s
      }
      function A(e, t) {
        var r = []
        var n = a['default'].parsePSSHList(e)
        var s = undefined,
          o = undefined,
          u = undefined
        for (var l = 0; l < i.length; ++l) {
          s = i[l]
          o = s.systemString
          u = t ? o in t : true
          if (s.uuid in n && u) {
            r.push({
              ks: s,
              initData: n[s.uuid],
              cdmData: s.getCDMData(),
              sessionId: s.getSessionId(),
            })
          }
        }
        return r
      }
      function I(t, r, n) {
        if (n === 'license-release' || n === 'individualization-request') {
          return null
        }
        var i = null
        if (r && r.hasOwnProperty('drmtoday')) {
          i = (0, v['default'])(e).getInstance({ BASE64: s })
        } else if (t.systemString === S['default'].WIDEVINE_KEYSTEM_STRING) {
          i = (0, _['default'])(e).getInstance()
        } else if (t.systemString === S['default'].PLAYREADY_KEYSTEM_STRING) {
          i = (0, m['default'])(e).getInstance()
        } else if (t.systemString === S['default'].CLEARKEY_KEYSTEM_STRING) {
          i = (0, E['default'])(e).getInstance()
        }
        return i
      }
      function C(e, t, r) {
        try {
          return e.getClearKeysFromProtectionData(t, r)
        } catch (e) {
          n.error('Failed to retrieve clearkeys from ProtectionData')
          return null
        }
      }
      function R(e) {
        var t = function t(r) {
          var n = null
          if (e) {
            n = r in e ? e[r] : null
          }
          return n
        }
        for (var r = 0; r < i.length; r++) {
          var n = i[r]
          if (n.hasOwnProperty('init')) {
            n.init(t(n.systemString))
          }
        }
      }
      t = {
        initialize: p,
        setProtectionData: R,
        isClearKey: T,
        initDataEquals: b,
        getKeySystems: g,
        getKeySystemBySystemString: y,
        getSupportedKeySystemsFromContentProtection: w,
        getSupportedKeySystems: A,
        getLicenseServer: I,
        processClearKeyLicenseRequest: C,
        setConfig: c,
      }
      return t
    }
    w.__dashjs_factory_name = 'ProtectionKeyController'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(w)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    function s() {
      var e = undefined
      function t(e) {
        return e
      }
      function r(e) {
        return e
      }
      e = { modifyRequestURL: t, modifyRequestHeader: r }
      return e
    }
    s.__dashjs_factory_name = 'RequestModifier'
    t['default'] = a['default'].getSingletonFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    ;(function(e) {
      e.ns_tt = 'http://www.w3.org/ns/ttml'
      e.ns_tts = 'http://www.w3.org/ns/ttml#styling'
      e.ns_ttp = 'http://www.w3.org/ns/ttml#parameter'
      e.ns_xml = 'http://www.w3.org/XML/1998/namespace'
      e.ns_itts = 'http://www.w3.org/ns/ttml/profile/imsc1#styling'
      e.ns_ittp = 'http://www.w3.org/ns/ttml/profile/imsc1#parameter'
      e.ns_smpte = 'http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt'
      e.ns_ebutts = 'urn:ebu:tt:style'
    })(false ? (this.imscNames = {}) : t)
  },
  function(e, t, r) {
    ;(function(e) {
      var t = /#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?/
      var r = /rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/
      var n = /rgba\(\s*(\d+),\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/
      var i = {
        transparent: [0, 0, 0, 0],
        black: [0, 0, 0, 255],
        silver: [192, 192, 192, 255],
        gray: [128, 128, 128, 255],
        white: [255, 255, 255, 255],
        maroon: [128, 0, 0, 255],
        red: [255, 0, 0, 255],
        purple: [128, 0, 128, 255],
        fuchsia: [255, 0, 255, 255],
        magenta: [255, 0, 255, 255],
        green: [0, 128, 0, 255],
        lime: [0, 255, 0, 255],
        olive: [128, 128, 0, 255],
        yellow: [255, 255, 0, 255],
        navy: [0, 0, 128, 255],
        blue: [0, 0, 255, 255],
        teal: [0, 128, 128, 255],
        aqua: [0, 255, 255, 255],
        cyan: [0, 255, 255, 255],
      }
      e.parseColor = function(e) {
        var a
        var s = null
        var o = i[e.toLowerCase()]
        if (o !== undefined) {
          s = o
        } else if ((a = t.exec(e)) !== null) {
          s = [
            parseInt(a[1], 16),
            parseInt(a[2], 16),
            parseInt(a[3], 16),
            a[4] !== undefined ? parseInt(a[4], 16) : 255,
          ]
        } else if ((a = r.exec(e)) !== null) {
          s = [parseInt(a[1]), parseInt(a[2]), parseInt(a[3]), 255]
        } else if ((a = n.exec(e)) !== null) {
          s = [parseInt(a[1]), parseInt(a[2]), parseInt(a[3]), parseInt(a[4])]
        }
        return s
      }
      var a = /^((?:\+|\-)?\d*(?:\.\d+)?)(px|em|c|%|rh|rw)$/
      e.parseLength = function(e) {
        var t
        var r = null
        if ((t = a.exec(e)) !== null) {
          r = { value: parseFloat(t[1]), unit: t[2] }
        }
        return r
      }
      e.parseTextShadow = function(t) {
        var r = t.split(',')
        var n = []
        for (var i in r) {
          var a = r[i].split(' ')
          if (a.length === 1 && a[0] === 'none') {
            return 'none'
          } else if (a.length > 1 && a.length < 5) {
            var s = [null, null, null, null]
            var o = e.parseLength(a.shift())
            if (o === null) return null
            s[0] = o
            o = e.parseLength(a.shift())
            if (o === null) return null
            s[1] = o
            if (a.length === 0) {
              n.push(s)
              continue
            }
            o = e.parseLength(a[0])
            if (o !== null) {
              s[2] = o
              a.shift()
            }
            if (a.length === 0) {
              n.push(s)
              continue
            }
            var u = e.parseColor(a[0])
            if (u === null) return null
            s[3] = u
            n.push(s)
          }
        }
        return n
      }
      e.parsePosition = function(t) {
        var r = t.split(' ')
        var n = function(e) {
          return e === 'center' || e === 'left' || e === 'top' || e === 'bottom' || e === 'right'
        }
        if (r.length > 4) {
          return null
        }
        for (var i in r) {
          if (!n(r[i])) {
            var a = e.parseLength(r[i])
            if (a === null) return null
            r[i] = a
          }
        }
        var s = {
          h: { edge: 'left', offset: { value: 50, unit: '%' } },
          v: { edge: 'top', offset: { value: 50, unit: '%' } },
        }
        for (var o = 0; o < r.length; ) {
          var u = r[o++]
          if (n(u)) {
            var l = { value: 0, unit: '%' }
            if (r.length !== 2 && o < r.length && !n(r[o])) {
              l = r[o++]
            }
            if (u === 'right') {
              s.h.edge = u
              s.h.offset = l
            } else if (u === 'bottom') {
              s.v.edge = u
              s.v.offset = l
            } else if (u === 'left') {
              s.h.offset = l
            } else if (u === 'top') {
              s.v.offset = l
            }
          } else if (r.length === 1 || r.length === 2) {
            if (o === 1) {
              s.h.offset = u
            } else {
              s.v.offset = u
            }
          } else {
            return null
          }
        }
        return s
      }
      e.ComputedLength = function(e, t) {
        this.rw = e
        this.rh = t
      }
      e.ComputedLength.prototype.toUsedLength = function(e, t) {
        return e * this.rw + t * this.rh
      }
      e.ComputedLength.prototype.isZero = function() {
        return this.rw === 0 && this.rh === 0
      }
      e.toComputedLength = function(t, r, n, i, a, s) {
        if (r === '%' && i) {
          return new e.ComputedLength((i.rw * t) / 100, (i.rh * t) / 100)
        } else if (r === 'em' && n) {
          return new e.ComputedLength(n.rw * t, n.rh * t)
        } else if (r === 'c' && a) {
          return new e.ComputedLength(t * a.rw, t * a.rh)
        } else if (r === 'px' && s) {
          return new e.ComputedLength(t * s.rw, t * s.rh)
        } else if (r === 'rh') {
          return new e.ComputedLength(0, t / 100)
        } else if (r === 'rw') {
          return new e.ComputedLength(t / 100, 0)
        } else {
          return null
        }
      }
    })(false ? (this.imscUtils = {}) : t)
  },
  function(e, t, r) {
    'use strict'
    ;(function(t) {
      if (
        typeof t === 'undefined' ||
        !t.version ||
        t.version.indexOf('v0.') === 0 ||
        (t.version.indexOf('v1.') === 0 && t.version.indexOf('v1.8.') !== 0)
      ) {
        e.exports = { nextTick: r }
      } else {
        e.exports = t
      }
      function r(e, r, n, i) {
        if (typeof e !== 'function') {
          throw new TypeError('"callback" argument must be a function')
        }
        var a = arguments.length
        var s, o
        switch (a) {
          case 0:
          case 1:
            return t.nextTick(e)
          case 2:
            return t.nextTick(function t() {
              e.call(null, r)
            })
          case 3:
            return t.nextTick(function t() {
              e.call(null, r, n)
            })
          case 4:
            return t.nextTick(function t() {
              e.call(null, r, n, i)
            })
          default:
            s = new Array(a - 1)
            o = 0
            while (o < s.length) {
              s[o++] = arguments[o]
            }
            return t.nextTick(function t() {
              e.apply(null, s)
            })
        }
      }
    }.call(t, r(52)))
  },
  function(e, t) {
    var r = (e.exports = {})
    var n
    var i
    function a() {
      throw new Error('setTimeout has not been defined')
    }
    function s() {
      throw new Error('clearTimeout has not been defined')
    }
    ;(function() {
      try {
        if (typeof setTimeout === 'function') {
          n = setTimeout
        } else {
          n = a
        }
      } catch (e) {
        n = a
      }
      try {
        if (typeof clearTimeout === 'function') {
          i = clearTimeout
        } else {
          i = s
        }
      } catch (e) {
        i = s
      }
    })()
    function o(e) {
      if (n === setTimeout) {
        return setTimeout(e, 0)
      }
      if ((n === a || !n) && setTimeout) {
        n = setTimeout
        return setTimeout(e, 0)
      }
      try {
        return n(e, 0)
      } catch (t) {
        try {
          return n.call(null, e, 0)
        } catch (t) {
          return n.call(this, e, 0)
        }
      }
    }
    function u(e) {
      if (i === clearTimeout) {
        return clearTimeout(e)
      }
      if ((i === s || !i) && clearTimeout) {
        i = clearTimeout
        return clearTimeout(e)
      }
      try {
        return i(e)
      } catch (t) {
        try {
          return i.call(null, e)
        } catch (t) {
          return i.call(this, e)
        }
      }
    }
    var l = []
    var f = false
    var d
    var c = -1
    function h() {
      if (!f || !d) {
        return
      }
      f = false
      if (d.length) {
        l = d.concat(l)
      } else {
        c = -1
      }
      if (l.length) {
        p()
      }
    }
    function p() {
      if (f) {
        return
      }
      var e = o(h)
      f = true
      var t = l.length
      while (t) {
        d = l
        l = []
        while (++c < t) {
          if (d) {
            d[c].run()
          }
        }
        c = -1
        t = l.length
      }
      d = null
      f = false
      u(e)
    }
    r.nextTick = function(e) {
      var t = new Array(arguments.length - 1)
      if (arguments.length > 1) {
        for (var r = 1; r < arguments.length; r++) {
          t[r - 1] = arguments[r]
        }
      }
      l.push(new v(e, t))
      if (l.length === 1 && !f) {
        o(p)
      }
    }
    function v(e, t) {
      this.fun = e
      this.array = t
    }
    v.prototype.run = function() {
      this.fun.apply(null, this.array)
    }
    r.title = 'browser'
    r.browser = true
    r.env = {}
    r.argv = []
    r.version = ''
    r.versions = {}
    function g() {}
    r.on = g
    r.addListener = g
    r.once = g
    r.off = g
    r.removeListener = g
    r.removeAllListeners = g
    r.emit = g
    r.prependListener = g
    r.prependOnceListener = g
    r.listeners = function(e) {
      return []
    }
    r.binding = function(e) {
      throw new Error('process.binding is not supported')
    }
    r.cwd = function() {
      return '/'
    }
    r.chdir = function(e) {
      throw new Error('process.chdir is not supported')
    }
    r.umask = function() {
      return 0
    }
  },
  function(e, t, r) {
    ;(function(t) {
      e.exports = t['videojs'] = r(339)
    }.call(t, r(16)))
  },
  function(e, t, r) {
    /*! codem-isoboxer v0.3.6 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */
    var n = {}
    n.parseBuffer = function(e) {
      return new i(e).parse()
    }
    n.addBoxProcessor = function(e, t) {
      if (typeof e !== 'string' || typeof t !== 'function') {
        return
      }
      a.prototype._boxProcessors[e] = t
    }
    n.createFile = function() {
      return new i()
    }
    n.createBox = function(e, t, r) {
      var n = a.create(e)
      if (t) {
        t.append(n, r)
      }
      return n
    }
    n.createFullBox = function(e, t, r) {
      var i = n.createBox(e, t, r)
      i.version = 0
      i.flags = 0
      return i
    }
    n.Utils = {}
    n.Utils.dataViewToString = function(e, t) {
      var r = t || 'utf-8'
      if (typeof TextDecoder !== 'undefined') {
        return new TextDecoder(r).decode(e)
      }
      var n = []
      var i = 0
      if (r === 'utf-8') {
        while (i < e.byteLength) {
          var a = e.getUint8(i++)
          if (a < 128) {
          } else if (a < 224) {
            a = (a & 31) << 6
            a |= e.getUint8(i++) & 63
          } else if (a < 240) {
            a = (a & 15) << 12
            a |= (e.getUint8(i++) & 63) << 6
            a |= e.getUint8(i++) & 63
          } else {
            a = (a & 7) << 18
            a |= (e.getUint8(i++) & 63) << 12
            a |= (e.getUint8(i++) & 63) << 6
            a |= e.getUint8(i++) & 63
          }
          n.push(String.fromCharCode(a))
        }
      } else {
        while (i < e.byteLength) {
          n.push(String.fromCharCode(e.getUint8(i++)))
        }
      }
      return n.join('')
    }
    n.Utils.utf8ToByteArray = function(e) {
      var t, r
      if (typeof TextEncoder !== 'undefined') {
        t = new TextEncoder().encode(e)
      } else {
        t = []
        for (r = 0; r < e.length; ++r) {
          var n = e.charCodeAt(r)
          if (n < 128) {
            t.push(n)
          } else if (n < 2048) {
            t.push(192 | (n >> 6))
            t.push(128 | (63 & n))
          } else if (n < 65536) {
            t.push(224 | (n >> 12))
            t.push(128 | (63 & (n >> 6)))
            t.push(128 | (63 & n))
          } else {
            t.push(240 | (n >> 18))
            t.push(128 | (63 & (n >> 12)))
            t.push(128 | (63 & (n >> 6)))
            t.push(128 | (63 & n))
          }
        }
      }
      return t
    }
    n.Utils.appendBox = function(e, t, r) {
      t._offset = e._cursor.offset
      t._root = e._root ? e._root : e
      t._raw = e._raw
      t._parent = e
      if (r === -1) {
        return
      }
      if (r === undefined || r === null) {
        e.boxes.push(t)
        return
      }
      var n = -1,
        i
      if (typeof r === 'number') {
        n = r
      } else {
        if (typeof r === 'string') {
          i = r
        } else if (typeof r === 'object' && r.type) {
          i = r.type
        } else {
          e.boxes.push(t)
          return
        }
        for (var a = 0; a < e.boxes.length; a++) {
          if (i === e.boxes[a].type) {
            n = a + 1
            break
          }
        }
      }
      e.boxes.splice(n, 0, t)
    }
    if (true) {
      t.parseBuffer = n.parseBuffer
      t.addBoxProcessor = n.addBoxProcessor
      t.createFile = n.createFile
      t.createBox = n.createBox
      t.createFullBox = n.createFullBox
      t.Utils = n.Utils
    }
    n.Cursor = function(e) {
      this.offset = typeof e == 'undefined' ? 0 : e
    }
    var i = function(e) {
      this._cursor = new n.Cursor()
      this.boxes = []
      if (e) {
        this._raw = new DataView(e)
      }
    }
    i.prototype.fetch = function(e) {
      var t = this.fetchAll(e, true)
      return t.length ? t[0] : null
    }
    i.prototype.fetchAll = function(e, t) {
      var r = []
      i._sweep.call(this, e, r, t)
      return r
    }
    i.prototype.parse = function() {
      this._cursor.offset = 0
      this.boxes = []
      while (this._cursor.offset < this._raw.byteLength) {
        var e = a.parse(this)
        if (typeof e.type === 'undefined') break
        this.boxes.push(e)
      }
      return this
    }
    i._sweep = function(e, t, r) {
      if (this.type && this.type == e) t.push(this)
      for (var n in this.boxes) {
        if (t.length && r) return
        i._sweep.call(this.boxes[n], e, t, r)
      }
    }
    i.prototype.write = function() {
      var e = 0,
        t
      for (t = 0; t < this.boxes.length; t++) {
        e += this.boxes[t].getLength(false)
      }
      var r = new Uint8Array(e)
      this._rawo = new DataView(r.buffer)
      this.bytes = r
      this._cursor.offset = 0
      for (t = 0; t < this.boxes.length; t++) {
        this.boxes[t].write()
      }
      return r.buffer
    }
    i.prototype.append = function(e, t) {
      n.Utils.appendBox(this, e, t)
    }
    var a = function() {
      this._cursor = new n.Cursor()
    }
    a.parse = function(e) {
      var t = new a()
      t._offset = e._cursor.offset
      t._root = e._root ? e._root : e
      t._raw = e._raw
      t._parent = e
      t._parseBox()
      e._cursor.offset = t._raw.byteOffset + t._raw.byteLength
      return t
    }
    a.create = function(e) {
      var t = new a()
      t.type = e
      t.boxes = []
      return t
    }
    a.prototype._boxContainers = [
      'dinf',
      'edts',
      'mdia',
      'meco',
      'mfra',
      'minf',
      'moof',
      'moov',
      'mvex',
      'stbl',
      'strk',
      'traf',
      'trak',
      'tref',
      'udta',
      'vttc',
      'sinf',
      'schi',
      'encv',
      'enca',
    ]
    a.prototype._boxProcessors = {}
    a.prototype._procField = function(e, t, r) {
      if (this._parsing) {
        this[e] = this._readField(t, r)
      } else {
        this._writeField(t, r, this[e])
      }
    }
    a.prototype._procFieldArray = function(e, t, r, n) {
      var i
      if (this._parsing) {
        this[e] = []
        for (i = 0; i < t; i++) {
          this[e][i] = this._readField(r, n)
        }
      } else {
        for (i = 0; i < this[e].length; i++) {
          this._writeField(r, n, this[e][i])
        }
      }
    }
    a.prototype._procFullBox = function() {
      this._procField('version', 'uint', 8)
      this._procField('flags', 'uint', 24)
    }
    a.prototype._procEntries = function(e, t, r) {
      var n
      if (this._parsing) {
        this[e] = []
        for (n = 0; n < t; n++) {
          this[e].push({})
          r.call(this, this[e][n])
        }
      } else {
        for (n = 0; n < t; n++) {
          r.call(this, this[e][n])
        }
      }
    }
    a.prototype._procSubEntries = function(e, t, r, n) {
      var i
      if (this._parsing) {
        e[t] = []
        for (i = 0; i < r; i++) {
          e[t].push({})
          n.call(this, e[t][i])
        }
      } else {
        for (i = 0; i < r; i++) {
          n.call(this, e[t][i])
        }
      }
    }
    a.prototype._procEntryField = function(e, t, r, n) {
      if (this._parsing) {
        e[t] = this._readField(r, n)
      } else {
        this._writeField(r, n, e[t])
      }
    }
    a.prototype._procSubBoxes = function(e, t) {
      var r
      if (this._parsing) {
        this[e] = []
        for (r = 0; r < t; r++) {
          this[e].push(a.parse(this))
        }
      } else {
        for (r = 0; r < t; r++) {
          if (this._rawo) {
            this[e][r].write()
          } else {
            this.size += this[e][r].getLength()
          }
        }
      }
    }
    a.prototype._readField = function(e, t) {
      switch (e) {
        case 'uint':
          return this._readUint(t)
        case 'int':
          return this._readInt(t)
        case 'template':
          return this._readTemplate(t)
        case 'string':
          return t === -1 ? this._readTerminatedString() : this._readString(t)
        case 'data':
          return this._readData(t)
        case 'utf8':
          return this._readUTF8String()
        default:
          return -1
      }
    }
    a.prototype._readInt = function(e) {
      var t = null,
        r = this._cursor.offset - this._raw.byteOffset
      switch (e) {
        case 8:
          t = this._raw.getInt8(r)
          break
        case 16:
          t = this._raw.getInt16(r)
          break
        case 32:
          t = this._raw.getInt32(r)
          break
        case 64:
          var n = this._raw.getInt32(r)
          var i = this._raw.getInt32(r + 4)
          t = n * Math.pow(2, 32) + i
          break
      }
      this._cursor.offset += e >> 3
      return t
    }
    a.prototype._readUint = function(e) {
      var t = null,
        r = this._cursor.offset - this._raw.byteOffset,
        n,
        i
      switch (e) {
        case 8:
          t = this._raw.getUint8(r)
          break
        case 16:
          t = this._raw.getUint16(r)
          break
        case 24:
          n = this._raw.getUint16(r)
          i = this._raw.getUint8(r + 2)
          t = (n << 8) + i
          break
        case 32:
          t = this._raw.getUint32(r)
          break
        case 64:
          n = this._raw.getUint32(r)
          i = this._raw.getUint32(r + 4)
          t = n * Math.pow(2, 32) + i
          break
      }
      this._cursor.offset += e >> 3
      return t
    }
    a.prototype._readString = function(e) {
      var t = ''
      for (var r = 0; r < e; r++) {
        var n = this._readUint(8)
        t += String.fromCharCode(n)
      }
      return t
    }
    a.prototype._readTemplate = function(e) {
      var t = this._readUint(e / 2)
      var r = this._readUint(e / 2)
      return t + r / Math.pow(2, e / 2)
    }
    a.prototype._readTerminatedString = function() {
      var e = ''
      while (this._cursor.offset - this._offset < this._raw.byteLength) {
        var t = this._readUint(8)
        if (t === 0) break
        e += String.fromCharCode(t)
      }
      return e
    }
    a.prototype._readData = function(e) {
      var t = e > 0 ? e : this._raw.byteLength - (this._cursor.offset - this._offset)
      if (t > 0) {
        var r = new Uint8Array(this._raw.buffer, this._cursor.offset, t)
        this._cursor.offset += t
        return r
      } else {
        return null
      }
    }
    a.prototype._readUTF8String = function() {
      var e = this._raw.byteLength - (this._cursor.offset - this._offset)
      var t = null
      if (e > 0) {
        t = new DataView(this._raw.buffer, this._cursor.offset, e)
        this._cursor.offset += e
      }
      return t ? n.Utils.dataViewToString(t) : t
    }
    a.prototype._parseBox = function() {
      this._parsing = true
      this._cursor.offset = this._offset
      if (this._offset + 8 > this._raw.buffer.byteLength) {
        this._root._incomplete = true
        return
      }
      this._procField('size', 'uint', 32)
      this._procField('type', 'string', 4)
      if (this.size === 1) {
        this._procField('largesize', 'uint', 64)
      }
      if (this.type === 'uuid') {
        this._procFieldArray('usertype', 16, 'uint', 8)
      }
      switch (this.size) {
        case 0:
          this._raw = new DataView(
            this._raw.buffer,
            this._offset,
            this._raw.byteLength - this._cursor.offset + 8
          )
          break
        case 1:
          if (this._offset + this.size > this._raw.buffer.byteLength) {
            this._incomplete = true
            this._root._incomplete = true
          } else {
            this._raw = new DataView(this._raw.buffer, this._offset, this.largesize)
          }
          break
        default:
          if (this._offset + this.size > this._raw.buffer.byteLength) {
            this._incomplete = true
            this._root._incomplete = true
          } else {
            this._raw = new DataView(this._raw.buffer, this._offset, this.size)
          }
      }
      if (!this._incomplete) {
        if (this._boxProcessors[this.type]) {
          this._boxProcessors[this.type].call(this)
        }
        if (this._boxContainers.indexOf(this.type) !== -1) {
          this._parseContainerBox()
        } else {
          this._data = this._readData()
        }
      }
    }
    a.prototype._parseFullBox = function() {
      this.version = this._readUint(8)
      this.flags = this._readUint(24)
    }
    a.prototype._parseContainerBox = function() {
      this.boxes = []
      while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {
        this.boxes.push(a.parse(this))
      }
    }
    a.prototype.append = function(e, t) {
      n.Utils.appendBox(this, e, t)
    }
    a.prototype.getLength = function() {
      this._parsing = false
      this._rawo = null
      this.size = 0
      this._procField('size', 'uint', 32)
      this._procField('type', 'string', 4)
      if (this.size === 1) {
        this._procField('largesize', 'uint', 64)
      }
      if (this.type === 'uuid') {
        this._procFieldArray('usertype', 16, 'uint', 8)
      }
      if (this._boxProcessors[this.type]) {
        this._boxProcessors[this.type].call(this)
      }
      if (this._boxContainers.indexOf(this.type) !== -1) {
        for (var e = 0; e < this.boxes.length; e++) {
          this.size += this.boxes[e].getLength()
        }
      }
      if (this._data) {
        this._writeData(this._data)
      }
      return this.size
    }
    a.prototype.write = function() {
      this._parsing = false
      this._cursor.offset = this._parent._cursor.offset
      switch (this.size) {
        case 0:
          this._rawo = new DataView(
            this._parent._rawo.buffer,
            this._cursor.offset,
            this.parent._rawo.byteLength - this._cursor.offset
          )
          break
        case 1:
          this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.largesize)
          break
        default:
          this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.size)
      }
      this._procField('size', 'uint', 32)
      this._procField('type', 'string', 4)
      if (this.size === 1) {
        this._procField('largesize', 'uint', 64)
      }
      if (this.type === 'uuid') {
        this._procFieldArray('usertype', 16, 'uint', 8)
      }
      if (this._boxProcessors[this.type]) {
        this._boxProcessors[this.type].call(this)
      }
      if (this._boxContainers.indexOf(this.type) !== -1) {
        for (var e = 0; e < this.boxes.length; e++) {
          this.boxes[e].write()
        }
      }
      if (this._data) {
        this._writeData(this._data)
      }
      this._parent._cursor.offset += this.size
      return this.size
    }
    a.prototype._writeInt = function(e, t) {
      if (this._rawo) {
        var r = this._cursor.offset - this._rawo.byteOffset
        switch (e) {
          case 8:
            this._rawo.setInt8(r, t)
            break
          case 16:
            this._rawo.setInt16(r, t)
            break
          case 32:
            this._rawo.setInt32(r, t)
            break
          case 64:
            var n = Math.floor(t / Math.pow(2, 32))
            var i = t - n * Math.pow(2, 32)
            this._rawo.setUint32(r, n)
            this._rawo.setUint32(r + 4, i)
            break
        }
        this._cursor.offset += e >> 3
      } else {
        this.size += e >> 3
      }
    }
    a.prototype._writeUint = function(e, t) {
      if (this._rawo) {
        var r = this._cursor.offset - this._rawo.byteOffset,
          n,
          i
        switch (e) {
          case 8:
            this._rawo.setUint8(r, t)
            break
          case 16:
            this._rawo.setUint16(r, t)
            break
          case 24:
            n = (t & 16776960) >> 8
            i = t & 255
            this._rawo.setUint16(r, n)
            this._rawo.setUint8(r + 2, i)
            break
          case 32:
            this._rawo.setUint32(r, t)
            break
          case 64:
            n = Math.floor(t / Math.pow(2, 32))
            i = t - n * Math.pow(2, 32)
            this._rawo.setUint32(r, n)
            this._rawo.setUint32(r + 4, i)
            break
        }
        this._cursor.offset += e >> 3
      } else {
        this.size += e >> 3
      }
    }
    a.prototype._writeString = function(e, t) {
      for (var r = 0; r < e; r++) {
        this._writeUint(8, t.charCodeAt(r))
      }
    }
    a.prototype._writeTerminatedString = function(e) {
      if (e.length === 0) {
        return
      }
      for (var t = 0; t < e.length; t++) {
        this._writeUint(8, e.charCodeAt(t))
      }
      this._writeUint(8, 0)
    }
    a.prototype._writeTemplate = function(e, t) {
      var r = Math.floor(t)
      var n = (t - r) * Math.pow(2, e / 2)
      this._writeUint(e / 2, r)
      this._writeUint(e / 2, n)
    }
    a.prototype._writeData = function(e) {
      var t
      if (e) {
        if (this._rawo) {
          if (e instanceof Array) {
            var r = this._cursor.offset - this._rawo.byteOffset
            for (var t = 0; t < e.length; t++) {
              this._rawo.setInt8(r + t, e[t])
            }
            this._cursor.offset += e.length
          }
          if (e instanceof Uint8Array) {
            this._root.bytes.set(e, this._cursor.offset)
            this._cursor.offset += e.length
          }
        } else {
          this.size += e.length
        }
      }
    }
    a.prototype._writeUTF8String = function(e) {
      var t = n.Utils.utf8ToByteArray(e)
      if (this._rawo) {
        var r = new DataView(this._rawo.buffer, this._cursor.offset, t.length)
        for (var i = 0; i < t.length; i++) {
          r.setUint8(i, t[i])
        }
      } else {
        this.size += t.length
      }
    }
    a.prototype._writeField = function(e, t, r) {
      switch (e) {
        case 'uint':
          this._writeUint(t, r)
          break
        case 'int':
          this._writeInt(t, r)
          break
        case 'template':
          this._writeTemplate(t, r)
          break
        case 'string':
          if (t == -1) {
            this._writeTerminatedString(r)
          } else {
            this._writeString(t, r)
          }
          break
        case 'data':
          this._writeData(r)
          break
        case 'utf8':
          this._writeUTF8String(r)
          break
        default:
          break
      }
    }
    a.prototype._boxProcessors['avc1'] = a.prototype._boxProcessors['encv'] = function() {
      this._procFieldArray('reserved1', 6, 'uint', 8)
      this._procField('data_reference_index', 'uint', 16)
      this._procField('pre_defined1', 'uint', 16)
      this._procField('reserved2', 'uint', 16)
      this._procFieldArray('pre_defined2', 3, 'uint', 32)
      this._procField('width', 'uint', 16)
      this._procField('height', 'uint', 16)
      this._procField('horizresolution', 'template', 32)
      this._procField('vertresolution', 'template', 32)
      this._procField('reserved3', 'uint', 32)
      this._procField('frame_count', 'uint', 16)
      this._procFieldArray('compressorname', 32, 'uint', 8)
      this._procField('depth', 'uint', 16)
      this._procField('pre_defined3', 'int', 16)
      this._procField('config', 'data', -1)
    }
    a.prototype._boxProcessors['dref'] = function() {
      this._procFullBox()
      this._procField('entry_count', 'uint', 32)
      this._procSubBoxes('entries', this.entry_count)
    }
    a.prototype._boxProcessors['elst'] = function() {
      this._procFullBox()
      this._procField('entry_count', 'uint', 32)
      this._procEntries('entries', this.entry_count, function(e) {
        this._procEntryField(e, 'segment_duration', 'uint', this.version === 1 ? 64 : 32)
        this._procEntryField(e, 'media_time', 'int', this.version === 1 ? 64 : 32)
        this._procEntryField(e, 'media_rate_integer', 'int', 16)
        this._procEntryField(e, 'media_rate_fraction', 'int', 16)
      })
    }
    a.prototype._boxProcessors['emsg'] = function() {
      this._procFullBox()
      if (this.version == 1) {
        this._procField('timescale', 'uint', 32)
        this._procField('presentation_time', 'uint', 64)
        this._procField('event_duration', 'uint', 32)
        this._procField('id', 'uint', 32)
        this._procField('scheme_id_uri', 'string', -1)
        this._procField('value', 'string', -1)
      } else {
        this._procField('scheme_id_uri', 'string', -1)
        this._procField('value', 'string', -1)
        this._procField('timescale', 'uint', 32)
        this._procField('presentation_time_delta', 'uint', 32)
        this._procField('event_duration', 'uint', 32)
        this._procField('id', 'uint', 32)
      }
      this._procField('message_data', 'data', -1)
    }
    a.prototype._boxProcessors['free'] = a.prototype._boxProcessors['skip'] = function() {
      this._procField('data', 'data', -1)
    }
    a.prototype._boxProcessors['frma'] = function() {
      this._procField('data_format', 'uint', 32)
    }
    a.prototype._boxProcessors['ftyp'] = a.prototype._boxProcessors['styp'] = function() {
      this._procField('major_brand', 'string', 4)
      this._procField('minor_version', 'uint', 32)
      var e = -1
      if (this._parsing) {
        e = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)) / 4
      }
      this._procFieldArray('compatible_brands', e, 'string', 4)
    }
    a.prototype._boxProcessors['hdlr'] = function() {
      this._procFullBox()
      this._procField('pre_defined', 'uint', 32)
      this._procField('handler_type', 'string', 4)
      this._procFieldArray('reserved', 3, 'uint', 32)
      this._procField('name', 'string', -1)
    }
    a.prototype._boxProcessors['mdat'] = function() {
      this._procField('data', 'data', -1)
    }
    a.prototype._boxProcessors['mdhd'] = function() {
      this._procFullBox()
      this._procField('creation_time', 'uint', this.version == 1 ? 64 : 32)
      this._procField('modification_time', 'uint', this.version == 1 ? 64 : 32)
      this._procField('timescale', 'uint', 32)
      this._procField('duration', 'uint', this.version == 1 ? 64 : 32)
      if (!this._parsing && typeof this.language === 'string') {
        this.language =
          ((this.language.charCodeAt(0) - 96) << 10) |
          ((this.language.charCodeAt(1) - 96) << 5) |
          (this.language.charCodeAt(2) - 96)
      }
      this._procField('language', 'uint', 16)
      if (this._parsing) {
        this.language = String.fromCharCode(
          ((this.language >> 10) & 31) + 96,
          ((this.language >> 5) & 31) + 96,
          (this.language & 31) + 96
        )
      }
      this._procField('pre_defined', 'uint', 16)
    }
    a.prototype._boxProcessors['mehd'] = function() {
      this._procFullBox()
      this._procField('fragment_duration', 'uint', this.version == 1 ? 64 : 32)
    }
    a.prototype._boxProcessors['mfhd'] = function() {
      this._procFullBox()
      this._procField('sequence_number', 'uint', 32)
    }
    a.prototype._boxProcessors['mfro'] = function() {
      this._procFullBox()
      this._procField('mfra_size', 'uint', 32)
    }
    a.prototype._boxProcessors['mp4a'] = a.prototype._boxProcessors['enca'] = function() {
      this._procFieldArray('reserved1', 6, 'uint', 8)
      this._procField('data_reference_index', 'uint', 16)
      this._procFieldArray('reserved2', 2, 'uint', 32)
      this._procField('channelcount', 'uint', 16)
      this._procField('samplesize', 'uint', 16)
      this._procField('pre_defined', 'uint', 16)
      this._procField('reserved3', 'uint', 16)
      this._procField('samplerate', 'template', 32)
      this._procField('esds', 'data', -1)
    }
    a.prototype._boxProcessors['mvhd'] = function() {
      this._procFullBox()
      this._procField('creation_time', 'uint', this.version == 1 ? 64 : 32)
      this._procField('modification_time', 'uint', this.version == 1 ? 64 : 32)
      this._procField('timescale', 'uint', 32)
      this._procField('duration', 'uint', this.version == 1 ? 64 : 32)
      this._procField('rate', 'template', 32)
      this._procField('volume', 'template', 16)
      this._procField('reserved1', 'uint', 16)
      this._procFieldArray('reserved2', 2, 'uint', 32)
      this._procFieldArray('matrix', 9, 'template', 32)
      this._procFieldArray('pre_defined', 6, 'uint', 32)
      this._procField('next_track_ID', 'uint', 32)
    }
    a.prototype._boxProcessors['payl'] = function() {
      this._procField('cue_text', 'utf8')
    }
    a.prototype._boxProcessors['pssh'] = function() {
      this._procFullBox()
      this._procFieldArray('SystemID', 16, 'uint', 8)
      this._procField('DataSize', 'uint', 32)
      this._procFieldArray('Data', this.DataSize, 'uint', 8)
    }
    a.prototype._boxProcessors['schm'] = function() {
      this._procFullBox()
      this._procField('scheme_type', 'uint', 32)
      this._procField('scheme_version', 'uint', 32)
      if (this.flags & 1) {
        this._procField('scheme_uri', 'string', -1)
      }
    }
    a.prototype._boxProcessors['sdtp'] = function() {
      this._procFullBox()
      var e = -1
      if (this._parsing) {
        e = this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)
      }
      this._procFieldArray('sample_dependency_table', e, 'uint', 8)
    }
    a.prototype._boxProcessors['sidx'] = function() {
      this._procFullBox()
      this._procField('reference_ID', 'uint', 32)
      this._procField('timescale', 'uint', 32)
      this._procField('earliest_presentation_time', 'uint', this.version == 1 ? 64 : 32)
      this._procField('first_offset', 'uint', this.version == 1 ? 64 : 32)
      this._procField('reserved', 'uint', 16)
      this._procField('reference_count', 'uint', 16)
      this._procEntries('references', this.reference_count, function(e) {
        if (!this._parsing) {
          e.reference = (e.reference_type & 1) << 31
          e.reference |= e.referenced_size & 2147483647
          e.sap = (e.starts_with_SAP & 1) << 31
          e.sap |= (e.SAP_type & 3) << 28
          e.sap |= e.SAP_delta_time & 268435455
        }
        this._procEntryField(e, 'reference', 'uint', 32)
        this._procEntryField(e, 'subsegment_duration', 'uint', 32)
        this._procEntryField(e, 'sap', 'uint', 32)
        if (this._parsing) {
          e.reference_type = (e.reference >> 31) & 1
          e.referenced_size = e.reference & 2147483647
          e.starts_with_SAP = (e.sap >> 31) & 1
          e.SAP_type = (e.sap >> 28) & 7
          e.SAP_delta_time = e.sap & 268435455
        }
      })
    }
    a.prototype._boxProcessors['smhd'] = function() {
      this._procFullBox()
      this._procField('balance', 'uint', 16)
      this._procField('reserved', 'uint', 16)
    }
    a.prototype._boxProcessors['ssix'] = function() {
      this._procFullBox()
      this._procField('subsegment_count', 'uint', 32)
      this._procEntries('subsegments', this.subsegment_count, function(e) {
        this._procEntryField(e, 'ranges_count', 'uint', 32)
        this._procSubEntries(e, 'ranges', e.ranges_count, function(e) {
          this._procEntryField(e, 'level', 'uint', 8)
          this._procEntryField(e, 'range_size', 'uint', 24)
        })
      })
    }
    a.prototype._boxProcessors['stsd'] = function() {
      this._procFullBox()
      this._procField('entry_count', 'uint', 32)
      this._procSubBoxes('entries', this.entry_count)
    }
    a.prototype._boxProcessors['subs'] = function() {
      this._procFullBox()
      this._procField('entry_count', 'uint', 32)
      this._procEntries('entries', this.entry_count, function(e) {
        this._procEntryField(e, 'sample_delta', 'uint', 32)
        this._procEntryField(e, 'subsample_count', 'uint', 16)
        this._procSubEntries(e, 'subsamples', e.subsample_count, function(e) {
          this._procEntryField(e, 'subsample_size', 'uint', this.version === 1 ? 32 : 16)
          this._procEntryField(e, 'subsample_priority', 'uint', 8)
          this._procEntryField(e, 'discardable', 'uint', 8)
          this._procEntryField(e, 'codec_specific_parameters', 'uint', 32)
        })
      })
    }
    a.prototype._boxProcessors['tenc'] = function() {
      this._procFullBox()
      this._procField('default_IsEncrypted', 'uint', 24)
      this._procField('default_IV_size', 'uint', 8)
      this._procFieldArray('default_KID', 16, 'uint', 8)
    }
    a.prototype._boxProcessors['tfdt'] = function() {
      this._procFullBox()
      this._procField('baseMediaDecodeTime', 'uint', this.version == 1 ? 64 : 32)
    }
    a.prototype._boxProcessors['tfhd'] = function() {
      this._procFullBox()
      this._procField('track_ID', 'uint', 32)
      if (this.flags & 1) this._procField('base_data_offset', 'uint', 64)
      if (this.flags & 2) this._procField('sample_description_offset', 'uint', 32)
      if (this.flags & 8) this._procField('default_sample_duration', 'uint', 32)
      if (this.flags & 16) this._procField('default_sample_size', 'uint', 32)
      if (this.flags & 32) this._procField('default_sample_flags', 'uint', 32)
    }
    a.prototype._boxProcessors['tfra'] = function() {
      this._procFullBox()
      this._procField('track_ID', 'uint', 32)
      if (!this._parsing) {
        this.reserved = 0
        this.reserved |= (this.length_size_of_traf_num & 48) << 4
        this.reserved |= (this.length_size_of_trun_num & 12) << 2
        this.reserved |= this.length_size_of_sample_num & 3
      }
      this._procField('reserved', 'uint', 32)
      if (this._parsing) {
        this.length_size_of_traf_num = (this.reserved & 48) >> 4
        this.length_size_of_trun_num = (this.reserved & 12) >> 2
        this.length_size_of_sample_num = this.reserved & 3
      }
      this._procField('number_of_entry', 'uint', 32)
      this._procEntries('entries', this.number_of_entry, function(e) {
        this._procEntryField(e, 'time', 'uint', this.version === 1 ? 64 : 32)
        this._procEntryField(e, 'moof_offset', 'uint', this.version === 1 ? 64 : 32)
        this._procEntryField(e, 'traf_number', 'uint', (this.length_size_of_traf_num + 1) * 8)
        this._procEntryField(e, 'trun_number', 'uint', (this.length_size_of_trun_num + 1) * 8)
        this._procEntryField(e, 'sample_number', 'uint', (this.length_size_of_sample_num + 1) * 8)
      })
    }
    a.prototype._boxProcessors['tkhd'] = function() {
      this._procFullBox()
      this._procField('creation_time', 'uint', this.version == 1 ? 64 : 32)
      this._procField('modification_time', 'uint', this.version == 1 ? 64 : 32)
      this._procField('track_ID', 'uint', 32)
      this._procField('reserved1', 'uint', 32)
      this._procField('duration', 'uint', this.version == 1 ? 64 : 32)
      this._procFieldArray('reserved2', 2, 'uint', 32)
      this._procField('layer', 'uint', 16)
      this._procField('alternate_group', 'uint', 16)
      this._procField('volume', 'template', 16)
      this._procField('reserved3', 'uint', 16)
      this._procFieldArray('matrix', 9, 'template', 32)
      this._procField('width', 'template', 32)
      this._procField('height', 'template', 32)
    }
    a.prototype._boxProcessors['trex'] = function() {
      this._procFullBox()
      this._procField('track_ID', 'uint', 32)
      this._procField('default_sample_description_index', 'uint', 32)
      this._procField('default_sample_duration', 'uint', 32)
      this._procField('default_sample_size', 'uint', 32)
      this._procField('default_sample_flags', 'uint', 32)
    }
    a.prototype._boxProcessors['trun'] = function() {
      this._procFullBox()
      this._procField('sample_count', 'uint', 32)
      if (this.flags & 1) this._procField('data_offset', 'int', 32)
      if (this.flags & 4) this._procField('first_sample_flags', 'uint', 32)
      this._procEntries('samples', this.sample_count, function(e) {
        if (this.flags & 256) this._procEntryField(e, 'sample_duration', 'uint', 32)
        if (this.flags & 512) this._procEntryField(e, 'sample_size', 'uint', 32)
        if (this.flags & 1024) this._procEntryField(e, 'sample_flags', 'uint', 32)
        if (this.flags & 2048)
          this._procEntryField(
            e,
            'sample_composition_time_offset',
            this.version === 1 ? 'int' : 'uint',
            32
          )
      })
    }
    a.prototype._boxProcessors['url '] = a.prototype._boxProcessors['urn '] = function() {
      this._procFullBox()
      if (this.type === 'urn ') {
        this._procField('name', 'string', -1)
      }
      this._procField('location', 'string', -1)
    }
    a.prototype._boxProcessors['vlab'] = function() {
      this._procField('source_label', 'utf8')
    }
    a.prototype._boxProcessors['vmhd'] = function() {
      this._procFullBox()
      this._procField('graphicsmode', 'uint', 16)
      this._procFieldArray('opcolor', 3, 'uint', 16)
    }
    a.prototype._boxProcessors['vttC'] = function() {
      this._procField('config', 'utf8')
    }
    a.prototype._boxProcessors['vtte'] = function() {}
  },
  function(e, t) {
    e.exports = function(e) {
      if (e == undefined) throw TypeError("Can't call method on  " + e)
      return e
    }
  },
  function(e, t, r) {
    var n = r(30)
    var i = r(8).document
    var a = n(i) && n(i.createElement)
    e.exports = function(e) {
      return a ? i.createElement(e) : {}
    }
  },
  function(e, t) {
    e.exports = true
  },
  function(e, t, r) {
    'use strict'
    var n = r(38)
    function i(e) {
      var t, r
      this.promise = new e(function(e, n) {
        if (t !== undefined || r !== undefined) throw TypeError('Bad Promise constructor')
        t = e
        r = n
      })
      this.resolve = n(t)
      this.reject = n(r)
    }
    e.exports.f = function(e) {
      return new i(e)
    }
  },
  function(e, t, r) {
    var n = r(32).f
    var i = r(41)
    var a = r(10)('toStringTag')
    e.exports = function(e, t, r) {
      if (e && !i((e = r ? e : e.prototype), a)) n(e, a, { configurable: true, value: t })
    }
  },
  function(e, t, r) {
    var n = r(93)('keys')
    var i = r(97)
    e.exports = function(e) {
      return n[e] || (n[e] = i(e))
    }
  },
  function(e, t) {
    var r = Math.ceil
    var n = Math.floor
    e.exports = function(e) {
      return isNaN((e = +e)) ? 0 : (e > 0 ? n : r)(e)
    }
  },
  function(e, t, r) {
    var n = r(154)
    var i = r(55)
    e.exports = function(e) {
      return n(i(e))
    }
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var s = r(9)
    var o = i(s)
    var u = (function() {
      function e() {
        a(this, e)
        this.id = null
        this.index = -1
        this.adaptation = null
        this.segmentInfoType = null
        this.initialization = null
        this.codecs = null
        this.codecPrivateData = null
        this.segmentDuration = NaN
        this.timescale = 1
        this.startNumber = 1
        this.indexRange = null
        this.range = null
        this.presentationTimeOffset = 0
        this.MSETimeOffset = NaN
        this.segmentAvailabilityRange = null
        this.availableSegmentsNumber = 0
        this.bandwidth = NaN
        this.width = NaN
        this.height = NaN
        this.scanType = null
        this.maxPlayoutRate = NaN
        this.availabilityTimeOffset = 0
        this.availabilityTimeComplete = true
      }
      n(e, null, [
        {
          key: 'hasInitialization',
          value: function e(t) {
            return t.initialization !== null || t.range !== null
          },
        },
        {
          key: 'hasSegments',
          value: function e(t) {
            return (
              t.segmentInfoType !== o['default'].BASE_URL &&
              t.segmentInfoType !== o['default'].SEGMENT_BASE &&
              !t.indexRange
            )
          },
        },
      ])
      return e
    })()
    t['default'] = u
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.indexRange = null
      this.index = null
      this.mediaRange = null
      this.media = null
      this.duration = NaN
      this.replacementTime = null
      this.replacementNumber = NaN
      this.mediaStartTime = NaN
      this.presentationStartTime = NaN
      this.availabilityStartTime = NaN
      this.availabilityEndTime = NaN
      this.availabilityIdx = NaN
      this.wallStartTime = NaN
      this.representation = null
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(4)
    var o = n(s)
    var u = r(2)
    var l = n(u)
    var f = r(0)
    var d = n(f)
    var c = r(1)
    var h = n(c)
    var p = 'neverReplace'
    var v = 'alwaysReplace'
    var g = 'highestBitrate'
    var m = 'widestRange'
    var y = g
    function _() {
      var e = this.context
      var t = (0, l['default'])(e).getInstance()
      var r = undefined,
        n = undefined,
        i = undefined,
        s = undefined,
        u = undefined,
        f = undefined,
        d = undefined
      var c = [v, p]
      var _ = [g, m]
      function T() {
        n = (0, h['default'])(e)
          .getInstance()
          .getLogger(r)
        x()
      }
      function E(e, t) {
        var r = R(e)
        var n = S(e, t)
        var i = []
        if (e === a['default'].FRAGMENTED_TEXT) {
          I(n[0])
          return
        }
        if (!r) {
          r = d.getSavedMediaSettings(e)
          C(e, r)
        }
        if (!n || n.length === 0) return
        if (r) {
          n.forEach(function(e) {
            if (U(r, e)) {
              i.push(e)
            }
          })
        }
        if (i.length === 0) {
          I(G(n))
        } else {
          if (i.length > 1) {
            I(G(i))
          } else {
            I(i[0])
          }
        }
      }
      function b(e) {
        if (!e) return
        var t = e.type
        if (!P(t)) return
        var r = e.streamInfo.id
        if (!i[r]) {
          i[r] = q()
        }
        var n = i[r][t].list
        for (var a = 0, s = n.length; a < s; ++a) {
          if (N(n[a], e)) {
            return
          }
        }
        n.push(e)
        var o = R(t)
        if (o && U(o, e) && !w(t, e.streamInfo)) {
          I(e)
        }
      }
      function S(e, t) {
        if (!e || !t) return []
        var r = t.id
        if (!i[r] || !i[r][e]) return []
        return i[r][e].list
      }
      function w(e, t) {
        if (!e || !t || (t && !i[t.id])) return null
        return i[t.id][e].current
      }
      function A(e) {
        if (!e) {
          return false
        }
        var t = e.type
        var r = e.streamInfo.id
        return i[r] && i[r][t] && N(i[r][t].current, e)
      }
      function I(e) {
        if (!e || !e.streamInfo) return
        var r = e.type
        var n = e.streamInfo
        var a = n.id
        var s = w(r, n)
        if (!i[a] || !i[a][r] || N(e, s)) return
        i[a][r].current = e
        if (i[a][r].current) {
          t.trigger(o['default'].CURRENT_TRACK_CHANGED, {
            oldMediaInfo: s,
            newMediaInfo: e,
            switchMode: f[r],
          })
        }
        var u = F(e)
        if (!u || !i[a][r].storeLastSettings) return
        if (u.roles) {
          u.role = u.roles[0]
          delete u.roles
        }
        if (u.accessibility) {
          u.accessibility = u.accessibility[0]
        }
        if (u.audioChannelConfiguration) {
          u.audioChannelConfiguration = u.audioChannelConfiguration[0]
        }
        d.setSavedMediaSettings(r, u)
      }
      function C(e, t) {
        if (!e || !t) return
        s[e] = t
      }
      function R(e) {
        if (!e) return null
        return s[e]
      }
      function D(e, t) {
        var r = c.indexOf(t) !== -1
        if (!r) {
          n.warn('Track switch mode is not supported: ' + t)
          return
        }
        f[e] = t
      }
      function O(e) {
        return f[e]
      }
      function M(e) {
        var t = _.indexOf(e) !== -1
        if (!t) {
          n.warn('Track selection mode is not supported: ' + e)
          return
        }
        u = e
      }
      function k() {
        return u || y
      }
      function P(e) {
        return (
          e === a['default'].AUDIO ||
          e === a['default'].VIDEO ||
          e === a['default'].TEXT ||
          e === a['default'].FRAGMENTED_TEXT ||
          e === a['default'].IMAGE
        )
      }
      function N(e, t) {
        if (!e && !t) {
          return true
        }
        if (!e || !t) {
          return false
        }
        var r = e.id === t.id
        var n = e.viewpoint === t.viewpoint
        var i = e.lang === t.lang
        var a = e.roles.toString() === t.roles.toString()
        var s = e.accessibility.toString() === t.accessibility.toString()
        var o = e.audioChannelConfiguration.toString() === t.audioChannelConfiguration.toString()
        return r && n && i && a && s && o
      }
      function L(e) {
        if (!e) return
        if (e.domStorage) {
          d = e.domStorage
        }
      }
      function x() {
        i = {}
        j()
        B()
      }
      function F(e) {
        var t = {
          lang: e.lang,
          viewpoint: e.viewpoint,
          roles: e.roles,
          accessibility: e.accessibility,
          audioChannelConfiguration: e.audioChannelConfiguration,
        }
        var r =
          t.lang ||
          t.viewpoint ||
          (t.role && t.role.length > 0) ||
          (t.accessibility && t.accessibility.length > 0) ||
          (t.audioChannelConfiguration && t.audioChannelConfiguration.length > 0)
        return r ? t : null
      }
      function U(e, t) {
        var r = !e.lang || e.lang === t.lang
        var n = !e.viewpoint || e.viewpoint === t.viewpoint
        var i =
          !e.role ||
          !!t.roles.filter(function(t) {
            return t === e.role
          })[0]
        var a =
          !e.accessibility ||
          !!t.accessibility.filter(function(t) {
            return t === e.accessibility
          })[0]
        var s =
          !e.audioChannelConfiguration ||
          !!t.audioChannelConfiguration.filter(function(t) {
            return t === e.audioChannelConfiguration
          })[0]
        return r && n && i && a && s
      }
      function B() {
        f = { audio: v, video: p }
      }
      function j() {
        s = { audio: null, video: null }
      }
      function G(e) {
        var t = k()
        var r = []
        var i = function e(t) {
          var r = 0
          var n = []
          var i = undefined
          t.forEach(function(e) {
            i = Math.max.apply(
              Math,
              e.bitrateList.map(function(e) {
                return e.bandwidth
              })
            )
            if (i > r) {
              r = i
              n = [e]
            } else if (i === r) {
              n.push(e)
            }
          })
          return n
        }
        var a = function e(t) {
          var r = 0
          var n = []
          var i = undefined
          t.forEach(function(e) {
            i = e.representationCount
            if (i > r) {
              r = i
              n = [e]
            } else if (i === r) {
              n.push(e)
            }
          })
          return n
        }
        switch (t) {
          case g:
            r = i(e)
            if (r.length > 1) {
              r = a(r)
            }
            break
          case m:
            r = a(e)
            if (r.length > 1) {
              r = i(e)
            }
            break
          default:
            n.warn('Track selection mode is not supported: ' + t)
            break
        }
        return r[0]
      }
      function q() {
        return {
          audio: { list: [], storeLastSettings: true, current: null },
          video: { list: [], storeLastSettings: true, current: null },
          text: { list: [], storeLastSettings: true, current: null },
          fragmentedText: { list: [], storeLastSettings: true, current: null },
          image: { list: [], storeLastSettings: true, current: null },
        }
      }
      r = {
        checkInitialMediaSettingsForType: E,
        addTrack: b,
        getTracksFor: S,
        getCurrentTrackFor: w,
        isCurrentTrack: A,
        setTrack: I,
        setInitialSettings: C,
        getInitialSettings: R,
        setSwitchMode: D,
        getSwitchMode: O,
        setSelectionModeForInitialTrack: M,
        getSelectionModeForInitialTrack: k,
        isMultiTrackSupportedByType: P,
        isTracksEqual: N,
        setConfig: L,
        reset: x,
      }
      T()
      return r
    }
    _.__dashjs_factory_name = 'MediaController'
    var T = d['default'].getSingletonFactory(_)
    T.TRACK_SWITCH_MODE_NEVER_REPLACE = p
    T.TRACK_SWITCH_MODE_ALWAYS_REPLACE = v
    T.TRACK_SELECTION_MODE_HIGHEST_BITRATE = g
    T.TRACK_SELECTION_MODE_WIDEST_RANGE = m
    T.DEFAULT_INIT_TRACK_SELECTION_MODE = y
    d['default'].updateSingletonFactory(_.__dashjs_factory_name, T)
    t['default'] = T
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    function s(e) {
      e = e || {}
      var t = e.requestModifier
      var r = undefined
      function n(e) {
        var r = new Date()
        var n = e.request
        var i = new XMLHttpRequest()
        i.open(e.method, e.url, true)
        if (n.responseType) {
          i.responseType = n.responseType
        }
        if (n.range) {
          i.setRequestHeader('Range', 'bytes=' + n.range)
        }
        if (!n.requestStartDate) {
          n.requestStartDate = r
        }
        if (t) {
          i = t.modifyRequestHeader(i)
        }
        i.withCredentials = e.withCredentials
        i.onload = e.onload
        i.onloadend = e.onend
        i.onerror = e.onerror
        i.onprogress = e.progress
        i.onabort = e.onabort
        i.send()
        e.response = i
      }
      function i(e) {
        var t = e.response
        t.onloadend = t.onerror = t.onprogress = undefined
        t.abort()
      }
      r = { load: n, abort: i }
      return r
    }
    s.__dashjs_factory_name = 'XHRLoader'
    var o = a['default'].getClassFactory(s)
    t['default'] = o
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = (function() {
      function e(t, r) {
        i(this, e)
        if (r && r !== 'persistent' && r !== 'temporary')
          throw new Error(
            "Invalid ClearKey key set type!  Must be one of 'persistent' or 'temporary'"
          )
        this.keyPairs = t
        this.type = r
      }
      n(e, [
        {
          key: 'toJWK',
          value: function e() {
            var t = undefined
            var r = this.keyPairs.length
            var n = { keys: [] }
            for (t = 0; t < r; t++) {
              var i = {
                kty: 'oct',
                alg: 'A128KW',
                kid: this.keyPairs[t].keyID,
                k: this.keyPairs[t].key,
              }
              n.keys.push(i)
            }
            if (this.type) {
              n.type = this.type
            }
            var a = JSON.stringify(n)
            var s = a.length
            var o = new ArrayBuffer(s)
            var u = new Uint8Array(o)
            for (t = 0; t < s; t++) u[t] = a.charCodeAt(t)
            return o
          },
        },
      ])
      return e
    })()
    t['default'] = a
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e(t, r, i, a) {
      n(this, e)
      this.sessionToken = t
      this.message = r
      this.defaultURL = i
      this.messageType = a ? a : 'license-request'
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e(t, r) {
      n(this, e)
      this.keyID = t
      this.key = r
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e(t, r) {
      n(this, e)
      this.keySystem = t
      this.ksConfiguration = r
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e(t, r, i, a, s) {
      n(this, e)
      this.initDataTypes = ['cenc']
      if (t && t.length) {
        this.audioCapabilities = t
      }
      if (r && r.length) {
        this.videoCapabilities = r
      }
      this.distinctiveIdentifier = i
      this.persistentState = a
      this.sessionTypes = s
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e(t, r) {
      n(this, e)
      this.initData = t
      this.initDataType = r
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(0)
    var o = n(s)
    var u = r(285)
    var l = n(u)
    var f = r(74)
    var d = n(f)
    var c = r(295)
    var h = n(c)
    var p = r(294)
    var v = n(p)
    var g = r(2)
    var m = n(g)
    var y = r(4)
    var _ = n(y)
    var T = r(27)
    function E() {
      var e = this.context
      var t = undefined,
        r = undefined,
        n = undefined,
        i = undefined,
        s = undefined,
        o = undefined,
        u = undefined,
        f = undefined,
        c = undefined,
        p = undefined,
        g = undefined,
        y = undefined,
        E = undefined,
        b = undefined,
        S = undefined,
        w = undefined,
        A = undefined
      function I() {
        E = ''
        b = -1
        S = true
        A = false
        c = (0, d['default'])(e).getInstance()
        p = (0, h['default'])(e).getInstance()
        g = (0, v['default'])(e).getInstance()
        r = (0, l['default'])(e).getInstance()
        y = (0, m['default'])(e).getInstance()
        c.initialize()
        y.on(_['default'].TEXT_TRACKS_QUEUE_INITIALIZED, P, t)
        G()
      }
      function C(e) {
        if (!e) {
          return
        }
        if (e.errHandler) {
          n = e.errHandler
        }
        if (e.dashManifestModel) {
          i = e.dashManifestModel
        }
        if (e.manifestModel) {
          s = e.manifestModel
        }
        if (e.mediaController) {
          o = e.mediaController
        }
        if (e.videoModel) {
          u = e.videoModel
        }
        if (e.streamController) {
          f = e.streamController
        }
        if (e.textTracks) {
          c = e.textTracks
        }
        if (e.vttParser) {
          p = e.vttParser
        }
        if (e.ttmlParser) {
          g = e.ttmlParser
        }
        r.setConfig({
          errHandler: n,
          dashManifestModel: i,
          manifestModel: s,
          mediaController: o,
          videoModel: u,
          streamController: f,
          textTracks: c,
          vttParser: p,
          ttmlParser: g,
        })
      }
      function R() {
        return r
      }
      function D() {
        return w
      }
      function O(e) {
        r.addEmbeddedTrack(e)
      }
      function M(e) {
        ;(0, T.checkParameterType)(e, 'string')
        E = e
      }
      function k() {
        return E
      }
      function P(e) {
        var t = this
        var r = e.tracks
        var n = e.index
        r.some(function(e, r) {
          if (e.lang === E) {
            t.setTextTrack(r)
            n = r
            return true
          }
        })
        if (!S) {
          this.setTextTrack(-1)
        }
        b = n
        y.trigger(_['default'].TEXT_TRACKS_ADDED, { enabled: F(), index: n, tracks: r })
      }
      function N(e) {
        ;(0, T.checkParameterType)(e, 'boolean')
        S = e
        if (!S) {
          this.setTextTrack(-1)
        }
      }
      function L() {
        return S
      }
      function x(e) {
        ;(0, T.checkParameterType)(e, 'boolean')
        if (F() !== e) {
          if (e) {
            this.setTextTrack(b)
          }
          if (!e) {
            b = this.getCurrentTrackIdx()
            this.setTextTrack(-1)
          }
        }
      }
      function F() {
        var e = true
        if (w && !A) {
          e = false
        }
        return e
      }
      function U(e) {
        ;(0, T.checkParameterType)(e, 'boolean')
        A = e
      }
      function B(e) {
        var t = r.getConfig()
        var n = t.fragmentModel
        var i = t.fragmentedTracks
        var s = t.videoModel
        var u = undefined,
          l = undefined
        w = e === -1 ? true : false
        var d = c.getCurrentTrackIdx()
        if (d !== e) {
          c.setModeForTrackIdx(d, a['default'].TEXT_HIDDEN)
          c.setCurrentTrackIdx(e)
          c.setModeForTrackIdx(e, a['default'].TEXT_SHOWING)
          var h = c.getCurrentTrackInfo()
          if (h && h.isFragmented && !h.isEmbedded) {
            for (var p = 0; p < i.length; p++) {
              var v = i[p]
              if (
                h.lang === v.lang &&
                h.index === v.index &&
                (v.id ? h.id === v.id : h.id === v.index)
              ) {
                var g = o.getCurrentTrackFor(a['default'].FRAGMENTED_TEXT, f.getActiveStreamInfo())
                if (v !== g) {
                  n.abortRequests()
                  n.removeExecutedRequestsBeforeTime()
                  r.remove()
                  c.deleteCuesFromTrackIdx(d)
                  o.setTrack(v)
                  r.setCurrentFragmentedTrackIdx(p)
                } else if (d === -1) {
                  var m = f.getActiveStreamProcessors()
                  for (var y = 0; y < m.length; y++) {
                    if (m[y].getType() === a['default'].FRAGMENTED_TEXT) {
                      l = m[y]
                      break
                    }
                  }
                  l.getIndexHandler().setCurrentTime(s.getTime())
                  l.getScheduleController().start()
                }
              }
            }
          } else if (h && !h.isFragmented) {
            var m = f.getActiveStreamProcessors()
            for (var p = 0; p < m.length; p++) {
              if (m[p].getType() === a['default'].TEXT) {
                l = m[p]
                u = l.getMediaInfoArr()
                break
              }
            }
            if (l && u) {
              for (var p = 0; p < u.length; p++) {
                if (u[p].index === h.index && u[p].lang === h.lang) {
                  l.selectMediaInfo(u[p])
                  break
                }
              }
            }
          }
        }
      }
      function j() {
        return c.getCurrentTrackIdx()
      }
      function G() {
        w = false
      }
      function q() {
        G()
        r.resetEmbedded()
        r.reset()
      }
      t = {
        setConfig: C,
        getTextSourceBuffer: R,
        getAllTracksAreDisabled: D,
        addEmbeddedTrack: O,
        getTextDefaultLanguage: k,
        setTextDefaultLanguage: M,
        setTextDefaultEnabled: N,
        getTextDefaultEnabled: L,
        enableText: x,
        isTextEnabled: F,
        setTextTrack: B,
        getCurrentTrackIdx: j,
        enableForcedTextStreaming: U,
        reset: q,
      }
      I()
      return t
    }
    E.__dashjs_factory_name = 'TextController'
    t['default'] = o['default'].getSingletonFactory(E)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(2)
    var o = n(s)
    var u = r(4)
    var l = n(u)
    var f = r(0)
    var d = n(f)
    var c = r(1)
    var h = n(c)
    var p = r(123)
    function v() {
      var e = this.context
      var t = (0, o['default'])(e).getInstance()
      var r = undefined,
        n = undefined,
        i = undefined,
        s = undefined,
        u = undefined,
        f = undefined,
        d = undefined,
        c = undefined,
        v = undefined,
        g = undefined,
        m = undefined,
        y = undefined,
        _ = undefined,
        T = undefined,
        E = undefined,
        b = undefined,
        S = undefined
      function w() {
        n = (0, h['default'])(e)
          .getInstance()
          .getLogger(r)
      }
      function A() {
        if (typeof window === 'undefined' || typeof navigator === 'undefined') {
          return
        }
        i = window.VTTCue || window.TextTrackCue
        u = []
        f = []
        d = -1
        c = 0
        v = 0
        g = 0
        m = 0
        y = null
        _ = null
        E = false
        S = 2147483647
        b = null
        if (document.fullscreenElement !== undefined) {
          T = 'fullscreenElement'
        } else if (document.webkitIsFullScreen !== undefined) {
          T = 'webkitIsFullScreen'
        } else if (document.msFullscreenElement) {
          T = 'msFullscreenElement'
        } else if (document.mozFullScreen) {
          T = 'mozFullScreen'
        }
      }
      function I(e) {
        var t = u[e].kind
        var r = u[e].id !== undefined ? u[e].id : u[e].lang
        var n = u[e].lang
        var i = u[e].isTTML
        var a = u[e].isEmbedded
        var o = s.addTextTrack(t, r, n)
        o.isEmbedded = a
        o.isTTML = i
        return o
      }
      function C(e) {
        E = e
        if (!y || document[T]) {
          return
        }
        y.style.zIndex = e ? S : null
      }
      function R(e, r) {
        if (u.length === r) {
          n.error('Trying to add too many tracks.')
          return
        }
        u.push(e)
        if (u.length === r) {
          u.sort(function(e, t) {
            return e.index - t.index
          })
          y = s.getTTMLRenderingDiv()
          var i = -1
          for (var o = 0; o < u.length; o++) {
            var c = I.call(this, o)
            f.push(c)
            if (u[o].defaultTrack) {
              c['default'] = true
              i = o
            }
            var h = N(o)
            if (h) {
              h.mode = a['default'].TEXT_SHOWING
              if (y && (u[o].isTTML || u[o].isEmbedded)) {
                h.renderingType = 'html'
              } else {
                h.renderingType = 'default'
              }
            }
            this.addCaptions(o, 0, u[o].captionData)
            t.trigger(l['default'].TEXT_TRACK_ADDED)
          }
          F.call(this, i)
          if (i >= 0) {
            for (var p = 0; p < u.length; p++) {
              var v = N(p)
              if (v) {
                v.mode = p === i ? a['default'].TEXT_SHOWING : a['default'].TEXT_HIDDEN
              }
            }
          }
          t.trigger(l['default'].TEXT_TRACKS_QUEUE_INITIALIZED, { index: d, tracks: u })
        }
      }
      function D(e, t, r, n, i, a) {
        var s = e / t
        var o = r / n
        var u = 0
        var l = 0
        if (s > o) {
          l = t
          u = (l / n) * r
        } else {
          u = e
          l = (u / r) * n
        }
        var f = 0
        var d = 0
        var c = 0
        var h = 0
        var p = u / l
        if (p > i) {
          h = l
          c = l * i
        } else {
          c = u
          h = u / i
        }
        f = (e - c) / 2
        d = (t - h) / 2
        if (a) {
          return { x: f + c * 0.1, y: d + h * 0.1, w: c * 0.8, h: h * 0.8 }
        } else {
          return { x: f, y: d, w: c, h: h }
        }
      }
      function O(e, r) {
        var n = s.getClientWidth()
        var i = s.getClientHeight()
        var a = s.getVideoWidth()
        var o = s.getVideoHeight()
        var u = s.getVideoRelativeOffsetTop()
        var f = s.getVideoRelativeOffsetLeft()
        var d = a / o
        var h = false
        if (e.isFromCEA608) {
          d = 3.5 / 3
          h = true
        }
        var p = D.call(this, n, i, a, o, d, h)
        var _ = p.w
        var b = p.h
        var w = p.x
        var A = p.y
        if (_ != g || b != m || w != c || A != v || r) {
          c = w + f
          v = A + u
          g = _
          m = b
          if (y) {
            var I = y.style
            I.left = c + 'px'
            I.top = v + 'px'
            I.width = g + 'px'
            I.height = m + 'px'
            I.zIndex = (T && document[T]) || E ? S : null
            t.trigger(l['default'].CAPTION_CONTAINER_RESIZE, {})
          }
          var C = e.activeCues
          if (C) {
            var R = C.length
            for (var O = 0; O < R; ++O) {
              var M = C[O]
              M.scaleCue(M)
            }
          }
        }
      }
      function M(e) {
        var t = g
        var r = m
        var n = undefined,
          i = undefined,
          a = undefined,
          s = undefined,
          o = undefined
        if (e.cellResolution) {
          var u = [t / e.cellResolution[0], r / e.cellResolution[1]]
          if (e.linePadding) {
            for (n in e.linePadding) {
              if (e.linePadding.hasOwnProperty(n)) {
                var l = e.linePadding[n]
                i = (l * u[0]).toString()
                var f = document.getElementsByClassName('spanPadding')
                for (var d = 0; d < f.length; d++) {
                  f[d].style.cssText = f[d].style.cssText.replace(
                    /(padding-left\s*:\s*)[\d.,]+(?=\s*px)/gi,
                    '$1' + i
                  )
                  f[d].style.cssText = f[d].style.cssText.replace(
                    /(padding-right\s*:\s*)[\d.,]+(?=\s*px)/gi,
                    '$1' + i
                  )
                }
              }
            }
          }
          if (e.fontSize) {
            for (n in e.fontSize) {
              if (e.fontSize.hasOwnProperty(n)) {
                if (e.fontSize[n][0] === '%') {
                  a = e.fontSize[n][1] / 100
                } else if (e.fontSize[n][0] === 'c') {
                  a = e.fontSize[n][1]
                }
                i = (a * u[1]).toString()
                if (n !== 'defaultFontSize') {
                  o = document.getElementsByClassName(n)
                } else {
                  o = document.getElementsByClassName('paragraph')
                }
                for (var c = 0; c < o.length; c++) {
                  o[c].style.cssText = o[c].style.cssText.replace(
                    /(font-size\s*:\s*)[\d.,]+(?=\s*px)/gi,
                    '$1' + i
                  )
                }
              }
            }
            if (e.lineHeight) {
              for (n in e.lineHeight) {
                if (e.lineHeight.hasOwnProperty(n)) {
                  if (e.lineHeight[n][0] === '%') {
                    s = e.lineHeight[n][1] / 100
                  } else if (e.fontSize[n][0] === 'c') {
                    s = e.lineHeight[n][1]
                  }
                  i = (s * u[1]).toString()
                  o = document.getElementsByClassName(n)
                  for (var h = 0; h < o.length; h++) {
                    o[h].style.cssText = o[h].style.cssText.replace(
                      /(line-height\s*:\s*)[\d.,]+(?=\s*px)/gi,
                      '$1' + i
                    )
                  }
                }
              }
            }
          }
        }
        if (e.isd) {
          var p = document.getElementById(e.cueID)
          if (p) {
            y.removeChild(p)
          }
          k(e)
        }
      }
      function k(e) {
        if (y) {
          var r = document.createElement('div')
          y.appendChild(r)
          b = (0, p.renderHTML)(
            e.isd,
            r,
            function(t) {
              var r = /^(urn:)(mpeg:[a-z0-9][a-z0-9-]{0,31}:)(subs:)([0-9]+)$/
              var n = /^#(.*)$/
              if (r.test(t)) {
                var i = r.exec(t)
                var a = parseInt(i[4], 10) - 1
                var s = btoa(e.images[a])
                var o = 'data:image/png;base64,' + s
                return o
              } else if (n.test(t)) {
                var i = n.exec(t)
                var a = i[1]
                var o = 'data:image/png;base64,' + e.embeddedImages[a]
                return o
              } else {
                return null
              }
            },
            y.clientHeight,
            y.clientWidth,
            false,
            function(e) {
              n.info('renderCaption :', e)
            },
            b,
            true
          )
          r.id = e.cueID
          t.trigger(l['default'].CAPTION_RENDERED, { captionDiv: r, currentTrackIdx: d })
        }
      }
      function P(e, r, s) {
        var o = N(e)
        var u = this
        if (!o) {
          return
        }
        if (!s || s.length === 0) {
          return
        }
        for (var f = 0; f < s.length; f++) {
          var h = undefined
          var p = s[f]
          o.cellResolution = p.cellResolution
          o.isFromCEA608 = p.isFromCEA608
          if (p.type === 'html' && y) {
            h = new i(p.start - r, p.end - r, '')
            h.cueHTMLElement = p.cueHTMLElement
            h.isd = p.isd
            h.images = p.images
            h.embeddedImages = p.embeddedImages
            h.cueID = p.cueID
            h.scaleCue = M.bind(u)
            h.cellResolution = p.cellResolution
            h.lineHeight = p.lineHeight
            h.linePadding = p.linePadding
            h.fontSize = p.fontSize
            y.style.left = c + 'px'
            y.style.top = v + 'px'
            y.style.width = g + 'px'
            y.style.height = m + 'px'
            h.onenter = function() {
              if (o.mode === a['default'].TEXT_SHOWING) {
                if (this.isd) {
                  k(this)
                  n.debug('Cue enter id:' + this.cueID)
                } else {
                  y.appendChild(this.cueHTMLElement)
                  M.call(u, this)
                  t.trigger(l['default'].CAPTION_RENDERED, {
                    captionDiv: this.cueHTMLElement,
                    currentTrackIdx: d,
                  })
                }
              }
            }
            h.onexit = function() {
              if (y) {
                var e = y.childNodes
                for (var t = 0; t < e.length; ++t) {
                  if (e[t].id === this.cueID) {
                    n.debug('Cue exit id:' + e[t].id)
                    y.removeChild(e[t])
                  }
                }
              }
            }
          } else {
            if (p.data) {
              h = new i(p.start - r, p.end - r, p.data)
              if (p.styles) {
                if (p.styles.align !== undefined && 'align' in h) {
                  h.align = p.styles.align
                }
                if (p.styles.line !== undefined && 'line' in h) {
                  h.line = p.styles.line
                }
                if (p.styles.position !== undefined && 'position' in h) {
                  h.position = p.styles.position
                }
                if (p.styles.size !== undefined && 'size' in h) {
                  h.size = p.styles.size
                }
              }
              h.onenter = function() {
                if (o.mode === a['default'].TEXT_SHOWING) {
                  t.trigger(l['default'].CAPTION_RENDERED, { currentTrackIdx: d })
                }
              }
            }
          }
          try {
            if (h) {
              o.addCue(h)
            } else {
              n.error('impossible to display subtitles.')
            }
          } catch (e) {
            B(o)
            o.addCue(h)
            throw e
          }
        }
      }
      function N(e) {
        return e >= 0 && u[e]
          ? s.getTextTrack(u[e].kind, u[e].id, u[e].lang, u[e].isTTML, u[e].isEmbedded)
          : null
      }
      function L() {
        return d
      }
      function x(e) {
        var t = -1
        for (var r = 0; r < u.length; r++) {
          if (u[r].id === e) {
            t = r
            break
          }
        }
        return t
      }
      function F(e) {
        if (e === d) {
          return
        }
        d = e
        var t = N(d)
        U.call(this, t)
        if (_) {
          clearInterval(_)
          _ = null
        }
        if (t && t.renderingType === 'html') {
          O.call(this, t, true)
          _ = setInterval(O.bind(this, t), 500)
        }
      }
      function U(e) {
        K.call(this)
        if (e) {
          if (e.renderingType === 'html') {
            H.call(this)
          } else {
            V.call(this)
          }
        } else {
          V.call(this)
        }
      }
      function B(e) {
        if (e.cues) {
          var t = e.cues
          var r = t.length - 1
          for (var n = r; n >= 0; n--) {
            e.removeCue(t[n])
          }
        }
      }
      function j(e) {
        var t = N(e)
        if (t) {
          B(t)
        }
      }
      function G() {
        var e = f ? f.length : 0
        for (var t = 0; t < e; t++) {
          var r = N(t)
          if (r) {
            B.call(this, r)
            r.mode = 'disabled'
          }
        }
        f = []
        u = []
        if (_) {
          clearInterval(_)
          _ = null
        }
        d = -1
        K.call(this)
      }
      function q(e) {
        s.removeChild(f[e])
        f.splice(e, 1)
      }
      function H() {
        var e = document.getElementById('native-cue-style')
        if (e) {
          return
        }
        e = document.createElement('style')
        e.id = 'native-cue-style'
        document.head.appendChild(e)
        var t = e.sheet
        var r = s.getElement()
        try {
          if (r) {
            if (r.id) {
              t.insertRule('#' + r.id + '::cue {background: transparent}', 0)
            } else if (r.classList.length !== 0) {
              t.insertRule('.' + r.className + '::cue {background: transparent}', 0)
            } else {
              t.insertRule('video::cue {background: transparent}', 0)
            }
          }
        } catch (e) {
          n.info('' + e.message)
        }
      }
      function V() {
        var e = document.getElementById('native-cue-style')
        if (e) {
          document.head.removeChild(e)
        }
      }
      function K() {
        if (y) {
          while (y.firstChild) {
            y.removeChild(y.firstChild)
          }
        }
      }
      function Y(e) {
        if (!e) {
          return
        }
        if (e.videoModel) {
          s = e.videoModel
        }
      }
      function W(e, t) {
        var r = N(e)
        if (r && r.mode !== t) {
          r.mode = t
        }
      }
      function z() {
        return u[d]
      }
      r = {
        initialize: A,
        displayCConTop: C,
        addTextTrack: R,
        addCaptions: P,
        getCurrentTrackIdx: L,
        setCurrentTrackIdx: F,
        getTrackIdxForId: x,
        getCurrentTrackInfo: z,
        setModeForTrackIdx: W,
        deleteCuesFromTrackIdx: j,
        deleteAllTextTracks: G,
        deleteTextTrack: q,
        setConfig: Y,
      }
      w()
      return r
    }
    v.__dashjs_factory_name = 'TextTracks'
    t['default'] = d['default'].getSingletonFactory(v)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    function s() {
      var e = {}
      function t(t) {
        var r = t.streamId
        var n = t.representationId
        e[r] = e[r] || {}
        e[r][n] = t
      }
      function r(t, r) {
        if (e && e[t] && e[t][r]) {
          return e[t][r]
        } else {
          return null
        }
      }
      function n() {
        e = {}
      }
      var i = { save: t, extract: r, reset: n }
      return i
    }
    s.__dashjs_factory_name = 'InitCache'
    t['default'] = a['default'].getSingletonFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    var n = typeof Reflect === 'object' ? Reflect : null
    var i =
      n && typeof n.apply === 'function'
        ? n.apply
        : function e(t, r, n) {
            return Function.prototype.apply.call(t, r, n)
          }
    var a
    if (n && typeof n.ownKeys === 'function') {
      a = n.ownKeys
    } else if (Object.getOwnPropertySymbols) {
      a = function e(t) {
        return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))
      }
    } else {
      a = function e(t) {
        return Object.getOwnPropertyNames(t)
      }
    }
    function s(e) {
      if (console && console.warn) console.warn(e)
    }
    var o =
      Number.isNaN ||
      function e(t) {
        return t !== t
      }
    function u() {
      u.init.call(this)
    }
    e.exports = u
    u.EventEmitter = u
    u.prototype._events = undefined
    u.prototype._eventsCount = 0
    u.prototype._maxListeners = undefined
    var l = 10
    Object.defineProperty(u, 'defaultMaxListeners', {
      enumerable: true,
      get: function() {
        return l
      },
      set: function(e) {
        if (typeof e !== 'number' || e < 0 || o(e)) {
          throw new RangeError(
            'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
              e +
              '.'
          )
        }
        l = e
      },
    })
    u.init = function() {
      if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
        this._events = Object.create(null)
        this._eventsCount = 0
      }
      this._maxListeners = this._maxListeners || undefined
    }
    u.prototype.setMaxListeners = function e(t) {
      if (typeof t !== 'number' || t < 0 || o(t)) {
        throw new RangeError(
          'The value of "n" is out of range. It must be a non-negative number. Received ' + t + '.'
        )
      }
      this._maxListeners = t
      return this
    }
    function f(e) {
      if (e._maxListeners === undefined) return u.defaultMaxListeners
      return e._maxListeners
    }
    u.prototype.getMaxListeners = function e() {
      return f(this)
    }
    u.prototype.emit = function e(t) {
      var r = []
      for (var n = 1; n < arguments.length; n++) r.push(arguments[n])
      var a = t === 'error'
      var s = this._events
      if (s !== undefined) a = a && s.error === undefined
      else if (!a) return false
      if (a) {
        var o
        if (r.length > 0) o = r[0]
        if (o instanceof Error) {
          throw o
        }
        var u = new Error('Unhandled error.' + (o ? ' (' + o.message + ')' : ''))
        u.context = o
        throw u
      }
      var l = s[t]
      if (l === undefined) return false
      if (typeof l === 'function') {
        i(l, this, r)
      } else {
        var f = l.length
        var d = g(l, f)
        for (var n = 0; n < f; ++n) i(d[n], this, r)
      }
      return true
    }
    function d(e, t, r, n) {
      var i
      var a
      var o
      if (typeof r !== 'function') {
        throw new TypeError(
          'The "listener" argument must be of type Function. Received type ' + typeof r
        )
      }
      a = e._events
      if (a === undefined) {
        a = e._events = Object.create(null)
        e._eventsCount = 0
      } else {
        if (a.newListener !== undefined) {
          e.emit('newListener', t, r.listener ? r.listener : r)
          a = e._events
        }
        o = a[t]
      }
      if (o === undefined) {
        o = a[t] = r
        ++e._eventsCount
      } else {
        if (typeof o === 'function') {
          o = a[t] = n ? [r, o] : [o, r]
        } else if (n) {
          o.unshift(r)
        } else {
          o.push(r)
        }
        i = f(e)
        if (i > 0 && o.length > i && !o.warned) {
          o.warned = true
          var u = new Error(
            'Possible EventEmitter memory leak detected. ' +
              o.length +
              ' ' +
              String(t) +
              ' listeners ' +
              'added. Use emitter.setMaxListeners() to ' +
              'increase limit'
          )
          u.name = 'MaxListenersExceededWarning'
          u.emitter = e
          u.type = t
          u.count = o.length
          s(u)
        }
      }
      return e
    }
    u.prototype.addListener = function e(t, r) {
      return d(this, t, r, false)
    }
    u.prototype.on = u.prototype.addListener
    u.prototype.prependListener = function e(t, r) {
      return d(this, t, r, true)
    }
    function c() {
      var e = []
      for (var t = 0; t < arguments.length; t++) e.push(arguments[t])
      if (!this.fired) {
        this.target.removeListener(this.type, this.wrapFn)
        this.fired = true
        i(this.listener, this.target, e)
      }
    }
    function h(e, t, r) {
      var n = { fired: false, wrapFn: undefined, target: e, type: t, listener: r }
      var i = c.bind(n)
      i.listener = r
      n.wrapFn = i
      return i
    }
    u.prototype.once = function e(t, r) {
      if (typeof r !== 'function') {
        throw new TypeError(
          'The "listener" argument must be of type Function. Received type ' + typeof r
        )
      }
      this.on(t, h(this, t, r))
      return this
    }
    u.prototype.prependOnceListener = function e(t, r) {
      if (typeof r !== 'function') {
        throw new TypeError(
          'The "listener" argument must be of type Function. Received type ' + typeof r
        )
      }
      this.prependListener(t, h(this, t, r))
      return this
    }
    u.prototype.removeListener = function e(t, r) {
      var n, i, a, s, o
      if (typeof r !== 'function') {
        throw new TypeError(
          'The "listener" argument must be of type Function. Received type ' + typeof r
        )
      }
      i = this._events
      if (i === undefined) return this
      n = i[t]
      if (n === undefined) return this
      if (n === r || n.listener === r) {
        if (--this._eventsCount === 0) this._events = Object.create(null)
        else {
          delete i[t]
          if (i.removeListener) this.emit('removeListener', t, n.listener || r)
        }
      } else if (typeof n !== 'function') {
        a = -1
        for (s = n.length - 1; s >= 0; s--) {
          if (n[s] === r || n[s].listener === r) {
            o = n[s].listener
            a = s
            break
          }
        }
        if (a < 0) return this
        if (a === 0) n.shift()
        else {
          m(n, a)
        }
        if (n.length === 1) i[t] = n[0]
        if (i.removeListener !== undefined) this.emit('removeListener', t, o || r)
      }
      return this
    }
    u.prototype.off = u.prototype.removeListener
    u.prototype.removeAllListeners = function e(t) {
      var r, n, i
      n = this._events
      if (n === undefined) return this
      if (n.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null)
          this._eventsCount = 0
        } else if (n[t] !== undefined) {
          if (--this._eventsCount === 0) this._events = Object.create(null)
          else delete n[t]
        }
        return this
      }
      if (arguments.length === 0) {
        var a = Object.keys(n)
        var s
        for (i = 0; i < a.length; ++i) {
          s = a[i]
          if (s === 'removeListener') continue
          this.removeAllListeners(s)
        }
        this.removeAllListeners('removeListener')
        this._events = Object.create(null)
        this._eventsCount = 0
        return this
      }
      r = n[t]
      if (typeof r === 'function') {
        this.removeListener(t, r)
      } else if (r !== undefined) {
        for (i = r.length - 1; i >= 0; i--) {
          this.removeListener(t, r[i])
        }
      }
      return this
    }
    function p(e, t, r) {
      var n = e._events
      if (n === undefined) return []
      var i = n[t]
      if (i === undefined) return []
      if (typeof i === 'function') return r ? [i.listener || i] : [i]
      return r ? y(i) : g(i, i.length)
    }
    u.prototype.listeners = function e(t) {
      return p(this, t, true)
    }
    u.prototype.rawListeners = function e(t) {
      return p(this, t, false)
    }
    u.listenerCount = function(e, t) {
      if (typeof e.listenerCount === 'function') {
        return e.listenerCount(t)
      } else {
        return v.call(e, t)
      }
    }
    u.prototype.listenerCount = v
    function v(e) {
      var t = this._events
      if (t !== undefined) {
        var r = t[e]
        if (typeof r === 'function') {
          return 1
        } else if (r !== undefined) {
          return r.length
        }
      }
      return 0
    }
    u.prototype.eventNames = function e() {
      return this._eventsCount > 0 ? a(this._events) : []
    }
    function g(e, t) {
      var r = new Array(t)
      for (var n = 0; n < t; ++n) r[n] = e[n]
      return r
    }
    function m(e, t) {
      for (; t + 1 < e.length; t++) e[t] = e[t + 1]
      e.pop()
    }
    function y(e) {
      var t = new Array(e.length)
      for (var r = 0; r < t.length; ++r) {
        t[r] = e[r].listener || e[r]
      }
      return t
    }
  },
  function(e, t, r) {
    ;(function(e, t, r) {
      function n(e, t, r, n, i, a, s, o) {
        this.name = t
        this.ns = e
        this.qname = e + ' ' + t
        this.inherit = i
        this.animatable = a
        this.initial = r
        this.applies = n
        this.parse = s
        this.compute = o
      }
      e.all = [
        new n(
          t.ns_tts,
          'backgroundColor',
          'transparent',
          ['body', 'div', 'p', 'region', 'span'],
          false,
          true,
          r.parseColor,
          null
        ),
        new n(t.ns_tts, 'color', 'white', ['span'], true, true, r.parseColor, null),
        new n(
          t.ns_tts,
          'direction',
          'ltr',
          ['p', 'span'],
          true,
          true,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'display',
          'auto',
          ['body', 'div', 'p', 'region', 'span'],
          false,
          true,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'displayAlign',
          'before',
          ['region'],
          false,
          true,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'extent',
          'auto',
          ['tt', 'region'],
          false,
          true,
          function(e) {
            if (e === 'auto') {
              return e
            } else {
              var t = e.split(' ')
              if (t.length !== 2) return null
              var n = r.parseLength(t[0])
              var i = r.parseLength(t[1])
              if (!i || !n) return null
              return { h: i, w: n }
            }
          },
          function(e, t, n, i, a) {
            var s
            var o
            if (i === 'auto') {
              s = new r.ComputedLength(0, 1)
            } else {
              s = r.toComputedLength(i.h.value, i.h.unit, null, e.dimensions.h, null, e.pxLength.h)
              if (s === null) {
                return null
              }
            }
            if (i === 'auto') {
              o = new r.ComputedLength(1, 0)
            } else {
              o = r.toComputedLength(i.w.value, i.w.unit, null, e.dimensions.w, null, e.pxLength.w)
              if (o === null) {
                return null
              }
            }
            return { h: s, w: o }
          }
        ),
        new n(
          t.ns_tts,
          'fontFamily',
          'default',
          ['span'],
          true,
          true,
          function(e) {
            var t = e.split(',')
            var r = []
            for (var n in t) {
              if (t[n].charAt(0) !== "'" && t[n].charAt(0) !== '"') {
                if (t[n] === 'default') {
                  r.push('monospaceSerif')
                } else {
                  r.push(t[n])
                }
              } else {
                r.push(t[n])
              }
            }
            return r
          },
          null
        ),
        new n(t.ns_tts, 'shear', '0%', ['p'], true, true, r.parseLength, function(e, t, r, n) {
          var i
          if (n.unit === '%') {
            i = Math.abs(n.value) > 100 ? Math.sign(n.value) * 100 : n.value
          } else {
            return null
          }
          return i
        }),
        new n(t.ns_tts, 'fontSize', '1c', ['span'], true, true, r.parseLength, function(
          t,
          n,
          i,
          a,
          s
        ) {
          var o
          o = r.toComputedLength(
            a.value,
            a.unit,
            n !== null ? n.styleAttrs[e.byName.fontSize.qname] : t.cellLength.h,
            n !== null ? n.styleAttrs[e.byName.fontSize.qname] : t.cellLength.h,
            t.cellLength.h,
            t.pxLength.h
          )
          return o
        }),
        new n(
          t.ns_tts,
          'fontStyle',
          'normal',
          ['span'],
          true,
          true,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'fontWeight',
          'normal',
          ['span'],
          true,
          true,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'lineHeight',
          'normal',
          ['p'],
          true,
          true,
          function(e) {
            if (e === 'normal') {
              return e
            } else {
              return r.parseLength(e)
            }
          },
          function(t, n, i, a, s) {
            var o
            if (a === 'normal') {
              o = a
            } else {
              o = r.toComputedLength(
                a.value,
                a.unit,
                i.styleAttrs[e.byName.fontSize.qname],
                i.styleAttrs[e.byName.fontSize.qname],
                t.cellLength.h,
                t.pxLength.h
              )
              if (o === null) {
                return null
              }
            }
            return o
          }
        ),
        new n(t.ns_tts, 'opacity', 1, ['region'], false, true, parseFloat, null),
        new n(
          t.ns_tts,
          'origin',
          'auto',
          ['region'],
          false,
          true,
          function(e) {
            if (e === 'auto') {
              return e
            } else {
              var t = e.split(' ')
              if (t.length !== 2) return null
              var n = r.parseLength(t[0])
              var i = r.parseLength(t[1])
              if (!i || !n) return null
              return { h: i, w: n }
            }
          },
          function(e, t, n, i, a) {
            var s
            var o
            if (i === 'auto') {
              s = new r.ComputedLength(0, 0)
            } else {
              s = r.toComputedLength(i.h.value, i.h.unit, null, e.dimensions.h, null, e.pxLength.h)
              if (s === null) {
                return null
              }
            }
            if (i === 'auto') {
              o = new r.ComputedLength(0, 0)
            } else {
              o = r.toComputedLength(i.w.value, i.w.unit, null, e.dimensions.w, null, e.pxLength.w)
              if (o === null) {
                return null
              }
            }
            return { h: s, w: o }
          }
        ),
        new n(
          t.ns_tts,
          'overflow',
          'hidden',
          ['region'],
          false,
          true,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'padding',
          '0px',
          ['region'],
          false,
          true,
          function(e) {
            var t = e.split(' ')
            if (t.length > 4) return null
            var n = []
            for (var i in t) {
              var a = r.parseLength(t[i])
              if (!a) return null
              n.push(a)
            }
            return n
          },
          function(t, n, i, a, s) {
            var o
            if (a.length === 1) {
              o = [a[0], a[0], a[0], a[0]]
            } else if (a.length === 2) {
              o = [a[0], a[1], a[0], a[1]]
            } else if (a.length === 3) {
              o = [a[0], a[1], a[2], a[1]]
            } else if (a.length === 4) {
              o = [a[0], a[1], a[2], a[3]]
            } else {
              return null
            }
            var u = i.styleAttrs[e.byName.writingMode.qname]
            if (u === 'lrtb' || u === 'lr') {
              o = [o[0], o[3], o[2], o[1]]
            } else if (u === 'rltb' || u === 'rl') {
              o = [o[0], o[1], o[2], o[3]]
            } else if (u === 'tblr') {
              o = [o[3], o[0], o[1], o[2]]
            } else if (u === 'tbrl' || u === 'tb') {
              o = [o[3], o[2], o[1], o[0]]
            } else {
              return null
            }
            var l = []
            for (var f in o) {
              if (o[f].value === 0) {
                l[f] = new r.ComputedLength(0, 0)
              } else {
                l[f] = r.toComputedLength(
                  o[f].value,
                  o[f].unit,
                  i.styleAttrs[e.byName.fontSize.qname],
                  f === '0' || f === '2'
                    ? i.styleAttrs[e.byName.extent.qname].h
                    : i.styleAttrs[e.byName.extent.qname].w,
                  f === '0' || f === '2' ? t.cellLength.h : t.cellLength.w,
                  f === '0' || f === '2' ? t.pxLength.h : t.pxLength.w
                )
                if (l[f] === null) return null
              }
            }
            return l
          }
        ),
        new n(
          t.ns_tts,
          'position',
          'top left',
          ['region'],
          false,
          true,
          function(e) {
            return r.parsePosition(e)
          },
          function(t, n, i, a) {
            var s
            var o
            s = r.toComputedLength(
              a.v.offset.value,
              a.v.offset.unit,
              null,
              new r.ComputedLength(
                -i.styleAttrs[e.byName.extent.qname].h.rw,
                t.dimensions.h.rh - i.styleAttrs[e.byName.extent.qname].h.rh
              ),
              null,
              t.pxLength.h
            )
            if (s === null) return null
            if (a.v.edge === 'bottom') {
              s = new r.ComputedLength(
                -s.rw - i.styleAttrs[e.byName.extent.qname].h.rw,
                t.dimensions.h.rh - s.rh - i.styleAttrs[e.byName.extent.qname].h.rh
              )
            }
            o = r.toComputedLength(
              a.h.offset.value,
              a.h.offset.unit,
              null,
              new r.ComputedLength(
                t.dimensions.w.rw - i.styleAttrs[e.byName.extent.qname].w.rw,
                -i.styleAttrs[e.byName.extent.qname].w.rh
              ),
              null,
              t.pxLength.w
            )
            if (s === null) return null
            if (a.h.edge === 'right') {
              o = new r.ComputedLength(
                t.dimensions.w.rw - o.rw - i.styleAttrs[e.byName.extent.qname].w.rw,
                -o.rh - i.styleAttrs[e.byName.extent.qname].w.rh
              )
            }
            return { h: s, w: o }
          }
        ),
        new n(
          t.ns_tts,
          'ruby',
          'none',
          ['span'],
          false,
          true,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'rubyAlign',
          'center',
          ['span'],
          true,
          true,
          function(e) {
            if (!(e === 'center' || e === 'spaceAround')) {
              return null
            }
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'rubyPosition',
          'outside',
          ['span'],
          true,
          true,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'rubyReserve',
          'none',
          ['p'],
          true,
          true,
          function(e) {
            var t = e.split(' ')
            var n = [null, null]
            if (t.length === 0 || t.length > 2) return null
            if (
              t[0] === 'none' ||
              t[0] === 'both' ||
              t[0] === 'after' ||
              t[0] === 'before' ||
              t[0] === 'outside'
            ) {
              n[0] = t[0]
            } else {
              return null
            }
            if (t.length === 2 && t[0] !== 'none') {
              var i = r.parseLength(t[1])
              if (i) {
                n[1] = i
              } else {
                return null
              }
            }
            return n
          },
          function(t, n, i, a, s) {
            if (a[0] === 'none') {
              return a
            }
            var o = null
            if (a[1] === null) {
              o = new r.ComputedLength(
                i.styleAttrs[e.byName.fontSize.qname].rw * 0.5,
                i.styleAttrs[e.byName.fontSize.qname].rh * 0.5
              )
            } else {
              o = r.toComputedLength(
                a[1].value,
                a[1].unit,
                i.styleAttrs[e.byName.fontSize.qname],
                i.styleAttrs[e.byName.fontSize.qname],
                t.cellLength.h,
                t.pxLength.h
              )
            }
            if (o === null) return null
            return [a[0], o]
          }
        ),
        new n(
          t.ns_tts,
          'showBackground',
          'always',
          ['region'],
          false,
          true,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'textAlign',
          'start',
          ['p'],
          true,
          true,
          function(e) {
            return e
          },
          function(e, t, r, n, i) {
            if (n === 'left') {
              return 'start'
            } else if (n === 'right') {
              return 'end'
            } else {
              return n
            }
          }
        ),
        new n(
          t.ns_tts,
          'textCombine',
          'none',
          ['span'],
          true,
          true,
          function(e) {
            var t = e.split(' ')
            if (t.length === 1) {
              if (t[0] === 'none' || t[0] === 'all') {
                return [t[0]]
              }
            }
            return null
          },
          null
        ),
        new n(
          t.ns_tts,
          'textDecoration',
          'none',
          ['span'],
          true,
          true,
          function(e) {
            return e.split(' ')
          },
          null
        ),
        new n(
          t.ns_tts,
          'textEmphasis',
          'none',
          ['span'],
          false,
          true,
          function(e) {
            var t = e.split(' ')
            var n = { style: 'filled', symbol: 'circle', color: null, position: null }
            for (var i in t) {
              if (t[i] === 'none' || t[i] === 'auto') {
                n.style = t[i]
              } else if (t[i] === 'filled' || t[i] === 'open') {
                n.style = t[i]
              } else if (t[i] === 'circle' || t[i] === 'dot' || t[i] === 'sesame') {
                n.symbol = t[i]
              } else if (t[i] === 'current') {
                n.color = t[i]
              } else if (t[i] === 'outside' || t[i] === 'before' || t[i] === 'after') {
                n.position = t[i]
              } else {
                n.color = r.parseColor(t[i])
                if (n.color === null) return null
              }
            }
            return n
          },
          null
        ),
        new n(
          t.ns_tts,
          'textOutline',
          'none',
          ['span'],
          true,
          true,
          function(e) {
            if (e === 'none') {
              return e
            } else {
              var t = {}
              var n = e.split(' ')
              if (n.length === 0 || n.length > 2) return null
              var i = r.parseColor(n[0])
              t.color = i
              if (i !== null) n.shift()
              if (n.length !== 1) return null
              var a = r.parseLength(n[0])
              if (!a) return null
              t.thickness = a
              return t
            }
          },
          function(t, n, i, a, s) {
            if (a === 'none') return a
            var o = {}
            if (a.color === null) {
              o.color = i.styleAttrs[e.byName.color.qname]
            } else {
              o.color = a.color
            }
            o.thickness = r.toComputedLength(
              a.thickness.value,
              a.thickness.unit,
              i.styleAttrs[e.byName.fontSize.qname],
              i.styleAttrs[e.byName.fontSize.qname],
              t.cellLength.h,
              t.pxLength.h
            )
            if (o.thickness === null) return null
            return o
          }
        ),
        new n(t.ns_tts, 'textShadow', 'none', ['span'], true, true, r.parseTextShadow, function(
          t,
          n,
          i,
          a
        ) {
          if (a === 'none') return a
          var s = []
          for (var o in a) {
            var u = {}
            u.x_off = r.toComputedLength(
              a[o][0].value,
              a[o][0].unit,
              null,
              i.styleAttrs[e.byName.fontSize.qname],
              null,
              t.pxLength.w
            )
            if (u.x_off === null) return null
            u.y_off = r.toComputedLength(
              a[o][1].value,
              a[o][1].unit,
              null,
              i.styleAttrs[e.byName.fontSize.qname],
              null,
              t.pxLength.h
            )
            if (u.y_off === null) return null
            if (a[o][2] === null) {
              u.b_radius = 0
            } else {
              u.b_radius = r.toComputedLength(
                a[o][2].value,
                a[o][2].unit,
                null,
                i.styleAttrs[e.byName.fontSize.qname],
                null,
                t.pxLength.h
              )
              if (u.b_radius === null) return null
            }
            if (a[o][3] === null) {
              u.color = i.styleAttrs[e.byName.color.qname]
            } else {
              u.color = a[o][3]
            }
            s.push(u)
          }
          return s
        }),
        new n(
          t.ns_tts,
          'unicodeBidi',
          'normal',
          ['span', 'p'],
          false,
          true,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'visibility',
          'visible',
          ['body', 'div', 'p', 'region', 'span'],
          true,
          true,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'wrapOption',
          'wrap',
          ['span'],
          true,
          true,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'writingMode',
          'lrtb',
          ['region'],
          false,
          true,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_tts,
          'zIndex',
          'auto',
          ['region'],
          false,
          true,
          function(e) {
            var t
            if (e === 'auto') {
              t = e
            } else {
              t = parseInt(e)
              if (isNaN(t)) {
                t = null
              }
            }
            return t
          },
          null
        ),
        new n(t.ns_ebutts, 'linePadding', '0c', ['p'], true, false, r.parseLength, function(
          e,
          t,
          n,
          i,
          a
        ) {
          return r.toComputedLength(i.value, i.unit, null, null, e.cellLength.w, null)
        }),
        new n(
          t.ns_ebutts,
          'multiRowAlign',
          'auto',
          ['p'],
          true,
          false,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_smpte,
          'backgroundImage',
          null,
          ['div'],
          false,
          false,
          function(e) {
            return e
          },
          null
        ),
        new n(
          t.ns_itts,
          'forcedDisplay',
          'false',
          ['body', 'div', 'p', 'region', 'span'],
          true,
          true,
          function(e) {
            return e === 'true' ? true : false
          },
          null
        ),
        new n(
          t.ns_itts,
          'fillLineGap',
          'false',
          ['p'],
          true,
          true,
          function(e) {
            return e === 'true' ? true : false
          },
          null
        ),
      ]
      e.byQName = {}
      for (var i in e.all) {
        e.byQName[e.all[i].qname] = e.all[i]
      }
      e.byName = {}
      for (var a in e.all) {
        e.byName[e.all[a].name] = e.all[a]
      }
    })(
      false ? (this.imscStyles = {}) : t,
      typeof imscNames === 'undefined' ? r(49) : imscNames,
      typeof imscUtils === 'undefined' ? r(50) : imscUtils
    )
  },
  function(e, t, r) {
    'use strict'
    var n = r(333).Buffer
    var i =
      n.isEncoding ||
      function(e) {
        e = '' + e
        switch (e && e.toLowerCase()) {
          case 'hex':
          case 'utf8':
          case 'utf-8':
          case 'ascii':
          case 'binary':
          case 'base64':
          case 'ucs2':
          case 'ucs-2':
          case 'utf16le':
          case 'utf-16le':
          case 'raw':
            return true
          default:
            return false
        }
      }
    function a(e) {
      if (!e) return 'utf8'
      var t
      while (true) {
        switch (e) {
          case 'utf8':
          case 'utf-8':
            return 'utf8'
          case 'ucs2':
          case 'ucs-2':
          case 'utf16le':
          case 'utf-16le':
            return 'utf16le'
          case 'latin1':
          case 'binary':
            return 'latin1'
          case 'base64':
          case 'ascii':
          case 'hex':
            return e
          default:
            if (t) return
            e = ('' + e).toLowerCase()
            t = true
        }
      }
    }
    function s(e) {
      var t = a(e)
      if (typeof t !== 'string' && (n.isEncoding === i || !i(e)))
        throw new Error('Unknown encoding: ' + e)
      return t || e
    }
    t.StringDecoder = o
    function o(e) {
      this.encoding = s(e)
      var t
      switch (this.encoding) {
        case 'utf16le':
          this.text = p
          this.end = v
          t = 4
          break
        case 'utf8':
          this.fillLast = d
          t = 4
          break
        case 'base64':
          this.text = g
          this.end = m
          t = 3
          break
        default:
          this.write = y
          this.end = _
          return
      }
      this.lastNeed = 0
      this.lastTotal = 0
      this.lastChar = n.allocUnsafe(t)
    }
    o.prototype.write = function(e) {
      if (e.length === 0) return ''
      var t
      var r
      if (this.lastNeed) {
        t = this.fillLast(e)
        if (t === undefined) return ''
        r = this.lastNeed
        this.lastNeed = 0
      } else {
        r = 0
      }
      if (r < e.length) return t ? t + this.text(e, r) : this.text(e, r)
      return t || ''
    }
    o.prototype.end = h
    o.prototype.text = c
    o.prototype.fillLast = function(e) {
      if (this.lastNeed <= e.length) {
        e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed)
        return this.lastChar.toString(this.encoding, 0, this.lastTotal)
      }
      e.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e.length)
      this.lastNeed -= e.length
    }
    function u(e) {
      if (e <= 127) return 0
      else if (e >> 5 === 6) return 2
      else if (e >> 4 === 14) return 3
      else if (e >> 3 === 30) return 4
      return e >> 6 === 2 ? -1 : -2
    }
    function l(e, t, r) {
      var n = t.length - 1
      if (n < r) return 0
      var i = u(t[n])
      if (i >= 0) {
        if (i > 0) e.lastNeed = i - 1
        return i
      }
      if (--n < r || i === -2) return 0
      i = u(t[n])
      if (i >= 0) {
        if (i > 0) e.lastNeed = i - 2
        return i
      }
      if (--n < r || i === -2) return 0
      i = u(t[n])
      if (i >= 0) {
        if (i > 0) {
          if (i === 2) i = 0
          else e.lastNeed = i - 3
        }
        return i
      }
      return 0
    }
    function f(e, t, r) {
      if ((t[0] & 192) !== 128) {
        e.lastNeed = 0
        return 'ï¿½'
      }
      if (e.lastNeed > 1 && t.length > 1) {
        if ((t[1] & 192) !== 128) {
          e.lastNeed = 1
          return 'ï¿½'
        }
        if (e.lastNeed > 2 && t.length > 2) {
          if ((t[2] & 192) !== 128) {
            e.lastNeed = 2
            return 'ï¿½'
          }
        }
      }
    }
    function d(e) {
      var t = this.lastTotal - this.lastNeed
      var r = f(this, e, t)
      if (r !== undefined) return r
      if (this.lastNeed <= e.length) {
        e.copy(this.lastChar, t, 0, this.lastNeed)
        return this.lastChar.toString(this.encoding, 0, this.lastTotal)
      }
      e.copy(this.lastChar, t, 0, e.length)
      this.lastNeed -= e.length
    }
    function c(e, t) {
      var r = l(this, e, t)
      if (!this.lastNeed) return e.toString('utf8', t)
      this.lastTotal = r
      var n = e.length - (r - this.lastNeed)
      e.copy(this.lastChar, 0, n)
      return e.toString('utf8', t, n)
    }
    function h(e) {
      var t = e && e.length ? this.write(e) : ''
      if (this.lastNeed) return t + 'ï¿½'
      return t
    }
    function p(e, t) {
      if ((e.length - t) % 2 === 0) {
        var r = e.toString('utf16le', t)
        if (r) {
          var n = r.charCodeAt(r.length - 1)
          if (n >= 55296 && n <= 56319) {
            this.lastNeed = 2
            this.lastTotal = 4
            this.lastChar[0] = e[e.length - 2]
            this.lastChar[1] = e[e.length - 1]
            return r.slice(0, -1)
          }
        }
        return r
      }
      this.lastNeed = 1
      this.lastTotal = 2
      this.lastChar[0] = e[e.length - 1]
      return e.toString('utf16le', t, e.length - 1)
    }
    function v(e) {
      var t = e && e.length ? this.write(e) : ''
      if (this.lastNeed) {
        var r = this.lastTotal - this.lastNeed
        return t + this.lastChar.toString('utf16le', 0, r)
      }
      return t
    }
    function g(e, t) {
      var r = (e.length - t) % 3
      if (r === 0) return e.toString('base64', t)
      this.lastNeed = 3 - r
      this.lastTotal = 3
      if (r === 1) {
        this.lastChar[0] = e[e.length - 1]
      } else {
        this.lastChar[0] = e[e.length - 2]
        this.lastChar[1] = e[e.length - 1]
      }
      return e.toString('base64', t, e.length - r)
    }
    function m(e) {
      var t = e && e.length ? this.write(e) : ''
      if (this.lastNeed) return t + this.lastChar.toString('base64', 0, 3 - this.lastNeed)
      return t
    }
    function y(e) {
      return e.toString(this.encoding)
    }
    function _(e) {
      return e && e.length ? this.write(e) : ''
    }
  },
  function(e, t, r) {
    'use strict'
    ;(function(t, n, i) {
      var a = r(51)
      e.exports = E
      function s(e, t, r) {
        this.chunk = e
        this.encoding = t
        this.callback = r
        this.next = null
      }
      function o(e) {
        var t = this
        this.next = null
        this.entry = null
        this.finish = function() {
          U(t, e)
        }
      }
      var u = !t.browser && ['v0.10', 'v0.9.'].indexOf(t.version.slice(0, 5)) > -1 ? n : a.nextTick
      var l
      E.WritableState = _
      var f = r(33)
      f.inherits = r(28)
      var d = { deprecate: r(338) }
      var c = r(128)
      var h = r(80).Buffer
      var p = i.Uint8Array || function() {}
      function v(e) {
        return h.from(e)
      }
      function g(e) {
        return h.isBuffer(e) || e instanceof p
      }
      var m = r(127)
      f.inherits(E, c)
      function y() {}
      function _(e, t) {
        l = l || r(22)
        e = e || {}
        var n = t instanceof l
        this.objectMode = !!e.objectMode
        if (n) this.objectMode = this.objectMode || !!e.writableObjectMode
        var i = e.highWaterMark
        var a = e.writableHighWaterMark
        var s = this.objectMode ? 16 : 16 * 1024
        if (i || i === 0) this.highWaterMark = i
        else if (n && (a || a === 0)) this.highWaterMark = a
        else this.highWaterMark = s
        this.highWaterMark = Math.floor(this.highWaterMark)
        this.finalCalled = false
        this.needDrain = false
        this.ending = false
        this.ended = false
        this.finished = false
        this.destroyed = false
        var u = e.decodeStrings === false
        this.decodeStrings = !u
        this.defaultEncoding = e.defaultEncoding || 'utf8'
        this.length = 0
        this.writing = false
        this.corked = 0
        this.sync = true
        this.bufferProcessing = false
        this.onwrite = function(e) {
          D(t, e)
        }
        this.writecb = null
        this.writelen = 0
        this.bufferedRequest = null
        this.lastBufferedRequest = null
        this.pendingcb = 0
        this.prefinished = false
        this.errorEmitted = false
        this.bufferedRequestCount = 0
        this.corkedRequestsFree = new o(this)
      }
      _.prototype.getBuffer = function e() {
        var t = this.bufferedRequest
        var r = []
        while (t) {
          r.push(t)
          t = t.next
        }
        return r
      }
      ;(function() {
        try {
          Object.defineProperty(_.prototype, 'buffer', {
            get: d.deprecate(
              function() {
                return this.getBuffer()
              },
              '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.',
              'DEP0003'
            ),
          })
        } catch (e) {}
      })()
      var T
      if (
        typeof Symbol === 'function' &&
        Symbol.hasInstance &&
        typeof Function.prototype[Symbol.hasInstance] === 'function'
      ) {
        T = Function.prototype[Symbol.hasInstance]
        Object.defineProperty(E, Symbol.hasInstance, {
          value: function(e) {
            if (T.call(this, e)) return true
            if (this !== E) return false
            return e && e._writableState instanceof _
          },
        })
      } else {
        T = function(e) {
          return e instanceof this
        }
      }
      function E(e) {
        l = l || r(22)
        if (!T.call(E, this) && !(this instanceof l)) {
          return new E(e)
        }
        this._writableState = new _(e, this)
        this.writable = true
        if (e) {
          if (typeof e.write === 'function') this._write = e.write
          if (typeof e.writev === 'function') this._writev = e.writev
          if (typeof e.destroy === 'function') this._destroy = e.destroy
          if (typeof e.final === 'function') this._final = e.final
        }
        c.call(this)
      }
      E.prototype.pipe = function() {
        this.emit('error', new Error('Cannot pipe, not readable'))
      }
      function b(e, t) {
        var r = new Error('write after end')
        e.emit('error', r)
        a.nextTick(t, r)
      }
      function S(e, t, r, n) {
        var i = true
        var s = false
        if (r === null) {
          s = new TypeError('May not write null values to stream')
        } else if (typeof r !== 'string' && r !== undefined && !t.objectMode) {
          s = new TypeError('Invalid non-string/buffer chunk')
        }
        if (s) {
          e.emit('error', s)
          a.nextTick(n, s)
          i = false
        }
        return i
      }
      E.prototype.write = function(e, t, r) {
        var n = this._writableState
        var i = false
        var a = !n.objectMode && g(e)
        if (a && !h.isBuffer(e)) {
          e = v(e)
        }
        if (typeof t === 'function') {
          r = t
          t = null
        }
        if (a) t = 'buffer'
        else if (!t) t = n.defaultEncoding
        if (typeof r !== 'function') r = y
        if (n.ended) b(this, r)
        else if (a || S(this, n, e, r)) {
          n.pendingcb++
          i = A(this, n, a, e, t, r)
        }
        return i
      }
      E.prototype.cork = function() {
        var e = this._writableState
        e.corked++
      }
      E.prototype.uncork = function() {
        var e = this._writableState
        if (e.corked) {
          e.corked--
          if (!e.writing && !e.corked && !e.finished && !e.bufferProcessing && e.bufferedRequest)
            k(this, e)
        }
      }
      E.prototype.setDefaultEncoding = function e(t) {
        if (typeof t === 'string') t = t.toLowerCase()
        if (
          !(
            [
              'hex',
              'utf8',
              'utf-8',
              'ascii',
              'binary',
              'base64',
              'ucs2',
              'ucs-2',
              'utf16le',
              'utf-16le',
              'raw',
            ].indexOf((t + '').toLowerCase()) > -1
          )
        )
          throw new TypeError('Unknown encoding: ' + t)
        this._writableState.defaultEncoding = t
        return this
      }
      function w(e, t, r) {
        if (!e.objectMode && e.decodeStrings !== false && typeof t === 'string') {
          t = h.from(t, r)
        }
        return t
      }
      Object.defineProperty(E.prototype, 'writableHighWaterMark', {
        enumerable: false,
        get: function() {
          return this._writableState.highWaterMark
        },
      })
      function A(e, t, r, n, i, a) {
        if (!r) {
          var s = w(t, n, i)
          if (n !== s) {
            r = true
            i = 'buffer'
            n = s
          }
        }
        var o = t.objectMode ? 1 : n.length
        t.length += o
        var u = t.length < t.highWaterMark
        if (!u) t.needDrain = true
        if (t.writing || t.corked) {
          var l = t.lastBufferedRequest
          t.lastBufferedRequest = { chunk: n, encoding: i, isBuf: r, callback: a, next: null }
          if (l) {
            l.next = t.lastBufferedRequest
          } else {
            t.bufferedRequest = t.lastBufferedRequest
          }
          t.bufferedRequestCount += 1
        } else {
          I(e, t, false, o, n, i, a)
        }
        return u
      }
      function I(e, t, r, n, i, a, s) {
        t.writelen = n
        t.writecb = s
        t.writing = true
        t.sync = true
        if (r) e._writev(i, t.onwrite)
        else e._write(i, a, t.onwrite)
        t.sync = false
      }
      function C(e, t, r, n, i) {
        --t.pendingcb
        if (r) {
          a.nextTick(i, n)
          a.nextTick(x, e, t)
          e._writableState.errorEmitted = true
          e.emit('error', n)
        } else {
          i(n)
          e._writableState.errorEmitted = true
          e.emit('error', n)
          x(e, t)
        }
      }
      function R(e) {
        e.writing = false
        e.writecb = null
        e.length -= e.writelen
        e.writelen = 0
      }
      function D(e, t) {
        var r = e._writableState
        var n = r.sync
        var i = r.writecb
        R(r)
        if (t) C(e, r, n, t, i)
        else {
          var a = P(r)
          if (!a && !r.corked && !r.bufferProcessing && r.bufferedRequest) {
            k(e, r)
          }
          if (n) {
            u(O, e, r, a, i)
          } else {
            O(e, r, a, i)
          }
        }
      }
      function O(e, t, r, n) {
        if (!r) M(e, t)
        t.pendingcb--
        n()
        x(e, t)
      }
      function M(e, t) {
        if (t.length === 0 && t.needDrain) {
          t.needDrain = false
          e.emit('drain')
        }
      }
      function k(e, t) {
        t.bufferProcessing = true
        var r = t.bufferedRequest
        if (e._writev && r && r.next) {
          var n = t.bufferedRequestCount
          var i = new Array(n)
          var a = t.corkedRequestsFree
          a.entry = r
          var s = 0
          var u = true
          while (r) {
            i[s] = r
            if (!r.isBuf) u = false
            r = r.next
            s += 1
          }
          i.allBuffers = u
          I(e, t, true, t.length, i, '', a.finish)
          t.pendingcb++
          t.lastBufferedRequest = null
          if (a.next) {
            t.corkedRequestsFree = a.next
            a.next = null
          } else {
            t.corkedRequestsFree = new o(t)
          }
          t.bufferedRequestCount = 0
        } else {
          while (r) {
            var l = r.chunk
            var f = r.encoding
            var d = r.callback
            var c = t.objectMode ? 1 : l.length
            I(e, t, false, c, l, f, d)
            r = r.next
            t.bufferedRequestCount--
            if (t.writing) {
              break
            }
          }
          if (r === null) t.lastBufferedRequest = null
        }
        t.bufferedRequest = r
        t.bufferProcessing = false
      }
      E.prototype._write = function(e, t, r) {
        r(new Error('_write() is not implemented'))
      }
      E.prototype._writev = null
      E.prototype.end = function(e, t, r) {
        var n = this._writableState
        if (typeof e === 'function') {
          r = e
          e = null
          t = null
        } else if (typeof t === 'function') {
          r = t
          t = null
        }
        if (e !== null && e !== undefined) this.write(e, t)
        if (n.corked) {
          n.corked = 1
          this.uncork()
        }
        if (!n.ending && !n.finished) F(this, n, r)
      }
      function P(e) {
        return e.ending && e.length === 0 && e.bufferedRequest === null && !e.finished && !e.writing
      }
      function N(e, t) {
        e._final(function(r) {
          t.pendingcb--
          if (r) {
            e.emit('error', r)
          }
          t.prefinished = true
          e.emit('prefinish')
          x(e, t)
        })
      }
      function L(e, t) {
        if (!t.prefinished && !t.finalCalled) {
          if (typeof e._final === 'function') {
            t.pendingcb++
            t.finalCalled = true
            a.nextTick(N, e, t)
          } else {
            t.prefinished = true
            e.emit('prefinish')
          }
        }
      }
      function x(e, t) {
        var r = P(t)
        if (r) {
          L(e, t)
          if (t.pendingcb === 0) {
            t.finished = true
            e.emit('finish')
          }
        }
        return r
      }
      function F(e, t, r) {
        t.ending = true
        x(e, t)
        if (r) {
          if (t.finished) a.nextTick(r)
          else e.once('finish', r)
        }
        t.ended = true
        e.writable = false
      }
      function U(e, t, r) {
        var n = e.entry
        e.entry = null
        while (n) {
          var i = n.callback
          t.pendingcb--
          i(r)
          n = n.next
        }
        if (t.corkedRequestsFree) {
          t.corkedRequestsFree.next = e
        } else {
          t.corkedRequestsFree = e
        }
      }
      Object.defineProperty(E.prototype, 'destroyed', {
        get: function() {
          if (this._writableState === undefined) {
            return false
          }
          return this._writableState.destroyed
        },
        set: function(e) {
          if (!this._writableState) {
            return
          }
          this._writableState.destroyed = e
        },
      })
      E.prototype.destroy = m.destroy
      E.prototype._undestroy = m.undestroy
      E.prototype._destroy = function(e, t) {
        this.end()
        t(e)
      }
    }.call(t, r(52), r(337).setImmediate, r(16)))
  },
  function(e, t, r) {
    var n = r(37)
    var i = n.Buffer
    function a(e, t) {
      for (var r in e) {
        t[r] = e[r]
      }
    }
    if (i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow) {
      e.exports = n
    } else {
      a(n, t)
      t.Buffer = s
    }
    function s(e, t, r) {
      return i(e, t, r)
    }
    a(i, s)
    s.from = function(e, t, r) {
      if (typeof e === 'number') {
        throw new TypeError('Argument must not be a number')
      }
      return i(e, t, r)
    }
    s.alloc = function(e, t, r) {
      if (typeof e !== 'number') {
        throw new TypeError('Argument must be a number')
      }
      var n = i(e)
      if (t !== undefined) {
        if (typeof r === 'string') {
          n.fill(t, r)
        } else {
          n.fill(t)
        }
      } else {
        n.fill(0)
      }
      return n
    }
    s.allocUnsafe = function(e) {
      if (typeof e !== 'number') {
        throw new TypeError('Argument must be a number')
      }
      return i(e)
    }
    s.allocUnsafeSlow = function(e) {
      if (typeof e !== 'number') {
        throw new TypeError('Argument must be a number')
      }
      return n.SlowBuffer(e)
    }
  },
  function(e, t, r) {
    t = e.exports = r(125)
    t.Stream = t
    t.Readable = t
    t.Writable = r(79)
    t.Duplex = r(22)
    t.Transform = r(126)
    t.PassThrough = r(328)
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = r(11)
    var i = o(n)
    var a = r(12)
    var s = o(a)
    function o(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var u = (function() {
      function e() {
        ;(0, i.default)(this, e)
      }
      ;(0, s.default)(e, null, [
        {
          key: 'getOS',
          value: function e() {
            if (this.isWindows()) {
              return 'Windows'
            } else if (this.isOSX()) {
              return 'Mac'
            } else if (this.isLinux()) {
              return 'Linux'
            }
            return 'Others'
          },
        },
        {
          key: 'isWindows',
          value: function e() {
            return window.navigator.platform.indexOf('Win') > -1
          },
        },
        {
          key: 'inIframe',
          value: function e() {
            try {
              return window.self !== window.top
            } catch (e) {
              return true
            }
          },
        },
        {
          key: 'isOSX',
          value: function e() {
            return window.navigator.platform.indexOf('Mac') > -1
          },
        },
        {
          key: 'isLinux',
          value: function e() {
            return window.navigator.platform.indexOf('Linux') > -1
          },
        },
        {
          key: 'isOpera',
          value: function e() {
            return (
              (Boolean(window.opr) && Boolean(opr.addons)) ||
              Boolean(window.opera) ||
              navigator.userAgent.indexOf(' OPR/') >= 0
            )
          },
        },
        {
          key: 'isFirefox',
          value: function e() {
            return typeof InstallTrigger !== 'undefined'
          },
        },
        {
          key: 'isMobile',
          value: function e() {
            return /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(
              navigator.userAgent.toLowerCase()
            )
          },
        },
        {
          key: 'isSafari',
          value: function e() {
            var t = navigator.userAgent.toLowerCase()
            var e = false
            try {
              e =
                /constructor/i.test(window.HTMLElement) ||
                (function(e) {
                  return e.toString() === '[object SafariRemoteNotification]'
                })(!window['safari'] || safari.pushNotification)
            } catch (e) {}
            e =
              e ||
              (t.indexOf('safari') != -1 &&
                !(t.indexOf('chrome') != -1) &&
                t.indexOf('version/') != -1)
            return e
          },
        },
        {
          key: 'isIE',
          value: function e() {
            return false || Boolean(document.documentMode)
          },
        },
        {
          key: 'isEdge',
          value: function e() {
            return window.navigator.userAgent.indexOf('Edge') > -1
          },
        },
        {
          key: 'isChrome',
          value: function e() {
            return Boolean(window.chrome) && Boolean(window.chrome.webstore)
          },
        },
      ])
      return e
    })()
    t.default = u
  },
  function(e, t, r) {
    e.exports = { default: r(145), __esModule: true }
  },
  function(e, t, r) {
    e.exports = { default: r(147), __esModule: true }
  },
  function(e, t, r) {
    var n = r(39)
    var i = r(10)('toStringTag')
    var a =
      n(
        (function() {
          return arguments
        })()
      ) == 'Arguments'
    var s = function(e, t) {
      try {
        return e[t]
      } catch (e) {}
    }
    e.exports = function(e) {
      var t, r, o
      return e === undefined
        ? 'Undefined'
        : e === null
        ? 'Null'
        : typeof (r = s((t = Object(e)), i)) == 'string'
        ? r
        : a
        ? n(t)
        : (o = n(t)) == 'Object' && typeof t.callee == 'function'
        ? 'Arguments'
        : o
    }
  },
  function(e, t) {
    e.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(
      ','
    )
  },
  function(e, t) {
    e.exports = function(e) {
      try {
        return !!e()
      } catch (e) {
        return true
      }
    }
  },
  function(e, t, r) {
    var n = r(8).document
    e.exports = n && n.documentElement
  },
  function(e, t, r) {
    'use strict'
    var n = r(57)
    var i = r(29)
    var a = r(167)
    var s = r(24)
    var o = r(31)
    var u = r(157)
    var l = r(59)
    var f = r(163)
    var d = r(10)('iterator')
    var c = !([].keys && 'next' in [].keys())
    var h = '@@iterator'
    var p = 'keys'
    var v = 'values'
    var g = function() {
      return this
    }
    e.exports = function(e, t, r, m, y, _, T) {
      u(r, t, m)
      var E = function(e) {
        if (!c && e in A) return A[e]
        switch (e) {
          case p:
            return function t() {
              return new r(this, e)
            }
          case v:
            return function t() {
              return new r(this, e)
            }
        }
        return function t() {
          return new r(this, e)
        }
      }
      var b = t + ' Iterator'
      var S = y == v
      var w = false
      var A = e.prototype
      var I = A[d] || A[h] || (y && A[y])
      var C = I || E(y)
      var R = y ? (!S ? C : E('entries')) : undefined
      var D = t == 'Array' ? A.entries || I : I
      var O, M, k
      if (D) {
        k = f(D.call(new e()))
        if (k !== Object.prototype && k.next) {
          l(k, b, true)
          if (!n && typeof k[d] != 'function') s(k, d, g)
        }
      }
      if (S && I && I.name !== v) {
        w = true
        C = function e() {
          return I.call(this)
        }
      }
      if ((!n || T) && (c || w || !A[d])) {
        s(A, d, C)
      }
      o[t] = C
      o[b] = g
      if (y) {
        O = { values: S ? C : E(v), keys: _ ? C : E(p), entries: R }
        if (T)
          for (M in O) {
            if (!(M in A)) a(A, M, O[M])
          }
        else i(i.P + i.F * (c || w), t, O)
      }
      return O
    }
  },
  function(e, t) {
    e.exports = function(e) {
      try {
        return { e: false, v: e() }
      } catch (e) {
        return { e: true, v: e }
      }
    }
  },
  function(e, t, r) {
    var n = r(17)
    var i = r(30)
    var a = r(58)
    e.exports = function(e, t) {
      n(e)
      if (i(t) && t.constructor === e) return t
      var r = a.f(e)
      var s = r.resolve
      s(t)
      return r.promise
    }
  },
  function(e, t) {
    e.exports = function(e, t) {
      return { enumerable: !(e & 1), configurable: !(e & 2), writable: !(e & 4), value: t }
    }
  },
  function(e, t, r) {
    var n = r(13)
    var i = r(8)
    var a = '__core-js_shared__'
    var s = i[a] || (i[a] = {})
    ;(e.exports = function(e, t) {
      return s[e] || (s[e] = t !== undefined ? t : {})
    })('versions', []).push({
      version: n.version,
      mode: r(57) ? 'pure' : 'global',
      copyright: 'Â© 2018 Denis Pushkarev (zloirock.ru)',
    })
  },
  function(e, t, r) {
    var n = r(17)
    var i = r(38)
    var a = r(10)('species')
    e.exports = function(e, t) {
      var r = n(e).constructor
      var s
      return r === undefined || (s = n(r)[a]) == undefined ? t : i(s)
    }
  },
  function(e, t, r) {
    var n = r(40)
    var i = r(153)
    var a = r(88)
    var s = r(56)
    var o = r(8)
    var u = o.process
    var l = o.setImmediate
    var f = o.clearImmediate
    var d = o.MessageChannel
    var c = o.Dispatch
    var h = 0
    var p = {}
    var v = 'onreadystatechange'
    var g, m, y
    var _ = function() {
      var e = +this
      if (p.hasOwnProperty(e)) {
        var t = p[e]
        delete p[e]
        t()
      }
    }
    var T = function(e) {
      _.call(e.data)
    }
    if (!l || !f) {
      l = function e(t) {
        var r = []
        var n = 1
        while (arguments.length > n) r.push(arguments[n++])
        p[++h] = function() {
          i(typeof t == 'function' ? t : Function(t), r)
        }
        g(h)
        return h
      }
      f = function e(t) {
        delete p[t]
      }
      if (r(39)(u) == 'process') {
        g = function(e) {
          u.nextTick(n(_, e, 1))
        }
      } else if (c && c.now) {
        g = function(e) {
          c.now(n(_, e, 1))
        }
      } else if (d) {
        m = new d()
        y = m.port2
        m.port1.onmessage = T
        g = n(y.postMessage, y, 1)
      } else if (o.addEventListener && typeof postMessage == 'function' && !o.importScripts) {
        g = function(e) {
          o.postMessage(e + '', '*')
        }
        o.addEventListener('message', T, false)
      } else if (v in s('script')) {
        g = function(e) {
          a.appendChild(s('script'))[v] = function() {
            a.removeChild(this)
            _.call(e)
          }
        }
      } else {
        g = function(e) {
          setTimeout(n(_, e, 1), 0)
        }
      }
    }
    e.exports = { set: l, clear: f }
  },
  function(e, t, r) {
    var n = r(61)
    var i = Math.min
    e.exports = function(e) {
      return e > 0 ? i(n(e), 9007199254740991) : 0
    }
  },
  function(e, t) {
    var r = 0
    var n = Math.random()
    e.exports = function(e) {
      return 'Symbol('.concat(e === undefined ? '' : e, ')_', (++r + n).toString(36))
    }
  },
  function(e, t, r) {
    'use strict'
    ;(function(e) {
      'use strict'
      var t = {
        42: 225,
        92: 233,
        94: 237,
        95: 243,
        96: 250,
        123: 231,
        124: 247,
        125: 209,
        126: 241,
        127: 9608,
        128: 174,
        129: 176,
        130: 189,
        131: 191,
        132: 8482,
        133: 162,
        134: 163,
        135: 9834,
        136: 224,
        137: 32,
        138: 232,
        139: 226,
        140: 234,
        141: 238,
        142: 244,
        143: 251,
        144: 193,
        145: 201,
        146: 211,
        147: 218,
        148: 220,
        149: 252,
        150: 8216,
        151: 161,
        152: 42,
        153: 8217,
        154: 9473,
        155: 169,
        156: 8480,
        157: 8226,
        158: 8220,
        159: 8221,
        160: 192,
        161: 194,
        162: 199,
        163: 200,
        164: 202,
        165: 203,
        166: 235,
        167: 206,
        168: 207,
        169: 239,
        170: 212,
        171: 217,
        172: 249,
        173: 219,
        174: 171,
        175: 187,
        176: 195,
        177: 227,
        178: 205,
        179: 204,
        180: 236,
        181: 210,
        182: 242,
        183: 213,
        184: 245,
        185: 123,
        186: 125,
        187: 92,
        188: 94,
        189: 95,
        190: 124,
        191: 8764,
        192: 196,
        193: 228,
        194: 214,
        195: 246,
        196: 223,
        197: 165,
        198: 164,
        199: 9475,
        200: 197,
        201: 229,
        202: 216,
        203: 248,
        204: 9487,
        205: 9491,
        206: 9495,
        207: 9499,
      }
      var r = function e(r) {
        var n = r
        if (t.hasOwnProperty(r)) {
          n = t[r]
        }
        return String.fromCharCode(n)
      }
      var n = 15,
        i = 32
      var a = { 17: 1, 18: 3, 21: 5, 22: 7, 23: 9, 16: 11, 19: 12, 20: 14 }
      var s = { 17: 2, 18: 4, 21: 6, 22: 8, 23: 10, 19: 13, 20: 15 }
      var o = { 25: 1, 26: 3, 29: 5, 30: 7, 31: 9, 24: 11, 27: 12, 28: 14 }
      var u = { 25: 2, 26: 4, 29: 6, 30: 8, 31: 10, 27: 13, 28: 15 }
      var l = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'black', 'transparent']
      var f = {
        verboseFilter: { DATA: 3, DEBUG: 3, INFO: 2, WARNING: 2, TEXT: 1, ERROR: 0 },
        time: null,
        verboseLevel: 0,
        setTime: function e(t) {
          this.time = t
        },
        log: function e(t, r) {
          var n = this.verboseFilter[t]
          if (this.verboseLevel >= n) {
            console.log(this.time + ' [' + t + '] ' + r)
          }
        },
      }
      var d = function e(t) {
        var r = []
        for (var n = 0; n < t.length; n++) {
          r.push(t[n].toString(16))
        }
        return r
      }
      var c = function e(t, r, n, i, a) {
        this.foreground = t || 'white'
        this.underline = r || false
        this.italics = n || false
        this.background = i || 'black'
        this.flash = a || false
      }
      c.prototype = {
        reset: function e() {
          this.foreground = 'white'
          this.underline = false
          this.italics = false
          this.background = 'black'
          this.flash = false
        },
        setStyles: function e(t) {
          var r = ['foreground', 'underline', 'italics', 'background', 'flash']
          for (var n = 0; n < r.length; n++) {
            var i = r[n]
            if (t.hasOwnProperty(i)) {
              this[i] = t[i]
            }
          }
        },
        isDefault: function e() {
          return (
            this.foreground === 'white' &&
            !this.underline &&
            !this.italics &&
            this.background === 'black' &&
            !this.flash
          )
        },
        equals: function e(t) {
          return (
            this.foreground === t.foreground &&
            this.underline === t.underline &&
            this.italics === t.italics &&
            this.background === t.background &&
            this.flash === t.flash
          )
        },
        copy: function e(t) {
          this.foreground = t.foreground
          this.underline = t.underline
          this.italics = t.italics
          this.background = t.background
          this.flash = t.flash
        },
        toString: function e() {
          return (
            'color=' +
            this.foreground +
            ', underline=' +
            this.underline +
            ', italics=' +
            this.italics +
            ', background=' +
            this.background +
            ', flash=' +
            this.flash
          )
        },
      }
      var h = function e(t, r, n, i, a, s) {
        this.uchar = t || ' '
        this.penState = new c(r, n, i, a, s)
      }
      h.prototype = {
        reset: function e() {
          this.uchar = ' '
          this.penState.reset()
        },
        setChar: function e(t, r) {
          this.uchar = t
          this.penState.copy(r)
        },
        setPenState: function e(t) {
          this.penState.copy(t)
        },
        equals: function e(t) {
          return this.uchar === t.uchar && this.penState.equals(t.penState)
        },
        copy: function e(t) {
          this.uchar = t.uchar
          this.penState.copy(t.penState)
        },
        isEmpty: function e() {
          return this.uchar === ' ' && this.penState.isDefault()
        },
      }
      var p = function e() {
        this.chars = []
        for (var t = 0; t < i; t++) {
          this.chars.push(new h())
        }
        this.pos = 0
        this.currPenState = new c()
      }
      p.prototype = {
        equals: function e(t) {
          var r = true
          for (var n = 0; n < i; n++) {
            if (!this.chars[n].equals(t.chars[n])) {
              r = false
              break
            }
          }
          return r
        },
        copy: function e(t) {
          for (var r = 0; r < i; r++) {
            this.chars[r].copy(t.chars[r])
          }
        },
        isEmpty: function e() {
          var t = true
          for (var r = 0; r < i; r++) {
            if (!this.chars[r].isEmpty()) {
              t = false
              break
            }
          }
          return t
        },
        setCursor: function e(t) {
          if (this.pos !== t) {
            this.pos = t
          }
          if (this.pos < 0) {
            f.log('ERROR', 'Negative cursor position ' + this.pos)
            this.pos = 0
          } else if (this.pos > i) {
            f.log('ERROR', 'Too large cursor position ' + this.pos)
            this.pos = i
          }
        },
        moveCursor: function e(t) {
          var r = this.pos + t
          if (t > 1) {
            for (var n = this.pos + 1; n < r + 1; n++) {
              this.chars[n].setPenState(this.currPenState)
            }
          }
          this.setCursor(r)
        },
        backSpace: function e() {
          this.moveCursor(-1)
          this.chars[this.pos].setChar(' ', this.currPenState)
        },
        insertChar: function e(t) {
          if (t >= 144) {
            this.backSpace()
          }
          var n = r(t)
          if (this.pos >= i) {
            f.log(
              'ERROR',
              'Cannot insert ' +
                t.toString(16) +
                ' (' +
                n +
                ') at position ' +
                this.pos +
                '. Skipping it!'
            )
            return
          }
          this.chars[this.pos].setChar(n, this.currPenState)
          this.moveCursor(1)
        },
        clearFromPos: function e(t) {
          var r
          for (r = t; r < i; r++) {
            this.chars[r].reset()
          }
        },
        clear: function e() {
          this.clearFromPos(0)
          this.pos = 0
          this.currPenState.reset()
        },
        clearToEndOfRow: function e() {
          this.clearFromPos(this.pos)
        },
        getTextString: function e() {
          var t = []
          var r = true
          for (var n = 0; n < i; n++) {
            var a = this.chars[n].uchar
            if (a !== ' ') {
              r = false
            }
            t.push(a)
          }
          if (r) {
            return ''
          } else {
            return t.join('')
          }
        },
        setPenStyles: function e(t) {
          this.currPenState.setStyles(t)
          var r = this.chars[this.pos]
          r.setPenState(this.currPenState)
        },
      }
      var v = function e() {
        this.rows = []
        for (var t = 0; t < n; t++) {
          this.rows.push(new p())
        }
        this.currRow = n - 1
        this.nrRollUpRows = null
        this.reset()
      }
      v.prototype = {
        reset: function e() {
          for (var t = 0; t < n; t++) {
            this.rows[t].clear()
          }
          this.currRow = n - 1
        },
        equals: function e(t) {
          var r = true
          for (var i = 0; i < n; i++) {
            if (!this.rows[i].equals(t.rows[i])) {
              r = false
              break
            }
          }
          return r
        },
        copy: function e(t) {
          for (var r = 0; r < n; r++) {
            this.rows[r].copy(t.rows[r])
          }
        },
        isEmpty: function e() {
          var t = true
          for (var r = 0; r < n; r++) {
            if (!this.rows[r].isEmpty()) {
              t = false
              break
            }
          }
          return t
        },
        backSpace: function e() {
          var t = this.rows[this.currRow]
          t.backSpace()
        },
        clearToEndOfRow: function e() {
          var t = this.rows[this.currRow]
          t.clearToEndOfRow()
        },
        insertChar: function e(t) {
          var r = this.rows[this.currRow]
          r.insertChar(t)
        },
        setPen: function e(t) {
          var r = this.rows[this.currRow]
          r.setPenStyles(t)
        },
        moveCursor: function e(t) {
          var r = this.rows[this.currRow]
          r.moveCursor(t)
        },
        setCursor: function e(t) {
          f.log('INFO', 'setCursor: ' + t)
          var r = this.rows[this.currRow]
          r.setCursor(t)
        },
        setPAC: function e(t) {
          f.log('INFO', 'pacData = ' + JSON.stringify(t))
          var r = t.row - 1
          if (this.nrRollUpRows && r < this.nrRollUpRows - 1) {
            r = this.nrRollUpRows - 1
          }
          this.currRow = r
          var n = this.rows[this.currRow]
          if (t.indent !== null) {
            var i = t.indent
            var a = Math.max(i - 1, 0)
            n.setCursor(t.indent)
            t.color = n.chars[a].penState.foreground
          }
          var s = {
            foreground: t.color,
            underline: t.underline,
            italics: t.italics,
            background: 'black',
            flash: false,
          }
          this.setPen(s)
        },
        setBkgData: function e(t) {
          f.log('INFO', 'bkgData = ' + JSON.stringify(t))
          this.backSpace()
          this.setPen(t)
          this.insertChar(32)
        },
        setRollUpRows: function e(t) {
          this.nrRollUpRows = t
        },
        rollUp: function e() {
          if (this.nrRollUpRows === null) {
            f.log('DEBUG', 'roll_up but nrRollUpRows not set yet')
            return
          }
          f.log('TEXT', this.getDisplayText())
          var t = this.currRow + 1 - this.nrRollUpRows
          var r = this.rows.splice(t, 1)[0]
          r.clear()
          this.rows.splice(this.currRow, 0, r)
          f.log('INFO', 'Rolling up')
        },
        getDisplayText: function e(t) {
          t = t || false
          var r = []
          var i = ''
          var a = -1
          for (var s = 0; s < n; s++) {
            var o = this.rows[s].getTextString()
            if (o) {
              a = s + 1
              if (t) {
                r.push('Row ' + a + ': "' + o + '"')
              } else {
                r.push(o.trim())
              }
            }
          }
          if (r.length > 0) {
            if (t) {
              i = '[' + r.join(' | ') + ']'
            } else {
              i = r.join('\n')
            }
          }
          return i
        },
        getTextAndFormat: function e() {
          return this.rows
        },
      }
      var g = function e(t, r) {
        this.chNr = t
        this.outputFilter = r
        this.mode = null
        this.verbose = 0
        this.displayedMemory = new v()
        this.nonDisplayedMemory = new v()
        this.lastOutputScreen = new v()
        this.currRollUpRow = this.displayedMemory.rows[n - 1]
        this.writeScreen = this.displayedMemory
        this.mode = null
        this.cueStartTime = null
      }
      g.prototype = {
        modes: ['MODE_ROLL-UP', 'MODE_POP-ON', 'MODE_PAINT-ON', 'MODE_TEXT'],
        reset: function e() {
          this.mode = null
          this.displayedMemory.reset()
          this.nonDisplayedMemory.reset()
          this.lastOutputScreen.reset()
          this.currRollUpRow = this.displayedMemory.rows[n - 1]
          this.writeScreen = this.displayedMemory
          this.mode = null
          this.cueStartTime = null
          this.lastCueEndTime = null
        },
        getHandler: function e() {
          return this.outputFilter
        },
        setHandler: function e(t) {
          this.outputFilter = t
        },
        setPAC: function e(t) {
          this.writeScreen.setPAC(t)
        },
        setBkgData: function e(t) {
          this.writeScreen.setBkgData(t)
        },
        setMode: function e(t) {
          if (t === this.mode) {
            return
          }
          this.mode = t
          f.log('INFO', 'MODE=' + t)
          if (this.mode == 'MODE_POP-ON') {
            this.writeScreen = this.nonDisplayedMemory
          } else {
            this.writeScreen = this.displayedMemory
            this.writeScreen.reset()
          }
          if (this.mode !== 'MODE_ROLL-UP') {
            this.displayedMemory.nrRollUpRows = null
            this.nonDisplayedMemory.nrRollUpRows = null
          }
          this.mode = t
        },
        insertChars: function e(t) {
          for (var r = 0; r < t.length; r++) {
            this.writeScreen.insertChar(t[r])
          }
          var n = this.writeScreen === this.displayedMemory ? 'DISP' : 'NON_DISP'
          f.log('INFO', n + ': ' + this.writeScreen.getDisplayText(true))
          if (this.mode === 'MODE_PAINT-ON' || this.mode === 'MODE_ROLL-UP') {
            f.log('TEXT', 'DISPLAYED: ' + this.displayedMemory.getDisplayText(true))
            this.outputDataUpdate()
          }
        },
        cc_RCL: function e() {
          f.log('INFO', 'RCL - Resume Caption Loading')
          this.setMode('MODE_POP-ON')
        },
        cc_BS: function e() {
          f.log('INFO', 'BS - BackSpace')
          if (this.mode === 'MODE_TEXT') {
            return
          }
          this.writeScreen.backSpace()
          if (this.writeScreen === this.displayedMemory) {
            this.outputDataUpdate()
          }
        },
        cc_AOF: function e() {
          return
        },
        cc_AON: function e() {
          return
        },
        cc_DER: function e() {
          f.log('INFO', 'DER- Delete to End of Row')
          this.writeScreen.clearToEndOfRow()
          this.outputDataUpdate()
        },
        cc_RU: function e(t) {
          f.log('INFO', 'RU(' + t + ') - Roll Up')
          this.writeScreen = this.displayedMemory
          this.setMode('MODE_ROLL-UP')
          this.writeScreen.setRollUpRows(t)
        },
        cc_FON: function e() {
          f.log('INFO', 'FON - Flash On')
          this.writeScreen.setPen({ flash: true })
        },
        cc_RDC: function e() {
          f.log('INFO', 'RDC - Resume Direct Captioning')
          this.setMode('MODE_PAINT-ON')
        },
        cc_TR: function e() {
          f.log('INFO', 'TR')
          this.setMode('MODE_TEXT')
        },
        cc_RTD: function e() {
          f.log('INFO', 'RTD')
          this.setMode('MODE_TEXT')
        },
        cc_EDM: function e() {
          f.log('INFO', 'EDM - Erase Displayed Memory')
          this.displayedMemory.reset()
          this.outputDataUpdate()
        },
        cc_CR: function e() {
          f.log('CR - Carriage Return')
          this.writeScreen.rollUp()
          this.outputDataUpdate()
        },
        cc_ENM: function e() {
          f.log('INFO', 'ENM - Erase Non-displayed Memory')
          this.nonDisplayedMemory.reset()
        },
        cc_EOC: function e() {
          f.log('INFO', 'EOC - End Of Caption')
          if (this.mode === 'MODE_POP-ON') {
            var t = this.displayedMemory
            this.displayedMemory = this.nonDisplayedMemory
            this.nonDisplayedMemory = t
            this.writeScreen = this.nonDisplayedMemory
            f.log('TEXT', 'DISP: ' + this.displayedMemory.getDisplayText())
          }
          this.outputDataUpdate()
        },
        cc_TO: function e(t) {
          f.log('INFO', 'TO(' + t + ') - Tab Offset')
          this.writeScreen.moveCursor(t)
        },
        cc_MIDROW: function e(t) {
          var r = { flash: false }
          r.underline = t % 2 === 1
          r.italics = t >= 46
          if (!r.italics) {
            var n = Math.floor(t / 2) - 16
            var i = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta']
            r.foreground = i[n]
          } else {
            r.foreground = 'white'
          }
          f.log('INFO', 'MIDROW: ' + JSON.stringify(r))
          this.writeScreen.setPen(r)
        },
        outputDataUpdate: function e() {
          var t = f.time
          if (t === null) {
            return
          }
          if (this.outputFilter) {
            if (this.outputFilter.updateData) {
              this.outputFilter.updateData(t, this.displayedMemory)
            }
            if (this.cueStartTime === null && !this.displayedMemory.isEmpty()) {
              this.cueStartTime = t
            } else {
              if (!this.displayedMemory.equals(this.lastOutputScreen)) {
                if (this.outputFilter.newCue) {
                  this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen)
                }
                this.cueStartTime = this.displayedMemory.isEmpty() ? null : t
              }
            }
            this.lastOutputScreen.copy(this.displayedMemory)
          }
        },
        cueSplitAtTime: function e(t) {
          if (this.outputFilter) {
            if (!this.displayedMemory.isEmpty()) {
              if (this.outputFilter.newCue) {
                this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory)
              }
              this.cueStartTime = t
            }
          }
        },
      }
      var m = function e(t, r, n) {
        this.field = t || 1
        this.outputs = [r, n]
        this.channels = [new g(1, r), new g(2, n)]
        this.currChNr = -1
        this.lastCmdA = null
        this.lastCmdB = null
        this.bufferedData = []
        this.startTime = null
        this.lastTime = null
        this.dataCounters = { padding: 0, char: 0, cmd: 0, other: 0 }
      }
      m.prototype = {
        getHandler: function e(t) {
          return this.channels[t].getHandler()
        },
        setHandler: function e(t, r) {
          this.channels[t].setHandler(r)
        },
        addData: function e(t, r) {
          var n,
            i,
            a,
            s = false
          this.lastTime = t
          f.setTime(t)
          for (var o = 0; o < r.length; o += 2) {
            i = r[o] & 127
            a = r[o + 1] & 127
            if (i >= 16 && i <= 31 && i === this.lastCmdA && a === this.lastCmdB) {
              this.lastCmdA = null
              this.lastCmdB = null
              f.log('DEBUG', 'Repeated command (' + d([i, a]) + ') is dropped')
              continue
            }
            if (i === 0 && a === 0) {
              this.dataCounters.padding += 2
              continue
            } else {
              f.log('DATA', '[' + d([r[o], r[o + 1]]) + '] -> (' + d([i, a]) + ')')
            }
            n = this.parseCmd(i, a)
            if (!n) {
              n = this.parseMidrow(i, a)
            }
            if (!n) {
              n = this.parsePAC(i, a)
            }
            if (!n) {
              n = this.parseBackgroundAttributes(i, a)
            }
            if (!n) {
              s = this.parseChars(i, a)
              if (s) {
                if (this.currChNr && this.currChNr >= 0) {
                  var u = this.channels[this.currChNr - 1]
                  u.insertChars(s)
                } else {
                  f.log('WARNING', 'No channel found yet. TEXT-MODE?')
                }
              }
            }
            if (n) {
              this.dataCounters.cmd += 2
            } else if (s) {
              this.dataCounters.char += 2
            } else {
              this.dataCounters.other += 2
              f.log(
                'WARNING',
                "Couldn't parse cleaned data " + d([i, a]) + ' orig: ' + d([r[o], r[o + 1]])
              )
            }
          }
        },
        parseCmd: function e(t, r) {
          var n = null
          var i = (t === 20 || t === 21 || t === 28 || t === 29) && 32 <= r && r <= 47
          var a = (t === 23 || t === 31) && 33 <= r && r <= 35
          if (!(i || a)) {
            return false
          }
          if (t === 20 || t === 21 || t === 23) {
            n = 1
          } else {
            n = 2
          }
          var s = this.channels[n - 1]
          if (t === 20 || t === 21 || t === 28 || t === 29) {
            if (r === 32) {
              s.cc_RCL()
            } else if (r === 33) {
              s.cc_BS()
            } else if (r === 34) {
              s.cc_AOF()
            } else if (r === 35) {
              s.cc_AON()
            } else if (r === 36) {
              s.cc_DER()
            } else if (r === 37) {
              s.cc_RU(2)
            } else if (r === 38) {
              s.cc_RU(3)
            } else if (r === 39) {
              s.cc_RU(4)
            } else if (r === 40) {
              s.cc_FON()
            } else if (r === 41) {
              s.cc_RDC()
            } else if (r === 42) {
              s.cc_TR()
            } else if (r === 43) {
              s.cc_RTD()
            } else if (r === 44) {
              s.cc_EDM()
            } else if (r === 45) {
              s.cc_CR()
            } else if (r === 46) {
              s.cc_ENM()
            } else if (r === 47) {
              s.cc_EOC()
            }
          } else {
            s.cc_TO(r - 32)
          }
          this.lastCmdA = t
          this.lastCmdB = r
          this.currChNr = n
          return true
        },
        parseMidrow: function e(t, r) {
          var n = null
          if ((t === 17 || t === 25) && 32 <= r && r <= 47) {
            if (t === 17) {
              n = 1
            } else {
              n = 2
            }
            if (n !== this.currChNr) {
              f.log('ERROR', 'Mismatch channel in midrow parsing')
              return false
            }
            var i = this.channels[n - 1]
            i.insertChars([32])
            i.cc_MIDROW(r)
            f.log('DEBUG', 'MIDROW (' + d([t, r]) + ')')
            this.lastCmdA = t
            this.lastCmdB = r
            return true
          }
          return false
        },
        parsePAC: function e(t, r) {
          var n = null
          var i = null
          var l = ((17 <= t && t <= 23) || (25 <= t && t <= 31)) && 64 <= r && r <= 127
          var f = (t === 16 || t === 24) && 64 <= r && r <= 95
          if (!(l || f)) {
            return false
          }
          n = t <= 23 ? 1 : 2
          if (64 <= r && r <= 95) {
            i = n === 1 ? a[t] : o[t]
          } else {
            i = n === 1 ? s[t] : u[t]
          }
          var d = this.interpretPAC(i, r)
          var c = this.channels[n - 1]
          c.setPAC(d)
          this.lastCmdA = t
          this.lastCmdB = r
          this.currChNr = n
          return true
        },
        interpretPAC: function e(t, r) {
          var n = r
          var i = { color: null, italics: false, indent: null, underline: false, row: t }
          if (r > 95) {
            n = r - 96
          } else {
            n = r - 64
          }
          i.underline = (n & 1) === 1
          if (n <= 13) {
            i.color = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'white'][
              Math.floor(n / 2)
            ]
          } else if (n <= 15) {
            i.italics = true
            i.color = 'white'
          } else {
            i.indent = Math.floor((n - 16) / 2) * 4
          }
          return i
        },
        parseChars: function e(t, n) {
          var i = null,
            a = null,
            s = null,
            o = null
          if (t >= 25) {
            i = 2
            s = t - 8
          } else {
            i = 1
            s = t
          }
          if (17 <= s && s <= 19) {
            var u = n
            if (s === 17) {
              u = n + 80
            } else if (s === 18) {
              u = n + 112
            } else {
              u = n + 144
            }
            f.log('INFO', "Special char '" + r(u) + "' in channel " + i)
            a = [u]
            this.lastCmdA = t
            this.lastCmdB = n
          } else if (32 <= t && t <= 127) {
            a = n === 0 ? [t] : [t, n]
            this.lastCmdA = null
            this.lastCmdB = null
          }
          if (a) {
            var l = d(a)
            f.log('DEBUG', 'Char codes =  ' + l.join(','))
          }
          return a
        },
        parseBackgroundAttributes: function e(t, r) {
          var n, i, a, s
          var o = (t === 16 || t === 24) && 32 <= r && r <= 47
          var u = (t === 23 || t === 31) && 45 <= r && r <= 47
          if (!(o || u)) {
            return false
          }
          n = {}
          if (t === 16 || t === 24) {
            i = Math.floor((r - 32) / 2)
            n.background = l[i]
            if (r % 2 === 1) {
              n.background = n.background + '_semi'
            }
          } else if (r === 45) {
            n.background = 'transparent'
          } else {
            n.foreground = 'black'
            if (r === 47) {
              n.underline = true
            }
          }
          a = t < 24 ? 1 : 2
          s = this.channels[a - 1]
          s.setBkgData(n)
          this.lastCmdA = t
          this.lastCmdB = r
          return true
        },
        reset: function e() {
          for (var t = 0; t < this.channels.length; t++) {
            if (this.channels[t]) {
              this.channels[t].reset()
            }
          }
          this.lastCmdA = null
          this.lastCmdB = null
        },
        cueSplitAtTime: function e(t) {
          for (var r = 0; r < this.channels.length; r++) {
            if (this.channels[r]) {
              this.channels[r].cueSplitAtTime(t)
            }
          }
        },
      }
      var y = function e(t, r, n) {
        var i = 0,
          a = r,
          s = 0,
          o = [],
          u = function e(t, r, n, i) {
            if (t !== 4 || r < 8) {
              return null
            }
            var a = n.getUint8(i)
            var s = n.getUint16(i + 1)
            var o = n.getUint32(i + 3)
            var u = n.getUint8(i + 7)
            return a == 181 && s == 49 && o == 1195456820 && u == 3
          }
        while (a < r + n) {
          i = t.getUint32(a)
          s = t.getUint8(a + 4) & 31
          if (s === 6) {
            var l = a + 5
            var f = -1
            while (l < a + 4 + i - 1) {
              f = 0
              var d = 255
              while (d === 255) {
                d = t.getUint8(l)
                f += d
                l++
              }
              var c = 0
              d = 255
              while (d === 255) {
                d = t.getUint8(l)
                c += d
                l++
              }
              if (u(f, c, t, l)) {
                o.push([l, c])
              }
              l += c
            }
          }
          a += i + 4
        }
        return o
      }
      var _ = function e(t, r) {
        var n = r[0]
        var i = [[], []]
        n += 8
        var a = t.getUint8(n) & 31
        n += 2
        for (var s = 0; s < a; s++) {
          var o = t.getUint8(n)
          var u = o & 4
          var l = o & 3
          n++
          var f = t.getUint8(n)
          n++
          var d = t.getUint8(n)
          n++
          if (u && (f & 127) + (d & 127) !== 0) {
            if (l === 0) {
              i[0].push(f)
              i[0].push(d)
            } else if (l === 1) {
              i[1].push(f)
              i[1].push(d)
            }
          }
        }
        return i
      }
      e.logger = f
      e.PenState = c
      e.CaptionScreen = v
      e.Cea608Parser = m
      e.findCea608Nalus = y
      e.extractCea608DataFromRange = _
    })(false ? (undefined.cea608parser = {}) : t)
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      'use strict'
      var t = '1.2.0'
      e = e || {}
      r()
      i()
      function r() {
        if (e.escapeMode === undefined) {
          e.escapeMode = true
        }
        if (e.attributePrefix === undefined) {
          e.attributePrefix = '_'
        }
        e.arrayAccessForm = e.arrayAccessForm || 'none'
        e.emptyNodeForm = e.emptyNodeForm || 'text'
        if (e.enableToStringFunc === undefined) {
          e.enableToStringFunc = true
        }
        e.arrayAccessFormPaths = e.arrayAccessFormPaths || []
        if (e.skipEmptyTextNodesForObj === undefined) {
          e.skipEmptyTextNodesForObj = true
        }
        if (e.stripWhitespaces === undefined) {
          e.stripWhitespaces = true
        }
        e.datetimeAccessFormPaths = e.datetimeAccessFormPaths || []
        if (e.useDoubleQuotes === undefined) {
          e.useDoubleQuotes = false
        }
        e.xmlElementsFilter = e.xmlElementsFilter || []
        e.jsonPropertiesFilter = e.jsonPropertiesFilter || []
        if (e.keepCData === undefined) {
          e.keepCData = false
        }
        if (e.ignoreRoot === undefined) {
          e.ignoreRoot = false
        }
      }
      var n = {
        ELEMENT_NODE: 1,
        TEXT_NODE: 3,
        CDATA_SECTION_NODE: 4,
        COMMENT_NODE: 8,
        DOCUMENT_NODE: 9,
      }
      function i() {}
      function a(e) {
        var t = e.localName
        if (t == null) t = e.baseName
        if (t == null || t == '') t = e.nodeName
        return t
      }
      function s(e) {
        return e.prefix
      }
      function o(e) {
        if (typeof e == 'string')
          return e
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/"/g, '&quot;')
            .replace(/'/g, '&apos;')
        else return e
      }
      function u(e) {
        return e
          .replace(/&lt;/g, '<')
          .replace(/&gt;/g, '>')
          .replace(/&quot;/g, '"')
          .replace(/&apos;/g, "'")
          .replace(/&amp;/g, '&')
      }
      function l(e, t, r, n) {
        var i = 0
        for (; i < e.length; i++) {
          var a = e[i]
          if (typeof a === 'string') {
            if (a == n) break
          } else if (a instanceof RegExp) {
            if (a.test(n)) break
          } else if (typeof a === 'function') {
            if (a(t, r, n)) break
          }
        }
        return i != e.length
      }
      function f(t, r, n) {
        switch (e.arrayAccessForm) {
          case 'property':
            if (!(t[r] instanceof Array)) t[r + '_asArray'] = [t[r]]
            else t[r + '_asArray'] = t[r]
            break
        }
        if (!(t[r] instanceof Array) && e.arrayAccessFormPaths.length > 0) {
          if (l(e.arrayAccessFormPaths, t, r, n)) {
            t[r] = [t[r]]
          }
        }
      }
      function d(e) {
        var t = e.split(/[-T:+Z]/g)
        var r = new Date(t[0], t[1] - 1, t[2])
        var n = t[5].split('.')
        r.setHours(t[3], t[4], n[0])
        if (n.length > 1) r.setMilliseconds(n[1])
        if (t[6] && t[7]) {
          var i = t[6] * 60 + Number(t[7])
          var a = /\d\d-\d\d:\d\d$/.test(e) ? '-' : '+'
          i = 0 + (a == '-' ? -1 * i : i)
          r.setMinutes(r.getMinutes() - i - r.getTimezoneOffset())
        } else if (e.indexOf('Z', e.length - 1) !== -1) {
          r = new Date(
            Date.UTC(
              r.getFullYear(),
              r.getMonth(),
              r.getDate(),
              r.getHours(),
              r.getMinutes(),
              r.getSeconds(),
              r.getMilliseconds()
            )
          )
        }
        return r
      }
      function c(t, r, n) {
        if (e.datetimeAccessFormPaths.length > 0) {
          var i = n.split('.#')[0]
          if (l(e.datetimeAccessFormPaths, t, r, i)) {
            return d(t)
          } else return t
        } else return t
      }
      function h(t, r, i, a) {
        if (r == n.ELEMENT_NODE && e.xmlElementsFilter.length > 0) {
          return l(e.xmlElementsFilter, t, i, a)
        } else return true
      }
      function p(t, r) {
        if (t.nodeType == n.DOCUMENT_NODE) {
          var i = new Object()
          var o = t.childNodes
          for (var u = 0; u < o.length; u++) {
            var l = o[u]
            if (l.nodeType == n.ELEMENT_NODE) {
              if (e.ignoreRoot) {
                i = p(l)
              } else {
                i = {}
                var d = a(l)
                i[d] = p(l)
              }
            }
          }
          return i
        } else if (t.nodeType == n.ELEMENT_NODE) {
          var i = new Object()
          i.__cnt = 0
          var v = []
          var o = t.childNodes
          for (var u = 0; u < o.length; u++) {
            var l = o[u]
            var d = a(l)
            if (l.nodeType != n.COMMENT_NODE) {
              var g = r + '.' + d
              if (h(i, l.nodeType, d, g)) {
                i.__cnt++
                if (i[d] == null) {
                  var m = p(l, g)
                  if (d != '#text' || /[^\s]/.test(m)) {
                    var y = {}
                    y[d] = m
                    v.push(y)
                  }
                  i[d] = m
                  f(i, d, g)
                } else {
                  if (i[d] != null) {
                    if (!(i[d] instanceof Array)) {
                      i[d] = [i[d]]
                      f(i, d, g)
                    }
                  }
                  var m = p(l, g)
                  if (d != '#text' || /[^\s]/.test(m)) {
                    var y = {}
                    y[d] = m
                    v.push(y)
                  }
                  i[d][i[d].length] = m
                }
              }
            }
          }
          i.__children = v
          var _ = a(t)
          for (var T = 0; T < t.attributes.length; T++) {
            var E = t.attributes[T]
            i.__cnt++
            var b = E.value
            for (var S = 0, w = e.matchers.length; S < w; S++) {
              var A = e.matchers[S]
              if (A.test(E, _)) b = A.converter(E.value)
            }
            i[e.attributePrefix + E.name] = b
          }
          var I = s(t)
          if (I != null && I != '') {
            i.__cnt++
            i.__prefix = I
          }
          if (i['#text'] != null) {
            i.__text = i['#text']
            if (i.__text instanceof Array) {
              i.__text = i.__text.join('\n')
            }
            if (e.stripWhitespaces) i.__text = i.__text.trim()
            delete i['#text']
            if (e.arrayAccessForm == 'property') delete i['#text_asArray']
            i.__text = c(i.__text, d, r + '.' + d)
          }
          if (i['#cdata-section'] != null) {
            i.__cdata = i['#cdata-section']
            delete i['#cdata-section']
            if (e.arrayAccessForm == 'property') delete i['#cdata-section_asArray']
          }
          if (i.__cnt == 0 && e.emptyNodeForm == 'text') {
            i = ''
          } else if (i.__cnt == 1 && i.__text != null) {
            i = i.__text
          } else if (i.__cnt == 1 && i.__cdata != null && !e.keepCData) {
            i = i.__cdata
          } else if (i.__cnt > 1 && i.__text != null && e.skipEmptyTextNodesForObj) {
            if ((e.stripWhitespaces && i.__text == '') || i.__text.trim() == '') {
              delete i.__text
            }
          }
          delete i.__cnt
          if (e.enableToStringFunc && (i.__text != null || i.__cdata != null)) {
            i.toString = function() {
              return (
                (this.__text != null ? this.__text : '') +
                (this.__cdata != null ? this.__cdata : '')
              )
            }
          }
          return i
        } else if (t.nodeType == n.TEXT_NODE || t.nodeType == n.CDATA_SECTION_NODE) {
          return t.nodeValue
        }
      }
      function v(t, r, n, i) {
        var a = '<' + (t != null && t.__prefix != null ? t.__prefix + ':' : '') + r
        if (n != null) {
          for (var s = 0; s < n.length; s++) {
            var u = n[s]
            var l = t[u]
            if (e.escapeMode) l = o(l)
            a += ' ' + u.substr(e.attributePrefix.length) + '='
            if (e.useDoubleQuotes) a += '"' + l + '"'
            else a += "'" + l + "'"
          }
        }
        if (!i) a += '>'
        else a += '/>'
        return a
      }
      function g(e, t) {
        return '</' + (e.__prefix != null ? e.__prefix + ':' : '') + t + '>'
      }
      function m(e, t) {
        return e.indexOf(t, e.length - t.length) !== -1
      }
      function y(t, r) {
        if (
          (e.arrayAccessForm == 'property' && m(r.toString(), '_asArray')) ||
          r.toString().indexOf(e.attributePrefix) == 0 ||
          r.toString().indexOf('__') == 0 ||
          t[r] instanceof Function
        )
          return true
        else return false
      }
      function _(e) {
        var t = 0
        if (e instanceof Object) {
          for (var r in e) {
            if (y(e, r)) continue
            t++
          }
        }
        return t
      }
      function T(t, r, n) {
        return e.jsonPropertiesFilter.length == 0 || n == '' || l(e.jsonPropertiesFilter, t, r, n)
      }
      function E(t) {
        var r = []
        if (t instanceof Object) {
          for (var n in t) {
            if (n.toString().indexOf('__') == -1 && n.toString().indexOf(e.attributePrefix) == 0) {
              r.push(n)
            }
          }
        }
        return r
      }
      function b(t) {
        var r = ''
        if (t.__cdata != null) {
          r += '<![CDATA[' + t.__cdata + ']]>'
        }
        if (t.__text != null) {
          if (e.escapeMode) r += o(t.__text)
          else r += t.__text
        }
        return r
      }
      function S(t) {
        var r = ''
        if (t instanceof Object) {
          r += b(t)
        } else if (t != null) {
          if (e.escapeMode) r += o(t)
          else r += t
        }
        return r
      }
      function w(e, t) {
        if (e === '') {
          return t
        } else return e + '.' + t
      }
      function A(e, t, r, n) {
        var i = ''
        if (e.length == 0) {
          i += v(e, t, r, true)
        } else {
          for (var a = 0; a < e.length; a++) {
            i += v(e[a], t, E(e[a]), false)
            i += I(e[a], w(n, t))
            i += g(e[a], t)
          }
        }
        return i
      }
      function I(e, t) {
        var r = ''
        var n = _(e)
        if (n > 0) {
          for (var i in e) {
            if (y(e, i) || (t != '' && !T(e, i, w(t, i)))) continue
            var a = e[i]
            var s = E(a)
            if (a == null || a == undefined) {
              r += v(a, i, s, true)
            } else if (a instanceof Object) {
              if (a instanceof Array) {
                r += A(a, i, s, t)
              } else if (a instanceof Date) {
                r += v(a, i, s, false)
                r += a.toISOString()
                r += g(a, i)
              } else {
                var o = _(a)
                if (o > 0 || a.__text != null || a.__cdata != null) {
                  r += v(a, i, s, false)
                  r += I(a, w(t, i))
                  r += g(a, i)
                } else {
                  r += v(a, i, s, true)
                }
              }
            } else {
              r += v(a, i, s, false)
              r += S(a)
              r += g(a, i)
            }
          }
        }
        r += S(e)
        return r
      }
      this.parseXmlString = function(e) {
        var t = window.ActiveXObject || 'ActiveXObject' in window
        if (e === undefined) {
          return null
        }
        var r
        if (window.DOMParser) {
          var n = new window.DOMParser()
          var i = null
          try {
            r = n.parseFromString(e, 'text/xml')
            if (r.getElementsByTagNameNS('*', 'parsererror').length > 0) {
              r = null
            }
          } catch (e) {
            r = null
          }
        } else {
          if (e.indexOf('<?') == 0) {
            e = e.substr(e.indexOf('?>') + 2)
          }
          r = new ActiveXObject('Microsoft.XMLDOM')
          r.async = 'false'
          r.loadXML(e)
        }
        return r
      }
      this.asArray = function(e) {
        if (e === undefined || e == null) return []
        else if (e instanceof Array) return e
        else return [e]
      }
      this.toXmlDateTime = function(e) {
        if (e instanceof Date) return e.toISOString()
        else if (typeof e === 'number') return new Date(e).toISOString()
        else return null
      }
      this.asDateTime = function(e) {
        if (typeof e == 'string') {
          return d(e)
        } else return e
      }
      this.xml2json = function(e) {
        return p(e)
      }
      this.xml_str2json = function(e) {
        var t = this.parseXmlString(e)
        if (t != null) return this.xml2json(t)
        else return null
      }
      this.json2xml_str = function(e) {
        return I(e, '')
      }
      this.json2xml = function(e) {
        var t = this.json2xml_str(e)
        return this.parseXmlString(t)
      }
      this.getVersion = function() {
        return t
      }
    }
    t['default'] = n
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    t.getVersionString = i
    var n = '2.9.3'
    function i() {
      return n
    }
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = (function() {
      function e() {
        i(this, e)
      }
      n(e, [
        {
          key: 'extend',
          value: function e(t, r) {
            if (!t) return
            var n = r ? r.override : false
            var i = r ? r.publicOnly : false
            for (var a in t) {
              if (!t.hasOwnProperty(a) || (this[a] && !n)) continue
              if (i && t[a].indexOf('public_') === -1) continue
              this[a] = t[a]
            }
          },
        },
      ])
      return e
    })()
    t['default'] = a
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(48)
    var a = n(i)
    var s = r(64)
    var o = n(s)
    var u = r(5)
    var l = n(u)
    var f = r(4)
    var d = n(f)
    var c = r(2)
    var h = n(c)
    var p = r(36)
    var v = n(p)
    var g = r(0)
    var m = n(g)
    var y = r(1)
    var _ = n(y)
    var T = r(7)
    var E = r(21)
    var b = n(E)
    var S = r(34)
    var w = n(S)
    var A = r(6)
    var I = n(A)
    function C() {
      var e = this.context
      var t = (0, h['default'])(e).getInstance()
      var r = undefined,
        n = undefined,
        i = undefined,
        s = undefined,
        u = undefined,
        f = undefined,
        c = undefined,
        p = undefined,
        g = undefined
      function m() {
        n = (0, _['default'])(e)
          .getInstance()
          .getLogger(r)
      }
      function y() {
        s = (0, v['default'])(e).getInstance()
        u = (0, a['default'])(e).getInstance()
        p = (0, w['default'])(e).create({
          errHandler: i,
          metricsModel: f,
          mediaPlayerModel: c,
          requestModifier: u,
        })
      }
      function E(e) {
        if (e.baseURLController) {
          g = e.baseURLController
        }
        if (e.metricsModel) {
          f = e.metricsModel
        }
        if (e.mediaPlayerModel) {
          c = e.mediaPlayerModel
        }
        if (e.errHandler) {
          i = e.errHandler
        }
      }
      function S() {
        if (!g || !g.hasOwnProperty('resolve')) {
          throw new Error('setConfig function has to be called previously')
        }
      }
      function A(e, r) {
        S()
        var i = null
        var a = g.resolve(e.path)
        var o = r || {
          init: true,
          url: a ? a.url : undefined,
          range: { start: 0, end: 1500 },
          searching: false,
          bytesLoaded: 0,
          bytesToLoad: 1500,
        }
        n.debug('Start searching for initialization.')
        var u = O(o)
        var l = function r(n) {
          o.bytesLoaded = o.range.end
          i = s.findInitRange(n)
          if (i) {
            e.range = i
            t.trigger(d['default'].INITIALIZATION_LOADED, { representation: e })
          } else {
            o.range.end = o.bytesLoaded + o.bytesToLoad
            A(e, o)
          }
        }
        var f = function r() {
          t.trigger(d['default'].INITIALIZATION_LOADED, { representation: e })
        }
        p.load({ request: u, success: l, error: f })
        n.debug('Perform init search: ' + o.url)
      }
      function C(e, t, r, i, a) {
        S()
        if (r && (r.start === undefined || r.end === undefined)) {
          var o = r ? r.toString().split('-') : null
          r = o ? { start: parseFloat(o[0]), end: parseFloat(o[1]) } : null
        }
        a = !a ? M : a
        var u = null
        var l = null
        var f = !!r
        var d = g.resolve(e.path)
        var c = {
          init: false,
          url: d ? d.url : undefined,
          range: f ? r : { start: 0, end: 1500 },
          searching: !f,
          bytesLoaded: i ? i.bytesLoaded : 0,
          bytesToLoad: 1500,
        }
        var h = O(c)
        var v = function r(i) {
          var o = c.bytesToLoad
          var f = i.byteLength
          c.bytesLoaded = c.range.end - c.range.start
          u = s.parse(i)
          l = u.getBox('sidx')
          if (!l || !l.isComplete) {
            if (l) {
              c.range.start = l.offset || c.range.start
              c.range.end = c.range.start + (l.size || o)
            } else if (f < c.bytesLoaded) {
              a(null, e, t)
              return
            } else {
              var d = u.getLastBox()
              if (d && d.size) {
                c.range.start = d.offset + d.size
                c.range.end = c.range.start + o
              } else {
                c.range.end += o
              }
            }
            C(e, t, c.range, c, a)
          } else {
            var h = l.references
            var p = undefined,
              v = undefined
            if (h !== null && h !== undefined && h.length > 0) {
              p = h[0].reference_type === 1
            }
            if (p) {
              ;(function() {
                n.debug('Initiate multiple SIDX load.')
                c.range.end = c.range.start + l.size
                var r = undefined,
                  i = undefined,
                  s = undefined,
                  o = undefined,
                  u = undefined
                var f = []
                var d = 0
                var p = (l.offset || c.range.start) + l.size
                var v = function r(n) {
                  if (n) {
                    f = f.concat(n)
                    d++
                    if (d >= i) {
                      a(f, e, t)
                    }
                  } else {
                    a(null, e, t)
                  }
                }
                for (r = 0, i = h.length; r < i; r++) {
                  s = p
                  o = p + h[r].referenced_size - 1
                  p = p + h[r].referenced_size
                  u = { start: s, end: o }
                  C(e, null, u, c, v)
                }
              })()
            } else {
              n.debug('Parsing segments from SIDX.')
              v = D(l, c)
              a(v, e, t)
            }
          }
        }
        var m = function r() {
          a(null, e, t)
        }
        p.load({ request: h, success: v, error: m })
        n.debug('Perform SIDX load: ' + c.url)
      }
      function R() {
        p.abort()
        p = null
        i = null
        s = null
        u = null
      }
      function D(e, t) {
        var r = e.references
        var n = r.length
        var i = e.timescale
        var a = e.earliest_presentation_time
        var s = t.range.start + e.offset + e.first_offset + e.size
        var u = []
        var l = undefined,
          f = undefined,
          d = undefined,
          c = undefined
        for (var h = 0; h < n; h++) {
          d = r[h].subsegment_duration
          c = r[h].referenced_size
          l = new o['default']()
          l.duration = d
          l.startTime = a
          l.timescale = i
          f = s + c - 1
          l.mediaRange = s + '-' + f
          u.push(l)
          a += d
          s += c
        }
        return u
      }
      function O(e) {
        if (!e.url) {
          return
        }
        var t = new b['default']()
        t.type = e.init ? T.HTTPRequest.INIT_SEGMENT_TYPE : T.HTTPRequest.MEDIA_SEGMENT_TYPE
        t.url = e.url
        t.range = e.range.start + '-' + e.range.end
        return t
      }
      function M(e, r, n) {
        if (e) {
          t.trigger(d['default'].SEGMENTS_LOADED, { segments: e, representation: r, mediaType: n })
        } else {
          t.trigger(d['default'].SEGMENTS_LOADED, {
            segments: null,
            representation: r,
            mediaType: n,
            error: new l['default'](
              I['default'].SEGMENT_BASE_LOADER_ERROR_CODE,
              I['default'].SEGMENT_BASE_LOADER_ERROR_MESSAGE
            ),
          })
        }
      }
      r = { setConfig: E, initialize: y, loadInitialization: A, loadSegments: C, reset: R }
      m()
      return r
    }
    C.__dashjs_factory_name = 'SegmentBaseLoader'
    t['default'] = m['default'].getSingletonFactory(C)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var s = r(194)
    var o = i(s)
    var u = (function() {
      function e(t, r, n) {
        var i = this
        a(this, e)
        this._name = t || ''
        this._properties = []
        this._children = n || []
        if (Array.isArray(r)) {
          r.forEach(function(e) {
            i._properties.push(new o['default'](e))
          })
        }
      }
      n(e, [
        {
          key: 'name',
          get: function e() {
            return this._name
          },
        },
        {
          key: 'children',
          get: function e() {
            return this._children
          },
        },
        {
          key: 'properties',
          get: function e() {
            return this._properties
          },
        },
      ])
      return e
    })()
    t['default'] = u
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = 1
    var a = 1
    var s = function e(t, r, s, o) {
      n(this, e)
      this.url = t || ''
      this.serviceLocation = r || t || ''
      this.dvb_priority = s || i
      this.dvb_weight = o || a
      this.availabilityTimeOffset = 0
      this.availabilityTimeComplete = true
    }
    s.DEFAULT_DVB_PRIORITY = i
    s.DEFAULT_DVB_WEIGHT = a
    t['default'] = s
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.duration = NaN
      this.presentationTime = NaN
      this.id = NaN
      this.messageData = ''
      this.eventStream = null
      this.presentationTimeDelta = NaN
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.schemeIdUri = ''
      this.value = ''
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(25)
    var o = n(s)
    var u = r(224)
    var l = n(u)
    var f = r(226)
    var d = n(f)
    var c = r(65)
    var h = n(c)
    var p = r(110)
    var v = n(p)
    var g = r(213)
    var m = n(g)
    var y = r(291)
    var _ = n(y)
    var T = r(288)
    var E = n(T)
    var b = r(74)
    var S = n(b)
    var w = r(48)
    var A = n(w)
    var I = r(73)
    var C = n(I)
    var R = r(252)
    var D = n(R)
    var O = r(249)
    var M = n(O)
    var k = r(250)
    var P = n(k)
    var N = r(251)
    var L = n(N)
    var x = r(44)
    var F = n(x)
    var U = r(253)
    var B = n(U)
    var j = r(289)
    var G = n(j)
    var q = r(1)
    var H = n(q)
    var V = r(6)
    var K = n(V)
    var Y = r(2)
    var W = n(Y)
    var z = r(4)
    var X = n(z)
    var $ = r(108)
    var Q = n($)
    var J = r(0)
    var Z = n(J)
    var ee = r(100)
    var te = r(187)
    var re = n(te)
    var ne = r(192)
    var ie = n(ne)
    var ae = r(189)
    var se = n(ae)
    var oe = r(206)
    var ue = n(oe)
    var le = r(7)
    var fe = r(183)
    var de = n(fe)
    var ce = r(54)
    var he = n(ce)
    var pe = r(5)
    var ve = n(pe)
    var ge = r(27)
    function me() {
      var e = 'You must first call initialize() and set a source before calling this method'
      var t =
        'You must first call initialize() and set a valid source and view before calling this method'
      var r = 'You must first call attachView() to set the video element before calling this method'
      var n = 'You must first call attachSource() with a valid source before calling this method'
      var i = 'MediaPlayer not initialized!'
      var s = 'Playback minimum drift has an invalid value! Use a number from 0 to 0.5'
      var u = 'Playback maximum drift has an invalid value! Use a number greater or equal to 0'
      var f = this.context
      var c = (0, W['default'])(f).getInstance()
      var p = (0, H['default'])(f).getInstance()
      var g = undefined,
        y = undefined,
        T = undefined,
        b = undefined,
        w = undefined,
        I = undefined,
        R = undefined,
        O = undefined,
        k = undefined,
        N = undefined,
        x = undefined,
        U = undefined,
        j = undefined,
        q = undefined,
        V = undefined,
        Y = undefined,
        z = undefined,
        $ = undefined,
        J = undefined,
        te = undefined,
        ne = undefined,
        ae = undefined,
        oe = undefined,
        fe = undefined,
        ce = undefined,
        pe = undefined,
        me = undefined,
        ye = undefined
      function _e() {
        y = p.getLogger(g)
        w = false
        R = false
        I = false
        O = true
        U = null
        b = null
        V = null
        X['default'].extend(Q['default'])
        z = (0, P['default'])(f).getInstance()
        ce = (0, B['default'])(f).getInstance()
        me = (0, D['default'])(f).getInstance()
      }
      function Te(e) {
        if (!e) {
          return
        }
        if (e.capabilities) {
          J = e.capabilities
        }
        if (e.streamController) {
          te = e.streamController
        }
        if (e.playbackController) {
          ne = e.playbackController
        }
        if (e.mediaPlayerModel) {
          z = e.mediaPlayerModel
        }
        if (e.abrController) {
          k = e.abrController
        }
        if (e.mediaController) {
          x = e.mediaController
        }
      }
      function Ee(e, t, r) {
        if (!J) {
          J = (0, E['default'])(f).getInstance()
        }
        $ = (0, _['default'])(f).getInstance()
        if (!J.supportsMediaSource()) {
          $.capabilityError('mediasource')
          $.error(
            new ve['default'](
              K['default'].CAPABILITY_MEDIASOURCE_ERROR_CODE,
              K['default'].CAPABILITY_MEDIASOURCE_ERROR_MESSAGE
            )
          )
          return
        }
        if (w) return
        w = true
        N = (0, ue['default'])(f).getInstance()
        if (!k) {
          k = (0, F['default'])(f).getInstance()
        }
        if (!ne) {
          ne = (0, l['default'])(f).getInstance()
        }
        if (!x) {
          x = (0, h['default'])(f).getInstance()
        }
        V = (0, re['default'])(f).getInstance()
        oe = (0, ie['default'])(f).getInstance({
          timelineConverter: N,
          errHandler: $,
          BASE64: de['default'],
        })
        fe = (0, M['default'])(f).getInstance()
        ae = (0, se['default'])(f).getInstance({ manifestModel: fe, dashManifestModel: oe })
        Y = (0, L['default'])(f).getInstance()
        pe = (0, C['default'])(f).getInstance()
        ye = (0, G['default'])(f).getInstance({ mediaPlayerModel: z })
        V.setConfig({ dashManifestModel: oe })
        zt()
        bt(r !== undefined ? r : true)
        if (e) {
          Ur(e)
        }
        if (t) {
          on(t)
        }
        y.info('[dash.js ' + Ie() + '] ' + 'MediaPlayer has been initialized')
      }
      function be() {
        on(null)
        Ur(null)
        b = null
        if (U) {
          U.reset()
          U = null
        }
        if (j) {
          j.reset()
          j = null
        }
      }
      function Se() {
        return !!T && !!ce.getElement()
      }
      function we(e, t, r) {
        c.on(e, t, r)
      }
      function Ae(e, t, r) {
        c.off(e, t, r)
      }
      function Ie() {
        return (0, ee.getVersionString)()
      }
      function Ce() {
        return p
      }
      function Re() {
        if (ce.getElement() || I) {
          return false
        }
        if (T) {
          Tn()
        } else {
          throw n
        }
      }
      function De() {
        if (!R) {
          throw t
        }
        if (!O || (Me() && R)) {
          ne.play()
        }
      }
      function Oe() {
        if (!R) {
          throw t
        }
        ne.pause()
      }
      function Me() {
        if (!R) {
          throw t
        }
        return ne.isPaused()
      }
      function ke(e) {
        if (!R) {
          throw t
        }
        ;(0, ge.checkParameterType)(e, 'number')
        if (isNaN(e)) {
          throw a['default'].BAD_ARGUMENT_ERROR
        }
        var r = ne.getIsDynamic() ? Xe(e) : e
        ne.seek(r)
      }
      function Pe() {
        if (!R) {
          throw t
        }
        return ne.isSeeking()
      }
      function Ne() {
        if (!R) {
          throw t
        }
        return ne.getIsDynamic()
      }
      function Le(e) {
        xr().playbackRate = e
      }
      function xe() {
        return xr().playbackRate
      }
      function Fe(e) {
        z.setCatchUpPlaybackRate(e)
      }
      function Ue() {
        return z.getCatchUpPlaybackRate()
      }
      function Be(e) {
        if (typeof e !== 'number' || isNaN(e) || e < 0 || e > 0.5) {
          throw s
        }
        z.setLowLatencyMinDrift(e)
      }
      function je() {
        return z.getLowLatencyMinDrift()
      }
      function Ge(e) {
        if (typeof e !== 'number' || isNaN(e) || e < 0) {
          throw u
        }
        z.setLowLatencyMaxDriftBeforeSeeking(e)
      }
      function qe() {
        return z.getLowLatencyMaxDriftBeforeSeeking()
      }
      function He(e) {
        ;(0, ge.checkParameterType)(e, 'boolean')
        xr().muted = e
      }
      function Ve() {
        return xr().muted
      }
      function Ke(e) {
        if (typeof e !== 'number' || isNaN(e) || e < 0 || e > 1) {
          throw a['default'].BAD_ARGUMENT_ERROR
        }
        xr().volume = e
      }
      function Ye() {
        return xr().volume
      }
      function We(e) {
        var t = [a['default'].VIDEO, a['default'].AUDIO, a['default'].FRAGMENTED_TEXT]
        if (!e) {
          var r = t
            .map(function(e) {
              return Hr(e).length > 0 ? wr().getCurrentBufferLevel(Ar(e)) : Number.MAX_VALUE
            })
            .reduce(function(e, t) {
              return Math.min(e, t)
            })
          return r === Number.MAX_VALUE ? NaN : r
        } else {
          if (t.indexOf(e) !== -1) {
            var r = wr().getCurrentBufferLevel(Ar(e))
            return r ? r : NaN
          } else {
            y.warn('getBufferLength requested for invalid type')
            return NaN
          }
        }
      }
      function ze() {
        var e = yn()
        if (!e) {
          return 0
        }
        return e.manifestInfo.DVRWindowSize
      }
      function Xe(e) {
        var t = yn()
        if (!t) {
          return 0
        }
        var r = ne.getLiveDelay()
        var n = t.range.start + e
        if (n > t.range.end - r) {
          n = t.range.end - r
        }
        return n
      }
      function $e(e) {
        if (!R) {
          throw t
        }
        var r = xr().currentTime
        if (e !== undefined) {
          r = te.getTimeRelativeToStreamId(r, e)
        } else if (ne.getIsDynamic()) {
          var n = yn()
          r = n === null ? 0 : Qe() - (n.range.end - n.time)
        }
        return r
      }
      function Qe() {
        if (!R) {
          throw t
        }
        var e = xr().duration
        if (ne.getIsDynamic()) {
          var r = yn()
          var n = undefined
          if (!r) {
            return 0
          }
          n = r.range.end - r.range.start
          e = n < r.manifestInfo.DVRWindowSize ? n : r.manifestInfo.DVRWindowSize
        }
        return e
      }
      function Je() {
        if (!R) {
          throw t
        }
        if ($e() < 0) {
          return NaN
        }
        return _n($e())
      }
      function Ze() {
        if (!R) {
          throw t
        }
        return _n(Qe())
      }
      function et(e, t) {
        k.setMaxAllowedBitrateFor(e, t)
      }
      function tt(e, t) {
        k.setMinAllowedBitrateFor(e, t)
      }
      function rt(e) {
        return k.getMaxAllowedBitrateFor(e)
      }
      function nt(t) {
        if (!I) {
          throw e
        }
        return k.getTopBitrateInfoFor(t)
      }
      function it(e) {
        return k.getMinAllowedBitrateFor(e)
      }
      function at(e, t) {
        k.setMaxAllowedRepresentationRatioFor(e, t)
      }
      function st(e) {
        return k.getMaxAllowedRepresentationRatioFor(e)
      }
      function ot(t) {
        if (!I) {
          throw e
        }
        if (t === a['default'].IMAGE) {
          var r = dn()
          if (!r) {
            return -1
          }
          var n = r.getThumbnailController()
          if (!n) {
            return -1
          }
          return n.getCurrentTrackIndex()
        }
        return k.getQualityFor(t, te.getActiveStreamInfo())
      }
      function ut(t, r) {
        if (!I) {
          throw e
        }
        if (t === a['default'].IMAGE) {
          var n = dn()
          if (!n) {
            return
          }
          var i = n.getThumbnailController()
          if (i) {
            i.setTrackByIndex(r)
          }
        }
        k.setPlaybackQuality(t, te.getActiveStreamInfo(), r)
      }
      function lt() {
        k.setElementSize()
        k.setWindowResizeEventCalled(true)
      }
      function ft() {
        return k.getLimitBitrateByPortal()
      }
      function dt(e) {
        k.setLimitBitrateByPortal(e)
      }
      function ct() {
        return k.getUsePixelRatioInLimitBitrateByPortal()
      }
      function ht(e) {
        k.setUsePixelRatioInLimitBitrateByPortal(e)
      }
      function pt(e, t) {
        k.setInitialBitrateFor(e, t)
      }
      function vt(t) {
        if (!I) {
          throw e
        }
        return k.getInitialBitrateFor(t)
      }
      function gt(e, t) {
        k.setInitialRepresentationRatioFor(e, t)
      }
      function mt(e) {
        return k.getInitialRepresentationRatioFor(e)
      }
      function yt(e) {
        return k.getAutoSwitchBitrateFor(e)
      }
      function _t(e, t) {
        k.setAutoSwitchBitrateFor(e, t)
      }
      function Tt() {
        return k.getUseDeadTimeLatency()
      }
      function Et(e) {
        k.setUseDeadTimeLatency(e)
      }
      function bt(e) {
        ;(0, ge.checkParameterType)(e, 'boolean')
        O = e
      }
      function St() {
        return O
      }
      function wt(e) {
        z.setLiveDelayFragmentCount(e)
      }
      function At(e) {
        z.setLiveDelay(e)
      }
      function It() {
        return z.getLiveDelay()
      }
      function Ct() {
        if (!w) {
          throw i
        }
        if (!R) {
          return NaN
        }
        return ne.getCurrentLiveLatency()
      }
      function Rt(e) {
        z.setUseSuggestedPresentationDelay(e)
      }
      function Dt(e, t) {
        z.setLastBitrateCachingInfo(e, t)
      }
      function Ot(e, t) {
        z.setLastMediaSettingsCachingInfo(e, t)
      }
      function Mt(e) {
        z.setScheduleWhilePaused(e)
      }
      function kt() {
        return z.getScheduleWhilePaused()
      }
      function Pt(e) {
        z.setFastSwitchEnabled(e)
      }
      function Nt() {
        return z.getFastSwitchEnabled()
      }
      function Lt(e) {
        z.setABRStrategy(e)
      }
      function xt() {
        return z.getABRStrategy()
      }
      function Ft(e) {
        z.setUseDefaultABRRules(e)
      }
      function Ut(e, t, r) {
        z.addABRCustomRule(e, t, r)
      }
      function Bt(e) {
        z.removeABRCustomRule(e)
      }
      function jt() {
        z.removeABRCustomRule()
      }
      function Gt(e) {
        z.setMovingAverageMethod(e)
      }
      function qt() {
        return z.getMovingAverageMethod()
      }
      function Ht() {
        return z.getLowLatencyEnabled()
      }
      function Vt(e) {
        z.setLowLatencyEnabled(e)
      }
      function Kt(e, t) {
        z.addUTCTimingSource(e, t)
      }
      function Yt(e, t) {
        z.removeUTCTimingSource(e, t)
      }
      function Wt() {
        z.clearDefaultUTCTimingSources()
      }
      function zt() {
        z.restoreDefaultUTCTimingSources()
      }
      function Xt(e) {
        z.setUseManifestDateHeaderTimeSource(e)
      }
      function $t(e) {
        z.setBufferToKeep(e)
      }
      function Qt(e) {
        z.setBufferAheadToKeep(e)
      }
      function Jt(e) {
        z.setBufferPruningInterval(e)
      }
      function Zt(e) {
        z.setStableBufferTime(e)
      }
      function er() {
        return z.getStableBufferTime()
      }
      function tr(e) {
        z.setBufferTimeAtTopQuality(e)
      }
      function rr() {
        return z.getBufferTimeAtTopQuality()
      }
      function nr(e) {
        z.setBufferTimeAtTopQualityLongForm(e)
      }
      function ir() {
        return z.getBufferTimeAtTopQualityLongForm()
      }
      function ar(e) {
        z.setLongFormContentDurationThreshold(e)
      }
      function sr(e) {
        z.setSegmentOverlapToleranceTime(e)
      }
      function or(e, t) {
        z.setCacheLoadThresholdForType(e, t)
      }
      function ur(e) {
        z.setBandwidthSafetyFactor(e)
      }
      function lr() {
        return z.getBandwidthSafetyFactor()
      }
      function fr(e) {
        var t = k.getThroughputHistory()
        return t ? t.getAverageThroughput(e) : 0
      }
      function dr(e) {
        z.setAbandonLoadTimeout(e)
      }
      function cr(e) {
        z.setRetryAttemptsForType(le.HTTPRequest.MEDIA_SEGMENT_TYPE, e)
      }
      function hr(e) {
        z.setRetryIntervalForType(le.HTTPRequest.MEDIA_SEGMENT_TYPE, e)
      }
      function pr(e) {
        z.setRetryAttemptsForType(le.HTTPRequest.MPD_TYPE, e)
      }
      function vr(e) {
        z.setRetryIntervalForType(le.HTTPRequest.MPD_TYPE, e)
      }
      function gr(e, t) {
        z.setXHRWithCredentialsForType(e, t)
      }
      function mr(e) {
        return z.getXHRWithCredentialsForType(e)
      }
      function yr(e) {
        z.setJumpGaps(e)
      }
      function _r() {
        return z.getJumpGaps()
      }
      function Tr(e) {
        z.setSmallGapLimit(e)
      }
      function Er() {
        return z.getSmallGapLimit()
      }
      function br(e) {
        z.setManifestUpdateRetryInterval(e)
      }
      function Sr() {
        return z.getManifestUpdateRetryInterval()
      }
      function wr() {
        return ae
      }
      function Ar(e) {
        return Y.getReadOnlyMetricsFor(e)
      }
      function Ir(e) {
        if (pe === undefined) {
          pe = (0, C['default'])(f).getInstance()
        }
        pe.setTextDefaultLanguage(e)
      }
      function Cr() {
        if (pe === undefined) {
          pe = (0, C['default'])(f).getInstance()
        }
        return pe.getTextDefaultLanguage()
      }
      function Rr(e) {
        if (pe === undefined) {
          pe = (0, C['default'])(f).getInstance()
        }
        pe.setTextDefaultEnabled(e)
      }
      function Dr() {
        if (pe === undefined) {
          pe = (0, C['default'])(f).getInstance()
        }
        return pe.getTextDefaultEnabled()
      }
      function Or(e) {
        if (pe === undefined) {
          pe = (0, C['default'])(f).getInstance()
        }
        pe.enableText(e)
      }
      function Mr(e) {
        if (pe === undefined) {
          pe = (0, C['default'])(f).getInstance()
        }
        pe.enableForcedTextStreaming(e)
      }
      function kr() {
        if (pe === undefined) {
          pe = (0, C['default'])(f).getInstance()
        }
        return pe.isTextEnabled()
      }
      function Pr(e) {
        if (!R) {
          throw t
        }
        if (pe === undefined) {
          pe = (0, C['default'])(f).getInstance()
        }
        pe.setTextTrack(e)
      }
      function Nr() {
        var e = NaN
        if (pe) {
          e = pe.getCurrentTrackIdx()
        }
        return e
      }
      function Lr(e) {
        var t = (0, S['default'])(f).getInstance()
        t.setConfig({ videoModel: ce })
        t.initialize()
        t.displayCConTop(e)
      }
      function xr() {
        if (!ce.getElement()) {
          throw r
        }
        return ce.getElement()
      }
      function Fr(e) {
        y.warn(
          'attachVideoContainer method has been deprecated and will be removed in dash.js v3.0.0'
        )
      }
      function Ur(e) {
        if (!w) {
          throw i
        }
        ce.setElement(e)
        if (e) {
          vn()
          gn()
          mn()
          if (te) {
            te.switchToVideoElement()
          }
        }
        if (R) {
          cn()
        }
        Tn()
      }
      function Br() {
        return ce ? ce.getTTMLRenderingDiv() : null
      }
      function jr(e) {
        if (!ce.getElement()) {
          throw r
        }
        ce.setTTMLRenderingDiv(e)
      }
      function Gr(t) {
        if (!I) {
          throw e
        }
        var r = dn()
        return r ? r.getBitrateListFor(t) : []
      }
      function qr(t) {
        if (!I) {
          throw e
        }
        return V.getStreamsInfo(t)
      }
      function Hr(t) {
        if (!I) {
          throw e
        }
        var r = te.getActiveStreamInfo()
        return x.getTracksFor(t, r)
      }
      function Vr(t, r, n) {
        if (!I) {
          throw e
        }
        n = n || V.getStreamsInfo(r, 1)[0]
        return n ? V.getAllMediaInfoForType(n, t, r) : []
      }
      function Kr(t) {
        if (!I) {
          throw e
        }
        var r = te.getActiveStreamInfo()
        return x.getCurrentTrackFor(t, r)
      }
      function Yr(e, t) {
        if (!w) {
          throw i
        }
        x.setInitialSettings(e, t)
      }
      function Wr(e) {
        if (!w) {
          throw i
        }
        return x.getInitialSettings(e)
      }
      function zr(t) {
        if (!I) {
          throw e
        }
        x.setTrack(t)
      }
      function Xr(e) {
        if (!w) {
          throw i
        }
        return x.getSwitchMode(e)
      }
      function $r(e, t) {
        if (!w) {
          throw i
        }
        x.setSwitchMode(e, t)
      }
      function Qr(e) {
        if (!w) {
          throw i
        }
        x.setSelectionModeForInitialTrack(e)
      }
      function Jr() {
        if (!w) {
          throw i
        }
        return x.getSelectionModeForInitialTrack()
      }
      function Zr() {
        return vn()
      }
      function en(e) {
        U = e
      }
      function tn(e) {
        b = e
        if (te) {
          te.setProtectionData(b)
        }
      }
      function rn(e, t) {
        if (e < 0) {
          return null
        }
        var r = ne.getIsDynamic() ? Xe(e) : e
        var n = te.getStreamForTime(r)
        if (n === null) {
          return null
        }
        var i = n.getThumbnailController()
        if (!i) {
          return null
        }
        var a = te.getTimeRelativeToStreamId(r, n.getId())
        return i.get(a, t)
      }
      function nn(e) {
        z.setKeepProtectionMediaKeys(e)
      }
      function an(e, t) {
        var r = pn()
        var n = this
        var i = function e(i) {
          if (!i.error) {
            t(i.manifest)
          } else {
            t(null, i.error)
          }
          c.off(X['default'].INTERNAL_MANIFEST_LOADED, e, n)
          r.reset()
        }
        c.on(X['default'].INTERNAL_MANIFEST_LOADED, i, n)
        me.initialize(e)
        r.load(e)
      }
      function sn() {
        if (!T) {
          throw n
        }
        return T
      }
      function on(e) {
        if (!w) {
          throw i
        }
        if (typeof e === 'string') {
          me.initialize(e)
        }
        T = e
        if (I || R) {
          cn()
        }
        if (Se()) {
          Tn()
        }
      }
      function un(e, t, r) {
        var n = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3]
        var i = new Date(e * 1e3)
        var a = i.toLocaleDateString(t)
        var s = i.toLocaleTimeString(t, { hour12: r })
        return n ? s + ' ' + a : s
      }
      function ln(e) {
        e = Math.max(e, 0)
        var t = Math.floor(e / 3600)
        var r = Math.floor((e % 3600) / 60)
        var n = Math.floor((e % 3600) % 60)
        return (
          (t === 0 ? '' : t < 10 ? '0' + t.toString() + ':' : t.toString() + ':') +
          (r < 10 ? '0' + r.toString() : r.toString()) +
          ':' +
          (n < 10 ? '0' + n.toString() : n.toString())
        )
      }
      function fn(e, t, r) {
        Z['default'].extend(e, t, r, f)
      }
      function dn() {
        if (!I) {
          throw e
        }
        var t = te.getActiveStreamInfo()
        return t ? te.getStreamById(t.id) : null
      }
      function cn() {
        R = false
        I = false
        V.reset()
        te.reset()
        ne.reset()
        k.reset()
        x.reset()
        pe.reset()
        if (U) {
          if (z.getKeepProtectionMediaKeys()) {
            U.stop()
          } else {
            U.reset()
            U = null
            vn()
          }
        }
      }
      function hn() {
        var e = pn()
        if (!te) {
          te = (0, d['default'])(f).getInstance()
        }
        x.setConfig({ domStorage: ye })
        te.setConfig({
          capabilities: J,
          manifestLoader: e,
          manifestModel: fe,
          dashManifestModel: oe,
          mediaPlayerModel: z,
          protectionController: U,
          adapter: V,
          metricsModel: Y,
          dashMetrics: ae,
          errHandler: $,
          timelineConverter: N,
          videoModel: ce,
          playbackController: ne,
          domStorage: ye,
          abrController: k,
          mediaController: x,
          textController: pe,
        })
        ne.setConfig({
          streamController: te,
          metricsModel: Y,
          dashMetrics: ae,
          manifestModel: fe,
          mediaPlayerModel: z,
          dashManifestModel: oe,
          adapter: V,
          videoModel: ce,
          timelineConverter: N,
          uriFragmentModel: me,
        })
        k.setConfig({
          streamController: te,
          domStorage: ye,
          mediaPlayerModel: z,
          metricsModel: Y,
          dashMetrics: ae,
          manifestModel: fe,
          videoModel: ce,
          adapter: V,
        })
        k.createAbrRulesCollection()
        pe.setConfig({
          errHandler: $,
          manifestModel: fe,
          dashManifestModel: oe,
          mediaController: x,
          streamController: te,
          videoModel: ce,
        })
        te.initialize(O, b)
      }
      function pn() {
        return (0, m['default'])(f).create({
          errHandler: $,
          metricsModel: Y,
          mediaPlayerModel: z,
          requestModifier: (0, A['default'])(f).getInstance(),
          mssHandler: q,
        })
      }
      function vn() {
        if (U) {
          return U
        }
        var e = dashjs.Protection
        if (typeof e === 'function') {
          var t = e(f).create()
          X['default'].extend(e.events)
          Q['default'].extend(e.events, { publicOnly: true })
          K['default'].extend(e.errors)
          if (!J) {
            J = (0, E['default'])(f).getInstance()
          }
          U = t.createProtectionSystem({
            debug: p,
            errHandler: $,
            videoModel: ce,
            capabilities: J,
            eventBus: c,
            events: X['default'],
            BASE64: de['default'],
            constants: a['default'],
          })
          return U
        }
        return null
      }
      function gn() {
        if (j) {
          return
        }
        var e = dashjs.MetricsReporting
        if (typeof e === 'function') {
          var t = e(f).create()
          j = t.createMetricsReporting({
            debug: p,
            eventBus: c,
            mediaElement: xr(),
            dashManifestModel: oe,
            metricsModel: Y,
            events: X['default'],
            constants: a['default'],
            metricsConstants: o['default'],
          })
        }
      }
      function mn() {
        if (q) {
          return
        }
        var e = dashjs.MssHandler
        if (typeof e === 'function') {
          K['default'].extend(e.errors)
          q = e(f).create({
            eventBus: c,
            mediaPlayerModel: z,
            metricsModel: Y,
            manifestModel: fe,
            playbackController: ne,
            protectionController: U,
            baseURLController: (0, v['default'])(f).getInstance(),
            errHandler: $,
            events: X['default'],
            constants: a['default'],
            debug: p,
            initSegmentType: le.HTTPRequest.INIT_SEGMENT_TYPE,
            BASE64: de['default'],
            ISOBoxer: he['default'],
          })
        }
      }
      function yn() {
        var e =
          Y.getReadOnlyMetricsFor(a['default'].VIDEO) || Y.getReadOnlyMetricsFor(a['default'].AUDIO)
        return ae.getCurrentDVRInfo(e)
      }
      function _n(e) {
        var t = yn()
        var r = undefined,
          n = undefined
        if (!t) {
          return 0
        }
        r = t.manifestInfo.availableFrom.getTime() / 1e3
        n = e + (r + t.range.start)
        return n
      }
      function Tn() {
        if (!I && T) {
          I = true
          y.info('Streaming Initialized')
          hn()
          if (typeof T === 'string') {
            te.load(T)
          } else {
            te.loadWithManifest(T)
          }
        }
        if (!R && Se()) {
          R = true
          y.info('Playback Initialized')
        }
      }
      g = {
        initialize: Ee,
        setConfig: Te,
        on: we,
        off: Ae,
        extend: fn,
        attachView: Ur,
        attachSource: on,
        isReady: Se,
        preload: Re,
        play: De,
        isPaused: Me,
        pause: Oe,
        isSeeking: Pe,
        isDynamic: Ne,
        seek: ke,
        setPlaybackRate: Le,
        getPlaybackRate: xe,
        setMute: He,
        isMuted: Ve,
        setVolume: Ke,
        getVolume: Ye,
        time: $e,
        duration: Qe,
        timeAsUTC: Je,
        durationAsUTC: Ze,
        getActiveStream: dn,
        getDVRWindowSize: ze,
        getDVRSeekOffset: Xe,
        convertToTimeCode: ln,
        formatUTC: un,
        getVersion: Ie,
        getDebug: Ce,
        getBufferLength: We,
        getTTMLRenderingDiv: Br,
        getVideoElement: xr,
        getSource: sn,
        setLiveDelayFragmentCount: wt,
        setLiveDelay: At,
        getLiveDelay: It,
        getCurrentLiveLatency: Ct,
        useSuggestedPresentationDelay: Rt,
        enableLastBitrateCaching: Dt,
        enableLastMediaSettingsCaching: Ot,
        setMaxAllowedBitrateFor: et,
        getMaxAllowedBitrateFor: rt,
        getTopBitrateInfoFor: nt,
        setMinAllowedBitrateFor: tt,
        getMinAllowedBitrateFor: it,
        setMaxAllowedRepresentationRatioFor: at,
        getMaxAllowedRepresentationRatioFor: st,
        setAutoPlay: bt,
        getAutoPlay: St,
        setScheduleWhilePaused: Mt,
        getScheduleWhilePaused: kt,
        getDashMetrics: wr,
        getMetricsFor: Ar,
        getQualityFor: ot,
        setQualityFor: ut,
        updatePortalSize: lt,
        getLimitBitrateByPortal: ft,
        setLimitBitrateByPortal: dt,
        getUsePixelRatioInLimitBitrateByPortal: ct,
        setUsePixelRatioInLimitBitrateByPortal: ht,
        setTextDefaultLanguage: Ir,
        getTextDefaultLanguage: Cr,
        setTextDefaultEnabled: Rr,
        getTextDefaultEnabled: Dr,
        enableText: Or,
        enableForcedTextStreaming: Mr,
        isTextEnabled: kr,
        setTextTrack: Pr,
        getBitrateInfoListFor: Gr,
        setInitialBitrateFor: pt,
        getInitialBitrateFor: vt,
        setInitialRepresentationRatioFor: gt,
        getInitialRepresentationRatioFor: mt,
        getStreamsFromManifest: qr,
        getTracksFor: Hr,
        getTracksForTypeFromManifest: Vr,
        getCurrentTrackFor: Kr,
        setInitialMediaSettingsFor: Yr,
        getInitialMediaSettingsFor: Wr,
        setCurrentTrack: zr,
        getTrackSwitchModeFor: Xr,
        setTrackSwitchModeFor: $r,
        setSelectionModeForInitialTrack: Qr,
        getSelectionModeForInitialTrack: Jr,
        setFastSwitchEnabled: Pt,
        getFastSwitchEnabled: Nt,
        setMovingAverageMethod: Gt,
        getMovingAverageMethod: qt,
        getAutoSwitchQualityFor: yt,
        setAutoSwitchQualityFor: _t,
        setABRStrategy: Lt,
        getABRStrategy: xt,
        useDefaultABRRules: Ft,
        addABRCustomRule: Ut,
        removeABRCustomRule: Bt,
        removeAllABRCustomRule: jt,
        setBandwidthSafetyFactor: ur,
        getBandwidthSafetyFactor: lr,
        getAverageThroughput: fr,
        setAbandonLoadTimeout: dr,
        retrieveManifest: an,
        addUTCTimingSource: Kt,
        removeUTCTimingSource: Yt,
        clearDefaultUTCTimingSources: Wt,
        restoreDefaultUTCTimingSources: zt,
        setBufferToKeep: $t,
        setBufferAheadToKeep: Qt,
        setBufferPruningInterval: Jt,
        setStableBufferTime: Zt,
        getStableBufferTime: er,
        setBufferTimeAtTopQuality: tr,
        getBufferTimeAtTopQuality: rr,
        setBufferTimeAtTopQualityLongForm: nr,
        getBufferTimeAtTopQualityLongForm: ir,
        setFragmentLoaderRetryAttempts: cr,
        setFragmentLoaderRetryInterval: hr,
        setManifestLoaderRetryAttempts: pr,
        setManifestLoaderRetryInterval: vr,
        setXHRWithCredentialsForType: gr,
        getXHRWithCredentialsForType: mr,
        setJumpGaps: yr,
        getJumpGaps: _r,
        setSmallGapLimit: Tr,
        getSmallGapLimit: Er,
        setLowLatencyEnabled: Vt,
        getLowLatencyEnabled: Ht,
        setCatchUpPlaybackRate: Fe,
        getCatchUpPlaybackRate: Ue,
        setLowLatencyMinDrift: Be,
        getLowLatencyMinDrift: je,
        setLowLatencyMaxDriftBeforeSeeking: Ge,
        getLowLatencyMaxDriftBeforeSeeking: qe,
        setManifestUpdateRetryInterval: br,
        getManifestUpdateRetryInterval: Sr,
        setLongFormContentDurationThreshold: ar,
        setSegmentOverlapToleranceTime: sr,
        setCacheLoadThresholdForType: or,
        getProtectionController: Zr,
        attachProtectionController: en,
        setProtectionData: tn,
        enableManifestDateHeaderTimeSource: Xt,
        displayCaptionsOnTop: Lr,
        attachVideoContainer: Fr,
        attachTTMLRenderingDiv: jr,
        getCurrentTextTrackIndex: Nr,
        getUseDeadTimeLatencyForAbr: Tt,
        setUseDeadTimeLatencyForAbr: Et,
        getThumbnail: rn,
        keepProtectionMediaKeys: nn,
        reset: be,
      }
      _e()
      return g
    }
    me.__dashjs_factory_name = 'MediaPlayer'
    var ye = Z['default'].getClassFactory(me)
    ye.events = Q['default']
    ye.errors = K['default']
    Z['default'].updateClassFactory(me.__dashjs_factory_name, ye)
    t['default'] = ye
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(42)
    var u = i(o)
    var l = (function(e) {
      s(t, e)
      function t() {
        a(this, t)
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(this)
        this.AST_IN_FUTURE = 'astInFuture'
        this.BUFFER_EMPTY = 'bufferStalled'
        this.BUFFER_LOADED = 'bufferLoaded'
        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged'
        this.ERROR = 'error'
        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted'
        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress'
        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted'
        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned'
        this.LOG = 'log'
        this.MANIFEST_LOADED = 'manifestLoaded'
        this.METRICS_CHANGED = 'metricsChanged'
        this.METRIC_CHANGED = 'metricChanged'
        this.METRIC_ADDED = 'metricAdded'
        this.METRIC_UPDATED = 'metricUpdated'
        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted'
        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted'
        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested'
        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered'
        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered'
        this.SOURCE_INITIALIZED = 'sourceInitialized'
        this.STREAM_INITIALIZED = 'streamInitialized'
        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete'
        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded'
        this.TEXT_TRACK_ADDED = 'textTrackAdded'
        this.TTML_PARSED = 'ttmlParsed'
        this.TTML_TO_PARSE = 'ttmlToParse'
        this.CAPTION_RENDERED = 'captionRendered'
        this.CAPTION_CONTAINER_RESIZE = 'captionContainerResize'
        this.CAN_PLAY = 'canPlay'
        this.PLAYBACK_ENDED = 'playbackEnded'
        this.PLAYBACK_ERROR = 'playbackError'
        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed'
        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded'
        this.PLAYBACK_PAUSED = 'playbackPaused'
        this.PLAYBACK_PLAYING = 'playbackPlaying'
        this.PLAYBACK_PROGRESS = 'playbackProgress'
        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged'
        this.PLAYBACK_SEEKED = 'playbackSeeked'
        this.PLAYBACK_SEEKING = 'playbackSeeking'
        this.PLAYBACK_SEEK_ASKED = 'playbackSeekAsked'
        this.PLAYBACK_STALLED = 'playbackStalled'
        this.PLAYBACK_STARTED = 'playbackStarted'
        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated'
        this.PLAYBACK_WAITING = 'playbackWaiting'
        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged'
      }
      return t
    })(u['default'])
    var f = new l()
    t['default'] = f
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(1)
    var a = n(i)
    var s = r(5)
    var o = n(s)
    var u = r(2)
    var l = n(u)
    var f = r(4)
    var d = n(f)
    var c = r(0)
    var h = n(c)
    var p = r(73)
    var v = n(p)
    var g = r(6)
    var m = n(g)
    var y = 0.1
    function _(e, t, r, n) {
      var i = this.context
      var s = (0, l['default'])(i).getInstance()
      var u = undefined,
        f = undefined,
        c = undefined,
        h = undefined,
        p = undefined
      var g = []
      var _ = []
      var T = r
      function E() {
        f = (0, a['default'])(i)
          .getInstance()
          .getLogger(u)
        h = false
        var r = t.codec
        try {
          if (r.match(/application\/mp4;\s*codecs="(stpp|wvtt).*"/i)) {
            throw new Error('not really supported')
          }
          c = n ? n : e.addSourceBuffer(r)
          if (c.changeType && n) {
            f.debug('Doing period transition with changeType')
            c.changeType(r)
          }
          var s = 50
          if (typeof c.addEventListener === 'function') {
            try {
              c.addEventListener('updateend', L, false)
              c.addEventListener('error', x, false)
              c.addEventListener('abort', x, false)
            } catch (e) {
              p = setInterval(N, s)
            }
          } else {
            p = setInterval(N, s)
          }
        } catch (e) {
          if (t.isText || r.indexOf('codecs="stpp') !== -1 || r.indexOf('codecs="wvtt') !== -1) {
            var o = (0, v['default'])(i).getInstance()
            c = o.getTextSourceBuffer()
          } else {
            throw e
          }
        }
      }
      function b(t) {
        if (c) {
          if (typeof c.removeEventListener === 'function') {
            c.removeEventListener('updateend', L, false)
            c.removeEventListener('error', x, false)
            c.removeEventListener('abort', x, false)
          }
          clearInterval(p)
          if (!t) {
            try {
              if (!c.getClassName || c.getClassName() !== 'TextSourceBuffer') {
                e.removeSourceBuffer(c)
              }
            } catch (e) {
              f.error('Failed to remove source buffer from media source.')
            }
            c = null
          }
          h = false
        }
        _ = []
        T = null
      }
      function S() {
        return c
      }
      function w() {
        try {
          return c.buffered
        } catch (e) {
          f.error('getAllBufferRanges exception: ' + e.message)
          return null
        }
      }
      function A(e) {
        try {
          var t = w()
          if (t && t.length > 1) {
            for (var r = 0, n = t.length; r < n; r++) {
              if (r > 0) {
                if (e < t.start(r) && t.start(r) > t.end(r - 1) + y) {
                  return true
                }
              }
            }
          }
        } catch (e) {
          f.error('hasDiscontinuities exception: ' + e.message)
        }
        return false
      }
      function I(e) {
        if (!e) {
          T({
            chunk: e,
            error: new o['default'](
              m['default'].APPEND_ERROR_CODE,
              m['default'].APPEND_ERROR_MESSAGE
            ),
          })
          return
        }
        _.push(e)
        if (!h) {
          F(c, D.bind(this))
        }
      }
      function C(e) {
        if (c.timestampOffset !== e && !isNaN(e)) {
          F(c, function() {
            c.timestampOffset = e
          })
        }
      }
      function R(t, r, n) {
        var i = this
        F(c, function() {
          try {
            if (t >= 0 && r > t && (n || e.readyState !== 'ended')) {
              c.remove(t, r)
            }
            F(c, function() {
              s.trigger(d['default'].SOURCEBUFFER_REMOVE_COMPLETED, {
                buffer: i,
                from: t,
                to: r,
                unintended: false,
              })
            })
          } catch (e) {
            s.trigger(d['default'].SOURCEBUFFER_REMOVE_COMPLETED, {
              buffer: i,
              from: t,
              to: r,
              unintended: false,
              error: new o['default'](e.code, e.message),
            })
          }
        })
      }
      function D() {
        var e = this
        var t = this
        if (_.length > 0) {
          ;(function() {
            h = true
            var r = _[0]
            _.splice(0, 1)
            var n = []
            var i = function e() {
              var i = w()
              O(t, n, i, r)
              if (_.length > 0) {
                D.call(this)
              } else {
                h = false
                if (T) {
                  T({ chunk: r })
                }
              }
            }
            try {
              if (r.bytes.length === 0) {
                i.call(e)
              } else {
                n = w()
                if (c.appendBuffer) {
                  c.appendBuffer(r.bytes)
                } else {
                  c.append(r.bytes, r)
                }
                F(c, i.bind(e))
              }
            } catch (e) {
              f.fatal('SourceBuffer append failed "' + e + '"')
              if (_.length > 0) {
                D()
              } else {
                h = false
              }
              if (T) {
                T({ chunk: r, error: new o['default'](e.code, e.message) })
              }
            }
          })()
        }
      }
      function O(e, t, r, n) {
        if (t && t.length > 0 && t.length < r.length && M(t, n)) {
          s.trigger(d['default'].SOURCEBUFFER_REMOVE_COMPLETED, {
            buffer: e,
            from: r.end(r.length - 2),
            to: r.start(r.length - 1),
            unintended: true,
          })
        }
      }
      function M(e, t) {
        for (var r = 0; r < e.length; r++) {
          var n = Math.round(e.start(r))
          var i = Math.round(e.end(r))
          if (i === t.start || n === t.end || (t.start >= n && t.end <= i)) {
            return true
          }
        }
        return false
      }
      function k() {
        try {
          if (e.readyState === 'open') {
            c.abort()
          } else if (c.setTextTrack && e.readyState === 'ended') {
            c.abort()
          }
        } catch (e) {
          f.error('SourceBuffer append abort failed: "' + e + '"')
        }
        _ = []
      }
      function P() {
        if (g.length > 0) {
          var e = g.shift()
          if (c.updating) {
            F(c, e)
          } else {
            e()
            P()
          }
        }
      }
      function N() {
        if (c.updating) return
        P()
      }
      function L() {
        if (c.updating) return
        P()
      }
      function x() {
        f.error('SourceBufferSink error', t.type)
      }
      function F(e, t) {
        g.push(t)
        if (!e.updating) {
          P()
        }
      }
      u = {
        getAllBufferRanges: w,
        getBuffer: S,
        append: I,
        remove: R,
        abort: k,
        reset: b,
        updateTimestampOffset: C,
        hasDiscontinuitiesAfter: A,
      }
      E()
      return u
    }
    _.__dashjs_factory_name = 'SourceBufferSink'
    var T = h['default'].getClassFactory(_)
    t['default'] = T
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(248)
    var a = n(i)
    var s = r(287)
    var o = n(s)
    var u = r(15)
    var l = n(u)
    var f = r(104)
    var d = n(f)
    var c = r(0)
    var h = n(c)
    var p = r(2)
    var v = n(p)
    var g = r(4)
    var m = n(g)
    function y() {
      var e = undefined
      var t = undefined
      var r = this.context
      var n = (0, v['default'])(r).getInstance()
      var i = (0, l['default'])(r).getInstance()
      var s = undefined,
        u = undefined
      function f(e) {
        s.invalidateSelectedIndexes(e.entry)
      }
      function c() {
        s = (0, a['default'])(r).create()
        u = (0, o['default'])(r).create()
        n.on(m['default'].SERVICE_LOCATION_BLACKLIST_CHANGED, f, e)
      }
      function h(e) {
        if (e.baseURLTreeModel) {
          s = e.baseURLTreeModel
        }
        if (e.baseURLSelector) {
          u = e.baseURLSelector
        }
        if (e.dashManifestModel) {
          t = e.dashManifestModel
        }
      }
      function p(e) {
        s.update(e)
        u.chooseSelectorFromManifest(e)
      }
      function g(e) {
        var t = s.getForPath(e)
        var r = t.reduce(function(e, t) {
          var r = u.select(t)
          if (r) {
            if (!i.isRelative(r.url)) {
              e.url = r.url
              e.serviceLocation = r.serviceLocation
            } else {
              e.url = i.resolve(r.url, e.url)
            }
            e.availabilityTimeOffset = r.availabilityTimeOffset
            e.availabilityTimeComplete = r.availabilityTimeComplete
          } else {
            return new d['default']()
          }
          return e
        }, new d['default']())
        if (!i.isRelative(r.url)) {
          return r
        }
      }
      function y() {
        s.reset()
        u.reset()
      }
      function _(e) {
        s.setConfig({ dashManifestModel: t })
        u.setConfig({ dashManifestModel: t })
        p(e)
      }
      e = { reset: y, initialize: _, resolve: g, setConfig: h }
      c()
      return e
    }
    y.__dashjs_factory_name = 'BaseURLController'
    t['default'] = h['default'].getSingletonFactory(y)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(235)
    var a = n(i)
    var s = r(236)
    var o = n(s)
    var u = r(238)
    var l = n(u)
    var f = r(237)
    var d = n(f)
    function c(e) {
      e = e || {}
      var t = undefined
      var r = e.debug
      var n = /([a-zA-Z]*)(\(([0-9]*)(\,\s*([a-zA-Z]*))?\))?/
      var i = this.context
      var s = {
        BufferLevel: a['default'],
        DVBErrors: o['default'],
        HttpList: l['default'],
        PlayList: d['default'],
        RepSwitchList: d['default'],
        TcpList: d['default'],
      }
      function u(t, a) {
        var o = t.match(n)
        var u
        if (!o) {
          return
        }
        try {
          u = s[o[1]](i).create({ eventBus: e.eventBus, metricsConstants: e.metricsConstants })
          u.initialize(o[1], a, o[3], o[5])
        } catch (e) {
          u = null
          r.error(
            'MetricsHandlerFactory: Could not create handler for type ' +
              o[1] +
              ' with args ' +
              o[3] +
              ', ' +
              o[5] +
              ' (' +
              e.message +
              ')'
          )
        }
        return u
      }
      function f(e, t) {
        s[e] = t
      }
      function c(e) {
        delete s[e]
      }
      t = { create: u, register: f, unregister: c }
      return t
    }
    c.__dashjs_factory_name = 'MetricsHandlerFactory'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(c)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(239)
    var a = n(i)
    function s(e) {
      e = e || {}
      var t = { 'urn:dvb:dash:reporting:2014': a['default'] }
      var r = this.context
      var n = e.debug
      var i = e.metricsConstants
      var s = undefined
      function o(e, a) {
        var s = undefined
        try {
          s = t[e.schemeIdUri](r).create({ metricsConstants: i })
          s.initialize(e, a)
        } catch (t) {
          s = null
          n.error(
            'ReportingFactory: could not create Reporting with schemeIdUri ' +
              e.schemeIdUri +
              ' (' +
              t.message +
              ')'
          )
        }
        return s
      }
      function u(e, r) {
        t[e] = r
      }
      function l(e) {
        delete t[e]
      }
      s = { create: o, register: u, unregister: l }
      return s
    }
    s.__dashjs_factory_name = 'ReportingFactory'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n() {
      return {
        reconstructFullMetricName: function e(t, r, n) {
          var i = t
          if (r) {
            i += '(' + r
            if (n && n.length) {
              i += ',' + n
            }
            i += ')'
          }
          return i
        },
        validateN: function e(t) {
          if (!t) {
            throw new Error('missing n')
          }
          if (isNaN(t)) {
            throw new Error('n is NaN')
          }
          if (t < 0) {
            throw new Error('n must be positive')
          }
          return t
        },
      }
    }
    n.__dashjs_factory_name = 'HandlerHelpers'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(n)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(279)
    var a = n(i)
    var s = r(277)
    var o = n(s)
    var u = r(274)
    var l = n(u)
    var f = r(276)
    var d = n(f)
    var c = r(278)
    var h = n(c)
    var p = r(275)
    var v = n(p)
    var g = r(0)
    var m = n(g)
    var y = r(14)
    var _ = n(y)
    var T = 'qualitySwitchRules'
    var E = 'abandonFragmentRules'
    function b(e) {
      e = e || {}
      var t = this.context
      var r = e.mediaPlayerModel
      var n = e.metricsModel
      var i = e.dashMetrics
      var s = undefined,
        u = undefined,
        f = undefined
      function c() {
        u = []
        f = []
        if (r.getUseDefaultABRRules()) {
          u.push(
            (0, v['default'])(t).create({ metricsModel: n, dashMetrics: i, mediaPlayerModel: r })
          )
          u.push((0, a['default'])(t).create({ metricsModel: n, dashMetrics: i }))
          u.push((0, o['default'])(t).create({ metricsModel: n, dashMetrics: i }))
          u.push((0, h['default'])(t).create())
          u.push((0, d['default'])(t).create())
          f.push(
            (0, l['default'])(t).create({ metricsModel: n, dashMetrics: i, mediaPlayerModel: r })
          )
        }
        var e = r.getABRCustomRules()
        e.forEach(function(e) {
          if (e.type === T) {
            u.push(e.rule(t).create())
          }
          if (e.type === E) {
            f.push(e.rule(t).create())
          }
        })
      }
      function p(e) {
        return e.filter(function(e) {
          return e.quality > _['default'].NO_CHANGE
        })
      }
      function g(e) {
        var r = {}
        var n = undefined,
          i = undefined,
          a = undefined,
          s = undefined,
          o = undefined
        if (e.length === 0) {
          return
        }
        r[_['default'].PRIORITY.STRONG] = _['default'].NO_CHANGE
        r[_['default'].PRIORITY.WEAK] = _['default'].NO_CHANGE
        r[_['default'].PRIORITY.DEFAULT] = _['default'].NO_CHANGE
        for (n = 0, i = e.length; n < i; n += 1) {
          a = e[n]
          if (a.quality !== _['default'].NO_CHANGE) {
            r[a.priority] =
              r[a.priority] > _['default'].NO_CHANGE
                ? Math.min(r[a.priority], a.quality)
                : a.quality
          }
        }
        if (r[_['default'].PRIORITY.WEAK] !== _['default'].NO_CHANGE) {
          s = r[_['default'].PRIORITY.WEAK]
        }
        if (r[_['default'].PRIORITY.DEFAULT] !== _['default'].NO_CHANGE) {
          s = r[_['default'].PRIORITY.DEFAULT]
        }
        if (r[_['default'].PRIORITY.STRONG] !== _['default'].NO_CHANGE) {
          s = r[_['default'].PRIORITY.STRONG]
        }
        if (s !== _['default'].NO_CHANGE) {
          o = s
        }
        return (0, _['default'])(t).create(o)
      }
      function m(e) {
        var r = u.map(function(t) {
          return t.getMaxIndex(e)
        })
        var n = p(r)
        var i = g(n)
        return i || (0, _['default'])(t).create()
      }
      function y(e) {
        var r = f.map(function(t) {
          return t.shouldAbandon(e)
        })
        var n = p(r)
        var i = g(n)
        return i || (0, _['default'])(t).create()
      }
      function b() {
        ;[u, f].forEach(function(e) {
          if (e && e.length) {
            e.forEach(function(e) {
              return e.reset && e.reset()
            })
          }
        })
        u = []
        f = []
      }
      s = { initialize: c, reset: b, getMaxQuality: m, shouldAbandonFragment: y }
      return s
    }
    b.__dashjs_factory_name = 'ABRRulesCollection'
    var S = m['default'].getClassFactory(b)
    S.QUALITY_SWITCH_RULES = T
    S.ABANDON_FRAGMENT_RULES = E
    m['default'].updateSingletonFactory(b.__dashjs_factory_name, S)
    t['default'] = S
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(9)
    var o = n(s)
    var u = r(0)
    var l = n(u)
    var f = r(309)
    var d = n(f)
    var c = r(15)
    var h = n(c)
    var p = r(18)
    var v = r(102)
    var g = n(v)
    var m = r(36)
    var y = n(m)
    var _ = r(66)
    var T = n(_)
    var E = ['http://dashif.org/thumbnail_tile', 'http://dashif.org/guidelines/thumbnail_tile']
    t.THUMBNAILS_SCHEME_ID_URIS = E
    function b(e) {
      var t = this.context
      var r = e.dashManifestModel
      var n = e.adapter
      var i = e.baseURLController
      var s = e.stream
      var u = e.timelineConverter
      var l = e.metricsModel
      var f = e.mediaPlayerModel
      var c = e.errHandler
      var v = (0, h['default'])(t).getInstance()
      var m = undefined,
        _ = undefined,
        b = undefined,
        S = undefined,
        w = undefined,
        A = undefined
      function I() {
        L()
        S = (0, T['default'])(t).create({})
        A = (0, y['default'])(t).getInstance()
        w = (0, g['default'])(t).getInstance()
        w.setConfig({ baseURLController: i, metricsModel: l, mediaPlayerModel: f, errHandler: c })
        R()
      }
      function C(e, t) {
        var n = []
        var i = 0
        var a = undefined,
          s = undefined,
          o = undefined,
          l = undefined
        for (a = 0, s = e.length; a < s; a++) {
          o = e[a]
          l = (0, p.getTimeBasedSegment)(
            u,
            r.getIsDynamic(),
            t,
            o.startTime,
            o.duration,
            o.timescale,
            o.media,
            o.mediaRange,
            i
          )
          n.push(l)
          l = null
          i++
        }
        return n
      }
      function R() {
        if (!s || !r || !n) {
          return
        }
        var e = s.getStreamInfo()
        if (!e) {
          return
        }
        var t = n.getMediaInfoForType(e, a['default'].IMAGE)
        if (!t) {
          return
        }
        var i = n.getDataForMedia(t)
        if (!i) {
          return
        }
        var u = r.getRepresentationsForAdaptation(i)
        if (u && u.length > 0) {
          u.forEach(function(e) {
            if (
              e.segmentInfoType === o['default'].SEGMENT_TEMPLATE &&
              e.segmentDuration > 0 &&
              e.media
            )
              D(e)
            if (e.segmentInfoType === o['default'].SEGMENT_BASE) D(e, true)
          })
        }
        if (_.length > 0) {
          _.sort(function(e, t) {
            return e.bitrate - t.bitrate
          })
          b = _.length - 1
        }
      }
      function D(e, t) {
        var r = new d['default']()
        r.id = e.id
        r.bitrate = e.bandwidth
        r.width = e.width
        r.height = e.height
        r.tilesHor = 1
        r.tilesVert = 1
        if (e.essentialProperties) {
          e.essentialProperties.forEach(function(e) {
            if (E.indexOf(e.schemeIdUri) >= 0 && e.value) {
              var t = e.value.split('x')
              if (t.length === 2 && !isNaN(t[0]) && !isNaN(t[1])) {
                r.tilesHor = parseInt(t[0], 10)
                r.tilesVert = parseInt(t[1], 10)
              }
            }
          })
        }
        if (t) {
          w.loadSegments(e, a['default'].IMAGE, e.indexRange, {}, function(e, t) {
            var n = []
            e = C(e, t)
            r.segmentDuration = e[0].duration
            r.readThumbnail = function(r, a) {
              var s = null
              n.some(function(e) {
                if (e.start <= r && e.end > r) {
                  s = e.url
                  return true
                }
              })
              if (s) {
                a(s)
              } else {
                e.some(function(e) {
                  if (e.mediaStartTime <= r && e.mediaStartTime + e.duration > r) {
                    var s = i.resolve(t.path)
                    S.load({
                      method: 'get',
                      url: s.url,
                      request: { range: e.mediaRange, responseType: 'arraybuffer' },
                      onload: function t(r) {
                        var i = A.getSamplesInfo(r.target.response)
                        var s = new Blob(
                          [
                            r.target.response.slice(
                              i.sampleList[0].offset,
                              i.sampleList[0].offset + i.sampleList[0].size
                            ),
                          ],
                          { type: 'image/jpeg' }
                        )
                        var o = window.URL.createObjectURL(s)
                        n.push({
                          start: e.mediaStartTime,
                          end: e.mediaStartTime + e.duration,
                          url: o,
                        })
                        if (a) a(o)
                      },
                    })
                    return true
                  }
                })
              }
            }
          })
        } else {
          r.startNumber = e.startNumber
          r.segmentDuration = e.segmentDuration
          r.timescale = e.timescale
          r.templateUrl = O(e)
        }
        if (r.tilesHor > 0 && r.tilesVert > 0) {
          r.widthPerTile = r.width / r.tilesHor
          r.heightPerTile = r.height / r.tilesVert
          _.push(r)
        }
      }
      function O(e) {
        var t = v.isRelative(e.media) ? v.resolve(e.media, i.resolve(e.path).url) : e.media
        if (!t) {
          return ''
        }
        return (0, p.replaceIDForTemplate)(t, e.id)
      }
      function M() {
        return _
      }
      function k() {
        return b
      }
      function P() {
        if (b < 0) {
          return null
        }
        return _[b]
      }
      function N(e) {
        if (!_ || _.length === 0) {
          return
        }
        if (e >= _.length) {
          e = _.length - 1
        }
        b = e
      }
      function L() {
        _ = []
        b = -1
      }
      m = {
        initialize: I,
        getTracks: M,
        reset: L,
        setTrackByIndex: N,
        getCurrentTrack: P,
        getCurrentTrackIndex: k,
      }
      I()
      return m
    }
    b.__dashjs_factory_name = 'ThumbnailTracks'
    t['default'] = l['default'].getClassFactory(b)
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(27)
    function o() {
      var e = []
      var t = 0
      function r(e, t) {
        var r = 0
        for (
          r = 0;
          r < this.customTimeRangeArray.length && e > this.customTimeRangeArray[r].start;
          r++
        );
        this.customTimeRangeArray.splice(r, 0, { start: e, end: t })
        for (r = 0; r < this.customTimeRangeArray.length - 1; r++) {
          if (this.mergeRanges(r, r + 1)) {
            r--
          }
        }
        this.length = this.customTimeRangeArray.length
      }
      function n() {
        this.customTimeRangeArray = []
        this.length = 0
      }
      function i(e, t) {
        for (var r = 0; r < this.customTimeRangeArray.length; r++) {
          if (e <= this.customTimeRangeArray[r].start && t >= this.customTimeRangeArray[r].end) {
            this.customTimeRangeArray.splice(r, 1)
            r--
          } else if (
            e > this.customTimeRangeArray[r].start &&
            t < this.customTimeRangeArray[r].end
          ) {
            this.customTimeRangeArray.splice(r + 1, 0, {
              start: t,
              end: this.customTimeRangeArray[r].end,
            })
            this.customTimeRangeArray[r].end = e
            break
          } else if (
            e > this.customTimeRangeArray[r].start &&
            e < this.customTimeRangeArray[r].end
          ) {
            this.customTimeRangeArray[r].end = e
          } else if (
            t > this.customTimeRangeArray[r].start &&
            t < this.customTimeRangeArray[r].end
          ) {
            this.customTimeRangeArray[r].start = t
          }
        }
        this.length = this.customTimeRangeArray.length
      }
      function a(e, t) {
        var r = this.customTimeRangeArray[e]
        var n = this.customTimeRangeArray[t]
        if (r.start <= n.start && n.start <= r.end && r.end <= n.end) {
          r.end = n.end
          this.customTimeRangeArray.splice(t, 1)
          return true
        } else if (n.start <= r.start && r.start <= n.end && n.end <= r.end) {
          r.start = n.start
          this.customTimeRangeArray.splice(t, 1)
          return true
        } else if (n.start <= r.start && r.start <= n.end && r.end <= n.end) {
          this.customTimeRangeArray.splice(e, 1)
          return true
        } else if (r.start <= n.start && n.start <= r.end && n.end <= r.end) {
          this.customTimeRangeArray.splice(t, 1)
          return true
        }
        return false
      }
      function o(e) {
        ;(0, s.checkInteger)(e)
        if (e >= this.customTimeRangeArray.length || e < 0) {
          return NaN
        }
        return this.customTimeRangeArray[e].start
      }
      function u(e) {
        ;(0, s.checkInteger)(e)
        if (e >= this.customTimeRangeArray.length || e < 0) {
          return NaN
        }
        return this.customTimeRangeArray[e].end
      }
      return {
        customTimeRangeArray: e,
        length: t,
        add: r,
        clear: n,
        remove: i,
        mergeRanges: a,
        start: o,
        end: u,
      }
    }
    o.__dashjs_factory_name = 'CustomTimeRanges'
    t['default'] = a['default'].getClassFactory(o)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(319)
    var o = n(s)
    function u() {
      var e = undefined
      function t(e, t) {
        return (0, o['default'])(e, t)
      }
      e = { areEqual: t }
      return e
    }
    u.__dashjs_factory_name = 'ObjectUtils'
    t['default'] = a['default'].getSingletonFactory(u)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.mediaType = null
      this.bitrate = null
      this.width = null
      this.height = null
      this.scanType = null
      this.qualityIndex = NaN
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(3)
    var u = i(o)
    var l = r(21)
    var f = i(l)
    var d = (function(e) {
      s(t, e)
      function t(e, r) {
        a(this, t)
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(this)
        this.url = e || null
        this.type = r || null
        this.mediaType = u['default'].STREAM
        this.responseType = ''
      }
      return t
    })(f['default'])
    t['default'] = d
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.start = null
      this.mstart = null
      this.starttype = null
      this.trace = []
    }
    i.INITIAL_PLAYOUT_START_REASON = 'initial_playout'
    i.SEEK_START_REASON = 'seek'
    i.RESUME_FROM_PAUSE_START_REASON = 'resume'
    i.METRICS_COLLECTION_START_REASON = 'metrics_collection_start'
    var a = function e() {
      n(this, e)
      this.representationid = null
      this.subreplevel = null
      this.start = null
      this.mstart = null
      this.duration = null
      this.playbackspeed = null
      this.stopreason = null
    }
    a.REPRESENTATION_SWITCH_STOP_REASON = 'representation_switch'
    a.REBUFFERING_REASON = 'rebuffering'
    a.USER_REQUEST_STOP_REASON = 'user_request'
    a.END_OF_PERIOD_STOP_REASON = 'end_of_period'
    a.END_OF_CONTENT_STOP_REASON = 'end_of_content'
    a.METRICS_COLLECTION_STOP_REASON = 'metrics_collection_end'
    a.FAILURE_STOP_REASON = 'failure'
    t.PlayList = i
    t.PlayListTrace = a
  },
  function(e, t, r) {
    var n = false ? global : typeof window !== 'undefined' ? window : {}
    var i = r(344)
    var a
    if (typeof document !== 'undefined') {
      a = document
    } else {
      a = n['__GLOBAL_DOCUMENT_CACHE@4']
      if (!a) {
        a = n['__GLOBAL_DOCUMENT_CACHE@4'] = i
      }
    }
    e.exports = a
  },
  function(e, t, r) {
    var n
    if (typeof window !== 'undefined') {
      n = window
    } else if (false) {
      n = global
    } else if (typeof self !== 'undefined') {
      n = self
    } else {
      n = {}
    }
    e.exports = n
  },
  function(e, t, r) {
    t.generateISD = r(324).generateISD
    t.fromXML = r(322).fromXML
    t.renderHTML = r(323).render
  },
  function(e, t) {
    var r = {}.toString
    e.exports =
      Array.isArray ||
      function(e) {
        return r.call(e) == '[object Array]'
      }
  },
  function(e, t, r) {
    'use strict'
    ;(function(t, n) {
      var i = r(51)
      e.exports = S
      var a = r(124)
      var s
      S.ReadableState = b
      var o = r(76).EventEmitter
      var u = function(e, t) {
        return e.listeners(t).length
      }
      var l = r(128)
      var f = r(80).Buffer
      var d = t.Uint8Array || function() {}
      function c(e) {
        return f.from(e)
      }
      function h(e) {
        return f.isBuffer(e) || e instanceof d
      }
      var p = r(33)
      p.inherits = r(28)
      var v = r(345)
      var g = void 0
      if (v && v.debuglog) {
        g = v.debuglog('stream')
      } else {
        g = function() {}
      }
      var m = r(329)
      var y = r(127)
      var _
      p.inherits(S, l)
      var T = ['error', 'close', 'destroy', 'pause', 'resume']
      function E(e, t, r) {
        if (typeof e.prependListener === 'function') return e.prependListener(t, r)
        if (!e._events || !e._events[t]) e.on(t, r)
        else if (a(e._events[t])) e._events[t].unshift(r)
        else e._events[t] = [r, e._events[t]]
      }
      function b(e, t) {
        s = s || r(22)
        e = e || {}
        var n = t instanceof s
        this.objectMode = !!e.objectMode
        if (n) this.objectMode = this.objectMode || !!e.readableObjectMode
        var i = e.highWaterMark
        var a = e.readableHighWaterMark
        var o = this.objectMode ? 16 : 16 * 1024
        if (i || i === 0) this.highWaterMark = i
        else if (n && (a || a === 0)) this.highWaterMark = a
        else this.highWaterMark = o
        this.highWaterMark = Math.floor(this.highWaterMark)
        this.buffer = new m()
        this.length = 0
        this.pipes = null
        this.pipesCount = 0
        this.flowing = null
        this.ended = false
        this.endEmitted = false
        this.reading = false
        this.sync = true
        this.needReadable = false
        this.emittedReadable = false
        this.readableListening = false
        this.resumeScheduled = false
        this.destroyed = false
        this.defaultEncoding = e.defaultEncoding || 'utf8'
        this.awaitDrain = 0
        this.readingMore = false
        this.decoder = null
        this.encoding = null
        if (e.encoding) {
          if (!_) _ = r(78).StringDecoder
          this.decoder = new _(e.encoding)
          this.encoding = e.encoding
        }
      }
      function S(e) {
        s = s || r(22)
        if (!(this instanceof S)) return new S(e)
        this._readableState = new b(e, this)
        this.readable = true
        if (e) {
          if (typeof e.read === 'function') this._read = e.read
          if (typeof e.destroy === 'function') this._destroy = e.destroy
        }
        l.call(this)
      }
      Object.defineProperty(S.prototype, 'destroyed', {
        get: function() {
          if (this._readableState === undefined) {
            return false
          }
          return this._readableState.destroyed
        },
        set: function(e) {
          if (!this._readableState) {
            return
          }
          this._readableState.destroyed = e
        },
      })
      S.prototype.destroy = y.destroy
      S.prototype._undestroy = y.undestroy
      S.prototype._destroy = function(e, t) {
        this.push(null)
        t(e)
      }
      S.prototype.push = function(e, t) {
        var r = this._readableState
        var n
        if (!r.objectMode) {
          if (typeof e === 'string') {
            t = t || r.defaultEncoding
            if (t !== r.encoding) {
              e = f.from(e, t)
              t = ''
            }
            n = true
          }
        } else {
          n = true
        }
        return w(this, e, t, false, n)
      }
      S.prototype.unshift = function(e) {
        return w(this, e, null, true, false)
      }
      function w(e, t, r, n, i) {
        var a = e._readableState
        if (t === null) {
          a.reading = false
          M(e, a)
        } else {
          var s
          if (!i) s = I(a, t)
          if (s) {
            e.emit('error', s)
          } else if (a.objectMode || (t && t.length > 0)) {
            if (
              typeof t !== 'string' &&
              !a.objectMode &&
              Object.getPrototypeOf(t) !== f.prototype
            ) {
              t = c(t)
            }
            if (n) {
              if (a.endEmitted) e.emit('error', new Error('stream.unshift() after end event'))
              else A(e, a, t, true)
            } else if (a.ended) {
              e.emit('error', new Error('stream.push() after EOF'))
            } else {
              a.reading = false
              if (a.decoder && !r) {
                t = a.decoder.write(t)
                if (a.objectMode || t.length !== 0) A(e, a, t, false)
                else N(e, a)
              } else {
                A(e, a, t, false)
              }
            }
          } else if (!n) {
            a.reading = false
          }
        }
        return C(a)
      }
      function A(e, t, r, n) {
        if (t.flowing && t.length === 0 && !t.sync) {
          e.emit('data', r)
          e.read(0)
        } else {
          t.length += t.objectMode ? 1 : r.length
          if (n) t.buffer.unshift(r)
          else t.buffer.push(r)
          if (t.needReadable) k(e)
        }
        N(e, t)
      }
      function I(e, t) {
        var r
        if (!h(t) && typeof t !== 'string' && t !== undefined && !e.objectMode) {
          r = new TypeError('Invalid non-string/buffer chunk')
        }
        return r
      }
      function C(e) {
        return !e.ended && (e.needReadable || e.length < e.highWaterMark || e.length === 0)
      }
      S.prototype.isPaused = function() {
        return this._readableState.flowing === false
      }
      S.prototype.setEncoding = function(e) {
        if (!_) _ = r(78).StringDecoder
        this._readableState.decoder = new _(e)
        this._readableState.encoding = e
        return this
      }
      var R = 8388608
      function D(e) {
        if (e >= R) {
          e = R
        } else {
          e--
          e |= e >>> 1
          e |= e >>> 2
          e |= e >>> 4
          e |= e >>> 8
          e |= e >>> 16
          e++
        }
        return e
      }
      function O(e, t) {
        if (e <= 0 || (t.length === 0 && t.ended)) return 0
        if (t.objectMode) return 1
        if (e !== e) {
          if (t.flowing && t.length) return t.buffer.head.data.length
          else return t.length
        }
        if (e > t.highWaterMark) t.highWaterMark = D(e)
        if (e <= t.length) return e
        if (!t.ended) {
          t.needReadable = true
          return 0
        }
        return t.length
      }
      S.prototype.read = function(e) {
        g('read', e)
        e = parseInt(e, 10)
        var t = this._readableState
        var r = e
        if (e !== 0) t.emittedReadable = false
        if (e === 0 && t.needReadable && (t.length >= t.highWaterMark || t.ended)) {
          g('read: emitReadable', t.length, t.ended)
          if (t.length === 0 && t.ended) K(this)
          else k(this)
          return null
        }
        e = O(e, t)
        if (e === 0 && t.ended) {
          if (t.length === 0) K(this)
          return null
        }
        var n = t.needReadable
        g('need readable', n)
        if (t.length === 0 || t.length - e < t.highWaterMark) {
          n = true
          g('length less than watermark', n)
        }
        if (t.ended || t.reading) {
          n = false
          g('reading or ended', n)
        } else if (n) {
          g('do read')
          t.reading = true
          t.sync = true
          if (t.length === 0) t.needReadable = true
          this._read(t.highWaterMark)
          t.sync = false
          if (!t.reading) e = O(r, t)
        }
        var i
        if (e > 0) i = G(e, t)
        else i = null
        if (i === null) {
          t.needReadable = true
          e = 0
        } else {
          t.length -= e
        }
        if (t.length === 0) {
          if (!t.ended) t.needReadable = true
          if (r !== e && t.ended) K(this)
        }
        if (i !== null) this.emit('data', i)
        return i
      }
      function M(e, t) {
        if (t.ended) return
        if (t.decoder) {
          var r = t.decoder.end()
          if (r && r.length) {
            t.buffer.push(r)
            t.length += t.objectMode ? 1 : r.length
          }
        }
        t.ended = true
        k(e)
      }
      function k(e) {
        var t = e._readableState
        t.needReadable = false
        if (!t.emittedReadable) {
          g('emitReadable', t.flowing)
          t.emittedReadable = true
          if (t.sync) i.nextTick(P, e)
          else P(e)
        }
      }
      function P(e) {
        g('emit readable')
        e.emit('readable')
        j(e)
      }
      function N(e, t) {
        if (!t.readingMore) {
          t.readingMore = true
          i.nextTick(L, e, t)
        }
      }
      function L(e, t) {
        var r = t.length
        while (!t.reading && !t.flowing && !t.ended && t.length < t.highWaterMark) {
          g('maybeReadMore read 0')
          e.read(0)
          if (r === t.length) break
          else r = t.length
        }
        t.readingMore = false
      }
      S.prototype._read = function(e) {
        this.emit('error', new Error('_read() is not implemented'))
      }
      S.prototype.pipe = function(e, t) {
        var r = this
        var a = this._readableState
        switch (a.pipesCount) {
          case 0:
            a.pipes = e
            break
          case 1:
            a.pipes = [a.pipes, e]
            break
          default:
            a.pipes.push(e)
            break
        }
        a.pipesCount += 1
        g('pipe count=%d opts=%j', a.pipesCount, t)
        var s = (!t || t.end !== false) && e !== n.stdout && e !== n.stderr
        var o = s ? f : T
        if (a.endEmitted) i.nextTick(o)
        else r.once('end', o)
        e.on('unpipe', l)
        function l(e, t) {
          g('onunpipe')
          if (e === r) {
            if (t && t.hasUnpiped === false) {
              t.hasUnpiped = true
              h()
            }
          }
        }
        function f() {
          g('onend')
          e.end()
        }
        var d = x(r)
        e.on('drain', d)
        var c = false
        function h() {
          g('cleanup')
          e.removeListener('close', y)
          e.removeListener('finish', _)
          e.removeListener('drain', d)
          e.removeListener('error', m)
          e.removeListener('unpipe', l)
          r.removeListener('end', f)
          r.removeListener('end', T)
          r.removeListener('data', v)
          c = true
          if (a.awaitDrain && (!e._writableState || e._writableState.needDrain)) d()
        }
        var p = false
        r.on('data', v)
        function v(t) {
          g('ondata')
          p = false
          var n = e.write(t)
          if (false === n && !p) {
            if (
              ((a.pipesCount === 1 && a.pipes === e) ||
                (a.pipesCount > 1 && W(a.pipes, e) !== -1)) &&
              !c
            ) {
              g('false write response, pause', r._readableState.awaitDrain)
              r._readableState.awaitDrain++
              p = true
            }
            r.pause()
          }
        }
        function m(t) {
          g('onerror', t)
          T()
          e.removeListener('error', m)
          if (u(e, 'error') === 0) e.emit('error', t)
        }
        E(e, 'error', m)
        function y() {
          e.removeListener('finish', _)
          T()
        }
        e.once('close', y)
        function _() {
          g('onfinish')
          e.removeListener('close', y)
          T()
        }
        e.once('finish', _)
        function T() {
          g('unpipe')
          r.unpipe(e)
        }
        e.emit('pipe', r)
        if (!a.flowing) {
          g('pipe resume')
          r.resume()
        }
        return e
      }
      function x(e) {
        return function() {
          var t = e._readableState
          g('pipeOnDrain', t.awaitDrain)
          if (t.awaitDrain) t.awaitDrain--
          if (t.awaitDrain === 0 && u(e, 'data')) {
            t.flowing = true
            j(e)
          }
        }
      }
      S.prototype.unpipe = function(e) {
        var t = this._readableState
        var r = { hasUnpiped: false }
        if (t.pipesCount === 0) return this
        if (t.pipesCount === 1) {
          if (e && e !== t.pipes) return this
          if (!e) e = t.pipes
          t.pipes = null
          t.pipesCount = 0
          t.flowing = false
          if (e) e.emit('unpipe', this, r)
          return this
        }
        if (!e) {
          var n = t.pipes
          var i = t.pipesCount
          t.pipes = null
          t.pipesCount = 0
          t.flowing = false
          for (var a = 0; a < i; a++) {
            n[a].emit('unpipe', this, r)
          }
          return this
        }
        var s = W(t.pipes, e)
        if (s === -1) return this
        t.pipes.splice(s, 1)
        t.pipesCount -= 1
        if (t.pipesCount === 1) t.pipes = t.pipes[0]
        e.emit('unpipe', this, r)
        return this
      }
      S.prototype.on = function(e, t) {
        var r = l.prototype.on.call(this, e, t)
        if (e === 'data') {
          if (this._readableState.flowing !== false) this.resume()
        } else if (e === 'readable') {
          var n = this._readableState
          if (!n.endEmitted && !n.readableListening) {
            n.readableListening = n.needReadable = true
            n.emittedReadable = false
            if (!n.reading) {
              i.nextTick(F, this)
            } else if (n.length) {
              k(this)
            }
          }
        }
        return r
      }
      S.prototype.addListener = S.prototype.on
      function F(e) {
        g('readable nexttick read 0')
        e.read(0)
      }
      S.prototype.resume = function() {
        var e = this._readableState
        if (!e.flowing) {
          g('resume')
          e.flowing = true
          U(this, e)
        }
        return this
      }
      function U(e, t) {
        if (!t.resumeScheduled) {
          t.resumeScheduled = true
          i.nextTick(B, e, t)
        }
      }
      function B(e, t) {
        if (!t.reading) {
          g('resume read 0')
          e.read(0)
        }
        t.resumeScheduled = false
        t.awaitDrain = 0
        e.emit('resume')
        j(e)
        if (t.flowing && !t.reading) e.read(0)
      }
      S.prototype.pause = function() {
        g('call pause flowing=%j', this._readableState.flowing)
        if (false !== this._readableState.flowing) {
          g('pause')
          this._readableState.flowing = false
          this.emit('pause')
        }
        return this
      }
      function j(e) {
        var t = e._readableState
        g('flow', t.flowing)
        while (t.flowing && e.read() !== null) {}
      }
      S.prototype.wrap = function(e) {
        var t = this
        var r = this._readableState
        var n = false
        e.on('end', function() {
          g('wrapped end')
          if (r.decoder && !r.ended) {
            var e = r.decoder.end()
            if (e && e.length) t.push(e)
          }
          t.push(null)
        })
        e.on('data', function(i) {
          g('wrapped data')
          if (r.decoder) i = r.decoder.write(i)
          if (r.objectMode && (i === null || i === undefined)) return
          else if (!r.objectMode && (!i || !i.length)) return
          var a = t.push(i)
          if (!a) {
            n = true
            e.pause()
          }
        })
        for (var i in e) {
          if (this[i] === undefined && typeof e[i] === 'function') {
            this[i] = (function(t) {
              return function() {
                return e[t].apply(e, arguments)
              }
            })(i)
          }
        }
        for (var a = 0; a < T.length; a++) {
          e.on(T[a], this.emit.bind(this, T[a]))
        }
        this._read = function(t) {
          g('wrapped _read', t)
          if (n) {
            n = false
            e.resume()
          }
        }
        return this
      }
      Object.defineProperty(S.prototype, 'readableHighWaterMark', {
        enumerable: false,
        get: function() {
          return this._readableState.highWaterMark
        },
      })
      S._fromList = G
      function G(e, t) {
        if (t.length === 0) return null
        var r
        if (t.objectMode) r = t.buffer.shift()
        else if (!e || e >= t.length) {
          if (t.decoder) r = t.buffer.join('')
          else if (t.buffer.length === 1) r = t.buffer.head.data
          else r = t.buffer.concat(t.length)
          t.buffer.clear()
        } else {
          r = q(e, t.buffer, t.decoder)
        }
        return r
      }
      function q(e, t, r) {
        var n
        if (e < t.head.data.length) {
          n = t.head.data.slice(0, e)
          t.head.data = t.head.data.slice(e)
        } else if (e === t.head.data.length) {
          n = t.shift()
        } else {
          n = r ? H(e, t) : V(e, t)
        }
        return n
      }
      function H(e, t) {
        var r = t.head
        var n = 1
        var i = r.data
        e -= i.length
        while ((r = r.next)) {
          var a = r.data
          var s = e > a.length ? a.length : e
          if (s === a.length) i += a
          else i += a.slice(0, e)
          e -= s
          if (e === 0) {
            if (s === a.length) {
              ++n
              if (r.next) t.head = r.next
              else t.head = t.tail = null
            } else {
              t.head = r
              r.data = a.slice(s)
            }
            break
          }
          ++n
        }
        t.length -= n
        return i
      }
      function V(e, t) {
        var r = f.allocUnsafe(e)
        var n = t.head
        var i = 1
        n.data.copy(r)
        e -= n.data.length
        while ((n = n.next)) {
          var a = n.data
          var s = e > a.length ? a.length : e
          a.copy(r, r.length - e, 0, s)
          e -= s
          if (e === 0) {
            if (s === a.length) {
              ++i
              if (n.next) t.head = n.next
              else t.head = t.tail = null
            } else {
              t.head = n
              n.data = a.slice(s)
            }
            break
          }
          ++i
        }
        t.length -= i
        return r
      }
      function K(e) {
        var t = e._readableState
        if (t.length > 0) throw new Error('"endReadable()" called on non-empty stream')
        if (!t.endEmitted) {
          t.ended = true
          i.nextTick(Y, t, e)
        }
      }
      function Y(e, t) {
        if (!e.endEmitted && e.length === 0) {
          e.endEmitted = true
          t.readable = false
          t.emit('end')
        }
      }
      function W(e, t) {
        for (var r = 0, n = e.length; r < n; r++) {
          if (e[r] === t) return r
        }
        return -1
      }
    }.call(t, r(16), r(52)))
  },
  function(e, t, r) {
    'use strict'
    e.exports = s
    var n = r(22)
    var i = r(33)
    i.inherits = r(28)
    i.inherits(s, n)
    function a(e, t) {
      var r = this._transformState
      r.transforming = false
      var n = r.writecb
      if (!n) {
        return this.emit('error', new Error('write callback called multiple times'))
      }
      r.writechunk = null
      r.writecb = null
      if (t != null) this.push(t)
      n(e)
      var i = this._readableState
      i.reading = false
      if (i.needReadable || i.length < i.highWaterMark) {
        this._read(i.highWaterMark)
      }
    }
    function s(e) {
      if (!(this instanceof s)) return new s(e)
      n.call(this, e)
      this._transformState = {
        afterTransform: a.bind(this),
        needTransform: false,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null,
      }
      this._readableState.needReadable = true
      this._readableState.sync = false
      if (e) {
        if (typeof e.transform === 'function') this._transform = e.transform
        if (typeof e.flush === 'function') this._flush = e.flush
      }
      this.on('prefinish', o)
    }
    function o() {
      var e = this
      if (typeof this._flush === 'function') {
        this._flush(function(t, r) {
          u(e, t, r)
        })
      } else {
        u(this, null, null)
      }
    }
    s.prototype.push = function(e, t) {
      this._transformState.needTransform = false
      return n.prototype.push.call(this, e, t)
    }
    s.prototype._transform = function(e, t, r) {
      throw new Error('_transform() is not implemented')
    }
    s.prototype._write = function(e, t, r) {
      var n = this._transformState
      n.writecb = r
      n.writechunk = e
      n.writeencoding = t
      if (!n.transforming) {
        var i = this._readableState
        if (n.needTransform || i.needReadable || i.length < i.highWaterMark)
          this._read(i.highWaterMark)
      }
    }
    s.prototype._read = function(e) {
      var t = this._transformState
      if (t.writechunk !== null && t.writecb && !t.transforming) {
        t.transforming = true
        this._transform(t.writechunk, t.writeencoding, t.afterTransform)
      } else {
        t.needTransform = true
      }
    }
    s.prototype._destroy = function(e, t) {
      var r = this
      n.prototype._destroy.call(this, e, function(e) {
        t(e)
        r.emit('close')
      })
    }
    function u(e, t, r) {
      if (t) return e.emit('error', t)
      if (r != null) e.push(r)
      if (e._writableState.length) throw new Error('Calling transform done when ws.length != 0')
      if (e._transformState.transforming)
        throw new Error('Calling transform done when still transforming')
      return e.push(null)
    }
  },
  function(e, t, r) {
    'use strict'
    var n = r(51)
    function i(e, t) {
      var r = this
      var i = this._readableState && this._readableState.destroyed
      var a = this._writableState && this._writableState.destroyed
      if (i || a) {
        if (t) {
          t(e)
        } else if (e && (!this._writableState || !this._writableState.errorEmitted)) {
          n.nextTick(s, this, e)
        }
        return this
      }
      if (this._readableState) {
        this._readableState.destroyed = true
      }
      if (this._writableState) {
        this._writableState.destroyed = true
      }
      this._destroy(e || null, function(e) {
        if (!t && e) {
          n.nextTick(s, r, e)
          if (r._writableState) {
            r._writableState.errorEmitted = true
          }
        } else if (t) {
          t(e)
        }
      })
      return this
    }
    function a() {
      if (this._readableState) {
        this._readableState.destroyed = false
        this._readableState.reading = false
        this._readableState.ended = false
        this._readableState.endEmitted = false
      }
      if (this._writableState) {
        this._writableState.destroyed = false
        this._writableState.ended = false
        this._writableState.ending = false
        this._writableState.finished = false
        this._writableState.errorEmitted = false
      }
    }
    function s(e, t) {
      e.emit('error', t)
    }
    e.exports = { destroy: i, undestroy: a }
  },
  function(e, t, r) {
    e.exports = r(76).EventEmitter
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = r(83)
    var i = d(n)
    var a = r(11)
    var s = d(a)
    var o = r(12)
    var u = d(o)
    r(343)
    var l = r(326)
    var f = d(l)
    function d(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var c = (function() {
      function e(t) {
        ;(0, s.default)(this, e)
        if (!t.apikey) {
          throw new Error('apikey is missing')
        }
        if (!t.token) {
          throw new Error('token is missing')
        }
        this.env = t.env ? t.env : 'production'
        this.apikey = t.apikey
        this.token = t.token
        this.apiUrl = {
          integration: { napi: 'https://api-int.napster.com/v2.2/' },
          beta: { napi: 'https://api-beta.napster.com/v2.2/' },
          production: { napi: 'https://api.napster.com/v2.2/' },
        }
      }
      ;(0, u.default)(
        e,
        [
          {
            key: 'request',
            value: function t(r, n) {
              var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true
              if (!r) {
                throw new Error('path is missing')
              }
              if (!n) {
                throw new Error('options argument is missing')
              }
              if (!n.method) {
                throw new Error('options.method is missing')
              }
              if (!n.queryparams) {
                n.queryparams = {}
              }
              var s = '' + this.apiUrl[this.env].napi + r
              var o = {
                method: n.method,
                headers: { Accept: 'application/json, text/javascript, /; q=0.01' },
              }
              if (a) {
                o.headers['Authorization'] = 'Bearer ' + this.token
                o.headers['Content-Type'] = 'application/json'
              } else {
                n.queryparams['apikey'] = this.apikey
              }
              if (n.queryparams) {
                s += '?' + f.default.stringify(n.queryparams)
              }
              if (n.body) {
                o.body = (0, i.default)(n.body)
              }
              return window
                .fetch(s, o)
                .then(function(e) {
                  var t = e.clone()
                  return t
                    .json()
                    .then(function(t) {
                      e.bodyMessage = t.message ? t.message : ''
                      return e
                    })
                    .catch(function(t) {
                      return e
                    })
                })
                .then(e.checkStatus)
                .then(function(e) {
                  return e.text()
                })
                .then(function(e) {
                  return e ? JSON.parse(e) : {}
                })
            },
          },
          {
            key: 'playbackSessionPrepare',
            value: function e() {
              var t = { method: 'POST' }
              return this.request('sessions', t)
            },
          },
          {
            key: 'playbackSessionValidate',
            value: function e(t) {
              var r = { method: 'GET', queryparams: { trackId: t.trackId, context: t.context } }
              return this.request('sessions/' + t.sessionId, r)
            },
          },
          {
            key: 'playbackSessionManage',
            value: function e(t, r) {
              var n = this
              if (n.storageAvailable('localStorage')) {
                var i = localStorage.getItem('NAPISessionID')
                if (i) {
                  t.sessionId = String(i)
                }
              }
              var a = function e() {
                return n
                  .playbackSessionPrepare()
                  .then(function(e) {
                    n.logSessionSucess(e)
                  })
                  .catch(function(e) {
                    if (r === 4 || r == undefined) {
                      if (e.response) {
                        var t = {
                          message: JSON.parse(e.response.bodyMessage).errors[0].description,
                          code: JSON.parse(e.response.bodyMessage).errors[0].code,
                          name: e.response.statusText,
                          catchBlock: 'playbackSessionManage',
                          type: 'session',
                        }
                        n.logSessionFail(t)
                      } else {
                        n.logSessionFail(e)
                      }
                    }
                    throw new Error(e)
                  })
              }
              if (t.sessionId) {
                return this.playbackSessionValidate(t).catch(function(e) {
                  var r
                  try {
                    r = JSON.parse(e.message)
                  } catch (e) {
                    return a()
                  }
                  if (r.status && (r.status === 403 || r.status === 404)) {
                    if (r.status === 403) {
                      var n = void 0
                      if ((r || { bodyMessage: '' }).bodyMessage != '') {
                        n = JSON.parse(r.bodyMessage)
                        var i = (n && n.errors ? n : { errors: [] }).errors[0]
                        var s = localStorage.getItem('SessionBlocked')
                        if ((s || undefined) === undefined && (i || { code: '' }).code === '1015') {
                          localStorage.setItem('SessionBlocked', String(t.sessionId))
                          throw Error(r.bodyMessage)
                        }
                        if (s) {
                          localStorage.removeItem('SessionBlocked')
                        }
                      }
                    }
                    return a()
                  }
                })
              }
              return a()
            },
          },
          {
            key: 'streamsGet',
            value: function e(t) {
              var r = {
                method: 'GET',
                queryparams: {
                  track: t.trackId,
                  format: t.format,
                  bitrate: t.bitrate,
                  protocol: t.protocol,
                },
              }
              if (t.drm) {
                r.queryparams.drm = t.drm
              }
              return this.request('streams', r)
            },
          },
          {
            key: 'trackGet',
            value: function e(t) {
              var r = { method: 'GET' }
              return this.request('tracks/' + t.trackId, r, false)
            },
          },
          {
            key: 'eventPost',
            value: function e(t) {
              var r = { method: 'POST', body: t.body }
              return this.request('events', r)
            },
          },
          {
            key: 'storageAvailable',
            value: function e(t) {
              try {
                var r = window[t],
                  n = '__storage_test__'
                r.setItem(n, n)
                r.removeItem(n)
                return true
              } catch (e) {
                return (
                  e instanceof DOMException &&
                  (e.code === 22 ||
                    e.code === 1014 ||
                    e.name === 'QuotaExceededError' ||
                    e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&
                  r.length !== 0
                )
              }
            },
          },
        ],
        [
          {
            key: 'checkStatus',
            value: function e(t) {
              var r = t.bodyMessage
              if (t.status >= 200 && t.status < 300) {
                return t
              }
              var n = { status: t.status, statusText: t.statusText, url: t.url, bodyMessage: r }
              var a = new Error((0, i.default)(n))
              a.response = t
              throw a
            },
          },
        ]
      )
      return e
    })()
    t.default = c
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = r(11)
    var i = o(n)
    var a = r(12)
    var s = o(a)
    function o(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var u = (function() {
      function e(t) {
        ;(0, i.default)(this, e)
        this.reset(t)
      }
      ;(0, s.default)(e, [
        {
          key: 'reset',
          value: function e(t) {
            if (!t || !t.apikey) {
              throw new Error('options.apikey is missing')
            }
            this.api = 'https://api.napster.com'
            this.apiVersion = 'v2.2'
            this.apikey = t.apikey
            this.currentUser = t.currentUser || {}
            this.playerId = t.id || 'napster-streaming-player'
            this.format = t.format || 'AAC'
            this.bitrate = t.bitrate || 192
            this.downgrade = t.downgrade || true
            this.volume = t.volume || window.localStorage.getItem('volume') || 0.65
          },
        },
      ])
      return e
    })()
    t.default = u
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = r(11)
    var i = o(n)
    var a = r(12)
    var s = o(a)
    function o(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var u = (function() {
      function e(t) {
        ;(0, i.default)(this, e)
        this.enable = false
        if (t && t.enable) {
          this.enable = t.enable
        }
      }
      ;(0, s.default)(e, [
        {
          key: 'log',
          value: function e() {
            for (var t = arguments.length, r = Array(t), n = 0; n < t; n++) {
              r[n] = arguments[n]
            }
            if (!this.enable) {
              return false
            }
            if (!r) {
              return true
            }
            console.log(r)
            return true
          },
        },
        {
          key: 'error',
          value: function e() {
            for (var t = arguments.length, r = Array(t), n = 0; n < t; n++) {
              r[n] = arguments[n]
            }
            if (!r) {
              return true
            }
            console.error(r)
            return true
          },
        },
      ])
      return e
    })()
    t.default = u
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = r(11)
    var i = o(n)
    var a = r(12)
    var s = o(a)
    function o(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var u = (function() {
      function e() {
        ;(0, i.default)(this, e)
        this.regexes = {
          Artist: /^\s*(Art\.\d+)\s*$/i,
          Track: /^\s*(Tra\.\d+)\s*$/i,
          Album: /^\s*(Alb\.\d+)\s*$/i,
          Review: /^\s*(RevAl\.\d+)\s*$/i,
          Genre: /^\s*(g\.\d+)\s*$/i,
          Post: /^\s*(po\.\d+)\s*$/i,
          SingleArtistStation: /^\s*(sas\.\d+)\s*$/i,
          Station: /^\s*((p|sa|ma|sma|st|mt|smt)s\.\d+)\s*$/i,
          Playlist: /^\s*((m|p)p\.\d+)\s*$/i,
          Tag: /^\s*(tag\.\d+)\s*$/i,
          Radio: /^\s*(ts\.\d+)\s*$/i,
          MemberGuid: /^[0-9A-F]{32}$/,
          MemberPlaylist: /^\s*(mp\.\d+)\s*$/i,
          PublishedPlaylist: /^\s*(pp\.\d+)\s*$/i,
        }
        this.validMonikerTypes = [
          'Artist',
          'Track',
          'Album',
          'Review',
          'Genre',
          'Post',
          'SingleArtistStation',
          'Station',
          'Playlist',
          'Tag',
          'Radio',
          'MemberGuid',
          'MemberPlaylist',
          'PublishedPlaylist',
        ]
      }
      ;(0, s.default)(e, [
        {
          key: 'validate',
          value: function e(t, r) {
            if (!t || !r || !this.validMonikerTypes.includes(r)) {
              return false
            }
            return t.match(this.validMonikerTypes[r])
          },
        },
      ])
      return e
    })()
    t.default = u
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = r(11)
    var i = o(n)
    var a = r(12)
    var s = o(a)
    function o(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var u = (function() {
      function e() {
        ;(0, i.default)(this, e)
        this.reset()
      }
      ;(0, s.default)(e, [
        {
          key: 'reset',
          value: function e() {
            this.startTime = 0
            this.playedAt = 0
            this.pausedAt = 0
            this.isResumed = false
          },
        },
        {
          key: 'renewStartTime',
          value: function e() {
            this.startTime = this.startTime + (this.pausedAt - this.playedAt) / 1e3
          },
        },
      ])
      return e
    })()
    t.default = u
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = r(11)
    var i = l(n)
    var a = r(12)
    var s = l(a)
    var o = r(82)
    var u = l(o)
    function l(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var f = (function() {
      function e() {
        ;(0, i.default)(this, e)
      }
      ;(0, s.default)(e, null, [
        {
          key: 'hlsOrMpd',
          value: function e() {
            return this.isHls() ? this.isHls() : this.isMpd()
          },
        },
        {
          key: 'isHls',
          value: function e() {
            return u.default.isSafari()
          },
        },
        {
          key: 'isMpd',
          value: function e() {
            return !this.isHls() && !u.default.isMobile()
          },
        },
        {
          key: 'isPlayready',
          value: function e() {
            return u.default.isEdge()
          },
        },
      ])
      return e
    })()
    t.default = f
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = r(84)
    var i = l(n)
    var a = r(11)
    var s = l(a)
    var o = r(12)
    var u = l(o)
    function l(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var f = (function() {
      function e() {
        ;(0, s.default)(this, e)
        this.playbackStartTime = null
        this.playbackEndTime = null
        this.playbackNAPITrackStartTime = null
        this.playbackNAPITrackEndTime = null
        this.playbackNAPIStreamURLStartTime = null
        this.playbackNAPIStreamURLEndTime = null
        this.playbackNAPILicenseStartTime = null
        this.playbackNAPILicenseEndTime = null
        this.playbackFirstChunkStartTime = null
        this.playbackFirstChunkEndTime = null
        this.playbackManifestStartTime = null
        this.playbackManifestEndTime = null
      }
      ;(0, u.default)(e, [
        {
          key: 'timerAttributes',
          value: function e() {
            return [
              'playbackStartTime',
              'playbackEndTime',
              'playbackNAPITrackStartTime',
              'playbackNAPITrackEndTime',
              'playbackNAPIStreamURLStartTime',
              'playbackNAPIStreamURLEndTime',
              'playbackNAPILicenseStartTime',
              'playbackNAPILicenseEndTime',
              'playbackFirstChunkStartTime',
              'playbackFirstChunkEndTime',
              'playbackManifestStartTime',
              'playbackManifestEndTime',
            ]
          },
        },
        {
          key: 'reset',
          value: function e() {
            this.playbackStartTime = null
            this.playbackEndTime = null
            this.playbackNAPITrackStartTime = null
            this.playbackNAPITrackEndTime = null
            this.playbackNAPIStreamURLStartTime = null
            this.playbackNAPIStreamURLEndTime = null
            this.playbackNAPILicenseStartTime = null
            this.playbackNAPILicenseEndTime = null
            this.playbackFirstChunkStartTime = null
            this.playbackFirstChunkEndTime = null
            this.playbackManifestStartTime = null
            this.playbackManifestEndTime = null
          },
        },
        {
          key: 'start',
          value: function e() {
            this.playbackStartTime = Date.now()
          },
        },
        {
          key: 'end',
          value: function e() {
            this.playbackEndTime = Date.now()
          },
        },
        {
          key: 'startNAPITrack',
          value: function e() {
            this.playbackNAPITrackStartTime = Date.now()
          },
        },
        {
          key: 'endNAPITrack',
          value: function e() {
            this.playbackNAPITrackEndTime = Date.now()
          },
        },
        {
          key: 'startStreamURL',
          value: function e() {
            this.playbackNAPIStreamURLStartTime = Date.now()
          },
        },
        {
          key: 'endStreamURL',
          value: function e() {
            this.playbackNAPIStreamURLEndTime = Date.now()
          },
        },
        {
          key: 'startLicense',
          value: function e() {
            this.playbackNAPILicenseStartTime = Date.now()
          },
        },
        {
          key: 'endLicense',
          value: function e() {
            this.playbackNAPILicenseEndTime = Date.now()
          },
        },
        {
          key: 'startFirstChunk',
          value: function e() {
            this.playbackFirstChunkStartTime = Date.now()
          },
        },
        {
          key: 'endFirstChunk',
          value: function e() {
            this.playbackFirstChunkEndTime = Date.now()
          },
        },
        {
          key: 'startManifest',
          value: function e() {
            this.playbackManifestStartTime = Date.now()
          },
        },
        {
          key: 'endManifest',
          value: function e() {
            this.playbackManifestEndTime = Date.now()
          },
        },
        {
          key: 'diff',
          value: function e() {
            var t = this
            return new i.default(function(e, r) {
              var n = t.playbackEndTime - t.playbackStartTime
              if (n < 0) {
                return r('Invalid playback time difference')
              }
              return e(n)
            })
          },
        },
        {
          key: 'diffNAPITrack',
          value: function e() {
            var t = this
            return new i.default(function(e, r) {
              if (!t.playbackNAPITrackEndTime && !t.playbackNAPITrackStartTime) {
                return e(0)
              }
              var n = t.playbackNAPITrackEndTime - t.playbackNAPITrackStartTime
              if (n < 0) {
                return r('Invalid napi track time difference')
              }
              return e(n)
            })
          },
        },
        {
          key: 'diffStreamURL',
          value: function e() {
            var t = this
            return new i.default(function(e, r) {
              if (!t.playbackNAPIStreamURLEndTime && !t.playbackNAPIStreamURLStartTime) {
                return e(0)
              }
              var n = t.playbackNAPIStreamURLEndTime - t.playbackNAPIStreamURLStartTime
              if (n < 0) {
                return r('Invalid napi track time difference')
              }
              return e(n)
            })
          },
        },
        {
          key: 'diffLicense',
          value: function e() {
            var t = this
            return new i.default(function(e, r) {
              var n = t.playbackNAPILicenseEndTime - t.playbackNAPILicenseStartTime
              if (n < 0) {
                return r('Invalid license time difference')
              }
              return e(n)
            })
          },
        },
        {
          key: 'diffFirstChunk',
          value: function e() {
            var t = this
            return new i.default(function(e, r) {
              var n = t.playbackFirstChunkEndTime - t.playbackFirstChunkStartTime
              if (n < 0) {
                return r('Invalid license time difference')
              }
              return e(n)
            })
          },
        },
        {
          key: 'diffManifest',
          value: function e() {
            var t = this
            return new i.default(function(e, r) {
              var n = t.playbackManifestEndTime - t.playbackManifestStartTime
              if (n < 0) {
                return r('Invalid license time difference')
              }
              return e(n)
            })
          },
        },
      ])
      return e
    })()
    t.default = f
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = r(11)
    var i = o(n)
    var a = r(12)
    var s = o(a)
    function o(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var u = (function() {
      function e() {
        ;(0, i.default)(this, e)
        this.reset()
      }
      ;(0, s.default)(e, [
        {
          key: 'reset',
          value: function e() {
            this.id = null
            this.context = null
            this.started = null
            this.format = null
            this.bitrate = null
            this.duration = null
          },
        },
      ])
      return e
    })()
    t.default = u
  },
  function(e, t, r) {
    ;(function(e, r) {
      var n = 200
      var i = '__lodash_hash_undefined__'
      var a = 9007199254740991
      var s = '[object Arguments]',
        o = '[object Array]',
        u = '[object Boolean]',
        l = '[object Date]',
        f = '[object Error]',
        d = '[object Function]',
        c = '[object GeneratorFunction]',
        h = '[object Map]',
        p = '[object Number]',
        v = '[object Object]',
        g = '[object Promise]',
        m = '[object RegExp]',
        y = '[object Set]',
        _ = '[object String]',
        T = '[object Symbol]',
        E = '[object WeakMap]'
      var b = '[object ArrayBuffer]',
        S = '[object DataView]',
        w = '[object Float32Array]',
        A = '[object Float64Array]',
        I = '[object Int8Array]',
        C = '[object Int16Array]',
        R = '[object Int32Array]',
        D = '[object Uint8Array]',
        O = '[object Uint8ClampedArray]',
        M = '[object Uint16Array]',
        k = '[object Uint32Array]'
      var P = /[\\^$.*+?()[\]{}|]/g
      var N = /\w*$/
      var L = /^\[object .+?Constructor\]$/
      var x = /^(?:0|[1-9]\d*)$/
      var F = {}
      F[s] = F[o] = F[b] = F[S] = F[u] = F[l] = F[w] = F[A] = F[I] = F[C] = F[R] = F[h] = F[p] = F[
        v
      ] = F[m] = F[y] = F[_] = F[T] = F[D] = F[O] = F[M] = F[k] = true
      F[f] = F[d] = F[E] = false
      var U = 'undefined' == 'object' && e && e.Object === Object && e
      var B = typeof self == 'object' && self && self.Object === Object && self
      var j = U || B || Function('return this')()
      var G = typeof t == 'object' && t && !t.nodeType && t
      var q = G && typeof r == 'object' && r && !r.nodeType && r
      var H = q && q.exports === G
      function V(e, t) {
        e.set(t[0], t[1])
        return e
      }
      function K(e, t) {
        e.add(t)
        return e
      }
      function Y(e, t) {
        var r = -1,
          n = e ? e.length : 0
        while (++r < n) {
          if (t(e[r], r, e) === false) {
            break
          }
        }
        return e
      }
      function W(e, t) {
        var r = -1,
          n = t.length,
          i = e.length
        while (++r < n) {
          e[i + r] = t[r]
        }
        return e
      }
      function z(e, t, r, n) {
        var i = -1,
          a = e ? e.length : 0
        if (n && a) {
          r = e[++i]
        }
        while (++i < a) {
          r = t(r, e[i], i, e)
        }
        return r
      }
      function X(e, t) {
        var r = -1,
          n = Array(e)
        while (++r < e) {
          n[r] = t(r)
        }
        return n
      }
      function $(e, t) {
        return e == null ? undefined : e[t]
      }
      function Q(e) {
        var t = false
        if (e != null && typeof e.toString != 'function') {
          try {
            t = !!(e + '')
          } catch (e) {}
        }
        return t
      }
      function J(e) {
        var t = -1,
          r = Array(e.size)
        e.forEach(function(e, n) {
          r[++t] = [n, e]
        })
        return r
      }
      function Z(e, t) {
        return function(r) {
          return e(t(r))
        }
      }
      function ee(e) {
        var t = -1,
          r = Array(e.size)
        e.forEach(function(e) {
          r[++t] = e
        })
        return r
      }
      var te = Array.prototype,
        re = Function.prototype,
        ne = Object.prototype
      var ie = j['__core-js_shared__']
      var ae = (function() {
        var e = /[^.]+$/.exec((ie && ie.keys && ie.keys.IE_PROTO) || '')
        return e ? 'Symbol(src)_1.' + e : ''
      })()
      var se = re.toString
      var oe = ne.hasOwnProperty
      var ue = ne.toString
      var le = RegExp(
        '^' +
          se
            .call(oe)
            .replace(P, '\\$&')
            .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') +
          '$'
      )
      var fe = H ? j.Buffer : undefined,
        de = j.Symbol,
        ce = j.Uint8Array,
        he = Z(Object.getPrototypeOf, Object),
        pe = Object.create,
        ve = ne.propertyIsEnumerable,
        ge = te.splice
      var me = Object.getOwnPropertySymbols,
        ye = fe ? fe.isBuffer : undefined,
        _e = Z(Object.keys, Object)
      var Te = It(j, 'DataView'),
        Ee = It(j, 'Map'),
        be = It(j, 'Promise'),
        Se = It(j, 'Set'),
        we = It(j, 'WeakMap'),
        Ae = It(Object, 'create')
      var Ie = xt(Te),
        Ce = xt(Ee),
        Re = xt(be),
        De = xt(Se),
        Oe = xt(we)
      var Me = de ? de.prototype : undefined,
        ke = Me ? Me.valueOf : undefined
      function Pe(e) {
        var t = -1,
          r = e ? e.length : 0
        this.clear()
        while (++t < r) {
          var n = e[t]
          this.set(n[0], n[1])
        }
      }
      function Ne() {
        this.__data__ = Ae ? Ae(null) : {}
      }
      function Le(e) {
        return this.has(e) && delete this.__data__[e]
      }
      function xe(e) {
        var t = this.__data__
        if (Ae) {
          var r = t[e]
          return r === i ? undefined : r
        }
        return oe.call(t, e) ? t[e] : undefined
      }
      function Fe(e) {
        var t = this.__data__
        return Ae ? t[e] !== undefined : oe.call(t, e)
      }
      function Ue(e, t) {
        var r = this.__data__
        r[e] = Ae && t === undefined ? i : t
        return this
      }
      Pe.prototype.clear = Ne
      Pe.prototype['delete'] = Le
      Pe.prototype.get = xe
      Pe.prototype.has = Fe
      Pe.prototype.set = Ue
      function Be(e) {
        var t = -1,
          r = e ? e.length : 0
        this.clear()
        while (++t < r) {
          var n = e[t]
          this.set(n[0], n[1])
        }
      }
      function je() {
        this.__data__ = []
      }
      function Ge(e) {
        var t = this.__data__,
          r = at(t, e)
        if (r < 0) {
          return false
        }
        var n = t.length - 1
        if (r == n) {
          t.pop()
        } else {
          ge.call(t, r, 1)
        }
        return true
      }
      function qe(e) {
        var t = this.__data__,
          r = at(t, e)
        return r < 0 ? undefined : t[r][1]
      }
      function He(e) {
        return at(this.__data__, e) > -1
      }
      function Ve(e, t) {
        var r = this.__data__,
          n = at(r, e)
        if (n < 0) {
          r.push([e, t])
        } else {
          r[n][1] = t
        }
        return this
      }
      Be.prototype.clear = je
      Be.prototype['delete'] = Ge
      Be.prototype.get = qe
      Be.prototype.has = He
      Be.prototype.set = Ve
      function Ke(e) {
        var t = -1,
          r = e ? e.length : 0
        this.clear()
        while (++t < r) {
          var n = e[t]
          this.set(n[0], n[1])
        }
      }
      function Ye() {
        this.__data__ = { hash: new Pe(), map: new (Ee || Be)(), string: new Pe() }
      }
      function We(e) {
        return At(this, e)['delete'](e)
      }
      function ze(e) {
        return At(this, e).get(e)
      }
      function Xe(e) {
        return At(this, e).has(e)
      }
      function $e(e, t) {
        At(this, e).set(e, t)
        return this
      }
      Ke.prototype.clear = Ye
      Ke.prototype['delete'] = We
      Ke.prototype.get = ze
      Ke.prototype.has = Xe
      Ke.prototype.set = $e
      function Qe(e) {
        this.__data__ = new Be(e)
      }
      function Je() {
        this.__data__ = new Be()
      }
      function Ze(e) {
        return this.__data__['delete'](e)
      }
      function et(e) {
        return this.__data__.get(e)
      }
      function tt(e) {
        return this.__data__.has(e)
      }
      function rt(e, t) {
        var r = this.__data__
        if (r instanceof Be) {
          var i = r.__data__
          if (!Ee || i.length < n - 1) {
            i.push([e, t])
            return this
          }
          r = this.__data__ = new Ke(i)
        }
        r.set(e, t)
        return this
      }
      Qe.prototype.clear = Je
      Qe.prototype['delete'] = Ze
      Qe.prototype.get = et
      Qe.prototype.has = tt
      Qe.prototype.set = rt
      function nt(e, t) {
        var r = jt(e) || Bt(e) ? X(e.length, String) : []
        var n = r.length,
          i = !!n
        for (var a in e) {
          if ((t || oe.call(e, a)) && !(i && (a == 'length' || kt(a, n)))) {
            r.push(a)
          }
        }
        return r
      }
      function it(e, t, r) {
        var n = e[t]
        if (!(oe.call(e, t) && Ut(n, r)) || (r === undefined && !(t in e))) {
          e[t] = r
        }
      }
      function at(e, t) {
        var r = e.length
        while (r--) {
          if (Ut(e[r][0], t)) {
            return r
          }
        }
        return -1
      }
      function st(e, t) {
        return e && bt(t, zt(t), e)
      }
      function ot(e, t, r, n, i, a, o) {
        var u
        if (n) {
          u = a ? n(e, i, a, o) : n(e)
        }
        if (u !== undefined) {
          return u
        }
        if (!Yt(e)) {
          return e
        }
        var l = jt(e)
        if (l) {
          u = Dt(e)
          if (!t) {
            return Et(e, u)
          }
        } else {
          var f = Rt(e),
            h = f == d || f == c
          if (Ht(e)) {
            return ht(e, t)
          }
          if (f == v || f == s || (h && !a)) {
            if (Q(e)) {
              return a ? e : {}
            }
            u = Ot(h ? {} : e)
            if (!t) {
              return St(e, st(u, e))
            }
          } else {
            if (!F[f]) {
              return a ? e : {}
            }
            u = Mt(e, f, ot, t)
          }
        }
        o || (o = new Qe())
        var p = o.get(e)
        if (p) {
          return p
        }
        o.set(e, u)
        if (!l) {
          var g = r ? wt(e) : zt(e)
        }
        Y(g || e, function(i, a) {
          if (g) {
            a = i
            i = e[a]
          }
          it(u, a, ot(i, t, r, n, a, e, o))
        })
        return u
      }
      function ut(e) {
        return Yt(e) ? pe(e) : {}
      }
      function lt(e, t, r) {
        var n = t(e)
        return jt(e) ? n : W(n, r(e))
      }
      function ft(e) {
        return ue.call(e)
      }
      function dt(e) {
        if (!Yt(e) || Nt(e)) {
          return false
        }
        var t = Vt(e) || Q(e) ? le : L
        return t.test(xt(e))
      }
      function ct(e) {
        if (!Lt(e)) {
          return _e(e)
        }
        var t = []
        for (var r in Object(e)) {
          if (oe.call(e, r) && r != 'constructor') {
            t.push(r)
          }
        }
        return t
      }
      function ht(e, t) {
        if (t) {
          return e.slice()
        }
        var r = new e.constructor(e.length)
        e.copy(r)
        return r
      }
      function pt(e) {
        var t = new e.constructor(e.byteLength)
        new ce(t).set(new ce(e))
        return t
      }
      function vt(e, t) {
        var r = t ? pt(e.buffer) : e.buffer
        return new e.constructor(r, e.byteOffset, e.byteLength)
      }
      function gt(e, t, r) {
        var n = t ? r(J(e), true) : J(e)
        return z(n, V, new e.constructor())
      }
      function mt(e) {
        var t = new e.constructor(e.source, N.exec(e))
        t.lastIndex = e.lastIndex
        return t
      }
      function yt(e, t, r) {
        var n = t ? r(ee(e), true) : ee(e)
        return z(n, K, new e.constructor())
      }
      function _t(e) {
        return ke ? Object(ke.call(e)) : {}
      }
      function Tt(e, t) {
        var r = t ? pt(e.buffer) : e.buffer
        return new e.constructor(r, e.byteOffset, e.length)
      }
      function Et(e, t) {
        var r = -1,
          n = e.length
        t || (t = Array(n))
        while (++r < n) {
          t[r] = e[r]
        }
        return t
      }
      function bt(e, t, r, n) {
        r || (r = {})
        var i = -1,
          a = t.length
        while (++i < a) {
          var s = t[i]
          var o = n ? n(r[s], e[s], s, r, e) : undefined
          it(r, s, o === undefined ? e[s] : o)
        }
        return r
      }
      function St(e, t) {
        return bt(e, Ct(e), t)
      }
      function wt(e) {
        return lt(e, zt, Ct)
      }
      function At(e, t) {
        var r = e.__data__
        return Pt(t) ? r[typeof t == 'string' ? 'string' : 'hash'] : r.map
      }
      function It(e, t) {
        var r = $(e, t)
        return dt(r) ? r : undefined
      }
      var Ct = me ? Z(me, Object) : Xt
      var Rt = ft
      if (
        (Te && Rt(new Te(new ArrayBuffer(1))) != S) ||
        (Ee && Rt(new Ee()) != h) ||
        (be && Rt(be.resolve()) != g) ||
        (Se && Rt(new Se()) != y) ||
        (we && Rt(new we()) != E)
      ) {
        Rt = function(e) {
          var t = ue.call(e),
            r = t == v ? e.constructor : undefined,
            n = r ? xt(r) : undefined
          if (n) {
            switch (n) {
              case Ie:
                return S
              case Ce:
                return h
              case Re:
                return g
              case De:
                return y
              case Oe:
                return E
            }
          }
          return t
        }
      }
      function Dt(e) {
        var t = e.length,
          r = e.constructor(t)
        if (t && typeof e[0] == 'string' && oe.call(e, 'index')) {
          r.index = e.index
          r.input = e.input
        }
        return r
      }
      function Ot(e) {
        return typeof e.constructor == 'function' && !Lt(e) ? ut(he(e)) : {}
      }
      function Mt(e, t, r, n) {
        var i = e.constructor
        switch (t) {
          case b:
            return pt(e)
          case u:
          case l:
            return new i(+e)
          case S:
            return vt(e, n)
          case w:
          case A:
          case I:
          case C:
          case R:
          case D:
          case O:
          case M:
          case k:
            return Tt(e, n)
          case h:
            return gt(e, n, r)
          case p:
          case _:
            return new i(e)
          case m:
            return mt(e)
          case y:
            return yt(e, n, r)
          case T:
            return _t(e)
        }
      }
      function kt(e, t) {
        t = t == null ? a : t
        return !!t && (typeof e == 'number' || x.test(e)) && (e > -1 && e % 1 == 0 && e < t)
      }
      function Pt(e) {
        var t = typeof e
        return t == 'string' || t == 'number' || t == 'symbol' || t == 'boolean'
          ? e !== '__proto__'
          : e === null
      }
      function Nt(e) {
        return !!ae && ae in e
      }
      function Lt(e) {
        var t = e && e.constructor,
          r = (typeof t == 'function' && t.prototype) || ne
        return e === r
      }
      function xt(e) {
        if (e != null) {
          try {
            return se.call(e)
          } catch (e) {}
          try {
            return e + ''
          } catch (e) {}
        }
        return ''
      }
      function Ft(e) {
        return ot(e, false, true)
      }
      function Ut(e, t) {
        return e === t || (e !== e && t !== t)
      }
      function Bt(e) {
        return qt(e) && oe.call(e, 'callee') && (!ve.call(e, 'callee') || ue.call(e) == s)
      }
      var jt = Array.isArray
      function Gt(e) {
        return e != null && Kt(e.length) && !Vt(e)
      }
      function qt(e) {
        return Wt(e) && Gt(e)
      }
      var Ht = ye || $t
      function Vt(e) {
        var t = Yt(e) ? ue.call(e) : ''
        return t == d || t == c
      }
      function Kt(e) {
        return typeof e == 'number' && e > -1 && e % 1 == 0 && e <= a
      }
      function Yt(e) {
        var t = typeof e
        return !!e && (t == 'object' || t == 'function')
      }
      function Wt(e) {
        return !!e && typeof e == 'object'
      }
      function zt(e) {
        return Gt(e) ? nt(e) : ct(e)
      }
      function Xt() {
        return []
      }
      function $t() {
        return false
      }
      r.exports = Ft
    }.call(t, r(16), r(342)(e)))
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = r(184)
    var i = r.n(n)
    var a = r(53)
    var s = r.n(a)
    var o = r(122)
    var u = r.n(o)
    var l = r(121)
    var f = r.n(l) /*! @name videojs-contrib-dash @version 2.11.0 @license Apache-2.0 */
    function d(e, t) {
      var r = e.dash.mediaPlayer
      var n = r.getTracksFor('audio')
      var a = e.audioTracks()
      function o(e) {
        return 'dash-audio-' + e
      }
      function u(e, t) {
        return e.find(function(e) {
          var r = e.index
          return o(r) === t.id
        })
      }
      if (a.length) {
        t.clearTracks(['audio'])
      }
      var l = r.getCurrentTrackFor('audio')
      n.forEach(function(t) {
        var r
        if (Array.isArray(t.labels)) {
          for (var n = 0; n < t.labels.length; n++) {
            if (t.labels[n].lang && e.language().indexOf(t.labels[n].lang.toLowerCase()) !== -1) {
              r = t.labels[n]
              break
            }
          }
        }
        var i
        if (r) {
          i = r.text
        } else if (Array.isArray(t.labels) && t.labels.length === 1) {
          i = t.labels[0].text
        } else {
          i = t.lang
          if (t.roles && t.roles.length) {
            i += ' (' + t.roles.join(', ') + ')'
          }
        }
        a.addTrack(
          new s.a.AudioTrack({
            enabled: t === l,
            id: o(t.index),
            kind: t.kind || 'main',
            label: i,
            language: t.lang,
          })
        )
      })
      var f = function e() {
        for (var t = 0; t < a.length; t++) {
          var i = a[t]
          if (i.enabled) {
            var s = u(n, i)
            r.setCurrentTrack(s)
            continue
          }
        }
      }
      a.addEventListener('change', f)
      e.dash.mediaPlayer.on(i.a.MediaPlayer.events.STREAM_TEARDOWN_COMPLETE, function() {
        a.removeEventListener('change', f)
      })
    }
    function c(e, t) {
      e.dash.mediaPlayer.on(i.a.MediaPlayer.events.PLAYBACK_METADATA_LOADED, d.bind(null, e, t))
    }
    function h(e, t) {
      for (var r = 0; r < e.length; r++) {
        if (t(e[r])) {
          return e[r]
        }
      }
    }
    function p(e, t, r) {
      var n = []
      var a = r
        .map(function(t) {
          var r
          if (Array.isArray(t.labels)) {
            for (var n = 0; n < t.labels.length; n++) {
              if (t.labels[n].lang && e.language().indexOf(t.labels[n].lang.toLowerCase()) !== -1) {
                r = t.labels[n]
                break
              }
            }
          }
          var i
          if (r) {
            i = r.text
          } else if (Array.isArray(t.labels) && t.labels.length === 1) {
            i = t.labels[0].text
          } else {
            i = t.lang || t.label
          }
          return {
            dashTrack: t,
            trackConfig: { label: i, language: t.lang, srclang: t.lang, kind: t.kind },
          }
        })
        .map(function(t) {
          var r = t.trackConfig,
            i = t.dashTrack
          var a = e.addRemoteTextTrack(r, false)
          n.push({ textTrack: a.track, dashTrack: i })
          return a
        })
      function s() {
        var t = e.dash.mediaPlayer
        var i = e.textTracks()
        var a = -1
        var s = function e(t) {
          var s = i[t]
          if (s.mode === 'showing') {
            var o = h(n, function(e) {
              return e.textTrack === s
            })
            var u = o ? o.dashTrack : null
            if (u) {
              a = r.indexOf(u)
            }
          }
        }
        for (var o = 0; o < i.length; o += 1) {
          s(o)
        }
        if (a !== t.getCurrentTextTrackIndex()) {
          t.setTextTrack(a)
        }
      }
      e.textTracks().on('change', s)
      e.dash.mediaPlayer.on(i.a.MediaPlayer.events.STREAM_TEARDOWN_COMPLETE, function() {
        e.textTracks().off('change', s)
      })
      s()
      return a
    }
    function v(e, t, r) {
      if (u.a.VTTCue && !/\[native code\]/.test(u.a.VTTCue.toString())) {
        u.a.VTTCue = false
      }
      var n = []
      if (t.featuresNativeTextTracks) {
        s.a.log.error(
          'You must pass {html: {nativeCaptions: false}} in the videojs constructor ' +
            'to use text tracks in videojs-contrib-dash'
        )
        return
      }
      var a = e.dash.mediaPlayer
      function o() {
        n.forEach(e.removeRemoteTextTrack.bind(e))
        n = []
      }
      function l(s) {
        var u = s.index,
          f = s.tracks
        a.off(i.a.MediaPlayer.events.TEXT_TRACKS_ADDED, l)
        o()
        if (!f.length) {
          return
        }
        n = p(e, t, f, r)
      }
      a.on(i.a.MediaPlayer.events.TEXT_TRACKS_ADDED, l)
      a.on(i.a.MediaPlayer.events.CAN_PLAY, function() {
        a.off(i.a.MediaPlayer.events.TEXT_TRACKS_ADDED, l)
      })
    }
    var g = (function() {
      function e(t, r, n) {
        var a = this
        n = n || r.options_
        this.player = s()(n.playerId)
        this.player.dash = this.player.dash || {}
        this.tech_ = r
        this.el_ = r.el()
        this.elParent_ = this.el_.parentNode
        this.hasFiniteDuration_ = false
        if (!t.src) {
          return
        }
        r.isReady_ = false
        if (e.updateSourceData) {
          s.a.log.warn(
            'updateSourceData has been deprecated.' +
              ' Please switch to using hook("updatesource", callback).'
          )
          t = e.updateSourceData(t)
        }
        e.hooks('updatesource').forEach(function(e) {
          t = e(t)
        })
        var o = t.src
        this.keySystemOptions_ = e.buildDashJSProtData(t.keySystemOptions)
        this.player.dash.mediaPlayer = i.a.MediaPlayer().create()
        this.mediaPlayer_ = this.player.dash.mediaPlayer
        this.mediaPlayer_.setTextDefaultEnabled(false)
        if (e.useVideoJSDebug) {
          s.a.log.warn(
            'useVideoJSDebug has been deprecated.' +
              ' Please switch to using hook("beforeinitialize", callback).'
          )
          e.useVideoJSDebug(this.mediaPlayer_)
        }
        if (e.beforeInitialize) {
          s.a.log.warn(
            'beforeInitialize has been deprecated.' +
              ' Please switch to using hook("beforeinitialize", callback).'
          )
          e.beforeInitialize(this.player, this.mediaPlayer_)
        }
        e.hooks('beforeinitialize').forEach(function(e) {
          e(a.player, a.mediaPlayer_)
        })
        this.mediaPlayer_.initialize()
        this.retriggerError_ = function(e) {
          if (e.error === 'capability' && e.event === 'mediasource') {
            a.player.error({
              code: 4,
              message:
                'The media cannot be played because it requires a feature ' +
                'that your browser does not support.',
            })
          } else if (
            e.error === 'manifestError' &&
            (e.event.id === 'createParser' ||
              e.event.id === 'codec' ||
              e.event.id === 'nostreams' ||
              e.event.id === 'nostreamscomposed' ||
              e.event.id === 'parse' ||
              e.event.id === 'multiplexedrep')
          ) {
            a.player.error({ code: 4, message: e.event.message })
          } else if (e.error === 'mediasource') {
            if (e.event.match('MEDIA_ERR_ABORTED')) {
              a.player.error({ code: 1, message: e.event })
            } else if (e.event.match('MEDIA_ERR_NETWORK')) {
              a.player.error({ code: 2, message: e.event })
            } else if (e.event.match('MEDIA_ERR_DECODE')) {
              a.player.error({ code: 3, message: e.event })
            } else if (e.event.match('MEDIA_ERR_SRC_NOT_SUPPORTED')) {
              a.player.error({ code: 4, message: e.event })
            } else if (e.event.match('MEDIA_ERR_ENCRYPTED')) {
              a.player.error({ code: 5, message: e.event })
            } else if (e.event.match('UNKNOWN')) {
              a.player.error({ code: 4, message: e.event })
            } else {
              a.player.error({ code: 4, message: e.event })
            }
          } else if (e.error === 'capability' && e.event === 'encryptedmedia') {
            a.player.error({
              code: 5,
              message:
                'The media cannot be played because it requires encryption ' +
                'features that your browser does not support.',
            })
          } else if (e.error === 'key_session') {
            a.player.error({ code: 5, message: e.event })
          } else if (e.error === 'download') {
            a.player.error({
              code: 2,
              message:
                'The media playback was aborted because too many consecutive ' +
                'download errors occurred.',
            })
          } else if (e.error === 'mssError') {
            a.player.error({ code: 3, message: e.event })
          } else {
            return
          }
          setTimeout(function() {
            a.mediaPlayer_.reset()
          }, 10)
        }
        this.mediaPlayer_.on(i.a.MediaPlayer.events.ERROR, this.retriggerError_)
        this.getDuration_ = function(e) {
          var t = e.data.Period_asArray
          var r = a.hasFiniteDuration_
          if (e.data.mediaPresentationDuration || t[t.length - 1].duration) {
            a.hasFiniteDuration_ = true
          } else {
            a.hasFiniteDuration_ = false
          }
          if (a.hasFiniteDuration_ !== r) {
            a.player.trigger('durationchange')
          }
        }
        this.mediaPlayer_.on(i.a.MediaPlayer.events.MANIFEST_LOADED, this.getDuration_)
        if (n.dash) {
          Object.keys(n.dash).forEach(function(e) {
            var t
            var r = 'set' + e.charAt(0).toUpperCase() + e.slice(1)
            var i = n.dash[e]
            if (a.mediaPlayer_.hasOwnProperty(r)) {
              s.a.log.warn(
                'Using dash options in videojs-contrib-dash without the set prefix ' +
                  ("has been deprecated. Change '" + e + "' to '" + r + "'")
              )
              e = r
            }
            if (!a.mediaPlayer_.hasOwnProperty(e)) {
              s.a.log.warn('Warning: dash configuration option unrecognized: ' + e)
              return
            }
            if (!Array.isArray(i)) {
              i = [i]
            }
            ;(t = a.mediaPlayer_)[e].apply(t, i)
          })
        }
        this.mediaPlayer_.attachView(this.el_)
        this.mediaPlayer_.setAutoPlay(false)
        c.call(null, this.player, r)
        v.call(null, this.player, r, n)
        this.mediaPlayer_.setProtectionData(this.keySystemOptions_)
        this.mediaPlayer_.attachSource(o)
        this.tech_.triggerReady()
      }
      e.buildDashJSProtData = function e(t) {
        var r = {}
        if (!t || !Array.isArray(t)) {
          return null
        }
        for (var n = 0; n < t.length; n++) {
          var i = t[n]
          var a = s.a.mergeOptions({}, i.options)
          if (a.licenseUrl) {
            a.serverURL = a.licenseUrl
            delete a.licenseUrl
          }
          r[i.name] = a
        }
        return r
      }
      var t = e.prototype
      t.dispose = function e() {
        if (this.mediaPlayer_) {
          this.mediaPlayer_.off(i.a.MediaPlayer.events.ERROR, this.retriggerError_)
          this.mediaPlayer_.off(i.a.MediaPlayer.events.MANIFEST_LOADED, this.getDuration_)
          this.mediaPlayer_.reset()
        }
        if (this.player.dash) {
          delete this.player.dash
        }
      }
      t.duration = function e() {
        if (this.mediaPlayer_.isDynamic() && !this.hasFiniteDuration_) {
          return Infinity
        }
        return this.mediaPlayer_.duration()
      }
      e.hooks = function t(r, n) {
        e.hooks_[r] = e.hooks_[r] || []
        if (n) {
          e.hooks_[r] = e.hooks_[r].concat(n)
        }
        return e.hooks_[r]
      }
      e.hook = function t(r, n) {
        e.hooks(r, n)
      }
      e.removeHook = function t(r, n) {
        var i = e.hooks(r).indexOf(n)
        if (i === -1) {
          return false
        }
        e.hooks_[r] = e.hooks_[r].slice()
        e.hooks_[r].splice(i, 1)
        return true
      }
      return e
    })()
    g.hooks_ = {}
    var m = function e(t) {
      t = JSON.parse(JSON.stringify(t))
      if (g.updateSourceData) {
        s.a.log.warn(
          'updateSourceData has been deprecated.' +
            ' Please switch to using hook("updatesource", callback).'
        )
        t = g.updateSourceData(t)
      }
      g.hooks('updatesource').forEach(function(e) {
        t = e(t)
      })
      var r = f.a.createElement('video')
      if (t.keySystemOptions && !(u.a.navigator.requestMediaKeySystemAccess || r.msSetMediaKeys)) {
        return false
      }
      return true
    }
    s.a.DashSourceHandler = function() {
      return {
        canHandleSource: function e(t) {
          var r = /\.mpd/i
          if (!m(t)) {
            return ''
          }
          if (s.a.DashSourceHandler.canPlayType(t.type)) {
            return 'probably'
          } else if (r.test(t.src)) {
            return 'maybe'
          }
          return ''
        },
        handleSource: function e(t, r, n) {
          return new g(t, r, n)
        },
        canPlayType: function e(t) {
          return s.a.DashSourceHandler.canPlayType(t)
        },
      }
    }
    s.a.DashSourceHandler.canPlayType = function(e) {
      var t = /^application\/dash\+xml/i
      if (t.test(e)) {
        return 'probably'
      }
      return ''
    }
    if (u.a.MediaSource) {
      s.a.getTech('Html5').registerSourceHandler(s.a.DashSourceHandler(), 0)
    }
    s.a.Html5DashJS = g
    t['default'] = g
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    r.d(t, 'hasSession', function() {
      return F
    })
    r.d(t, 'removeSession', function() {
      return U
    })
    r.d(t, 'handleEncryptedEvent', function() {
      return B
    })
    r.d(t, 'handleWebKitNeedKeyEvent', function() {
      return j
    })
    r.d(t, 'handleMsNeedKeyEvent', function() {
      return G
    })
    r.d(t, 'getOptions', function() {
      return q
    })
    r.d(t, 'setupSessions', function() {
      return H
    })
    r.d(t, 'emeErrorHandler', function() {
      return V
    })
    var n = r(121)
    var i = r.n(n)
    var a = r(53)
    var s = r.n(a)
    var o = r(122)
    var u = r.n(o) /*! @name videojs-contrib-eme @version 3.5.0 @license Apache-2.0 */
    var l = function e(t) {
      var r = new ArrayBuffer(t.length * 2)
      var n = new Uint16Array(r)
      for (var i = 0; i < t.length; i++) {
        n[i] = t.charCodeAt(i)
      }
      return n
    }
    var f = function e(t) {
      return String.fromCharCode.apply(null, new Uint16Array(t.buffer))
    }
    var d = function e(t) {
      var r = i.a.createElement('a')
      r.href = t
      return r.hostname
    }
    var c = function e(t, r) {
      if (t === r) {
        return true
      }
      if (t.byteLength !== r.byteLength) {
        return false
      }
      var n = new DataView(t)
      var i = new DataView(r)
      for (var a = 0; a < n.byteLength; a++) {
        if (n.getUint8(a) !== i.getUint8(a)) {
          return false
        }
      }
      return true
    }
    var h = function e(t) {
      if (t instanceof Uint8Array || t instanceof Uint16Array) {
        return t.buffer
      }
      return t
    }
    var p = function e() {
      var t = s.a.mergeOptions.apply(s.a, arguments)
      Object.keys(t).forEach(function(e) {
        if (t[e] === null) {
          delete t[e]
        }
      })
      return t
    }
    var v = function e(t) {
      var r = new u.a.DOMParser().parseFromString(
        String.fromCharCode.apply(null, new Uint16Array(t)),
        'application/xml'
      )
      var n = r.getElementsByTagName('HttpHeaders')[0]
      var i = {}
      if (n) {
        var a = n.getElementsByTagName('name')
        var s = n.getElementsByTagName('value')
        for (var o = 0; o < a.length; o++) {
          i[a[o].childNodes[0].nodeValue] = s[o].childNodes[0].nodeValue
        }
      }
      var l = r.getElementsByTagName('Challenge')[0]
      var f
      if (l) {
        f = u.a.atob(l.childNodes[0].nodeValue)
      }
      return { headers: i, message: f }
    }
    var g = function e(t, r, n, i) {
      var a = v(r)
      var o = a.message
      var u = p(a.headers, n.emeHeaders, t.licenseHeaders)
      s.a.xhr({ uri: t.url, method: 'post', headers: u, body: o, responseType: 'arraybuffer' }, i)
    }
    var m = function e(t) {
      var r
      Object.keys(t).forEach(function(e) {
        var n = {}
        var i = t[e].audioContentType
        var a = t[e].videoContentType
        if (i) {
          n.audioCapabilities = [{ contentType: i }]
        }
        if (a) {
          n.videoCapabilities = [{ contentType: a }]
        }
        if (!r) {
          r = u.a.navigator.requestMediaKeySystemAccess(e, [n])
        } else {
          r = r.catch(function(t) {
            return u.a.navigator.requestMediaKeySystemAccess(e, [n])
          })
        }
      })
      return r
    }
    var y = function e(t) {
      var r = t.mediaKeys,
        n = t.initDataType,
        i = t.initData,
        a = t.options,
        o = t.getLicense,
        u = t.removeSession,
        l = t.eventBus
      var f = r.createSession()
      return new Promise(function(e, t) {
        f.addEventListener(
          'message',
          function(r) {
            o(a, r.message)
              .then(function(t) {
                e(f.update(t))
              })
              .catch(function(e) {
                t(e)
              })
          },
          false
        )
        f.addEventListener(
          'keystatuseschange',
          function(e) {
            var t = false
            f.keyStatuses.forEach(function(r, n) {
              l.trigger({ keyId: n, status: r, target: f, type: 'keystatuschange' })
              switch (r) {
                case 'expired':
                  t = true
                  break
                case 'internal-error':
                  s.a.log.warn(
                    'Key status reported as "internal-error." Leaving the session open since we ' +
                      "don't have enough details to know if this error is fatal.",
                    e
                  )
                  break
              }
            })
            if (t) {
              f.close().then(function() {
                u(i)
              })
            }
          },
          false
        )
        f.generateRequest(n, i).catch(function() {
          t('Unable to create or initialize key session')
        })
      })
    }
    var _ = function e(t) {
      var r = t.video,
        n = t.initDataType,
        i = t.initData,
        a = t.options,
        s = t.getLicense,
        o = t.removeSession,
        u = t.eventBus
      if (r.mediaKeysObject) {
        return y({
          mediaKeys: r.mediaKeysObject,
          initDataType: n,
          initData: i,
          options: a,
          getLicense: s,
          removeSession: o,
          eventBus: u,
        })
      }
      r.pendingSessionData.push({ initDataType: n, initData: i })
      return Promise.resolve()
    }
    var T = function e(t) {
      var r = t.video,
        n = t.certificate,
        i = t.createdMediaKeys,
        a = t.options,
        s = t.getLicense,
        o = t.removeSession,
        u = t.eventBus
      r.mediaKeysObject = i
      var l = []
      if (n) {
        l.push(i.setServerCertificate(n))
      }
      for (var f = 0; f < r.pendingSessionData.length; f++) {
        var d = r.pendingSessionData[f]
        l.push(
          y({
            mediaKeys: r.mediaKeysObject,
            initDataType: d.initDataType,
            initData: d.initData,
            options: a,
            getLicense: s,
            removeSession: o,
            eventBus: u,
          })
        )
      }
      r.pendingSessionData = []
      l.push(r.setMediaKeys(i))
      return Promise.all(l)
    }
    var E = function e(t) {
      return function(e, r, n) {
        g(t, r, e, function(e, t, r) {
          if (e) {
            n(e)
            return
          }
          n(null, r)
        })
      }
    }
    var b = function e(t) {
      return function(e, r, n) {
        var i = p({ 'Content-type': 'application/octet-stream' }, e.emeHeaders, t.licenseHeaders)
        s.a.xhr(
          { uri: t.url, method: 'POST', responseType: 'arraybuffer', body: r, headers: i },
          function(e, t, r) {
            if (e) {
              n(e)
              return
            }
            n(null, r)
          }
        )
      }
    }
    var S = function e(t, r) {
      return function(e, n) {
        return new Promise(function(i, a) {
          t(e, n, function(e, t) {
            if (r) {
              r.trigger('licenserequestattempted')
            }
            if (e) {
              a(e)
              return
            }
            i(t)
          })
        })
      }
    }
    var w = function e(t, r) {
      if (typeof r === 'string') {
        r = { url: r }
      }
      if (!r.url && !r.getLicense) {
        throw new Error('Neither URL nor getLicense function provided to get license')
      }
      if (r.url && !r.getLicense) {
        r.getLicense = t === 'com.microsoft.playready' ? E(r) : b(r)
      }
      return r
    }
    var A = function e(t) {
      var r = t.video,
        n = t.initDataType,
        i = t.initData,
        a = t.keySystemAccess,
        s = t.options,
        o = t.removeSession,
        u = t.eventBus
      var l = Promise.resolve()
      if (typeof r.mediaKeysObject === 'undefined') {
        r.mediaKeysObject = null
        r.pendingSessionData = []
        var f
        var d
        l = new Promise(function(e, t) {
          r.keySystem = a.keySystem
          d = w(a.keySystem, s.keySystems[a.keySystem])
          if (!d.getCertificate) {
            e(a)
            return
          }
          d.getCertificate(s, function(r, n) {
            if (r) {
              t(r)
              return
            }
            f = n
            e()
          })
        })
          .then(function() {
            return a.createMediaKeys()
          })
          .then(function(e) {
            return T({
              video: r,
              certificate: f,
              createdMediaKeys: e,
              options: s,
              getLicense: S(d.getLicense, u),
              removeSession: o,
              eventBus: u,
            })
          })
          .catch(function(e) {
            if (e) {
              return Promise.reject(e)
            }
            return Promise.reject('Failed to create and initialize a MediaKeys object')
          })
      }
      return l.then(function() {
        return _({
          video: r,
          initDataType: n,
          initData: i,
          options: s,
          getLicense: r.keySystem
            ? S(w(r.keySystem, s.keySystems[r.keySystem]).getLicense, u)
            : null,
          removeSession: o,
          eventBus: u,
        })
      })
    }
    var I = 'com.apple.fps.1_0'
    var C = function e(t) {
      var r = t.initData,
        n = t.id,
        i = t.cert
      if (typeof n === 'string') {
        n = l(n)
      }
      var a = 0
      var s = new ArrayBuffer(r.byteLength + 4 + n.byteLength + 4 + i.byteLength)
      var o = new DataView(s)
      var u = new Uint8Array(s, a, r.byteLength)
      u.set(r)
      a += r.byteLength
      o.setUint32(a, n.byteLength, true)
      a += 4
      var f = new Uint16Array(s, a, n.length)
      f.set(n)
      a += f.byteLength
      o.setUint32(a, i.byteLength, true)
      a += 4
      var d = new Uint8Array(s, a, i.byteLength)
      d.set(i)
      return new Uint8Array(s, 0, s.byteLength)
    }
    var R = function e(t) {
      var r = t.video,
        n = t.contentId,
        i = t.initData,
        a = t.cert,
        s = t.options,
        o = t.getLicense,
        l = t.eventBus
      return new Promise(function(e, t) {
        if (!r.webkitKeys) {
          try {
            r.webkitSetMediaKeys(new u.a.WebKitMediaKeys(I))
          } catch (e) {
            t('Could not create MediaKeys')
            return
          }
        }
        var f
        try {
          f = r.webkitKeys.createSession('video/mp4', C({ id: n, initData: i, cert: a }))
        } catch (e) {
          t('Could not create key session')
          return
        }
        f.contentId = n
        f.addEventListener('webkitkeymessage', function(e) {
          o(s, n, e.message, function(e, r) {
            if (l) {
              l.trigger('licenserequestattempted')
            }
            if (e) {
              t(e)
              return
            }
            f.update(new Uint8Array(r))
          })
        })
        f.addEventListener('webkitkeyadded', function() {
          e()
        })
        f.addEventListener('webkitkeyerror', function() {
          var e = f.error
          t('KeySession error: code ' + e.code + ', systemCode ' + e.systemCode)
        })
      })
    }
    var D = function e(t) {
      return function(e, r) {
        var n = p(e.emeHeaders, t.certificateHeaders)
        s.a.xhr({ uri: t.certificateUri, responseType: 'arraybuffer', headers: n }, function(
          e,
          t,
          n
        ) {
          if (e) {
            r(e)
            return
          }
          r(null, new Uint8Array(n))
        })
      }
    }
    var O = function e(t, r) {
      return d(f(r))
    }
    var M = function e(t) {
      return function(e, r, n, i) {
        var a = p({ 'Content-type': 'application/octet-stream' }, e.emeHeaders, t.licenseHeaders)
        s.a.xhr(
          { uri: t.licenseUri, method: 'POST', responseType: 'arraybuffer', body: n, headers: a },
          function(e, t, r) {
            if (e) {
              i(e)
              return
            }
            i(null, r)
          }
        )
      }
    }
    var k = function e(t) {
      var r = t.video,
        n = t.initData,
        i = t.options,
        a = t.eventBus
      var s = i.keySystems[I]
      var o = s.getCertificate || D(s)
      var u = s.getContentId || O
      var l = s.getLicense || M(s)
      return new Promise(function(e, t) {
        o(i, function(r, n) {
          if (r) {
            t(r)
            return
          }
          e(n)
        })
      }).then(function(e) {
        return R({
          video: r,
          cert: e,
          initData: n,
          getLicense: l,
          options: i,
          contentId: u(i, n),
          eventBus: a,
        })
      })
    }
    var P = 'com.microsoft.playready'
    var N = function e(t, r, n, i) {
      var a = t.keySystems[P]
      if (typeof a.getKey === 'function') {
        a.getKey(t, n.destinationURL, n.message.buffer, function(e, t) {
          if (e) {
            i.trigger({ message: 'Unable to get key: ' + e, target: r, type: 'mskeyerror' })
            return
          }
          r.update(t)
        })
        return
      }
      if (typeof a === 'string') {
        a = { url: a }
      } else if (typeof a === 'boolean') {
        a = {}
      }
      if (!a.url) {
        a.url = n.destinationURL
      }
      g(a, n.message.buffer, t, function(e, t) {
        if (i) {
          i.trigger('licenserequestattempted')
        }
        if (e) {
          i.trigger({
            message: 'Unable to request key from url: ' + a.url,
            target: r,
            type: 'mskeyerror',
          })
          return
        }
        r.update(new Uint8Array(t.body))
      })
    }
    var L = function e(t, r, n, i) {
      var a = t.msKeys.createSession('video/mp4', r)
      if (!a) {
        throw new Error('Could not create key session.')
      }
      a.addEventListener('mskeymessage', function(e) {
        N(n, a, e, i)
      })
      a.addEventListener('mskeyerror', function(e) {
        i.trigger({
          message:
            'Unexpected key error from key session with ' +
            ('code: ' + a.error.code + ' and systemCode: ' + a.error.systemCode),
          target: a,
          type: 'mskeyerror',
        })
      })
      a.addEventListener('mskeyadded', function() {
        i.trigger({ target: a, type: 'mskeyadded' })
      })
    }
    var x = function(e) {
      var t = e.video,
        r = e.initData,
        n = e.options,
        i = e.eventBus
      if (t.msKeys) {
        delete t.msKeys
      }
      try {
        t.msSetMediaKeys(new u.a.MSMediaKeys(P))
      } catch (e) {
        throw new Error(
          'Unable to create media keys for PlayReady key system. ' + 'Error: ' + e.message
        )
      }
      L(t, r, n, i)
    }
    var F = function e(t, r) {
      for (var n = 0; n < t.length; n++) {
        if (!t[n].initData) {
          continue
        }
        var i = h(t[n].initData)
        var a = h(r)
        if (c(i, a)) {
          return true
        }
      }
      return false
    }
    var U = function e(t, r) {
      for (var n = 0; n < t.length; n++) {
        if (t[n].initData === r) {
          t.splice(n, 1)
          return
        }
      }
    }
    var B = function e(t, r, n, i) {
      if (!r || !r.keySystems) {
        return Promise.resolve()
      }
      var a = t.initData
      return m(r.keySystems).then(function(e) {
        var s = e.keySystem
        if (r.keySystems[s] && r.keySystems[s].pssh) {
          a = r.keySystems[s].pssh
        }
        if (F(n, a) || !a) {
          return Promise.resolve()
        }
        n.push({ initData: a })
        return A({
          video: t.target,
          initDataType: t.initDataType,
          initData: a,
          keySystemAccess: e,
          options: r,
          removeSession: U.bind(null, n),
          eventBus: i,
        })
      })
    }
    var j = function e(t, r, n) {
      if (!r.keySystems || !r.keySystems[I] || !t.initData) {
        return Promise.resolve()
      }
      return k({ video: t.target, initData: t.initData, options: r, eventBus: n })
    }
    var G = function e(t, r, n, i) {
      if (!r.keySystems || !r.keySystems[P]) {
        return
      }
      if (
        n.reduce(function(e, t) {
          return e || t.playready
        }, false)
      ) {
        return
      }
      var a = t.initData
      if (r.keySystems[P] && r.keySystems[P].pssh) {
        a = r.keySystems[P].pssh
      }
      if (!a) {
        return
      }
      n.push({ playready: true, initData: a })
      x({ video: t.target, initData: a, options: r, eventBus: i })
    }
    var q = function e(t) {
      return s.a.mergeOptions(t.currentSource(), t.eme.options)
    }
    var H = function e(t) {
      var r = t.src()
      if (r !== t.eme.activeSrc) {
        t.eme.activeSrc = r
        t.eme.sessions = []
      }
    }
    var V = function e(t) {
      return function(e) {
        var r = e ? e.message || e : null
        t.error({ code: 5, message: r })
      }
    }
    var K = function e(t, r) {
      if (t.$('.vjs-tech').tagName.toLowerCase() !== 'video') {
        return
      }
      H(t)
      t.tech_.el_.addEventListener('encrypted', function(e) {
        H(t)
        B(e, q(t), t.eme.sessions, t.tech_).catch(r)
      })
      t.tech_.el_.addEventListener('webkitneedkey', function(e) {
        H(t)
        j(e, q(t), t.tech_).catch(r)
      })
      if (s.a.browser.IS_EDGE) {
        return
      }
      t.tech_.el_.addEventListener('msneedkey', function(e) {
        H(t)
        try {
          G(e, q(t), t.eme.sessions, t.tech_)
        } catch (e) {
          r(e)
        }
      })
      t.tech_.on('mskeyerror', r)
      t.on('dispose', function() {
        t.tech_.off('mskeyerror', r)
      })
    }
    var Y = function e(t) {
      if (t === void 0) {
        t = {}
      }
      var r = this
      var n = V(r)
      r.ready(function() {
        return K(r, n)
      })
      r.eme = {
        initializeMediaKeys: function e(i, a, o) {
          if (i === void 0) {
            i = {}
          }
          if (a === void 0) {
            a = function e() {}
          }
          if (o === void 0) {
            o = false
          }
          var u = s.a.mergeOptions(r.currentSource(), t, i)
          var l = { initDataType: 'cenc', initData: null, target: r.tech_.el_ }
          H(r)
          if (r.tech_.el_.setMediaKeys) {
            B(l, u, r.eme.sessions, r.tech_)
              .then(function() {
                return a()
              })
              .catch(function(e) {
                a(e)
                if (!o) {
                  n(e)
                }
              })
          } else if (r.tech_.el_.msSetMediaKeys) {
            var f = function e(t) {
              r.tech_.off('mskeyadded', e)
              r.tech_.off('mskeyerror', e)
              if (t.type === 'mskeyerror') {
                a(t.target.error)
                if (!o) {
                  n(t.message)
                }
              } else {
                a()
              }
            }
            r.tech_.one('mskeyadded', f)
            r.tech_.one('mskeyerror', f)
            try {
              G(l, u, r.eme.sessions, r.tech_)
            } catch (e) {
              r.tech_.off('mskeyadded', f)
              r.tech_.off('mskeyerror', f)
              a(e)
              if (!o) {
                n(e)
              }
            }
          }
        },
        options: t,
      }
    }
    var W = s.a.registerPlugin || s.a.plugin
    W('eme', Y)
    t['default'] = Y
  },
  function(e, t, r) {
    var n
    ;(function(t) {
      'use strict'
      function i() {}
      var a = i.prototype
      var s = t.EventEmitter
      function o(e, t) {
        var r = e.length
        while (r--) {
          if (e[r].listener === t) {
            return r
          }
        }
        return -1
      }
      function u(e) {
        return function t() {
          return this[e].apply(this, arguments)
        }
      }
      a.getListeners = function e(t) {
        var r = this._getEvents()
        var n
        var i
        if (t instanceof RegExp) {
          n = {}
          for (i in r) {
            if (r.hasOwnProperty(i) && t.test(i)) {
              n[i] = r[i]
            }
          }
        } else {
          n = r[t] || (r[t] = [])
        }
        return n
      }
      a.flattenListeners = function e(t) {
        var r = []
        var n
        for (n = 0; n < t.length; n += 1) {
          r.push(t[n].listener)
        }
        return r
      }
      a.getListenersAsObject = function e(t) {
        var r = this.getListeners(t)
        var n
        if (r instanceof Array) {
          n = {}
          n[t] = r
        }
        return n || r
      }
      function l(e) {
        if (typeof e === 'function' || e instanceof RegExp) {
          return true
        } else if (e && typeof e === 'object') {
          return l(e.listener)
        } else {
          return false
        }
      }
      a.addListener = function e(t, r) {
        if (!l(r)) {
          throw new TypeError('listener must be a function')
        }
        var n = this.getListenersAsObject(t)
        var i = typeof r === 'object'
        var a
        for (a in n) {
          if (n.hasOwnProperty(a) && o(n[a], r) === -1) {
            n[a].push(i ? r : { listener: r, once: false })
          }
        }
        return this
      }
      a.on = u('addListener')
      a.addOnceListener = function e(t, r) {
        return this.addListener(t, { listener: r, once: true })
      }
      a.once = u('addOnceListener')
      a.defineEvent = function e(t) {
        this.getListeners(t)
        return this
      }
      a.defineEvents = function e(t) {
        for (var r = 0; r < t.length; r += 1) {
          this.defineEvent(t[r])
        }
        return this
      }
      a.removeListener = function e(t, r) {
        var n = this.getListenersAsObject(t)
        var i
        var a
        for (a in n) {
          if (n.hasOwnProperty(a)) {
            i = o(n[a], r)
            if (i !== -1) {
              n[a].splice(i, 1)
            }
          }
        }
        return this
      }
      a.off = u('removeListener')
      a.addListeners = function e(t, r) {
        return this.manipulateListeners(false, t, r)
      }
      a.removeListeners = function e(t, r) {
        return this.manipulateListeners(true, t, r)
      }
      a.manipulateListeners = function e(t, r, n) {
        var i
        var a
        var s = t ? this.removeListener : this.addListener
        var o = t ? this.removeListeners : this.addListeners
        if (typeof r === 'object' && !(r instanceof RegExp)) {
          for (i in r) {
            if (r.hasOwnProperty(i) && (a = r[i])) {
              if (typeof a === 'function') {
                s.call(this, i, a)
              } else {
                o.call(this, i, a)
              }
            }
          }
        } else {
          i = n.length
          while (i--) {
            s.call(this, r, n[i])
          }
        }
        return this
      }
      a.removeEvent = function e(t) {
        var r = typeof t
        var n = this._getEvents()
        var i
        if (r === 'string') {
          delete n[t]
        } else if (t instanceof RegExp) {
          for (i in n) {
            if (n.hasOwnProperty(i) && t.test(i)) {
              delete n[i]
            }
          }
        } else {
          delete this._events
        }
        return this
      }
      a.removeAllListeners = u('removeEvent')
      a.emitEvent = function e(t, r) {
        var n = this.getListenersAsObject(t)
        var i
        var a
        var s
        var o
        var u
        for (o in n) {
          if (n.hasOwnProperty(o)) {
            i = n[o].slice(0)
            for (s = 0; s < i.length; s++) {
              a = i[s]
              if (a.once === true) {
                this.removeListener(t, a.listener)
              }
              u = a.listener.apply(this, r || [])
              if (u === this._getOnceReturnValue()) {
                this.removeListener(t, a.listener)
              }
            }
          }
        }
        return this
      }
      a.trigger = u('emitEvent')
      a.emit = function e(t) {
        var r = Array.prototype.slice.call(arguments, 1)
        return this.emitEvent(t, r)
      }
      a.setOnceReturnValue = function e(t) {
        this._onceReturnValue = t
        return this
      }
      a._getOnceReturnValue = function e() {
        if (this.hasOwnProperty('_onceReturnValue')) {
          return this._onceReturnValue
        } else {
          return true
        }
      }
      a._getEvents = function e() {
        return this._events || (this._events = {})
      }
      i.noConflict = function e() {
        t.EventEmitter = s
        return i
      }
      if (true) {
        !((n = function() {
          return i
        }.call(t, r, t, e)),
        n !== undefined && (e.exports = n))
      } else if (typeof e === 'object' && e.exports) {
        e.exports = i
      } else {
        t.EventEmitter = i
      }
    })(typeof window !== 'undefined' ? window : this || {})
  },
  function(e, t) {
    e.exports = {
      name: 'streaming-player.js',
      version: '0.0.20',
      description: 'Napster-powered HLS streaming audio engine.',
      directories: { example: 'example', test: 'test', source: 'src' },
      dependencies: {
        'lodash.clone': '^4.5.0',
        'query-string': '^4.3.4',
        'video.js': '^7.4.1',
        'videojs-contrib-dash': '^2.11.0',
        'videojs-contrib-eme': '^3.5.0',
        'whatwg-fetch': '^2.0.4',
        'wolfy87-eventemitter': '^5.2.4',
      },
      devDependencies: {
        ava: '^0.19.1',
        'babel-core': '^6.26.3',
        'babel-loader': '^6.4.1',
        'babel-plugin-transform-runtime': '^6.23.0',
        'babel-preset-env': '^1.7.0',
        'babel-preset-es2015': '^6.24.1',
        'browser-env': '^2.0.31',
        eslint: '^3.19.0',
        'expose-loader': '^0.7.5',
        flightplan: '^0.6.17',
        'imports-loader': '^0.7.1',
        'node-fetch': '^1.7.3',
        'uglifyjs-webpack-plugin': '^0.4.6',
        webpack: '^2.7.0',
      },
      engines: { node: '^10.16.3' },
      scripts: {
        lint: './node_modules/eslint/bin/eslint.js src/**; exit 0',
        webpack: './node_modules/webpack/bin/webpack.js',
        'webpack-watch': './node_modules/webpack/bin/webpack.js --watch',
        test: './node_modules/ava/cli.js',
      },
      repository: { type: 'git', url: 'https://github.com/Rhapsody/streaming-player.git' },
      author: 'Rhapsody International, Inc.',
      contributors: [
        { name: 'Ante Barac', email: 'abarac@napster.com' },
        { name: 'Kresimir Mrsic', email: 'kmrsic@napster.com' },
        { name: 'Tesa Orlovic', email: 'torlovic@napster.com' },
      ],
      bugs: { url: 'https://github.com/Rhapsody/streaming-player/issues' },
      homepage: 'https://github.com/Rhapsody/streaming-player',
      license: 'SEE LICENSE IN LICENSE',
      ava: {
        babel: 'inherit',
        require: [
          'babel-register',
          './test/helpers/setup-browser-env.js',
          './test/helpers/setup-local-storage.js',
          './test/helpers/setup-fetch.js',
          './test/helpers/setup-videojs.js',
        ],
      },
    }
  },
  function(e, t, r) {
    'use strict'
    var n = r(83)
    var i = P(n)
    var a = r(84)
    var s = P(a)
    var o = r(53)
    var u = P(o)
    r(138)
    r(139)
    var l = r(140)
    var f = P(l)
    var d = r(131)
    var c = P(d)
    var h = r(132)
    var p = P(h)
    var v = r(129)
    var g = P(v)
    var m = r(133)
    var y = P(m)
    var _ = r(136)
    var T = P(_)
    var E = r(130)
    var b = P(E)
    var S = r(135)
    var w = P(S)
    var A = r(134)
    var I = P(A)
    var C = r(141)
    var R = P(C)
    var D = r(137)
    var O = P(D)
    var M = r(82)
    var k = P(M)
    function P(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var N = function e(t) {
      var r = this
      if (!t) {
        return this
      }
      var n = this
      this.identity = 'streaming-player'
      this.events = new f.default()
      this.callbacks = {}
      this.config = new b.default(t)
      this.session = { id: null }
      this.stream = {}
      this.track = new T.default()
      this.player = (0, u.default)(this.config.playerId, {
        plugins: { eme: {} },
        html5: { nativeAudioTracks: true, nativeVideoTracks: true, hls: { overrideNative: false } },
      })
      this.playbackControls = new y.default()
      this.playingDuration = 0
      this.setVolume(this.config.volume)
      this.enableLogging = t.enableLogging || false
      this.logger = new c.default({ enable: this.enableLogging })
      this.moniker = new p.default()
      this.client = new g.default({ apikey: t.apikey, token: t.token, env: t.env })
      this.timer = new w.default()
      this.player.on('play', function() {
        if (!r.playbackControls.isResumed) {
          n.logger.log('play started')
          return n.playStartEvent(n.track)
        }
        r.playbackControls.isResumed = false
      })
      this.player.on('loadedmetadata', function() {
        if (I.default.isHls()) {
          n.timer.end()
          return n.timer.diff().then(function(e) {
            var t = { track: n.track, diff: e }
            n.callbackRunner('trackLoaded', t)
            return n.playStartEvent(n.track)
          })
        }
        n.logger.log('loaded metadata')
      })
      this.player.on('pause', function() {
        n.logger.log('play paused')
        n.track.pausedTrackId = r.track.id
        n.track.pausedAt = new Date().toISOString()
      })
      this.player.on('ended', function() {
        var e = (0, O.default)(n.track)
        n.logger.log('play ended')
        n.playStopEvent(e).then(function() {
          window.localStorage.removeItem('currentlyPlaying')
          window.localStorage.removeItem('currentlyPlayingDuration')
        })
        n.callbackRunner('trackEnded')
      })
      this.player.on('timeupdate', function() {
        if (r.player.paused()) {
          return
        }
        if (r.player.currentTime()) {
          window.localStorage.setItem('currentlyPlayingDuration', r.player.currentTime())
        }
        return n.callbackRunner('trackProgress')
      })
      this.player.on('error', function() {
        var e = n.player.error()
        var t = { message: e.message, code: e.code, name: e.code, catchBlock: 'videojs player' }
        return n.client.logSessionFail(t)
      })
      ;(function e() {
        var t = this
        if (window) {
          window.addEventListener('beforeunload', function() {
            var e = window.localStorage.getItem('currentlyPlaying')
            if (e) {
              var r = (0, O.default)(t.track)
              if (r && r.id) {
                if (t.logger) {
                  t.logger.log('window close')
                }
                t.playStopEvent(r, true).then(function() {
                  window.localStorage.removeItem('currentlyPlaying')
                  window.localStorage.removeItem('currentlyPlayingDuration')
                })
              }
            }
          })
        }
      }.call(this))
      u.default.Html5DashJS.hook('beforeinitialize', function(e, t) {
        t.getDebug().setLogToBrowserConsole(n.enableLogging)
        t.on('streamInitialized', function(e) {
          n.logger.log('DashJS - streamInitialized', e)
        })
        t.on('initRequested', function(e) {
          n.timer.startFirstChunk()
          n.logger.log('DashJS - initRequested', e)
        })
        t.on('initFragmentLoaded', function(e) {
          n.timer.endFirstChunk()
          n.logger.log('DashJS - initFragmentLoaded', e)
        })
        t.on('manifestLoaded', function(e) {
          n.timer.endManifest()
          n.logger.log('DashJS - manifestLoaded', e)
        })
        t.on('public_licenseRequestComplete', function(e) {
          n.logger.log('DashJS - public_licenseRequestComplete', e)
          n.timer.endLicense()
          n.timer.end()
          return s.default
            .all([
              n.timer.diff(),
              n.timer.diffNAPITrack(),
              n.timer.diffStreamURL(),
              n.timer.diffLicense(),
              n.timer.diffFirstChunk(),
              n.timer.diffManifest(),
            ])
            .then(function(e) {
              n.callbackRunner('playerSpinnerOff', {})
              var t = {
                track: n.track,
                diff: e[0],
                diffNAPITrack: e[1],
                diffStreamURL: e[2],
                diffLicense: e[3],
                diffFirstChunk: e[4],
                diffManifest: e[5],
              }
              return n.callbackRunner('reporting', t)
            })
        })
      })
      this.client.logSessionSucess = function(e) {
        if (!e.session || !e.session.id) {
          throw new Error('No session data.')
        }
        if (this.storageAvailable('localStorage')) {
          localStorage.setItem('NAPISessionID', String(e.session.id))
        }
        n.session.id = e.session.id
        n.logger.log('we have session')
        n.logger.log('Session: ', n.session)
        n.logger.log('session ID = : ', n.session)
        n.trigger('ready')
      }
      this.client.logSessionFail = function(t) {
        var r = {
          error: { code: t.message, message: t.message, name: t.name },
          catchBlock: 'DrmStreamingPlayer',
          config: n.config,
          track: n.track,
          session: n.session,
          stream: n.streams,
          playerVersion: e.version,
        }
        if (t.code == 403 || t.code === '1015') {
          n.callbackRunner('sessionExpired', r)
        } else if (t.type == 'session') {
          n.callbackRunner('sessionError', r)
        }
        n.callbackRunner('error', r)
      }
    }
    N.version = R.default.version
    N.prototype.callbackHandler = function e(t, r) {
      this.callbacks[t] = r
    }
    N.prototype.callbackRunner = function e(t, r) {
      if (!this.callbacks[t]) {
        return
      }
      return this.callbacks[t](r)
    }
    N.prototype.getStreamUrl = function e(t) {
      var r = this
      return new s.default(function(e, t) {
        if (!r.track) {
          return t('The track does not exist.')
        }
        if (!r.track.id) {
          return t('The track does not exist.')
        }
        if (!r.track.format) {
          return t('The track format does not exist.')
        }
        if (!r.track.bitrate) {
          return t('The track bitrate does not exist.')
        }
        var n = { trackId: r.track.id, format: r.track.format, bitrate: r.track.bitrate }
        if (I.default.isHls()) {
          n.protocol = 'hls'
          n.drm = 'fairplay'
        } else if (I.default.isPlayready()) {
          n.protocol = 'mpd'
          n.drm = 'playready'
        } else if (I.default.isMpd() && !(k.default.inIframe() && k.default.isChrome())) {
          n.protocol = 'mpd'
          n.drm = 'widevine'
        } else if (I.default.isMpd()) {
          n.protocol = 'mpd'
          n.drm = ''
        } else {
          n.protocol = ''
          n.drm = null
        }
        return e(n)
      })
        .then(function(e) {
          r.timer.startStreamURL()
          return r.client.streamsGet(e)
        })
        .then(function(e) {
          r.timer.endStreamURL()
          if (!e.streams || e.streams.length < 1) {
            throw new Error('No streams found.')
          }
          r.logger.log('we have streams data: ', e)
          r.streams = e.streams
          return e.streams[0]
        })
        .catch(function(e) {
          try {
            var t = JSON.parse(e.message)
            var n = t.bodyMessage ? JSON.parse(t.bodyMessage) : t
            var i = (n || { errors: [] }).errors[0]
            var a = {
              message: i.description,
              code: i.code,
              name: t.statusText,
              catchBlock: 'getStreamUrl',
            }
            return r.client.logSessionFail(a)
          } catch (t) {
            throw new Error(e)
          }
        })
    }
    N.prototype.getTrack = function e(t, r) {
      var n = this
      var i = { 64: null, 192: null, 320: null }
      var a = [320, 192, 64]
      var s = 0
      this.track.reset()
      this.track.id = t
      this.track.context = r.context
      this.track.sourceType = r.sourceType
      this.timer.startNAPITrack()
      return this.client
        .trackGet({ trackId: t })
        .then(function(e) {
          var r = void 0
          var o = void 0
          n.timer.endNAPITrack()
          n.logger.log('we have track data: ', e)
          if (!e.tracks || e.tracks.length < 1) {
            o = { code: 'No track found' }
            n.callbackRunner('trackError', o)
            throw new Error('No tracks found.')
          }
          if (e.tracks[0] && !e.tracks[0].isStreamable) {
            o = { code: 'Track is not streamable.' }
            n.callbackRunner('trackError', o)
            throw new Error('The track is not streamable.')
          }
          if (!e.tracks[0].formats || e.tracks[0].formats.length < 1) {
            o = { code: 'Track unavailable due to licensing issues' }
            n.callbackRunner('trackError', o)
            throw new Error('No formats for the track found.')
          }
          for (var u = 0; u < e.tracks[0].formats.length; u++) {
            r = e.tracks[0].formats[u]
            if (r.bitrate && r.name) {
              i[r.bitrate] = r.name
            }
            n.logger.log('testing index : ', u, '\nwith hash: ', r)
            if (n.config.format === r.name && n.config.bitrate === r.bitrate) {
              n.track.format = r.name
              n.track.bitrate = r.bitrate
              break
            }
          }
          if (n.config.downgrade) {
            while (!n.track.format && s < a.length) {
              if (i[a[s]]) {
                n.track.format = i[a[s]]
                n.track.bitrate = a[s]
                break
              }
              s += 1
            }
          }
          if (!n.track.format) {
            throw new Error('No format found for track id ' + t)
          }
          if (!n.track.bitrate) {
            throw new Error('No bitrate found for track id ' + t)
          }
          n.track.duration = e.tracks[0].playbackSeconds
          if (!n.track.context) {
            n.track.context = e.tracks[0].albumId
          }
          n.logger.log('Updated track object: ', n.track)
          return n.track
        })
        .catch(function(e) {
          var t = JSON.parse(e.message)
          var r = t.bodyMessage ? JSON.parse(t.bodyMessage) : t
          var i = (r || { errors: [] }).errors[0]
          var a = {
            message: i.description,
            code: i.code,
            name: t.statusText,
            catchBlock: 'getTrack',
          }
          return n.client.logSessionFail(a)
        })
    }
    N.prototype.play = function e(t, r, n) {
      var i = this
      var a = this
      var o = r.context
      var u = { context: o }
      this.player.pause()
      this.timer.reset()
      this.timer.start()
      a.callbackRunner('playerSpinnerOn', {})
      if (r.sourceType) {
        u.sourceType = r.sourceType
      }
      return a
        .validatePlay(t, o)
        .then(function() {
          return a.preparePlayTrackId(t)
        })
        .then(function(e) {
          u.trackId = e
          return a.getTrack(e, r)
        })
        .then(function() {
          if (a.session.id) {
            u.sessionId = a.session.id
          }
          var e = function e(t, r) {
            var n = 0
            var i = function e() {
              if (n < 5) {
                a.client
                  .playbackSessionManage(u, n)
                  .then(function(e) {
                    t(e)
                  })
                  .catch(function(t) {
                    if ((t || { message: '' }).message != '') {
                      var r = JSON.parse(t.message)
                      var i = r.bodyMessage ? JSON.parse(r.bodyMessage) : r
                      var s = (i || { errors: [] }).errors[0]
                      if ((s || { code: '' }).code === '1015') {
                        var o = {
                          message: s.description,
                          code: s.code,
                          name: r.statusText,
                          catchBlock: 'play',
                          type: 'session',
                        }
                        return a.client.logSessionFail(o)
                      }
                    }
                    if (n < 5) {
                      n++
                      e()
                    }
                  })
              } else {
                a.callbackRunner('playerSpinnerOff', {})
                t({ session: undefined })
              }
            }
            return i()
          }
          return new s.default(function(t, r) {
            return e(t, r)
          })
        })
        .then(function(e) {
          if (!e) {
            return
          }
          if (!e.session || !e.session.id) {
            throw new Error('No session data.')
          }
          a.session.id = e.session.id
          return (u.sessionId = a.session.id)
        })
        .then(function() {
          return a.getStreamUrl()
        })
        .then(function(e) {
          var t = e.url
          a.logger.log('we have stream URL : ', t)
          a.playbackControls.playedAt = Date.now()
          a.playbackControls.startTime = n || 0
          return a.playSpecProtocol(e)
        })
        .then(function() {
          i.player.on('loadedmetadata', function() {
            return a.player.currentTime(n || 0)
          })
          a.timer.end()
          return a.timer.diff().then(function(e) {
            var t = { track: a.track, diff: e }
            a.callbackRunner('trackLoaded', t)
          })
        })
        .catch(function(e) {
          try {
            var t = JSON.parse(e.message)
            var r = t.bodyMessage ? JSON.parse(t.bodyMessage) : t
            var n = (r || { errors: [] }).errors[0]
            var i = e.response ? error.response.status : null
            var s = {
              message: n.description,
              code: n.code,
              name: t.statusText,
              catchBlock: 'play',
              type: i == 403 ? 'session' : 'general',
            }
            return a.client.logSessionFail(s)
          } catch (t) {
            console.log(e.message)
            var o = {
              message: e.message,
              code: 500,
              name: e.message,
              catchBlock: 'play',
              type: 'general',
            }
            return a.client.logSessionFail(o)
          }
        })
    }
    N.prototype.playSpecProtocol = function e(t) {
      var r = this
      var n = t.url
      if (I.default.isHls()) {
        r.player.src({
          type: 'application/x-mpegURL',
          src: n,
          keySystems: {
            'com.apple.fps.1_0': {
              certificateUri: t.certificateUri,
              getContentId: function e(t, r) {
                var n = function e(t) {
                  var r = new Uint16Array(t.buffer)
                  return String.fromCharCode.apply(null, r)
                }
                var i = n(r)
                if (i.indexOf('skd://') > -1) {
                  return i.split('skd://')[1]
                }
                throw 'Invalid Content ID format. The format of the Content ID must be the following: skd://xxx where xxx is the Key ID in hex format.'
              },
              getLicense: function e(r, n, i, a) {
                var s = function e(t) {
                  var r = window.atob(t),
                    n = r.length,
                    i = new Uint8Array(new ArrayBuffer(n))
                  for (var a = 0; a < n; a++) {
                    i[a] = r.charCodeAt(a)
                  }
                  return i
                }
                var o = function e(t) {
                  for (
                    var r,
                      n,
                      i,
                      a,
                      s,
                      o,
                      u,
                      l = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
                      f = '',
                      d = 0;
                    d < t.length;

                  ) {
                    ;(r = t[d++]),
                      (n = d < t.length ? t[d++] : Number.NaN),
                      (i = d < t.length ? t[d++] : Number.NaN),
                      (a = r >> 2),
                      (s = ((3 & r) << 4) | (n >> 4)),
                      (o = ((15 & n) << 2) | (i >> 6)),
                      (u = 63 & i),
                      isNaN(n) ? (o = u = 64) : isNaN(i) && (u = 64),
                      (f += l.charAt(a) + l.charAt(s) + l.charAt(o) + l.charAt(u))
                  }
                  return f
                }
                var l = 'spc=' + o(i) + '&assetId=' + n
                u.default.xhr(
                  {
                    url: t.tokenServerUrl,
                    method: 'POST',
                    data: l,
                    headers: { customdata: t.cdnToken },
                    contentType: 'application/x-www-form-urlencoded',
                  },
                  function(e, t, r) {
                    return a(null, s(r))
                  }
                )
              },
            },
          },
        })
      } else if (I.default.isPlayready()) {
        r.timer.startLicense()
        r.timer.startManifest()
        var i = {
          type: 'application/dash+xml',
          src: n,
          keySystemOptions: [
            {
              name: 'com.microsoft.playready',
              options: {
                serverURL: t.tokenServerUrl,
                httpRequestHeaders: { customdata: t.cdnToken },
              },
            },
          ],
        }
        r.player.src(i)
      } else if (I.default.isMpd() && !(k.default.inIframe() && k.default.isChrome())) {
        r.timer.startLicense()
        r.timer.startManifest()
        r.player.src({
          type: 'application/dash+xml',
          src: n,
          keySystemOptions: [
            {
              name: 'com.widevine.alpha',
              options: {
                serverURL: t.tokenServerUrl,
                httpRequestHeaders: { customdata: t.cdnToken },
              },
            },
          ],
        })
      } else if (I.default.isMpd()) {
        r.timer.startLicense()
        r.timer.startManifest()
        r.player.src({ type: 'application/dash+xml', src: n })
      } else {
        r.player.src({ type: 'audio/mp4', src: t.url })
      }
      return r.player.ready(function() {
        r.player.play()
      })
    }
    N.prototype.playWithStream = function e(t, r, n) {
      var i = this
      var a = n.context
      var o = { context: a }
      this.pause()
      this.timer.reset()
      this.timer.start()
      i.callbackRunner('playerSpinnerOn', {})
      if (n.sourceType) {
        o.sourceType = n.sourceType
      }
      return i
        .validatePlay(t.id, a)
        .then(function() {
          return i.preparePlayTrackId(t.id)
        })
        .then(function(e) {
          o.trackId = e
          return i.getTrack(e, n)
        })
        .then(function() {
          if (i.session.id) {
            o.sessionId = i.session.id
          }
          var e = function e(t) {
            var r = 0
            var n = function e() {
              if (r < 5) {
                i.client
                  .playbackSessionManage(o, r)
                  .then(function(e) {
                    t(e)
                  })
                  .catch(function(t) {
                    if ((t || { message: '' }).message != '') {
                      var n = JSON.parse(t.message)
                      var i = (n || { errors: [] }).errors[0]
                      if ((i || { code: '' }).code === '1015') {
                        throw Error(t)
                      }
                    }
                    if (r < 5) {
                      r++
                      e()
                    }
                  })
              } else {
                i.callbackRunner('playerSpinnerOff', {})
                t({ session: undefined })
              }
            }
            return n()
          }
          return new s.default(function(t) {
            return e(t)
          })
        })
        .then(function(e) {
          if (!e) {
            return
          }
          if (!e.session || !e.session.id) {
            throw new Error('No session data.')
          }
          i.session.id = e.session.id
          o.sessionId = i.session.id
          return i.client.playbackSessionValidate(o)
        })
        .then(function() {
          return i.getStreamUrl()
        })
        .then(function(e) {
          i.playbackControls.playedAt = Date.now()
          i.playbackControls.startTime = 0
          return i.playSpecProtocol(e)
        })
        .then(function() {
          i.timer.end()
          return i.timer.diff().then(function(e) {
            var t = { track: i.track, diff: e }
            i.callbackRunner('trackLoaded', t)
          })
        })
        .catch(function(e) {
          var t = JSON.parse(e.message)
          var r = t.bodyMessage ? JSON.parse(t.bodyMessage) : t
          var n = (r || { errors: [] }).errors[0]
          var a = e.response ? e.response.status : null
          var s = {
            message: n.description,
            code: n.code,
            name: t.statusText,
            catchBlock: 'playWithStream',
            type: a === 403 ? 'session' : 'general',
          }
          if (n.response && n.response.status === 403 && i.session.id) {
            i.session = {}
            i.callbackRunner('sessionExpired', s)
          } else {
            i.callbackRunner('error', s)
          }
          i.trigger('error', [s])
        })
    }
    N.prototype.validatePlay = function e(t, r) {
      return new s.default(function(e, n) {
        if (!t) {
          return n('track argument is missing')
        }
        if (!r) {
          return n('context argument is missing')
        }
        return e()
      })
    }
    N.prototype.playSeek = function e(t, r, n) {
      var i = this
      if (!n) {
        throw new Error('t (seconds) argument is missing')
      }
      return this.play(t, r, n)
    }
    N.prototype.resumeAt = function e(t) {
      var r = this
      return this.preparePlayTrackId(t).then(function() {
        r.player.play()
        r.player.currentTime(r.playbackControls.startTime)
        r.playbackControls.playedAt = Date.now()
      })
    }
    N.prototype.pause = function e() {
      this.player.pause()
      this.playbackControls.pausedAt = Date.now()
      this.track.pausedTrackId = this.track.id
      this.track.pausedAt = new Date().toISOString()
      this.playbackControls.renewStartTime()
      return this.trigger('trackPause')
    }
    N.prototype.stop = function e() {
      this.player.reset()
    }
    N.prototype.resume = function e(t, r) {
      var n = this
      var i = this
      var a = r.context
      var s = { context: a }
      if (r.sourceType) {
        s.sourceType = r.sourceType
      }
      this.timer.reset()
      this.logger.log('#resume: ' + t)
      if (!this.track || this.track.id.toLowerCase() !== t.toLowerCase()) {
        return this.play(t, s)
      }
      this.playbackControls.isResumed = true
      return this.validatePlay(t, a)
        .then(function() {
          s.trackId = t
          if (i.session.id) {
            s.sessionId = i.session.id
            return i.resumeAt(t).catch(function(e) {
              n.logger.log('Error while trying to resume track. Asking for new session.')
              return i.client
                .playbackSessionManage(s)
                .then(function(e) {
                  if (!e) {
                    return
                  }
                  if (!e.session || !e.session.id) {
                    throw new Error('No session data.')
                  }
                  i.session.id = e.session.id
                  return (s.sessionId = i.session.id)
                })
                .then(function() {
                  return i.resumeAt(t)
                })
            })
          }
          return i.client
            .playbackSessionPrepare()
            .then(function(e) {
              if (!e) {
                return
              }
              if (!e.session || !e.session.id) {
                throw new Error('No session data.')
              }
              i.session.id = e.session.id
              return (s.sessionId = i.session.id)
            })
            .then(function() {
              return i.resumeAt(t)
            })
        })
        .catch(function(e) {
          var t = JSON.parse(e.message)
          var r = t.bodyMessage ? JSON.parse(t.bodyMessage) : t
          var n = (r || { errors: [] }).errors[0]
          var a = e.response ? error.response.status : null
          var s = {
            message: n.description,
            code: n.code,
            name: t.statusText,
            catchBlock: 'resume',
            type: a == 403 ? 'session' : 'general',
          }
          return i.client.logSessionFail(s)
        })
    }
    N.prototype.seek = function e(t, r, n) {
      var i = this
      this.playbackControls.startTime = r
      this.playbackControls.playedAt = Date.now()
      var a = n && n.context ? n.context : 'UNKNOWN'
      var s = { context: a }
      if (this.track && this.track.id && this.track.id.toLowerCase() === t.toLowerCase()) {
        if (this.player.paused()) {
          this.resume(t, s)
        }
        return this.player.currentTime(r)
      }
      return this.play(t, s, r)
    }
    N.prototype.setVolume = function e(t) {
      var r = this
      var n = t
      if (!t) {
        n = 0
      }
      if (isNaN(t)) {
        throw new Error('volume argument should be a number')
      }
      if (!(t >= 0 && t <= 1)) {
        throw new Error('volume is out of bounds. it should be within 0 to 1.')
      }
      return this.player.volume(n)
    }
    N.prototype.currentTime = function e() {
      return this.player.currentTime()
    }
    N.prototype.preparePlayTrackId = function e(t) {
      var r = this
      return new s.default(function(e, n) {
        if (!t) {
          return n('track is missing')
        }
        if (t.constructor.name === 'String') {
          if (!r.moniker.validate(t, 'Track')) {
            return n('track id is invalid')
          }
          r.track.id = t
          return e(t)
        }
        if (!t.id || !t.trackId) {
          return n('track.id or track.trackId are missing')
        }
        r.track.id = t.id || t.trackId
        return e(t.id || t.trackId)
      })
    }
    N.prototype.changePlayerConfig = function e(t) {
      var r = this
      if (t.bitrate) {
        r.config.bitrate = t.bitrate
      }
      if (t.format) {
        r.config.format = t.format
      }
      return r.config
    }
    N.prototype.playStartEvent = function e(t) {
      var r = this
      var n = this
      if (!t || !t.id) {
        return
      }
      return new s.default(function(e) {
        n.logger.log('PLAY START BINDING!')
        n.logger.log(' => this.trackID = ', t.id)
        return e(n.ensureUnhandledStopEvent(t))
      })
        .then(function(e) {
          n.logger.log('metering trackID: ', t.id)
          if (t && !t.context) {
            t.context = 'UNKNOWN'
          }
          t.started = new Date().toISOString()
          var a = {
            method: 'POST',
            body: {
              type: 'playbackStart',
              playback: {
                id: t.id,
                started: t.started,
                format: n.config.format,
                bitrate: n.config.bitrate,
              },
              sourceId: t.context,
              context: t.context,
            },
          }
          if (t.sourceType) {
            a.body.sourceType = t.sourceType
          }
          n.logger.log('START params : ', a)
          n.callbackRunner('playerSpinnerOff', {})
          window.localStorage.setItem('currentlyPlaying', (0, i.default)(t))
          var s = window.localStorage.getItem('currentlyPlaying')
          r.logger.log('stored play object: ', JSON.parse(s))
          return n.client.eventPost(a)
        })
        .catch(function() {
          r.logger.log('Failed to report start event.')
        })
    }
    N.prototype.ensureUnhandledStopEvent = function e(t) {
      var r = this
      var n = this
      return new s.default(function(e) {
        var r = window.localStorage.getItem('currentlyPlaying')
        if (r) {
          var i = JSON.parse(r)
          if (!i || i.id == t.id) {
            return e()
          }
          window.localStorage.removeItem('currentlyPlaying')
          return e(n.playStopEvent(i))
        }
        return e()
      }).catch(function() {
        r.logger.log('Failed to handle stop event.')
      })
    }
    N.prototype.playStopEvent = function e(t, r) {
      var n = this
      return new s.default(function(e) {
        n.logger.log('PLAY STOP BINDING!')
        n.logger.log(' => metering trackID: ', t.id)
        var r = new Date()
        var i = 1e3
        var a = (r - new Date(t.started)) / i
        if (t.id === n.track.pausedTrackId) {
          a = (new Date(n.track.pausedAt) - new Date(t.started)) / i
        }
        if (a > t.duration) {
          a = t.duration
        }
        n.playingDuration = Math.floor(a)
        n.logger.log('duration = ', n.playingDuration)
        if (t && !t.context) {
          t.context = 'UNKNOWN'
        }
        var s = {
          body: {
            type: 'playbackStop',
            duration: n.playingDuration,
            playback: { id: t.id, started: r.toISOString(), format: t.format, bitrate: t.bitrate },
            offline: 'false',
            sourceId: t.context,
            context: t.context,
          },
        }
        if (t.sourceType) {
          s.body.sourceType = t.sourceType
        }
        n.logger.log('STOP params : ', s)
        return e(n.client.eventPost(s))
      })
    }
    N.prototype.trigger = function e(t, r) {
      var n = r ? r : {}
      this.logger.log('in the trigger(): ', t)
      this.events.emitEvent(t, [n])
    }
    N.prototype.on = function e(t, r) {
      this.logger.log('in the on(): ', t)
      this.events.addListener(t, r)
    }
    e.exports = N
  },
  function(e, t, r) {
    e.exports = { default: r(146), __esModule: true }
  },
  function(e, t, r) {
    'use strict'
    t.byteLength = f
    t.toByteArray = c
    t.fromByteArray = v
    var n = []
    var i = []
    var a = typeof Uint8Array !== 'undefined' ? Uint8Array : Array
    var s = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    for (var o = 0, u = s.length; o < u; ++o) {
      n[o] = s[o]
      i[s.charCodeAt(o)] = o
    }
    i['-'.charCodeAt(0)] = 62
    i['_'.charCodeAt(0)] = 63
    function l(e) {
      var t = e.length
      if (t % 4 > 0) {
        throw new Error('Invalid string. Length must be a multiple of 4')
      }
      var r = e.indexOf('=')
      if (r === -1) r = t
      var n = r === t ? 0 : 4 - (r % 4)
      return [r, n]
    }
    function f(e) {
      var t = l(e)
      var r = t[0]
      var n = t[1]
      return ((r + n) * 3) / 4 - n
    }
    function d(e, t, r) {
      return ((t + r) * 3) / 4 - r
    }
    function c(e) {
      var t
      var r = l(e)
      var n = r[0]
      var s = r[1]
      var o = new a(d(e, n, s))
      var u = 0
      var f = s > 0 ? n - 4 : n
      var c
      for (c = 0; c < f; c += 4) {
        t =
          (i[e.charCodeAt(c)] << 18) |
          (i[e.charCodeAt(c + 1)] << 12) |
          (i[e.charCodeAt(c + 2)] << 6) |
          i[e.charCodeAt(c + 3)]
        o[u++] = (t >> 16) & 255
        o[u++] = (t >> 8) & 255
        o[u++] = t & 255
      }
      if (s === 2) {
        t = (i[e.charCodeAt(c)] << 2) | (i[e.charCodeAt(c + 1)] >> 4)
        o[u++] = t & 255
      }
      if (s === 1) {
        t =
          (i[e.charCodeAt(c)] << 10) | (i[e.charCodeAt(c + 1)] << 4) | (i[e.charCodeAt(c + 2)] >> 2)
        o[u++] = (t >> 8) & 255
        o[u++] = t & 255
      }
      return o
    }
    function h(e) {
      return n[(e >> 18) & 63] + n[(e >> 12) & 63] + n[(e >> 6) & 63] + n[e & 63]
    }
    function p(e, t, r) {
      var n
      var i = []
      for (var a = t; a < r; a += 3) {
        n = ((e[a] << 16) & 16711680) + ((e[a + 1] << 8) & 65280) + (e[a + 2] & 255)
        i.push(h(n))
      }
      return i.join('')
    }
    function v(e) {
      var t
      var r = e.length
      var i = r % 3
      var a = []
      var s = 16383
      for (var o = 0, u = r - i; o < u; o += s) {
        a.push(p(e, o, o + s > u ? u : o + s))
      }
      if (i === 1) {
        t = e[r - 1]
        a.push(n[t >> 2] + n[(t << 4) & 63] + '==')
      } else if (i === 2) {
        t = (e[r - 2] << 8) + e[r - 1]
        a.push(n[t >> 10] + n[(t >> 4) & 63] + n[(t << 2) & 63] + '=')
      }
      return a.join('')
    }
  },
  function(e, t, r) {
    var n = r(13)
    var i = n.JSON || (n.JSON = { stringify: JSON.stringify })
    e.exports = function e(t) {
      return i.stringify.apply(i, arguments)
    }
  },
  function(e, t, r) {
    r(176)
    var n = r(13).Object
    e.exports = function e(t, r, i) {
      return n.defineProperty(t, r, i)
    }
  },
  function(e, t, r) {
    r(177)
    r(179)
    r(182)
    r(178)
    r(180)
    r(181)
    e.exports = r(13).Promise
  },
  function(e, t) {
    e.exports = function() {}
  },
  function(e, t) {
    e.exports = function(e, t, r, n) {
      if (!(e instanceof t) || (n !== undefined && n in e)) {
        throw TypeError(r + ': incorrect invocation!')
      }
      return e
    }
  },
  function(e, t, r) {
    var n = r(62)
    var i = r(96)
    var a = r(170)
    e.exports = function(e) {
      return function(t, r, s) {
        var o = n(t)
        var u = i(o.length)
        var l = a(s, u)
        var f
        if (e && r != r)
          while (u > l) {
            f = o[l++]
            if (f != f) return true
          }
        else
          for (; u > l; l++)
            if (e || l in o) {
              if (o[l] === r) return e || l || 0
            }
        return !e && -1
      }
    }
  },
  function(e, t, r) {
    var n = r(40)
    var i = r(156)
    var a = r(155)
    var s = r(17)
    var o = r(96)
    var u = r(174)
    var l = {}
    var f = {}
    var t = (e.exports = function(e, t, r, d, c) {
      var h = c
        ? function() {
            return e
          }
        : u(e)
      var p = n(r, d, t ? 2 : 1)
      var v = 0
      var g, m, y, _
      if (typeof h != 'function') throw TypeError(e + ' is not iterable!')
      if (a(h))
        for (g = o(e.length); g > v; v++) {
          _ = t ? p(s((m = e[v]))[0], m[1]) : p(e[v])
          if (_ === l || _ === f) return _
        }
      else
        for (y = h.call(e); !(m = y.next()).done; ) {
          _ = i(y, p, m.value, t)
          if (_ === l || _ === f) return _
        }
    })
    t.BREAK = l
    t.RETURN = f
  },
  function(e, t, r) {
    e.exports =
      !r(23) &&
      !r(87)(function() {
        return (
          Object.defineProperty(r(56)('div'), 'a', {
            get: function() {
              return 7
            },
          }).a != 7
        )
      })
  },
  function(e, t) {
    e.exports = function(e, t, r) {
      var n = r === undefined
      switch (t.length) {
        case 0:
          return n ? e() : e.call(r)
        case 1:
          return n ? e(t[0]) : e.call(r, t[0])
        case 2:
          return n ? e(t[0], t[1]) : e.call(r, t[0], t[1])
        case 3:
          return n ? e(t[0], t[1], t[2]) : e.call(r, t[0], t[1], t[2])
        case 4:
          return n ? e(t[0], t[1], t[2], t[3]) : e.call(r, t[0], t[1], t[2], t[3])
      }
      return e.apply(r, t)
    }
  },
  function(e, t, r) {
    var n = r(39)
    e.exports = Object('z').propertyIsEnumerable(0)
      ? Object
      : function(e) {
          return n(e) == 'String' ? e.split('') : Object(e)
        }
  },
  function(e, t, r) {
    var n = r(31)
    var i = r(10)('iterator')
    var a = Array.prototype
    e.exports = function(e) {
      return e !== undefined && (n.Array === e || a[i] === e)
    }
  },
  function(e, t, r) {
    var n = r(17)
    e.exports = function(e, t, r, i) {
      try {
        return i ? t(n(r)[0], r[1]) : t(r)
      } catch (t) {
        var a = e['return']
        if (a !== undefined) n(a.call(e))
        throw t
      }
    }
  },
  function(e, t, r) {
    'use strict'
    var n = r(161)
    var i = r(92)
    var a = r(59)
    var s = {}
    r(24)(s, r(10)('iterator'), function() {
      return this
    })
    e.exports = function(e, t, r) {
      e.prototype = n(s, { next: i(1, r) })
      a(e, t + ' Iterator')
    }
  },
  function(e, t, r) {
    var n = r(10)('iterator')
    var i = false
    try {
      var a = [7][n]()
      a['return'] = function() {
        i = true
      }
      Array.from(a, function() {
        throw 2
      })
    } catch (e) {}
    e.exports = function(e, t) {
      if (!t && !i) return false
      var r = false
      try {
        var a = [7]
        var s = a[n]()
        s.next = function() {
          return { done: (r = true) }
        }
        a[n] = function() {
          return s
        }
        e(a)
      } catch (e) {}
      return r
    }
  },
  function(e, t) {
    e.exports = function(e, t) {
      return { value: t, done: !!e }
    }
  },
  function(e, t, r) {
    var n = r(8)
    var i = r(95).set
    var a = n.MutationObserver || n.WebKitMutationObserver
    var s = n.process
    var o = n.Promise
    var u = r(39)(s) == 'process'
    e.exports = function() {
      var e, t, r
      var l = function() {
        var n, i
        if (u && (n = s.domain)) n.exit()
        while (e) {
          i = e.fn
          e = e.next
          try {
            i()
          } catch (n) {
            if (e) r()
            else t = undefined
            throw n
          }
        }
        t = undefined
        if (n) n.enter()
      }
      if (u) {
        r = function() {
          s.nextTick(l)
        }
      } else if (a && !(n.navigator && n.navigator.standalone)) {
        var f = true
        var d = document.createTextNode('')
        new a(l).observe(d, { characterData: true })
        r = function() {
          d.data = f = !f
        }
      } else if (o && o.resolve) {
        var c = o.resolve(undefined)
        r = function() {
          c.then(l)
        }
      } else {
        r = function() {
          i.call(n, l)
        }
      }
      return function(n) {
        var i = { fn: n, next: undefined }
        if (t) t.next = i
        if (!e) {
          e = i
          r()
        }
        t = i
      }
    }
  },
  function(e, t, r) {
    var n = r(17)
    var i = r(162)
    var a = r(86)
    var s = r(60)('IE_PROTO')
    var o = function() {}
    var u = 'prototype'
    var l = function() {
      var e = r(56)('iframe')
      var t = a.length
      var n = '<'
      var i = '>'
      var s
      e.style.display = 'none'
      r(88).appendChild(e)
      e.src = 'javascript:'
      s = e.contentWindow.document
      s.open()
      s.write(n + 'script' + i + 'document.F=Object' + n + '/script' + i)
      s.close()
      l = s.F
      while (t--) delete l[u][a[t]]
      return l()
    }
    e.exports =
      Object.create ||
      function e(t, r) {
        var a
        if (t !== null) {
          o[u] = n(t)
          a = new o()
          o[u] = null
          a[s] = t
        } else a = l()
        return r === undefined ? a : i(a, r)
      }
  },
  function(e, t, r) {
    var n = r(32)
    var i = r(17)
    var a = r(165)
    e.exports = r(23)
      ? Object.defineProperties
      : function e(t, r) {
          i(t)
          var s = a(r)
          var o = s.length
          var u = 0
          var l
          while (o > u) n.f(t, (l = s[u++]), r[l])
          return t
        }
  },
  function(e, t, r) {
    var n = r(41)
    var i = r(171)
    var a = r(60)('IE_PROTO')
    var s = Object.prototype
    e.exports =
      Object.getPrototypeOf ||
      function(e) {
        e = i(e)
        if (n(e, a)) return e[a]
        if (typeof e.constructor == 'function' && e instanceof e.constructor) {
          return e.constructor.prototype
        }
        return e instanceof Object ? s : null
      }
  },
  function(e, t, r) {
    var n = r(41)
    var i = r(62)
    var a = r(150)(false)
    var s = r(60)('IE_PROTO')
    e.exports = function(e, t) {
      var r = i(e)
      var o = 0
      var u = []
      var l
      for (l in r) if (l != s) n(r, l) && u.push(l)
      while (t.length > o)
        if (n(r, (l = t[o++]))) {
          ~a(u, l) || u.push(l)
        }
      return u
    }
  },
  function(e, t, r) {
    var n = r(164)
    var i = r(86)
    e.exports =
      Object.keys ||
      function e(t) {
        return n(t, i)
      }
  },
  function(e, t, r) {
    var n = r(24)
    e.exports = function(e, t, r) {
      for (var i in t) {
        if (r && e[i]) e[i] = t[i]
        else n(e, i, t[i])
      }
      return e
    }
  },
  function(e, t, r) {
    e.exports = r(24)
  },
  function(e, t, r) {
    'use strict'
    var n = r(8)
    var i = r(13)
    var a = r(32)
    var s = r(23)
    var o = r(10)('species')
    e.exports = function(e) {
      var t = typeof i[e] == 'function' ? i[e] : n[e]
      if (s && t && !t[o])
        a.f(t, o, {
          configurable: true,
          get: function() {
            return this
          },
        })
    }
  },
  function(e, t, r) {
    var n = r(61)
    var i = r(55)
    e.exports = function(e) {
      return function(t, r) {
        var a = String(i(t))
        var s = n(r)
        var o = a.length
        var u, l
        if (s < 0 || s >= o) return e ? '' : undefined
        u = a.charCodeAt(s)
        return u < 55296 ||
          u > 56319 ||
          s + 1 === o ||
          (l = a.charCodeAt(s + 1)) < 56320 ||
          l > 57343
          ? e
            ? a.charAt(s)
            : u
          : e
          ? a.slice(s, s + 2)
          : ((u - 55296) << 10) + (l - 56320) + 65536
      }
    }
  },
  function(e, t, r) {
    var n = r(61)
    var i = Math.max
    var a = Math.min
    e.exports = function(e, t) {
      e = n(e)
      return e < 0 ? i(e + t, 0) : a(e, t)
    }
  },
  function(e, t, r) {
    var n = r(55)
    e.exports = function(e) {
      return Object(n(e))
    }
  },
  function(e, t, r) {
    var n = r(30)
    e.exports = function(e, t) {
      if (!n(e)) return e
      var r, i
      if (t && typeof (r = e.toString) == 'function' && !n((i = r.call(e)))) return i
      if (typeof (r = e.valueOf) == 'function' && !n((i = r.call(e)))) return i
      if (!t && typeof (r = e.toString) == 'function' && !n((i = r.call(e)))) return i
      throw TypeError("Can't convert object to primitive value")
    }
  },
  function(e, t, r) {
    var n = r(8)
    var i = n.navigator
    e.exports = (i && i.userAgent) || ''
  },
  function(e, t, r) {
    var n = r(85)
    var i = r(10)('iterator')
    var a = r(31)
    e.exports = r(13).getIteratorMethod = function(e) {
      if (e != undefined) return e[i] || e['@@iterator'] || a[n(e)]
    }
  },
  function(e, t, r) {
    'use strict'
    var n = r(148)
    var i = r(159)
    var a = r(31)
    var s = r(62)
    e.exports = r(89)(
      Array,
      'Array',
      function(e, t) {
        this._t = s(e)
        this._i = 0
        this._k = t
      },
      function() {
        var e = this._t
        var t = this._k
        var r = this._i++
        if (!e || r >= e.length) {
          this._t = undefined
          return i(1)
        }
        if (t == 'keys') return i(0, r)
        if (t == 'values') return i(0, e[r])
        return i(0, [r, e[r]])
      },
      'values'
    )
    a.Arguments = a.Array
    n('keys')
    n('values')
    n('entries')
  },
  function(e, t, r) {
    var n = r(29)
    n(n.S + n.F * !r(23), 'Object', { defineProperty: r(32).f })
  },
  function(e, t) {},
  function(e, t, r) {
    'use strict'
    var n = r(57)
    var i = r(8)
    var a = r(40)
    var s = r(85)
    var o = r(29)
    var u = r(30)
    var l = r(38)
    var f = r(149)
    var d = r(151)
    var c = r(94)
    var h = r(95).set
    var p = r(160)()
    var v = r(58)
    var g = r(90)
    var m = r(173)
    var y = r(91)
    var _ = 'Promise'
    var T = i.TypeError
    var E = i.process
    var b = E && E.versions
    var S = (b && b.v8) || ''
    var w = i[_]
    var A = s(E) == 'process'
    var I = function() {}
    var C, R, D, O
    var M = (R = v.f)
    var k = !!(function() {
      try {
        var e = w.resolve(1)
        var t = ((e.constructor = {})[r(10)('species')] = function(e) {
          e(I, I)
        })
        return (
          (A || typeof PromiseRejectionEvent == 'function') &&
          e.then(I) instanceof t &&
          S.indexOf('6.6') !== 0 &&
          m.indexOf('Chrome/66') === -1
        )
      } catch (e) {}
    })()
    var P = function(e) {
      var t
      return u(e) && typeof (t = e.then) == 'function' ? t : false
    }
    var N = function(e, t) {
      if (e._n) return
      e._n = true
      var r = e._c
      p(function() {
        var n = e._v
        var i = e._s == 1
        var a = 0
        var s = function(t) {
          var r = i ? t.ok : t.fail
          var a = t.resolve
          var s = t.reject
          var o = t.domain
          var u, l, f
          try {
            if (r) {
              if (!i) {
                if (e._h == 2) F(e)
                e._h = 1
              }
              if (r === true) u = n
              else {
                if (o) o.enter()
                u = r(n)
                if (o) {
                  o.exit()
                  f = true
                }
              }
              if (u === t.promise) {
                s(T('Promise-chain cycle'))
              } else if ((l = P(u))) {
                l.call(u, a, s)
              } else a(u)
            } else s(n)
          } catch (e) {
            if (o && !f) o.exit()
            s(e)
          }
        }
        while (r.length > a) s(r[a++])
        e._c = []
        e._n = false
        if (t && !e._h) L(e)
      })
    }
    var L = function(e) {
      h.call(i, function() {
        var t = e._v
        var r = x(e)
        var n, a, s
        if (r) {
          n = g(function() {
            if (A) {
              E.emit('unhandledRejection', t, e)
            } else if ((a = i.onunhandledrejection)) {
              a({ promise: e, reason: t })
            } else if ((s = i.console) && s.error) {
              s.error('Unhandled promise rejection', t)
            }
          })
          e._h = A || x(e) ? 2 : 1
        }
        e._a = undefined
        if (r && n.e) throw n.v
      })
    }
    var x = function(e) {
      return e._h !== 1 && (e._a || e._c).length === 0
    }
    var F = function(e) {
      h.call(i, function() {
        var t
        if (A) {
          E.emit('rejectionHandled', e)
        } else if ((t = i.onrejectionhandled)) {
          t({ promise: e, reason: e._v })
        }
      })
    }
    var U = function(e) {
      var t = this
      if (t._d) return
      t._d = true
      t = t._w || t
      t._v = e
      t._s = 2
      if (!t._a) t._a = t._c.slice()
      N(t, true)
    }
    var B = function(e) {
      var t = this
      var r
      if (t._d) return
      t._d = true
      t = t._w || t
      try {
        if (t === e) throw T("Promise can't be resolved itself")
        if ((r = P(e))) {
          p(function() {
            var n = { _w: t, _d: false }
            try {
              r.call(e, a(B, n, 1), a(U, n, 1))
            } catch (e) {
              U.call(n, e)
            }
          })
        } else {
          t._v = e
          t._s = 1
          N(t, false)
        }
      } catch (e) {
        U.call({ _w: t, _d: false }, e)
      }
    }
    if (!k) {
      w = function e(t) {
        f(this, w, _, '_h')
        l(t)
        C.call(this)
        try {
          t(a(B, this, 1), a(U, this, 1))
        } catch (e) {
          U.call(this, e)
        }
      }
      C = function e(t) {
        this._c = []
        this._a = undefined
        this._s = 0
        this._d = false
        this._v = undefined
        this._h = 0
        this._n = false
      }
      C.prototype = r(166)(w.prototype, {
        then: function e(t, r) {
          var n = M(c(this, w))
          n.ok = typeof t == 'function' ? t : true
          n.fail = typeof r == 'function' && r
          n.domain = A ? E.domain : undefined
          this._c.push(n)
          if (this._a) this._a.push(n)
          if (this._s) N(this, false)
          return n.promise
        },
        catch: function(e) {
          return this.then(undefined, e)
        },
      })
      D = function() {
        var e = new C()
        this.promise = e
        this.resolve = a(B, e, 1)
        this.reject = a(U, e, 1)
      }
      v.f = M = function(e) {
        return e === w || e === O ? new D(e) : R(e)
      }
    }
    o(o.G + o.W + o.F * !k, { Promise: w })
    r(59)(w, _)
    r(168)(_)
    O = r(13)[_]
    o(o.S + o.F * !k, _, {
      reject: function e(t) {
        var r = M(this)
        var n = r.reject
        n(t)
        return r.promise
      },
    })
    o(o.S + o.F * (n || !k), _, {
      resolve: function e(t) {
        return y(n && this === O ? w : this, t)
      },
    })
    o(
      o.S +
        o.F *
          !(
            k &&
            r(158)(function(e) {
              w.all(e)['catch'](I)
            })
          ),
      _,
      {
        all: function e(t) {
          var r = this
          var n = M(r)
          var i = n.resolve
          var a = n.reject
          var s = g(function() {
            var e = []
            var n = 0
            var s = 1
            d(t, false, function(t) {
              var o = n++
              var u = false
              e.push(undefined)
              s++
              r.resolve(t).then(function(t) {
                if (u) return
                u = true
                e[o] = t
                --s || i(e)
              }, a)
            })
            --s || i(e)
          })
          if (s.e) a(s.v)
          return n.promise
        },
        race: function e(t) {
          var r = this
          var n = M(r)
          var i = n.reject
          var a = g(function() {
            d(t, false, function(e) {
              r.resolve(e).then(n.resolve, i)
            })
          })
          if (a.e) i(a.v)
          return n.promise
        },
      }
    )
  },
  function(e, t, r) {
    'use strict'
    var n = r(169)(true)
    r(89)(
      String,
      'String',
      function(e) {
        this._t = String(e)
        this._i = 0
      },
      function() {
        var e = this._t
        var t = this._i
        var r
        if (t >= e.length) return { value: undefined, done: true }
        r = n(e, t)
        this._i += r.length
        return { value: r, done: false }
      }
    )
  },
  function(e, t, r) {
    'use strict'
    var n = r(29)
    var i = r(13)
    var a = r(8)
    var s = r(94)
    var o = r(91)
    n(n.P + n.R, 'Promise', {
      finally: function(e) {
        var t = s(this, i.Promise || a.Promise)
        var r = typeof e == 'function'
        return this.then(
          r
            ? function(r) {
                return o(t, e()).then(function() {
                  return r
                })
              }
            : e,
          r
            ? function(r) {
                return o(t, e()).then(function() {
                  throw r
                })
              }
            : e
        )
      },
    })
  },
  function(e, t, r) {
    'use strict'
    var n = r(29)
    var i = r(58)
    var a = r(90)
    n(n.S, 'Promise', {
      try: function(e) {
        var t = i.f(this)
        var r = a(e)
        ;(r.e ? t.reject : t.resolve)(r.v)
        return t.promise
      },
    })
  },
  function(e, t, r) {
    r(175)
    var n = r(8)
    var i = r(24)
    var a = r(31)
    var s = r(10)('toStringTag')
    var o = (
      'CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
      'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
      'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
      'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
      'TextTrackList,TouchList'
    ).split(',')
    for (var u = 0; u < o.length; u++) {
      var l = o[u]
      var f = n[l]
      var d = f && f.prototype
      if (d && !d[s]) i(d, s, l)
      a[l] = a.Array
    }
  },
  function(e, t, r) {
    'use strict'
    var n = {}
    n.encode = function(e) {
      var t = []
      for (var r = 0; r < e.length; ++r) {
        var n = e.charCodeAt(r)
        if (n < 128) {
          t.push(n)
        } else if (n < 2048) {
          t.push(192 | (n >> 6))
          t.push(128 | (63 & n))
        } else if (n < 65536) {
          t.push(224 | (n >> 12))
          t.push(128 | (63 & (n >> 6)))
          t.push(128 | (63 & n))
        } else {
          t.push(240 | (n >> 18))
          t.push(128 | (63 & (n >> 12)))
          t.push(128 | (63 & (n >> 6)))
          t.push(128 | (63 & n))
        }
      }
      return t
    }
    n.decode = function(e) {
      var t = []
      var r = 0
      while (r < e.length) {
        var n = e[r++]
        if (n < 128) {
        } else if (n < 224) {
          n = (31 & n) << 6
          n |= 63 & e[r++]
        } else if (n < 240) {
          n = (15 & n) << 12
          n |= (63 & e[r++]) << 6
          n |= 63 & e[r++]
        } else {
          n = (7 & n) << 18
          n |= (63 & e[r++]) << 12
          n |= (63 & e[r++]) << 6
          n |= 63 & e[r++]
        }
        t.push(String.fromCharCode(n))
      }
      return t.join('')
    }
    var i = {}
    ;(function(e) {
      var t = function t(r) {
        var n = 0
        var i = []
        var a = 0 | (r.length / 3)
        while (0 < a--) {
          var s = (r[n] << 16) + (r[n + 1] << 8) + r[n + 2]
          n += 3
          i.push(e.charAt(63 & (s >> 18)))
          i.push(e.charAt(63 & (s >> 12)))
          i.push(e.charAt(63 & (s >> 6)))
          i.push(e.charAt(63 & s))
        }
        if (2 == r.length - n) {
          var s = (r[n] << 16) + (r[n + 1] << 8)
          i.push(e.charAt(63 & (s >> 18)))
          i.push(e.charAt(63 & (s >> 12)))
          i.push(e.charAt(63 & (s >> 6)))
          i.push('=')
        } else if (1 == r.length - n) {
          var s = r[n] << 16
          i.push(e.charAt(63 & (s >> 18)))
          i.push(e.charAt(63 & (s >> 12)))
          i.push('==')
        }
        return i.join('')
      }
      var r = (function() {
        var t = []
        for (var r = 0; r < e.length; ++r) {
          t[e.charCodeAt(r)] = r
        }
        t['='.charCodeAt(0)] = 0
        return t
      })()
      var o = function e(t) {
        var n = 0
        var i = []
        var a = 0 | (t.length / 4)
        while (0 < a--) {
          var s =
            (r[t.charCodeAt(n)] << 18) +
            (r[t.charCodeAt(n + 1)] << 12) +
            (r[t.charCodeAt(n + 2)] << 6) +
            r[t.charCodeAt(n + 3)]
          i.push(255 & (s >> 16))
          i.push(255 & (s >> 8))
          i.push(255 & s)
          n += 4
        }
        if (i) {
          if ('=' == t.charAt(n - 2)) {
            i.pop()
            i.pop()
          } else if ('=' == t.charAt(n - 1)) {
            i.pop()
          }
        }
        return i
      }
      var u = {}
      u.encode = function(e) {
        var t = []
        for (var r = 0; r < e.length; ++r) {
          t.push(e.charCodeAt(r))
        }
        return t
      }
      u.decode = function(e) {
        for (var t = 0; t < s.length; ++t) {
          a[t] = String.fromCharCode(a[t])
        }
        return a.join('')
      }
      i.decodeArray = function(e) {
        var t = o(e)
        return new Uint8Array(t)
      }
      i.encodeASCII = function(e) {
        var r = u.encode(e)
        return t(r)
      }
      i.decodeASCII = function(e) {
        var t = o(e)
        return u.decode(t)
      }
      i.encode = function(e) {
        var r = n.encode(e)
        return t(r)
      }
      i.decode = function(e) {
        var t = o(e)
        return n.decode(t)
      }
    })('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/')
    if (true) {
      t.decode = i.decode
      t.decodeArray = i.decodeArray
      t.encode = i.encode
      t.encodeASCII = i.encodeASCII
    }
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(185)
    var a = r(229)
    var s = n(a)
    var o = r(255)
    var u = n(o)
    var l = r(215)
    var f = n(l)
    var d = r(1)
    var c = n(d)
    dashjs.Protection = u['default']
    dashjs.MetricsReporting = s['default']
    dashjs.MediaPlayerFactory = f['default']
    dashjs.Debug = c['default']
    t['default'] = dashjs
    t.MediaPlayer = i.MediaPlayer
    t.Protection = u['default']
    t.MetricsReporting = s['default']
    t.MediaPlayerFactory = f['default']
    t.Debug = c['default']
  },
  function(e, t, r) {
    'use strict'
    ;(function(e) {
      Object.defineProperty(t, '__esModule', { value: true })
      function n(e) {
        return e && e.__esModule ? e : { default: e }
      }
      var i = r(107)
      var a = n(i)
      var s = r(0)
      var o = n(s)
      var u = r(1)
      var l = n(u)
      var f = r(100)
      var d = (typeof window !== 'undefined' && window) || e
      var c = d.dashjs
      if (!c) {
        c = d.dashjs = {}
      }
      c.MediaPlayer = a['default']
      c.FactoryMaker = o['default']
      c.Debug = l['default']
      c.Version = (0, f.getVersionString)()
      t['default'] = c
      t.MediaPlayer = a['default']
      t.FactoryMaker = o['default']
      t.Debug = l['default']
    }.call(t, r(16)))
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(42)
    var u = i(o)
    var l = (function(e) {
      s(t, e)
      function t() {
        a(this, t)
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(this)
        this.BUFFERING_COMPLETED = 'bufferingCompleted'
        this.BUFFER_CLEARED = 'bufferCleared'
        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated'
        this.BYTES_APPENDED = 'bytesAppended'
        this.BYTES_APPENDED_END_FRAGMENT = 'bytesAppendedEndFragment'
        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted'
        this.CURRENT_TRACK_CHANGED = 'currentTrackChanged'
        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted'
        this.DATA_UPDATE_STARTED = 'dataUpdateStarted'
        this.INITIALIZATION_LOADED = 'initializationLoaded'
        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded'
        this.INIT_REQUESTED = 'initRequested'
        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded'
        this.LIVE_EDGE_SEARCH_COMPLETED = 'liveEdgeSearchCompleted'
        this.LOADING_COMPLETED = 'loadingCompleted'
        this.LOADING_PROGRESS = 'loadingProgress'
        this.LOADING_DATA_PROGRESS = 'loadingDataProgress'
        this.LOADING_ABANDONED = 'loadingAborted'
        this.MANIFEST_UPDATED = 'manifestUpdated'
        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded'
        this.QUOTA_EXCEEDED = 'quotaExceeded'
        this.REPRESENTATION_UPDATED = 'representationUpdated'
        this.SEGMENTS_LOADED = 'segmentsLoaded'
        this.SERVICE_LOCATION_BLACKLIST_ADD = 'serviceLocationBlacklistAdd'
        this.SERVICE_LOCATION_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged'
        this.SOURCEBUFFER_REMOVE_COMPLETED = 'sourceBufferRemoveCompleted'
        this.STREAMS_COMPOSED = 'streamsComposed'
        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted'
        this.STREAM_COMPLETED = 'streamCompleted'
        this.TEXT_TRACKS_QUEUE_INITIALIZED = 'textTracksQueueInitialized'
        this.TIMED_TEXT_REQUESTED = 'timedTextRequested'
        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete'
        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed'
        this.VIDEO_CHUNK_RECEIVED = 'videoChunkReceived'
        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated'
        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded'
        this.XLINK_READY = 'xlinkReady'
      }
      return t
    })(u['default'])
    t['default'] = l
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(9)
    var o = n(s)
    var u = r(305)
    var l = n(u)
    var f = r(303)
    var d = n(f)
    var c = r(306)
    var h = n(c)
    var p = r(302)
    var v = n(p)
    var g = r(105)
    var m = n(g)
    var y = r(0)
    var _ = n(y)
    var T = r(98)
    var E = n(T)
    var b = r(27)
    function S() {
      var e = undefined,
        t = undefined,
        r = undefined,
        n = undefined,
        i = undefined
      function s() {
        V()
      }
      function u(e) {
        if (!e) return
        if (e.dashManifestModel) {
          t = e.dashManifestModel
        }
      }
      function f(e, t) {
        return t && e ? t.getRepresentationForQuality(e.quality) : null
      }
      function c(e) {
        if (!e || !e.streamInfo || e.streamInfo.id === undefined || !n[e.streamInfo.id]) return null
        return n[e.streamInfo.id][e.index]
      }
      function p(e, t) {
        var r = t.length
        for (var n = 0; n < r; n++) {
          var i = t[n]
          if (e.id === i.id) return i
        }
        return null
      }
      function g(e) {
        var r = new l['default']()
        var n =
          e.adaptation.period.mpd.manifest.Period_asArray[e.adaptation.period.index]
            .AdaptationSet_asArray[e.adaptation.index]
        var i = t.getRepresentationFor(e.index, n)
        r.id = e.id
        r.quality = e.index
        r.bandwidth = t.getBandwidth(i)
        r.DVRWindow = e.segmentAvailabilityRange
        r.fragmentDuration =
          e.segmentDuration || (e.segments && e.segments.length > 0 ? e.segments[0].duration : NaN)
        r.MSETimeOffset = e.MSETimeOffset
        r.useCalculatedLiveEdgeTime = e.useCalculatedLiveEdgeTime
        r.mediaInfo = y(e.adaptation)
        return r
      }
      function y(e) {
        var r = new d['default']()
        var n = e.period.mpd.manifest.Period_asArray[e.period.index].AdaptationSet_asArray[e.index]
        var i = undefined
        r.id = e.id
        r.index = e.index
        r.type = e.type
        r.streamInfo = S(e.period)
        r.representationCount = t.getRepresentationCount(n)
        r.labels = t.getLabelsForAdaptation(n)
        r.lang = t.getLanguageForAdaptation(n)
        i = t.getViewpointForAdaptation(n)
        r.viewpoint = i ? i.value : undefined
        r.accessibility = t.getAccessibilityForAdaptation(n).map(function(e) {
          var t = e.value
          var n = t
          if (
            e.schemeIdUri &&
            e.schemeIdUri.search('cea-608') >= 0 &&
            typeof E['default'] !== 'undefined'
          ) {
            if (t) {
              n = 'cea-608:' + t
            } else {
              n = 'cea-608'
            }
            r.embeddedCaptions = true
          }
          return n
        })
        r.audioChannelConfiguration = t
          .getAudioChannelConfigurationForAdaptation(n)
          .map(function(e) {
            return e.value
          })
        r.roles = t.getRolesForAdaptation(n).map(function(e) {
          return e.value
        })
        r.codec = t.getCodec(n)
        r.mimeType = t.getMimeType(n)
        r.contentProtection = t.getContentProtectionData(n)
        r.bitrateList = t.getBitrateListForAdaptation(n)
        if (r.contentProtection) {
          r.contentProtection.forEach(function(e) {
            e.KID = t.getKID(e)
          })
        }
        r.isText = t.getIsTextTrack(r.mimeType)
        return r
      }
      function _(e, t, r) {
        e.id = t
        e.index = 100 + parseInt(t.substring(2, 3))
        e.type = a['default'].EMBEDDED_TEXT
        e.codec = 'cea-608-in-SEI'
        e.isText = true
        e.isEmbedded = true
        e.lang = r
        e.roles = ['caption']
      }
      function T(e) {
        e.type = a['default'].IMAGE
      }
      function S(e) {
        var t = new h['default']()
        var r = 1
        t.id = e.id
        t.index = e.index
        t.start = e.start
        t.duration = e.duration
        t.manifestInfo = w(e.mpd)
        t.isLast =
          e.mpd.manifest.Period_asArray.length === 1 ||
          Math.abs(t.start + t.duration - t.manifestInfo.duration) < r
        return t
      }
      function w(e) {
        var r = new v['default']()
        r.DVRWindowSize = e.timeShiftBufferDepth
        r.loadedTime = e.manifest.loadedTime
        r.availableFrom = e.availabilityStartTime
        r.minBufferTime = e.manifest.minBufferTime
        r.maxFragmentDuration = e.maxSegmentDuration
        r.duration = t.getDuration(e.manifest)
        r.isDynamic = t.getIsDynamic(e.manifest)
        return r
      }
      function A(e, i) {
        if (r.length === 0) {
          return null
        }
        var a = r[0].mpd.manifest
        var s = C(a, e.index, i, e)
        if (!s) return null
        var o = p(e, r)
        var u = o.id
        var l = t.getIndexForAdaptation(s, a, e.index)
        n[u] = n[u] || t.getAdaptationsForPeriod(o)
        return y(n[u][l])
      }
      function I(e) {
        return t.getRolesForAdaptation(e).filter(function(e) {
          return e.value === o['default'].MAIN
        })[0]
      }
      function C(e, r, n, a) {
        var s = t.getAdaptationsForType(e, r, n)
        if (!s || s.length === 0) return null
        if (s.length > 1 && a) {
          var o = R(a, n)
          if (i[a.id] && i[a.id][n]) {
            for (var u = 0, l = s.length; u < l; u++) {
              if (i[a.id][n].isMediaInfoEqual(o[u])) {
                return s[u]
              }
            }
          }
          for (var u = 0, l = s.length; u < l; u++) {
            if (I(s[u])) {
              return s[u]
            }
          }
        }
        return s[0]
      }
      function R(e, i, s) {
        var o = r
        var u = s
        var l = []
        var f = undefined,
          d = undefined,
          c = undefined,
          h = undefined,
          v = undefined,
          g = undefined
        if (u) {
          D()
          var m = t.getMpd(u)
          o = t.getRegularPeriods(m)
        } else {
          if (r.length > 0) {
            u = r[0].mpd.manifest
          } else {
            return l
          }
        }
        var E = p(e, o)
        var b = E.id
        var S = t.getAdaptationsForType(
          u,
          e.index,
          i !== a['default'].EMBEDDED_TEXT ? i : a['default'].VIDEO
        )
        if (!S) return l
        n[b] = n[b] || t.getAdaptationsForPeriod(E)
        for (h = 0, g = S.length; h < g; h++) {
          f = S[h]
          c = t.getIndexForAdaptation(f, u, e.index)
          d = y(n[b][c])
          if (i === a['default'].EMBEDDED_TEXT) {
            var w = d.accessibility.length
            for (v = 0; v < w; v++) {
              if (!d) {
                continue
              }
              var A = d.accessibility[v]
              if (A.indexOf('cea-608:') === 0) {
                var I = A.substring(8)
                var C = I.split(';')
                if (C[0].substring(0, 2) === 'CC') {
                  for (v = 0; v < C.length; v++) {
                    if (!d) {
                      d = y.call(this, n[b][c])
                    }
                    _(d, C[v].substring(0, 3), C[v].substring(4))
                    l.push(d)
                    d = null
                  }
                } else {
                  for (v = 0; v < C.length; v++) {
                    if (!d) {
                      d = y.call(this, n[b][c])
                    }
                    _(d, 'CC' + (v + 1), C[v])
                    l.push(d)
                    d = null
                  }
                }
              } else if (A.indexOf('cea-608') === 0) {
                _(d, a['default'].CC1, 'eng')
                l.push(d)
                d = null
              }
            }
          } else if (i === a['default'].IMAGE) {
            T(d)
            l.push(d)
            d = null
          } else if (d) {
            l.push(d)
          }
        }
        return l
      }
      function D() {
        if (!t || !t.hasOwnProperty('getMpd') || !t.hasOwnProperty('getRegularPeriods')) {
          throw new Error('setConfig function has to be called previously')
        }
      }
      function O(e) {
        if (!e) return null
        D()
        var i = t.getMpd(e)
        r = t.getRegularPeriods(i)
        n = {}
      }
      function M(e, n) {
        var i = []
        var a = r
        if (e) {
          D()
          var s = t.getMpd(e)
          a = t.getRegularPeriods(s)
        }
        if (!n) {
          n = a.length
        }
        for (var o = 0; o < n; o++) {
          i.push(S(a[o]))
        }
        return i
      }
      function k(e) {
        if (
          !e ||
          !e.hasOwnProperty('getRepresentationController') ||
          !e.hasOwnProperty('getIndexHandler') ||
          !e.hasOwnProperty('getMediaInfo') ||
          !e.hasOwnProperty('getType') ||
          !e.hasOwnProperty('getStreamInfo')
        ) {
          throw new Error('streamProcessor parameter is missing or malformed!')
        }
      }
      function P(e) {
        if (
          !e ||
          !e.hasOwnProperty('getRepresentationForQuality') ||
          !e.hasOwnProperty('getCurrentRepresentation')
        ) {
          throw new Error('representationController parameter is missing or malformed!')
        }
      }
      function N(e, t) {
        var r = undefined,
          n = undefined,
          i = undefined
        k(e)
        ;(0, b.checkInteger)(t)
        r = e.getRepresentationController()
        i = e.getIndexHandler()
        n = r ? r.getRepresentationForQuality(t) : null
        return i ? i.getInitRequest(n) : null
      }
      function L(e, t, r, n) {
        var i = undefined,
          a = undefined,
          s = undefined
        var o = null
        k(e)
        i = e.getRepresentationController()
        a = f(t, i)
        s = e.getIndexHandler()
        if (s) {
          if (r !== undefined && n !== undefined) {
            o = s.getSegmentRequestForTime(a, r, n)
          } else {
            o = s.getNextSegmentRequest(a)
          }
        }
        return o
      }
      function x(e) {
        k(e)
        var t = e.getIndexHandler()
        return t ? t.getCurrentTime() : NaN
      }
      function F(e, t) {
        k(e)
        var r = e.getIndexHandler()
        if (r) {
          r.setCurrentTime(t)
        }
      }
      function U(e) {
        k(e)
        var t = e.getIndexHandler()
        if (t) {
          t.resetIndex()
        }
      }
      function B(e) {
        k(e)
        var n = p(e.getStreamInfo(), r)
        var i = e.getMediaInfo()
        var a = c(i)
        var s = e.getType()
        var o = undefined,
          u = undefined
        o = i ? i.id : null
        if (r.length > 0) {
          u = o
            ? t.getAdaptationForId(o, r[0].mpd.manifest, n.index)
            : t.getAdaptationForIndex(i.index, r[0].mpd.manifest, n.index)
          e.getRepresentationController().updateData(u, a, s)
        }
      }
      function j(e, t) {
        P(e)
        var r = undefined
        if (t !== undefined) {
          ;(0, b.checkInteger)(t)
          r = e.getRepresentationForQuality(t)
        } else {
          r = e.getCurrentRepresentation()
        }
        return r ? g(r) : null
      }
      function G(e, t, r) {
        if (!e || !t) {
          return null
        }
        var n = new m['default']()
        var i = e.scheme_id_uri
        var a = e.value
        var s = e.timescale
        var o = e.presentation_time_delta
        var u = e.event_duration
        var l = e.id
        var f = e.message_data
        var d = r * s + o
        if (!t[i + '/' + a]) return null
        n.eventStream = t[i + '/' + a]
        n.eventStream.value = a
        n.eventStream.timescale = s
        n.duration = u
        n.id = l
        n.presentationTime = d
        n.messageData = f
        n.presentationTimeDelta = o
        return n
      }
      function q(e, n) {
        var i = []
        if (r.length === 0) {
          return i
        }
        var a = r[0].mpd.manifest
        if (e instanceof h['default']) {
          i = t.getEventsForPeriod(p(e, r))
        } else if (e instanceof d['default']) {
          i = t.getEventStreamForAdaptationSet(a, c(e))
        } else if (e instanceof l['default']) {
          i = t.getEventStreamForRepresentation(a, f(e, n.getRepresentationController()))
        }
        return i
      }
      function H(e, t, r) {
        i[e] = i[e] || {}
        i[e][t] = i[e][t] || {}
        i[e][t] = r
      }
      function V() {
        r = []
        n = {}
        i = {}
      }
      e = {
        convertDataToRepresentationInfo: g,
        getDataForMedia: c,
        getStreamsInfo: M,
        getMediaInfoForType: A,
        getAllMediaInfoForType: R,
        getRepresentationInfo: j,
        getAdaptationForType: C,
        updateData: B,
        getInitRequest: N,
        getFragmentRequest: L,
        getIndexHandlerTime: x,
        setIndexHandlerTime: F,
        getEventsFor: q,
        getEvent: G,
        setConfig: u,
        updatePeriods: O,
        reset: V,
        resetIndexHandler: U,
        setCurrentMediaInfo: H,
      }
      s()
      return e
    }
    S.__dashjs_factory_name = 'DashAdapter'
    t['default'] = _['default'].getSingletonFactory(S)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(9)
    var o = n(s)
    var u = r(21)
    var l = n(u)
    var f = r(5)
    var d = n(f)
    var c = r(7)
    var h = r(4)
    var p = n(h)
    var v = r(2)
    var g = n(v)
    var m = r(6)
    var y = n(m)
    var _ = r(0)
    var T = n(_)
    var E = r(1)
    var b = n(E)
    var S = r(15)
    var w = n(S)
    var A = r(63)
    var I = n(A)
    var C = r(18)
    var R = r(204)
    var D = n(R)
    var O = r(102)
    var M = n(O)
    var k = r(190)
    var P = n(k)
    function N(e) {
      e = e || {}
      var t = this.context
      var r = (0, g['default'])(t).getInstance()
      var n = (0, w['default'])(t).getInstance()
      var i = undefined
      var s = e.timelineConverter
      var u = e.dashMetrics
      var f = e.metricsModel
      var h = e.mediaPlayerModel
      var v = e.errHandler
      var m = e.baseURLController
      var _ = undefined,
        T = undefined,
        E = undefined,
        S = undefined,
        A = undefined,
        R = undefined,
        O = undefined
      function k() {
        T = (0, b['default'])(t)
          .getInstance()
          .getLogger(_)
        H()
        i = N(e.mimeType) ? (0, P['default'])(t).getInstance() : (0, M['default'])(t).getInstance()
        i.setConfig({ baseURLController: m, metricsModel: f, mediaPlayerModel: h, errHandler: v })
        r.on(p['default'].INITIALIZATION_LOADED, ne, _)
        r.on(p['default'].SEGMENTS_LOADED, ie, _)
      }
      function N(e) {
        var t = e.split('/')[1]
        return 'webm' === t.toLowerCase()
      }
      function L(r) {
        R = r
        i.initialize()
        O = (0, D['default'])(t).create(e, F())
      }
      function x() {
        return R ? R.getType() : null
      }
      function F() {
        var e = R ? R.getStreamInfo() : null
        return e ? e.manifestInfo.isDynamic : null
      }
      function U() {
        return R ? R.getMediaInfo() : null
      }
      function B() {
        return R
      }
      function j(e) {
        A = e
      }
      function G() {
        return A
      }
      function q() {
        E = -1
      }
      function H() {
        q()
        A = 0
        S = null
        R = null
        O = null
      }
      function V() {
        H()
        r.off(p['default'].INITIALIZATION_LOADED, ne, _)
        r.off(p['default'].SEGMENTS_LOADED, ie, _)
      }
      function K(e, t, r) {
        var i = m.resolve(r.path)
        var a = undefined,
          s = undefined
        if (!i || t === i.url || !n.isRelative(t)) {
          a = t
        } else {
          a = i.url
          s = i.serviceLocation
          if (t) {
            a = n.resolve(t, a)
          }
        }
        if (n.isRelative(a)) {
          return false
        }
        e.url = a
        e.serviceLocation = s
        return true
      }
      function Y(e, t) {
        var r = new l['default']()
        var n = e.adaptation.period
        var i = n.start
        var a = F()
        r.mediaType = t
        r.type = c.HTTPRequest.INIT_SEGMENT_TYPE
        r.range = e.range
        r.availabilityStartTime = s.calcAvailabilityStartTimeFromPresentationTime(i, n.mpd, a)
        r.availabilityEndTime = s.calcAvailabilityEndTimeFromPresentationTime(
          i + n.duration,
          n.mpd,
          a
        )
        r.quality = e.index
        r.mediaInfo = U()
        r.representationId = e.id
        if (K(r, e.initialization, e)) {
          return r
        }
      }
      function W(e) {
        if (!e) return null
        var t = Y(e, x())
        return t
      }
      function z(e) {
        var t = false
        var r = F()
        if (!r && E === e.availableSegmentsNumber) {
          t = true
        } else {
          var n = (0, C.getSegmentByIndex)(E, e)
          if (n) {
            var i = parseFloat((n.presentationStartTime - e.adaptation.period.start).toFixed(5))
            var a = e.adaptation.period.duration
            T.debug(e.segmentInfoType + ': ' + i + ' / ' + a)
            t = e.segmentInfoType === o['default'].SEGMENT_TIMELINE && r ? false : i >= a
          } else {
            T.debug('isMediaFinished - no segment found')
          }
        }
        return t
      }
      function X(e) {
        O.getSegments(e, S, E, $)
      }
      function $(e, t) {
        e.segments = t
        if (t && t.length > 0) {
          if (F()) {
            var r = t[t.length - 1]
            var n = r.presentationStartTime
            var i = f.getMetricsFor(a['default'].STREAM)
            s.setExpectedLiveEdge(n)
            f.updateManifestUpdateInfo(u.getCurrentManifestUpdate(i), { presentationStartTime: n })
          }
        }
      }
      function Q(e) {
        if (!e) {
          throw new Error('no representation')
        }
        e.segments = null
        X(e)
      }
      function J(e, t) {
        var n = I['default'].hasInitialization(e)
        var a = I['default'].hasSegments(e)
        var o = undefined
        if (!e.segmentDuration && !e.segments) {
          Q(e)
        }
        e.segmentAvailabilityRange = s.calcSegmentAvailabilityRange(e, F())
        if (
          e.segmentAvailabilityRange.end < e.segmentAvailabilityRange.start &&
          !e.useCalculatedLiveEdgeTime
        ) {
          o = new d['default'](
            y['default'].SEGMENTS_UNAVAILABLE_ERROR_CODE,
            y['default'].SEGMENTS_UNAVAILABLE_ERROR_MESSAGE,
            { availabilityDelay: e.segmentAvailabilityRange.start - e.segmentAvailabilityRange.end }
          )
          r.trigger(p['default'].REPRESENTATION_UPDATED, {
            sender: this,
            representation: e,
            error: o,
          })
          return
        }
        if (!t) {
          q()
        }
        if (e.segmentDuration) {
          Q(e)
        }
        if (!n) {
          i.loadInitialization(e)
        }
        if (!a) {
          i.loadSegments(e, x(), e.indexRange)
        }
        if (n && a) {
          r.trigger(p['default'].REPRESENTATION_UPDATED, { sender: this, representation: e })
        }
      }
      function Z(e, t, r) {
        var n = t.segments
        var i = n ? n.length : null
        var a = -1
        var s = undefined,
          o = undefined,
          u = undefined,
          l = undefined,
          f = undefined
        if (n && i > 0) {
          r = r === undefined || r === null ? h.getSegmentOverlapToleranceTime() : r
          for (f = 0; f < i; f++) {
            o = n[f]
            u = o.presentationStartTime
            l = o.duration
            s = r === undefined || r === null ? l / 2 : r
            if (e + s >= u && e - s < u + l) {
              a = o.availabilityIdx
              break
            }
          }
        }
        return a
      }
      function ee(e) {
        if (e === null || e === undefined) {
          return null
        }
        var t = new l['default']()
        var r = e.representation
        var n =
          r.adaptation.period.mpd.manifest.Period_asArray[r.adaptation.period.index]
            .AdaptationSet_asArray[r.adaptation.index].Representation_asArray[r.index].bandwidth
        var i = e.media
        i = (0, C.replaceTokenForTemplate)(i, 'Number', e.replacementNumber)
        i = (0, C.replaceTokenForTemplate)(i, 'Time', e.replacementTime)
        i = (0, C.replaceTokenForTemplate)(i, 'Bandwidth', n)
        i = (0, C.replaceIDForTemplate)(i, r.id)
        i = (0, C.unescapeDollarsInTemplate)(i)
        t.mediaType = x()
        t.type = c.HTTPRequest.MEDIA_SEGMENT_TYPE
        t.range = e.mediaRange
        t.startTime = e.presentationStartTime
        t.duration = e.duration
        t.timescale = r.timescale
        t.availabilityStartTime = e.availabilityStartTime
        t.availabilityEndTime = e.availabilityEndTime
        t.wallStartTime = e.wallStartTime
        t.quality = r.index
        t.index = e.availabilityIdx
        t.mediaInfo = U()
        t.adaptationIndex = r.adaptation.index
        t.representationId = r.id
        if (K(t, i, r)) {
          return t
        }
      }
      function te(e, t, r) {
        var n = undefined,
          i = undefined,
          a = undefined
        if (!e) {
          return null
        }
        var s = x()
        var u = E
        var f = r ? r.keepIdx : false
        var d = r ? r.timeThreshold : null
        var c = r && r.ignoreIsFinished ? true : false
        if (S !== t) {
          S = t
          T.debug('Getting the request for ' + s + ' time : ' + t)
        }
        X(e)
        E = Z(t, e, d)
        if (E < 0) {
          X(e)
          E = Z(t, e, d)
        }
        if (E >= 0) {
          T.debug('Index for ' + s + ' time ' + t + ' is ' + E)
        }
        a = !c ? z(e) : false
        if (a) {
          n = new l['default']()
          n.action = l['default'].ACTION_COMPLETE
          n.index = E
          n.mediaType = s
          n.mediaInfo = U()
          T.debug('Signal complete in getSegmentRequestForTime -', s)
        } else {
          i = (0, C.getSegmentByIndex)(E, e)
          n = ee(i)
        }
        if (f && u >= 0) {
          E = e.segmentInfoType === o['default'].SEGMENT_TIMELINE && F() ? E : u
        }
        return n
      }
      function re(e) {
        var t = undefined,
          r = undefined,
          n = undefined
        if (!e || E === -1) {
          return null
        }
        var i = x()
        var a = F()
        S = null
        E++
        T.debug('Getting the next request at index: ' + E + ', type: ' + i)
        var s = (0, C.getSegmentByIndex)(E, e)
        if (!s && a) {
          T.debug('No segment found at index: ' + E + '. Wait for next loop')
          X(e)
          E--
          return null
        }
        n = z(e)
        if (n) {
          t = new l['default']()
          t.action = l['default'].ACTION_COMPLETE
          t.index = E
          t.mediaType = i
          t.mediaInfo = U()
          T.debug('Signal complete -', i)
        } else {
          X(e)
          r = (0, C.getSegmentByIndex)(E, e)
          t = ee(r)
          if (!r && a) {
            E--
          }
        }
        return t
      }
      function ne(e) {
        var t = e.representation
        if (!t.segments) return
        r.trigger(p['default'].REPRESENTATION_UPDATED, { sender: this, representation: t })
      }
      function ie(e) {
        if (e.error || x() !== e.mediaType) return
        var t = e.segments
        var n = e.representation
        var i = []
        var a = 0
        var o = undefined,
          u = undefined,
          l = undefined,
          f = undefined
        for (o = 0, u = t.length; o < u; o++) {
          l = t[o]
          f = (0, C.getTimeBasedSegment)(
            s,
            F(),
            n,
            l.startTime,
            l.duration,
            l.timescale,
            l.media,
            l.mediaRange,
            a
          )
          i.push(f)
          f = null
          a++
        }
        n.segmentAvailabilityRange = {
          start: i[0].presentationStartTime,
          end: i[u - 1].presentationStartTime,
        }
        n.availableSegmentsNumber = u
        $(n, i)
        if (!I['default'].hasInitialization(n)) return
        r.trigger(p['default'].REPRESENTATION_UPDATED, { sender: this, representation: n })
      }
      _ = {
        initialize: L,
        getStreamProcessor: B,
        getInitRequest: W,
        getSegmentRequestForTime: te,
        getNextSegmentRequest: re,
        updateRepresentation: J,
        updateSegmentList: Q,
        setCurrentTime: j,
        getCurrentTime: G,
        reset: V,
        resetIndex: q,
      }
      k()
      return _
    }
    N.__dashjs_factory_name = 'DashHandler'
    t['default'] = T['default'].getClassFactory(N)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(7)
    var a = r(0)
    var s = n(a)
    var o = r(25)
    var u = n(o)
    var l = r(203)
    var f = n(l)
    function d(e) {
      e = e || {}
      var t = undefined
      var r = e.dashManifestModel
      var n = e.manifestModel
      function a(e) {
        var t = n.getValue()
        if (!t) {
          return -1
        }
        return t.Period_asArray[e]
      }
      function s(e, t) {
        var r = undefined
        var n = a(t)
        r = I(n, e)
        if (r === null) {
          return null
        }
        return r.bandwidth
      }
      function o(e, t) {
        var r = a(t)
        return A(r, e)
      }
      function l(e, t) {
        var r = a(t)
        return R(r, e)
      }
      function d(e) {
        return m(e, u['default'].TRACK_SWITCH)
      }
      function c(e) {
        return m(e, u['default'].BUFFER_LEVEL)
      }
      function h(e) {
        var t = c(e)
        if (t) {
          return f['default'].round10(t.level / 1e3, -3)
        }
        return 0
      }
      function p(e) {
        return e ? e.RequestsQueue : null
      }
      function v(e) {
        if (!e) {
          return null
        }
        var t = e.HttpList
        var r = null
        var n = undefined,
          i = undefined
        if (!t || t.length <= 0) {
          return null
        }
        n = t.length
        i = n - 1
        while (i >= 0) {
          if (t[i].responsecode) {
            r = t[i]
            break
          }
          i--
        }
        return r
      }
      function g(e) {
        if (!e) {
          return []
        }
        return !!e.HttpList ? e.HttpList : []
      }
      function m(e, t) {
        if (!e) {
          return null
        }
        var r = e[t]
        if (!r || r.length <= 0) {
          return null
        }
        return r[r.length - 1]
      }
      function y(e) {
        return m(e, u['default'].DROPPED_FRAMES)
      }
      function _(e) {
        return m(e, u['default'].SCHEDULING_INFO)
      }
      function T(e) {
        return m(e, u['default'].MANIFEST_UPDATE)
      }
      function E(e) {
        return m(e, u['default'].DVR_INFO)
      }
      function b(e, t) {
        var r = {}
        var n = undefined,
          a = undefined,
          s = undefined
        n = g(e)
        for (s = n.length - 1; s >= 0; s--) {
          a = n[s]
          if (a.type === i.HTTPRequest.MPD_TYPE) {
            r = w(a._responseHeaders)
            break
          }
        }
        return r[t] === undefined ? null : r[t]
      }
      function S(e, t) {
        var r = {}
        var n = v(e)
        if (n) {
          r = w(n._responseHeaders)
        }
        return r[t] === undefined ? null : r[t]
      }
      function w(e) {
        var t = {}
        if (!e) {
          return t
        }
        var r = e.trim().split('\r\n')
        for (var n = 0, i = r.length; n < i; n++) {
          var a = r[n]
          var s = a.indexOf(': ')
          if (s > 0) {
            t[a.substring(0, s)] = a.substring(s + 2)
          }
        }
        return t
      }
      function A(e, t) {
        var r = I(e, t, true)
        if (r !== null) {
          return r
        }
        return -1
      }
      function I(e, t, r) {
        var n = undefined,
          i = undefined,
          a = undefined,
          s = undefined,
          o = undefined,
          u = undefined
        if (e) {
          i = e.AdaptationSet_asArray
          for (o = 0; o < i.length; o = o + 1) {
            n = i[o]
            s = n.Representation_asArray
            for (u = 0; u < s.length; u = u + 1) {
              a = s[u]
              if (t === a.id) {
                if (r) {
                  return u
                } else {
                  return a
                }
              }
            }
          }
        }
        return null
      }
      function C(e, t) {
        return r.getIsTypeOf(e, t)
      }
      function R(e, t) {
        var r = undefined,
          n = undefined,
          i = undefined,
          a = undefined
        if (!e || !t) return -1
        n = e.AdaptationSet_asArray
        for (a = 0; a < n.length; a = a + 1) {
          r = n[a]
          i = r.Representation_asArray
          if (C(r, t)) {
            return i.length
          }
        }
        return -1
      }
      t = {
        getBandwidthForRepresentation: s,
        getIndexForRepresentation: o,
        getMaxIndexForBufferType: l,
        getCurrentRepresentationSwitch: d,
        getLatestBufferLevelVO: c,
        getCurrentBufferLevel: h,
        getCurrentHttpRequest: v,
        getHttpRequests: g,
        getCurrentDroppedFrames: y,
        getCurrentSchedulingInfo: _,
        getCurrentDVRInfo: E,
        getCurrentManifestUpdate: T,
        getLatestFragmentRequestHeaderValueByID: S,
        getLatestMPDRequestHeaderValueByID: b,
        getRequestsQueue: p,
      }
      return t
    }
    d.__dashjs_factory_name = 'DashMetrics'
    t['default'] = s['default'].getSingletonFactory(d)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(4)
    var a = n(i)
    var s = r(2)
    var o = n(s)
    var u = r(290)
    var l = n(u)
    var f = r(3)
    var d = n(f)
    var c = r(0)
    var h = n(c)
    var p = r(1)
    var v = n(p)
    var g = r(48)
    var m = n(g)
    var y = r(64)
    var _ = n(y)
    var T = r(7)
    var E = r(21)
    var b = n(E)
    var S = r(34)
    var w = n(S)
    var A = r(5)
    var I = n(A)
    var C = r(6)
    var R = n(C)
    function D() {
      var e = this.context
      var t = (0, o['default'])(e).getInstance()
      var r = undefined,
        n = undefined,
        i = undefined,
        s = undefined,
        u = undefined,
        f = undefined,
        c = undefined,
        h = undefined,
        p = undefined
      function g() {
        n = (0, v['default'])(e)
          .getInstance()
          .getLogger(r)
        i = {
          EBML: { tag: 440786851, required: true },
          Segment: {
            tag: 408125543,
            required: true,
            SeekHead: { tag: 290298740, required: true },
            Info: {
              tag: 357149030,
              required: true,
              TimecodeScale: { tag: 2807729, required: true, parse: 'getMatroskaUint' },
              Duration: { tag: 17545, required: true, parse: 'getMatroskaFloat' },
            },
            Tracks: { tag: 374648427, required: true },
            Cues: {
              tag: 475249515,
              required: true,
              CuePoint: {
                tag: 187,
                required: true,
                CueTime: { tag: 179, required: true, parse: 'getMatroskaUint' },
                CueTrackPositions: {
                  tag: 183,
                  required: true,
                  CueTrack: { tag: 247, required: true, parse: 'getMatroskaUint' },
                  CueClusterPosition: { tag: 241, required: true, parse: 'getMatroskaUint' },
                },
              },
            },
          },
          Void: { tag: 236, required: true },
        }
      }
      function y() {
        u = (0, m['default'])(e).getInstance()
        h = (0, w['default'])(e).create({
          errHandler: s,
          metricsModel: f,
          mediaPlayerModel: c,
          requestModifier: u,
        })
      }
      function E(e) {
        if (!e.baseURLController || !e.metricsModel || !e.mediaPlayerModel || !e.errHandler) {
          throw new Error(d['default'].MISSING_CONFIG_ERROR)
        }
        p = e.baseURLController
        f = e.metricsModel
        c = e.mediaPlayerModel
        s = e.errHandler
      }
      function S(t) {
        var r = []
        var n = undefined
        var a = undefined
        var s = (0, l['default'])(e).create({ data: t })
        s.consumeTagAndSize(i.Segment.Cues)
        while (s.moreData() && s.consumeTagAndSize(i.Segment.Cues.CuePoint, true)) {
          n = {}
          n.CueTime = s.parseTag(i.Segment.Cues.CuePoint.CueTime)
          n.CueTracks = []
          while (s.moreData() && s.consumeTag(i.Segment.Cues.CuePoint.CueTrackPositions, true)) {
            var o = s.getMatroskaCodedNum()
            var u = s.getPos()
            a = {}
            a.Track = s.parseTag(i.Segment.Cues.CuePoint.CueTrackPositions.CueTrack)
            if (a.Track === 0) {
              throw new Error('Cue track cannot be 0')
            }
            a.ClusterPosition = s.parseTag(
              i.Segment.Cues.CuePoint.CueTrackPositions.CueClusterPosition
            )
            n.CueTracks.push(a)
            s.setPos(u + o)
          }
          if (n.CueTracks.length === 0) {
            throw new Error('Mandatory cuetrack not found')
          }
          r.push(n)
        }
        if (r.length === 0) {
          throw new Error('mandatory cuepoint not found')
        }
        return r
      }
      function A(e, t, r, i) {
        var a = undefined
        var s = undefined
        var o = undefined
        var u = undefined
        var l = undefined
        var f = undefined
        var d = undefined
        var c = undefined
        s = S(e)
        o = []
        for (l = 0, f = s.length; l < f; l += 1) {
          u = new _['default']()
          a = 0
          if (l < s.length - 1) {
            a = s[l + 1].CueTime - s[l].CueTime
          } else {
            a = i - s[l].CueTime
          }
          u.duration = a
          u.startTime = s[l].CueTime
          u.timescale = 1e3
          d = s[l].CueTracks[0].ClusterPosition + t
          if (l < s.length - 1) {
            c = s[l + 1].CueTracks[0].ClusterPosition + t - 1
          } else {
            c = r - 1
          }
          u.mediaRange = d + '-' + c
          o.push(u)
        }
        n.debug('Parsed cues: ' + o.length + ' cues.')
        return o
      }
      function C(t, r, a, s) {
        var o = (0, l['default'])(e).create({ data: t })
        var u = undefined
        var f = undefined
        var d = a.split('-')
        var c = null
        var p = { url: r, range: { start: parseFloat(d[0]), end: parseFloat(d[1]) }, request: c }
        var v = undefined
        var g = undefined
        n.debug('Parse EBML header: ' + p.url)
        o.skipOverElement(i.EBML)
        o.consumeTag(i.Segment)
        v = o.getMatroskaCodedNum()
        v += o.getPos()
        g = o.getPos()
        while (o.moreData() && !o.consumeTagAndSize(i.Segment.Info, true)) {
          if (
            !(
              o.skipOverElement(i.Segment.SeekHead, true) ||
              o.skipOverElement(i.Segment.Tracks, true) ||
              o.skipOverElement(i.Segment.Cues, true) ||
              o.skipOverElement(i.Void, true)
            )
          ) {
            throw new Error('no valid top level element found')
          }
        }
        while (u === undefined) {
          var m = o.getMatroskaCodedNum(true)
          var y = o.getMatroskaCodedNum()
          switch (m) {
            case i.Segment.Info.Duration.tag:
              u = o[i.Segment.Info.Duration.parse](y)
              break
            default:
              o.setPos(o.getPos() + y)
              break
          }
        }
        c = P(p)
        var _ = function e(t) {
          f = A(t, g, v, u)
          s(f)
        }
        var T = function e() {
          n.error('Download Error: Cues ' + p.url)
          s(null)
        }
        h.load({ request: c, success: _, error: T })
        n.debug('Perform cues load: ' + p.url + ' bytes=' + p.range.start + '-' + p.range.end)
      }
      function D() {
        if (!p || !p.hasOwnProperty('resolve')) {
          throw new Error('setConfig function has to be called previously')
        }
      }
      function O(e, r) {
        D()
        var i = null
        var s = p.resolve(e.path)
        var o = s ? s.url : undefined
        var u = e.range.split('-')
        var l = r || {
          range: { start: parseFloat(u[0]), end: parseFloat(u[1]) },
          request: i,
          url: o,
          init: true,
        }
        n.info('Start loading initialization.')
        i = P(l)
        var f = function r() {
          t.trigger(a['default'].INITIALIZATION_LOADED, { representation: e })
        }
        var d = function r() {
          t.trigger(a['default'].INITIALIZATION_LOADED, { representation: e })
        }
        h.load({ request: i, success: f, error: d })
        n.debug('Perform init load: ' + l.url)
      }
      function M(e, t, r, i) {
        D()
        var a = null
        var s = p.resolve(e.path)
        var o = s ? s.url : undefined
        var u = 8192
        var l = {
          bytesLoaded: 0,
          bytesToLoad: u,
          range: { start: 0, end: u },
          request: a,
          url: o,
          init: false,
        }
        i = !i ? k : i
        a = P(l)
        n.debug('Parsing ebml header')
        var f = function n(a) {
          C(a, o, r, function(r) {
            i(r, e, t)
          })
        }
        var d = function r() {
          i(null, e, t)
        }
        h.load({ request: a, success: f, error: d })
      }
      function k(e, r, n) {
        if (e) {
          t.trigger(a['default'].SEGMENTS_LOADED, { segments: e, representation: r, mediaType: n })
        } else {
          t.trigger(a['default'].SEGMENTS_LOADED, {
            segments: null,
            representation: r,
            mediaType: n,
            error: new I['default'](
              R['default'].SEGMENT_BASE_LOADER_ERROR_CODE,
              R['default'].SEGMENT_BASE_LOADER_ERROR_MESSAGE
            ),
          })
        }
      }
      function P(e) {
        var t = new b['default']()
        t.type = e.init ? T.HTTPRequest.INIT_SEGMENT_TYPE : T.HTTPRequest.MEDIA_SEGMENT_TYPE
        t.url = e.url
        t.range = e.range.start + '-' + e.range.end
        return t
      }
      function N() {
        s = null
        u = null
      }
      r = { setConfig: E, initialize: y, loadInitialization: O, loadSegments: M, reset: N }
      g()
      return r
    }
    D.__dashjs_factory_name = 'WebmSegmentBaseLoader'
    t['default'] = h['default'].getSingletonFactory(D)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(6)
    var o = n(s)
    var u = r(9)
    var l = n(u)
    var f = r(5)
    var d = n(f)
    var c = r(2)
    var h = n(c)
    var p = r(4)
    var v = n(p)
    var g = r(0)
    var m = n(g)
    var y = r(63)
    var _ = n(y)
    function T() {
      var e = this.context
      var t = (0, h['default'])(e).getInstance()
      var r = undefined,
        n = undefined,
        i = undefined,
        s = undefined,
        u = undefined,
        f = undefined,
        c = undefined,
        p = undefined,
        g = undefined,
        m = undefined,
        y = undefined,
        T = undefined,
        E = undefined,
        b = undefined,
        S = undefined,
        w = undefined
      function A() {
        P()
        t.on(v['default'].QUALITY_CHANGE_REQUESTED, z, r)
        t.on(v['default'].REPRESENTATION_UPDATED, K, r)
        t.on(v['default'].WALLCLOCK_TIME_UPDATED, Y, r)
        t.on(v['default'].BUFFER_LEVEL_UPDATED, W, r)
        t.on(v['default'].MANIFEST_VALIDITY_CHANGED, X, r)
      }
      function I(e) {
        if (e.abrController) {
          c = e.abrController
        }
        if (e.domStorage) {
          y = e.domStorage
        }
        if (e.metricsModel) {
          m = e.metricsModel
        }
        if (e.dashMetrics) {
          b = e.dashMetrics
        }
        if (e.dashManifestModel) {
          E = e.dashManifestModel
        }
        if (e.playbackController) {
          g = e.playbackController
        }
        if (e.timelineConverter) {
          T = e.timelineConverter
        }
        if (e.manifestModel) {
          w = e.manifestModel
        }
        if (e.streamProcessor) {
          S = e.streamProcessor
        }
      }
      function C() {
        p = S.getIndexHandler()
      }
      function R() {
        return S
      }
      function D() {
        return n
      }
      function O() {
        return i
      }
      function M() {
        return s
      }
      function k() {
        return f
      }
      function P() {
        n = null
        i = -1
        s = true
        u = []
        c = null
        g = null
        m = null
        y = null
        T = null
        E = null
        b = null
      }
      function N() {
        t.off(v['default'].QUALITY_CHANGE_REQUESTED, z, r)
        t.off(v['default'].REPRESENTATION_UPDATED, K, r)
        t.off(v['default'].WALLCLOCK_TIME_UPDATED, Y, r)
        t.off(v['default'].BUFFER_LEVEL_UPDATED, W, r)
        t.off(v['default'].MANIFEST_VALIDITY_CHANGED, X, r)
        P()
      }
      function L(e, r, i) {
        var o = S.getStreamInfo()
        var l = c.getTopQualityIndexFor(i, o.id)
        var d = c.getMinAllowedIndexFor(i)
        var h = undefined,
          g = undefined
        var m = null
        s = true
        t.trigger(v['default'].DATA_UPDATE_STARTED, { sender: this })
        u = G(r)
        if ((n === null || n.id != e.id) && i !== a['default'].FRAGMENTED_TEXT) {
          g = c.getThroughputHistory().getAverageThroughput(i)
          m = g || c.getInitialBitrateFor(i, o)
          h = c.getQualityForBitrate(S.getMediaInfo(), m)
        } else {
          h = c.getQualityFor(i, o)
        }
        if (d !== undefined && h < d) {
          h = d
        }
        if (h > l) {
          h = l
        }
        f = U(h)
        n = e
        if (
          i !== a['default'].VIDEO &&
          i !== a['default'].AUDIO &&
          i !== a['default'].FRAGMENTED_TEXT
        ) {
          s = false
          t.trigger(v['default'].DATA_UPDATE_COMPLETED, {
            sender: this,
            data: n,
            currentRepresentation: f,
          })
          return
        }
        for (var y = 0; y < u.length; y++) {
          p.updateRepresentation(u[y], true)
        }
      }
      function x() {
        var e = new Date()
        var t = k()
        var r = g.getTime() * 1e3
        m.addRepresentationSwitch(t.adaptation.type, e, r, t.id)
      }
      function F() {
        var e = S.getStreamInfo()
        var t = e ? e.manifestInfo : null
        var r = t ? t.isDynamic : null
        var n = T.calcSegmentAvailabilityRange(f, r)
        m.addDVRInfo(S.getType(), g.getTime(), t, n)
      }
      function U(e) {
        return e === null || e === undefined || e >= u.length ? null : u[e]
      }
      function B(e) {
        return u.indexOf(e)
      }
      function j() {
        for (var e = 0, t = u.length; e < t; e++) {
          var r = u[e].segmentInfoType
          if (
            u[e].segmentAvailabilityRange === null ||
            !_['default'].hasInitialization(u[e]) ||
            ((r === l['default'].SEGMENT_BASE || r === l['default'].BASE_URL) && !u[e].segments)
          ) {
            return false
          }
        }
        return true
      }
      function G(e) {
        var t = undefined
        i = E.getIndexForAdaptation(n, e.period.mpd.manifest, e.period.index)
        t = E.getRepresentationsForAdaptation(e)
        return t
      }
      function q(e) {
        var t = undefined
        for (var r = 0, n = u.length; r < n; r++) {
          t = u[r]
          t.segmentAvailabilityRange = T.calcSegmentAvailabilityRange(t, e)
        }
      }
      function H() {
        u.forEach(function(e) {
          e.segmentAvailabilityRange = null
        })
      }
      function V(e) {
        var n = e
        var i = function e() {
          if (M()) return
          s = true
          t.trigger(v['default'].DATA_UPDATE_STARTED, { sender: r })
          H()
          for (var n = 0; n < u.length; n++) {
            p.updateRepresentation(u[n], true)
          }
        }
        s = false
        t.trigger(v['default'].AST_IN_FUTURE, { delay: n })
        setTimeout(i, n)
      }
      function K(e) {
        if (e.sender.getStreamProcessor() !== S || !M()) return
        var r = e.representation
        var i = m.getMetricsFor(a['default'].STREAM)
        var u = m.getMetricsFor(k().adaptation.type)
        var h = b.getCurrentManifestUpdate(i)
        var p = false
        var y = 0
        var _ = undefined,
          T = undefined,
          E = undefined
        if (
          r.adaptation.period.mpd.manifest.type === l['default'].DYNAMIC &&
          !r.adaptation.period.mpd.manifest.ignorePostponeTimePeriod
        ) {
          var w = r.segmentAvailabilityRange.end - r.segmentAvailabilityRange.start
          var A = g.computeLiveDelay(
            f.segmentDuration,
            S.getStreamInfo().manifestInfo.DVRWindowSize
          )
          y = (A - w) * 1e3
        }
        if (y > 0) {
          F()
          V(y)
          T = new d['default'](
            o['default'].SEGMENTS_UPDATE_FAILED_ERROR_CODE,
            o['default'].SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE
          )
          t.trigger(v['default'].DATA_UPDATE_COMPLETED, {
            sender: this,
            data: n,
            currentRepresentation: f,
            error: T,
          })
          return
        }
        if (h) {
          for (var I = 0; I < h.representationInfo.length; I++) {
            _ = h.representationInfo[I]
            if (_.index === r.index && _.mediaType === S.getType()) {
              p = true
              break
            }
          }
          if (!p) {
            m.addManifestUpdateRepresentationInfo(
              h,
              r.id,
              r.index,
              r.adaptation.period.index,
              S.getType(),
              r.presentationTimeOffset,
              r.startNumber,
              r.segmentInfoType
            )
          }
        }
        if (j()) {
          s = false
          c.setPlaybackQuality(S.getType(), S.getStreamInfo(), B(f))
          m.updateManifestUpdateInfo(h, { latency: f.segmentAvailabilityRange.end - g.getTime() })
          E = b.getCurrentRepresentationSwitch(u)
          if (!E) {
            x()
          }
          t.trigger(v['default'].DATA_UPDATE_COMPLETED, {
            sender: this,
            data: n,
            currentRepresentation: f,
          })
        }
      }
      function Y(e) {
        if (e.isDynamic) {
          q(e.isDynamic)
        }
      }
      function W(e) {
        if (e.sender.getStreamProcessor() !== S) return
        var t = w.getValue()
        if (!t.doNotUpdateDVRWindowOnBufferUpdated) {
          F()
        }
      }
      function z(e) {
        if (e.mediaType !== S.getType() || S.getStreamInfo().id !== e.streamInfo.id) return
        if (e.oldQuality !== e.newQuality) {
          f = U(e.newQuality)
          var t = c.getThroughputHistory().getAverageThroughput(e.mediaType)
          if (!isNaN(t)) {
            y.setSavedBitrateSettings(e.mediaType, t)
          }
          x()
        }
      }
      function X(e) {
        if (e.newDuration) {
          var t = k()
          if (t && t.adaptation.period) {
            var r = t.adaptation.period
            r.duration = e.newDuration
          }
        }
      }
      r = {
        initialize: C,
        setConfig: I,
        getData: D,
        getDataIndex: O,
        isUpdating: M,
        updateData: L,
        getStreamProcessor: R,
        getCurrentRepresentation: k,
        getRepresentationForQuality: U,
        reset: N,
      }
      A()
      return r
    }
    T.__dashjs_factory_name = 'RepresentationController'
    t['default'] = m['default'].getClassFactory(T)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(9)
    var o = n(s)
    var u = r(63)
    var l = n(u)
    var f = r(208)
    var d = n(f)
    var c = r(211)
    var h = n(c)
    var p = r(210)
    var v = n(p)
    var g = r(106)
    var m = n(g)
    var y = r(105)
    var _ = n(y)
    var T = r(104)
    var E = n(T)
    var b = r(209)
    var S = n(b)
    var w = r(117)
    var A = n(w)
    var I = r(15)
    var C = n(I)
    var R = r(0)
    var D = n(R)
    var O = r(1)
    var M = n(O)
    var k = r(5)
    var P = n(k)
    var N = r(6)
    var L = n(N)
    var x = r(115)
    function F(e) {
      e = e || {}
      var t = undefined,
        r = undefined
      var n = this.context
      var i = (0, C['default'])(n).getInstance()
      var s = e.timelineConverter
      var u = e.errHandler
      var f = e.BASE64
      var c = 'urn:dvb:dash:profile:dvb-dash:2014'
      var p =
        Number.isInteger ||
        function(e) {
          return typeof e === 'number' && isFinite(e) && Math.floor(e) === e
        }
      function g() {
        r = (0, M['default'])(n)
          .getInstance()
          .getLogger(t)
      }
      function y(e, t) {
        var r = undefined,
          n = undefined,
          i = undefined,
          s = undefined,
          u = undefined,
          l = undefined
        var f = false
        var d = false
        if (!e) {
          throw new Error('adaptation is not defined')
        }
        if (!t) {
          throw new Error('type is not defined')
        }
        if (e.hasOwnProperty('ContentComponent_asArray')) {
          s = e.ContentComponent_asArray
        }
        u = t !== a['default'].TEXT ? new RegExp(t) : new RegExp('(vtt|ttml)')
        if (
          e.Representation_asArray &&
          e.Representation_asArray.length &&
          e.Representation_asArray.length > 0
        ) {
          var c = ae(e.Representation_asArray[0])
          if (c && c.length > 0 && x.THUMBNAILS_SCHEME_ID_URIS.indexOf(c[0].schemeIdUri) >= 0) {
            return t === a['default'].IMAGE
          }
          if (e.Representation_asArray[0].hasOwnProperty(o['default'].CODECS)) {
            l = e.Representation_asArray[0].codecs
            if (l.search(a['default'].STPP) === 0 || l.search(a['default'].WVTT) === 0) {
              return t === a['default'].FRAGMENTED_TEXT
            }
          }
        }
        if (s) {
          if (s.length > 1) {
            return t === a['default'].MUXED
          } else if (s[0] && s[0].contentType === t) {
            f = true
            d = true
          }
        }
        if (e.hasOwnProperty(o['default'].MIME_TYPE)) {
          f = u.test(e.mimeType)
          d = true
        }
        if (!d) {
          r = 0
          n =
            e.Representation_asArray && e.Representation_asArray.length
              ? e.Representation_asArray.length
              : 0
          while (!d && r < n) {
            i = e.Representation_asArray[r]
            if (i.hasOwnProperty(o['default'].MIME_TYPE)) {
              f = u.test(i.mimeType)
              d = true
            }
            r++
          }
        }
        return f
      }
      function T(e) {
        return y(e, a['default'].AUDIO)
      }
      function b(e) {
        return y(e, a['default'].VIDEO)
      }
      function w(e) {
        return y(e, a['default'].FRAGMENTED_TEXT)
      }
      function I(e) {
        return y(e, a['default'].MUXED)
      }
      function R(e) {
        return y(e, a['default'].IMAGE)
      }
      function D(e) {
        return e === 'text/vtt' || e === 'application/ttml+xml'
      }
      function O(e) {
        var t = ''
        if (e && e.hasOwnProperty(o['default'].LANG)) {
          t = e.lang.replace(/[^A-Za-z0-9-]/g, '')
        }
        return t
      }
      function k(e) {
        return e && e.hasOwnProperty(o['default'].VIEWPOINT) ? e.Viewpoint : null
      }
      function N(e) {
        return e && e.hasOwnProperty(o['default'].ROLE_ASARRAY) ? e.Role_asArray : []
      }
      function F(e) {
        return e && e.hasOwnProperty(o['default'].ACCESSIBILITY_ASARRAY)
          ? e.Accessibility_asArray
          : []
      }
      function U(e) {
        return e && e.hasOwnProperty(o['default'].AUDIOCHANNELCONFIGURATION_ASARRAY)
          ? e.AudioChannelConfiguration_asArray
          : []
      }
      function B() {
        return function(e, t) {
          return e.bandwidth - t.bandwidth
        }
      }
      function j(e) {
        if (e && e.Representation_asArray !== undefined && e.Representation_asArray !== null) {
          e.Representation_asArray.sort(B())
        }
        return e
      }
      function G(e, t) {
        return e && e.Period_asArray && p(t)
          ? e.Period_asArray[t]
            ? e.Period_asArray[t].AdaptationSet_asArray
            : []
          : []
      }
      function q(e, t, r) {
        var n = G(t, r)
        var i = undefined,
          a = undefined
        for (i = 0, a = n.length; i < a; i++) {
          if (n[i].hasOwnProperty(o['default'].ID) && n[i].id === e) {
            return n[i]
          }
        }
        return null
      }
      function H(e, t, r) {
        var n = G(t, r)
        if (n.length > 0 && p(e)) {
          return n[e]
        } else {
          return null
        }
      }
      function V(e, t, r) {
        var i = G(t, r)
        var a = i.length
        if (e) {
          for (var s = 0; s < a; s++) {
            var o = (0, A['default'])(n).getInstance()
            if (o.areEqual(i[s], e)) {
              return s
            }
          }
        }
        return -1
      }
      function K(e, t, r) {
        var n = G(e, t)
        var i = undefined,
          a = undefined
        var s = []
        for (i = 0, a = n.length; i < a; i++) {
          if (y(n[i], r)) {
            s.push(j(n[i]))
          }
        }
        return s
      }
      function Y(e, t, r) {
        var n = null
        if (e && e.Representation_asArray && e.Representation_asArray.length > 0) {
          var i =
            p(t) && t >= 0 && t < e.Representation_asArray.length
              ? e.Representation_asArray[t]
              : e.Representation_asArray[0]
          if (i) {
            n = i.mimeType + ';codecs="' + i.codecs + '"'
            if (r && i.width !== undefined) {
              n += ';width="' + i.width + '";height="' + i.height + '"'
            }
          }
        }
        return n
      }
      function W(e) {
        return e && e.Representation_asArray && e.Representation_asArray.length > 0
          ? e.Representation_asArray[0].mimeType
          : null
      }
      function z(e) {
        if (!e || !e.hasOwnProperty(o['default'].CENC_DEFAULT_KID)) {
          return null
        }
        return e[o['default'].CENC_DEFAULT_KID]
      }
      function X(e) {
        if (!e.Label_asArray || !e.Label_asArray.length) {
          return []
        }
        var t = []
        for (var r = 0; r < e.Label_asArray.length; r++) {
          t.push({
            lang: e.Label_asArray[r].lang,
            text: e.Label_asArray[r].__text || e.Label_asArray[r],
          })
        }
        return t
      }
      function $(e) {
        if (
          !e ||
          !e.hasOwnProperty(o['default'].CONTENTPROTECTION_ASARRAY) ||
          e.ContentProtection_asArray.length === 0
        ) {
          return null
        }
        return e.ContentProtection_asArray
      }
      function Q(e) {
        var t = false
        if (e && e.hasOwnProperty('type')) {
          t = e.type === o['default'].DYNAMIC
        }
        return t
      }
      function J(e, t) {
        var r = false
        if (e && e.profiles && e.profiles.length > 0) {
          r = e.profiles.indexOf(t) !== -1
        }
        return r
      }
      function Z(e) {
        return J(e, c)
      }
      function ee(e) {
        var t = undefined
        if (e && e.hasOwnProperty(o['default'].MEDIA_PRESENTATION_DURATION)) {
          t = e.mediaPresentationDuration
        } else {
          t = Number.MAX_SAFE_INTEGER || Number.MAX_VALUE
        }
        return t
      }
      function te(e) {
        return e && e.bandwidth ? e.bandwidth : NaN
      }
      function re(e) {
        var t = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1]
        var r = NaN
        if (e && e.hasOwnProperty(o['default'].MINIMUM_UPDATE_PERIOD)) {
          r = e.minimumUpdatePeriod
        }
        return isNaN(r) ? r : Math.max(r - t, 1)
      }
      function ne(e) {
        return e && e.Representation_asArray && e.Representation_asArray.length
          ? e.Representation_asArray.length
          : 0
      }
      function ie(e) {
        if (!e || !e.Representation_asArray || !e.Representation_asArray.length) return null
        var t = j(e)
        var r = t.Representation_asArray
        return r.map(function(e) {
          return {
            bandwidth: e.bandwidth,
            width: e.width || 0,
            height: e.height || 0,
            scanType: e.scanType || null,
          }
        })
      }
      function ae(e) {
        if (!e || !e.EssentialProperty_asArray || !e.EssentialProperty_asArray.length) return null
        return e.EssentialProperty_asArray.map(function(e) {
          return { schemeIdUri: e.schemeIdUri, value: e.value }
        })
      }
      function se(e, t) {
        return t && t.Representation_asArray && t.Representation_asArray.length > 0 && p(e)
          ? t.Representation_asArray[e]
          : null
      }
      function oe(e) {
        if (e && e.period && p(e.period.index)) {
          var t = e.period.mpd.manifest.Period_asArray[e.period.index]
          if (t && t.AdaptationSet_asArray && p(e.index)) {
            return j(t.AdaptationSet_asArray[e.index])
          }
        }
      }
      function ue(e) {
        var t = e.S_asArray[e.S_asArray.length - 1]
        return !t.hasOwnProperty('r') || t.r >= 0
      }
      function le(e) {
        var t = oe(e).Representation_asArray[0]
        var r = undefined
        if (t.hasOwnProperty(o['default'].SEGMENT_LIST)) {
          r = t.SegmentList
          return r.hasOwnProperty(o['default'].SEGMENT_TIMELINE) ? ue(r.SegmentTimeline) : true
        } else if (t.hasOwnProperty(o['default'].SEGMENT_TEMPLATE)) {
          r = t.SegmentTemplate
          if (r.hasOwnProperty(o['default'].SEGMENT_TIMELINE)) {
            return ue(r.SegmentTimeline)
          }
        }
        return false
      }
      function fe(e) {
        var t = []
        var r = oe(e)
        var n = undefined,
          i = undefined
        if (e && e.period && p(e.period.index)) {
          var a = Ee(e.period.mpd.manifest)
          if (a) {
            i = a[0]
          }
        }
        if (r && r.Representation_asArray) {
          for (var u = 0, f = r.Representation_asArray.length; u < f; ++u) {
            var d = r.Representation_asArray[u]
            var c = new l['default']()
            c.index = u
            c.adaptation = e
            if (d.hasOwnProperty(o['default'].ID)) {
              c.id = d.id
            }
            if (d.hasOwnProperty(o['default'].CODECS)) {
              c.codecs = d.codecs
            }
            if (d.hasOwnProperty(o['default'].CODEC_PRIVATE_DATA)) {
              c.codecPrivateData = d.codecPrivateData
            }
            if (d.hasOwnProperty(o['default'].BANDWITH)) {
              c.bandwidth = d.bandwidth
            }
            if (d.hasOwnProperty(o['default'].WIDTH)) {
              c.width = d.width
            }
            if (d.hasOwnProperty(o['default'].HEIGHT)) {
              c.height = d.height
            }
            if (d.hasOwnProperty(o['default'].SCAN_TYPE)) {
              c.scanType = d.scanType
            }
            if (d.hasOwnProperty(o['default'].MAX_PLAYOUT_RATE)) {
              c.maxPlayoutRate = d.maxPlayoutRate
            }
            if (d.hasOwnProperty(o['default'].SEGMENT_BASE)) {
              n = d.SegmentBase
              c.segmentInfoType = o['default'].SEGMENT_BASE
            } else if (d.hasOwnProperty(o['default'].SEGMENT_LIST)) {
              n = d.SegmentList
              if (n.hasOwnProperty(o['default'].SEGMENT_TIMELINE)) {
                c.segmentInfoType = o['default'].SEGMENT_TIMELINE
                c.useCalculatedLiveEdgeTime = ue(n.SegmentTimeline)
              } else {
                c.segmentInfoType = o['default'].SEGMENT_LIST
                c.useCalculatedLiveEdgeTime = true
              }
            } else if (d.hasOwnProperty(o['default'].SEGMENT_TEMPLATE)) {
              n = d.SegmentTemplate
              if (n.hasOwnProperty(o['default'].SEGMENT_TIMELINE)) {
                c.segmentInfoType = o['default'].SEGMENT_TIMELINE
                c.useCalculatedLiveEdgeTime = ue(n.SegmentTimeline)
              } else {
                c.segmentInfoType = o['default'].SEGMENT_TEMPLATE
              }
              if (n.hasOwnProperty(o['default'].INITIALIZATION_MINUS)) {
                c.initialization = n.initialization
                  .split('$Bandwidth$')
                  .join(d.bandwidth)
                  .split('$RepresentationID$')
                  .join(d.id)
              }
            } else {
              c.segmentInfoType = o['default'].BASE_URL
            }
            c.essentialProperties = ae(d)
            if (n) {
              if (n.hasOwnProperty(o['default'].INITIALIZATION)) {
                var h = n.Initialization
                if (h.hasOwnProperty(o['default'].SOURCE_URL)) {
                  c.initialization = h.sourceURL
                } else if (h.hasOwnProperty(o['default'].RANGE)) {
                  c.range = h.range
                }
              } else if (d.hasOwnProperty(o['default'].MIME_TYPE) && D(d.mimeType)) {
                c.range = 0
              }
              if (n.hasOwnProperty(o['default'].TIMESCALE)) {
                c.timescale = n.timescale
              }
              if (n.hasOwnProperty(o['default'].DURATION)) {
                c.segmentDuration = n.duration / c.timescale
              }
              if (n.hasOwnProperty(o['default'].MEDIA)) {
                c.media = n.media
              }
              if (n.hasOwnProperty(o['default'].START_NUMBER)) {
                c.startNumber = n.startNumber
              }
              if (n.hasOwnProperty(o['default'].INDEX_RANGE)) {
                c.indexRange = n.indexRange
              }
              if (n.hasOwnProperty(o['default'].PRESENTATION_TIME_OFFSET)) {
                c.presentationTimeOffset = n.presentationTimeOffset / c.timescale
              }
              if (n.hasOwnProperty(o['default'].AVAILABILITY_TIME_OFFSET)) {
                c.availabilityTimeOffset = n.availabilityTimeOffset
              } else if (i && i.availabilityTimeOffset !== undefined) {
                c.availabilityTimeOffset = i.availabilityTimeOffset
              }
              if (n.hasOwnProperty(o['default'].AVAILABILITY_TIME_COMPLETE)) {
                c.availabilityTimeComplete = n.availabilityTimeComplete !== 'false'
              } else if (i && i.availabilityTimeComplete !== undefined) {
                c.availabilityTimeComplete = i.availabilityTimeComplete
              }
            }
            c.MSETimeOffset = s.calcMSETimeOffset(c)
            c.path = [e.period.index, e.index, u]
            t.push(c)
          }
        }
        return t
      }
      function de(e) {
        var t = e && p(e.index) ? e.mpd.manifest.Period_asArray[e.index] : null
        var r = []
        var n = undefined,
          i = undefined,
          s = undefined
        if (t && t.AdaptationSet_asArray) {
          for (s = 0; s < t.AdaptationSet_asArray.length; s++) {
            i = t.AdaptationSet_asArray[s]
            n = new d['default']()
            if (i.hasOwnProperty(o['default'].ID)) {
              n.id = i.id
            }
            n.index = s
            n.period = e
            if (I(i)) {
              n.type = a['default'].MUXED
            } else if (T(i)) {
              n.type = a['default'].AUDIO
            } else if (b(i)) {
              n.type = a['default'].VIDEO
            } else if (w(i)) {
              n.type = a['default'].FRAGMENTED_TEXT
            } else if (R(i)) {
              n.type = a['default'].IMAGE
            } else {
              n.type = a['default'].TEXT
            }
            r.push(n)
          }
        }
        return r
      }
      function ce(e) {
        var t = e ? Q(e.manifest) : false
        var n = []
        var i = null
        var a = null
        var s = null
        var u = null
        var l = undefined,
          f = undefined
        for (
          f = 0,
            l = e && e.manifest && e.manifest.Period_asArray ? e.manifest.Period_asArray.length : 0;
          f < l;
          f++
        ) {
          a = e.manifest.Period_asArray[f]
          if (a.hasOwnProperty(o['default'].START)) {
            u = new h['default']()
            u.start = a.start
          } else if (i !== null && i.hasOwnProperty(o['default'].DURATION) && s !== null) {
            u = new h['default']()
            u.start = parseFloat((s.start + s.duration).toFixed(5))
          } else if (f === 0 && !t) {
            u = new h['default']()
            u.start = 0
          }
          if (s !== null && isNaN(s.duration)) {
            if (u !== null) {
              s.duration = parseFloat((u.start - s.start).toFixed(5))
            } else {
              r.warn(
                'First period duration could not be calculated because lack of start and duration period properties. This will cause timing issues during playback'
              )
            }
          }
          if (u !== null) {
            u.id = he(a, f)
            u.index = f
            u.mpd = e
            if (a.hasOwnProperty(o['default'].DURATION)) {
              u.duration = a.duration
            }
            n.push(u)
            i = a
            s = u
          }
          a = null
          u = null
        }
        if (n.length === 0) {
          return n
        }
        if (s !== null && isNaN(s.duration)) {
          s.duration = parseFloat((ve(s) - s.start).toFixed(5))
        }
        return n
      }
      function he(e, t) {
        if (!e) {
          throw new Error('Period cannot be null or undefined')
        }
        var r = h['default'].DEFAULT_ID + '_' + t
        if (e.hasOwnProperty(o['default'].ID) && e.id.length > 0 && e.id !== '__proto__') {
          r = e.id
        }
        return r
      }
      function pe(e) {
        var t = new v['default']()
        if (e) {
          t.manifest = e
          if (e.hasOwnProperty(o['default'].AVAILABILITY_START_TIME)) {
            t.availabilityStartTime = new Date(e.availabilityStartTime.getTime())
          } else {
            t.availabilityStartTime = new Date(e.loadedTime.getTime())
          }
          if (e.hasOwnProperty(o['default'].AVAILABILITY_END_TIME)) {
            t.availabilityEndTime = new Date(e.availabilityEndTime.getTime())
          }
          if (e.hasOwnProperty(o['default'].MINIMUM_UPDATE_PERIOD)) {
            t.minimumUpdatePeriod = e.minimumUpdatePeriod
          }
          if (e.hasOwnProperty(o['default'].MEDIA_PRESENTATION_DURATION)) {
            t.mediaPresentationDuration = e.mediaPresentationDuration
          }
          if (e.hasOwnProperty(a['default'].SUGGESTED_PRESENTATION_DELAY)) {
            t.suggestedPresentationDelay = e.suggestedPresentationDelay
          }
          if (e.hasOwnProperty(o['default'].TIMESHIFT_BUFFER_DEPTH)) {
            t.timeShiftBufferDepth = e.timeShiftBufferDepth
          }
          if (e.hasOwnProperty(o['default'].MAX_SEGMENT_DURATION)) {
            t.maxSegmentDuration = e.maxSegmentDuration
          }
        }
        return t
      }
      function ve(e) {
        var t = Q(e.mpd.manifest)
        var r = undefined
        if (e.mpd.manifest.mediaPresentationDuration) {
          r = e.mpd.manifest.mediaPresentationDuration
        } else if (e.duration) {
          r = e.duration
        } else if (t) {
          r = Number.POSITIVE_INFINITY
        } else {
          u.error(
            new P['default'](
              L['default'].MANIFEST_ERROR_ID_PARSE_CODE,
              'Must have @mediaPresentationDuration on MPD or an explicit @duration on the last period.',
              e
            )
          )
        }
        return r
      }
      function ge(e) {
        var t = e && e.mpd && e.mpd.manifest ? e.mpd.manifest : null
        var r = t ? t.Period_asArray : null
        var n = r && e && p(e.index) ? r[e.index].EventStream_asArray : null
        var i = []
        var s = undefined,
          u = undefined
        if (n) {
          for (s = 0; s < n.length; s++) {
            var l = new S['default']()
            l.period = e
            l.timescale = 1
            if (n[s].hasOwnProperty(a['default'].SCHEME_ID_URI)) {
              l.schemeIdUri = n[s].schemeIdUri
            } else {
              throw new Error('Invalid EventStream. SchemeIdUri has to be set')
            }
            if (n[s].hasOwnProperty(o['default'].TIMESCALE)) {
              l.timescale = n[s].timescale
            }
            if (n[s].hasOwnProperty(o['default'].VALUE)) {
              l.value = n[s].value
            }
            for (u = 0; n[s].Event_asArray && u < n[s].Event_asArray.length; u++) {
              var d = new _['default']()
              d.presentationTime = 0
              d.eventStream = l
              if (n[s].Event_asArray[u].hasOwnProperty(o['default'].PRESENTATION_TIME)) {
                d.presentationTime = n[s].Event_asArray[u].presentationTime
              }
              if (n[s].Event_asArray[u].hasOwnProperty(o['default'].DURATION)) {
                d.duration = n[s].Event_asArray[u].duration
              }
              if (n[s].Event_asArray[u].hasOwnProperty(o['default'].ID)) {
                d.id = n[s].Event_asArray[u].id
              }
              if (n[s].Event_asArray[u].Signal && n[s].Event_asArray[u].Signal.Binary) {
                d.messageData = f.decodeArray(n[s].Event_asArray[u].Signal.Binary)
              } else {
                d.messageData = n[s].Event_asArray[u].messageData || n[s].Event_asArray[u].__text
              }
              i.push(d)
            }
          }
        }
        return i
      }
      function me(e, t) {
        var r = []
        var n = undefined
        if (!e) return r
        for (n = 0; n < e.length; n++) {
          var i = new S['default']()
          i.timescale = 1
          i.representation = t
          if (e[n].hasOwnProperty(a['default'].SCHEME_ID_URI)) {
            i.schemeIdUri = e[n].schemeIdUri
          } else {
            throw new Error('Invalid EventStream. SchemeIdUri has to be set')
          }
          if (e[n].hasOwnProperty(o['default'].TIMESCALE)) {
            i.timescale = e[n].timescale
          }
          if (e[n].hasOwnProperty(o['default'].VALUE)) {
            i.value = e[n].value
          }
          r.push(i)
        }
        return r
      }
      function ye(e, t) {
        var r = undefined,
          n = undefined,
          i = undefined
        if (e && e.Period_asArray && t && t.period && p(t.period.index)) {
          n = e.Period_asArray[t.period.index]
          if (n && n.AdaptationSet_asArray && p(t.index)) {
            i = n.AdaptationSet_asArray[t.index]
            if (i) {
              r = i.InbandEventStream_asArray
            }
          }
        }
        return me(r, null)
      }
      function _e(e, t) {
        var r = undefined,
          n = undefined,
          i = undefined,
          a = undefined
        if (
          e &&
          e.Period_asArray &&
          t &&
          t.adaptation &&
          t.adaptation.period &&
          p(t.adaptation.period.index)
        ) {
          n = e.Period_asArray[t.adaptation.period.index]
          if (n && n.AdaptationSet_asArray && p(t.adaptation.index)) {
            i = n.AdaptationSet_asArray[t.adaptation.index]
            if (i && i.Representation_asArray && p(t.index)) {
              a = i.Representation_asArray[t.index]
              if (a) {
                r = a.InbandEventStream_asArray
              }
            }
          }
        }
        return me(r, t)
      }
      function Te(e) {
        var t = Q(e)
        var r = e ? e.hasOwnProperty(o['default'].AVAILABILITY_START_TIME) : false
        var n = e ? e.UTCTiming_asArray : null
        var i = []
        if (t || r) {
          if (n) {
            n.forEach(function(e) {
              var t = new m['default']()
              if (e.hasOwnProperty(a['default'].SCHEME_ID_URI)) {
                t.schemeIdUri = e.schemeIdUri
              } else {
                return
              }
              if (e.hasOwnProperty(o['default'].VALUE)) {
                t.value = e.value.toString()
              } else {
                return
              }
              i.push(t)
            })
          }
        }
        return i
      }
      function Ee(e) {
        var t = []
        var r = e.BaseURL_asArray || [e.baseUri]
        var n = false
        r.some(function(r) {
          if (r) {
            var a = new E['default']()
            var s = r.__text || r
            if (i.isRelative(s)) {
              n = true
              if (e.baseUri) {
                s = i.resolve(s, e.baseUri)
              }
            }
            a.url = s
            if (r.hasOwnProperty(o['default'].SERVICE_LOCATION) && r.serviceLocation.length) {
              a.serviceLocation = r.serviceLocation
            } else {
              a.serviceLocation = s
            }
            if (r.hasOwnProperty(o['default'].DVB_PRIORITY)) {
              a.dvb_priority = r[o['default'].DVB_PRIORITY]
            }
            if (r.hasOwnProperty(o['default'].DVB_WEIGHT)) {
              a.dvb_weight = r[o['default'].DVB_WEIGHT]
            }
            if (r.hasOwnProperty(o['default'].AVAILABILITY_TIME_OFFSET)) {
              a.availabilityTimeOffset = r[o['default'].AVAILABILITY_TIME_OFFSET]
            }
            if (r.hasOwnProperty(o['default'].AVAILABILITY_TIME_COMPLETE)) {
              a.availabilityTimeComplete = r[o['default'].AVAILABILITY_TIME_COMPLETE] !== 'false'
            }
            t.push(a)
            return n
          }
        })
        return t
      }
      function be(e) {
        if (e && e.hasOwnProperty(a['default'].LOCATION)) {
          e.Location = e.Location_asArray[0]
          return e.Location
        }
        return undefined
      }
      t = {
        getIsTypeOf: y,
        getIsTextTrack: D,
        getLanguageForAdaptation: O,
        getViewpointForAdaptation: k,
        getRolesForAdaptation: N,
        getAccessibilityForAdaptation: F,
        getAudioChannelConfigurationForAdaptation: U,
        getAdaptationForIndex: H,
        getIndexForAdaptation: V,
        getAdaptationForId: q,
        getAdaptationsForType: K,
        getCodec: Y,
        getMimeType: W,
        getKID: z,
        getLabelsForAdaptation: X,
        getContentProtectionData: $,
        getIsDynamic: Q,
        getIsDVB: Z,
        getDuration: ee,
        getBandwidth: te,
        getManifestUpdatePeriod: re,
        getRepresentationCount: ne,
        getBitrateListForAdaptation: ie,
        getRepresentationFor: se,
        getRepresentationsForAdaptation: fe,
        getAdaptationsForPeriod: de,
        getRegularPeriods: ce,
        getMpd: pe,
        getEventsForPeriod: ge,
        getEventStreamForAdaptationSet: ye,
        getEventStreamForRepresentation: _e,
        getUTCTimingSources: Te,
        getBaseURLsFromElement: Ee,
        getRepresentationSortFunction: B,
        getLocation: be,
        getUseCalculatedLiveEdgeTimeForAdaptation: le,
      }
      g()
      return t
    }
    F.__dashjs_factory_name = 'DashManifestModel'
    t['default'] = D['default'].getSingletonFactory(F)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(1)
    var o = n(s)
    var u = r(201)
    var l = n(u)
    var f = r(99)
    var d = n(f)
    var c = r(200)
    var h = n(c)
    var p = r(198)
    var v = n(p)
    var g = r(197)
    var m = n(g)
    var y = r(199)
    var _ = n(y)
    var T = r(195)
    var E = n(T)
    var b = r(196)
    var S = n(b)
    function w() {
      var e = this.context
      var t = undefined,
        r = undefined,
        n = undefined,
        i = undefined,
        a = undefined
      function s() {
        r = (0, o['default'])(e)
          .getInstance()
          .getLogger(t)
        n = [new v['default'](), new m['default'](), new _['default'](), new h['default']()]
        i = new d['default']({
          escapeMode: false,
          attributePrefix: '',
          arrayAccessForm: 'property',
          emptyNodeForm: 'object',
          stripWhitespaces: false,
          enableToStringFunc: false,
          ignoreRoot: true,
          matchers: n,
        })
        a = (0, l['default'])(e).create({
          adaptationset: new E['default'](),
          period: new S['default'](),
        })
      }
      function u() {
        return n
      }
      function f() {
        return a
      }
      function c(e) {
        var t = undefined
        var n = window.performance.now()
        t = i.xml_str2json(e)
        if (!t) {
          throw new Error('parsing the manifest failed')
        }
        var s = window.performance.now()
        a.run(t)
        var o = window.performance.now()
        r.info(
          'Parsing complete: ( xml2json: ' +
            (s - n).toPrecision(3) +
            'ms, objectiron: ' +
            (o - s).toPrecision(3) +
            'ms, total: ' +
            ((o - n) / 1e3).toPrecision(3) +
            's)'
        )
        return t
      }
      t = { parse: c, getMatchers: u, getIron: f }
      s()
      return t
    }
    w.__dashjs_factory_name = 'DashParser'
    t['default'] = a['default'].getClassFactory(w)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = (function() {
      function e(t) {
        i(this, e)
        var r = function e(t) {
          return t && t.length && t.charAt(0) === t.charAt(0).toUpperCase()
        }
        this._name = t
        this._merge = r(t)
      }
      n(e, [
        {
          key: 'name',
          get: function e() {
            return this._name
          },
        },
        {
          key: 'merge',
          get: function e() {
            return this._merge
          },
        },
      ])
      return e
    })()
    t['default'] = a
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(103)
    var u = i(o)
    var l = r(9)
    var f = i(l)
    var d = (function(e) {
      s(t, e)
      function t() {
        a(this, t)
        var e = [
          f['default'].PROFILES,
          f['default'].WIDTH,
          f['default'].HEIGHT,
          f['default'].SAR,
          f['default'].FRAMERATE,
          f['default'].AUDIO_SAMPLING_RATE,
          f['default'].MIME_TYPE,
          f['default'].SEGMENT_PROFILES,
          f['default'].CODECS,
          f['default'].MAXIMUM_SAP_PERIOD,
          f['default'].START_WITH_SAP,
          f['default'].MAX_PLAYOUT_RATE,
          f['default'].CODING_DEPENDENCY,
          f['default'].SCAN_TYPE,
          f['default'].FRAME_PACKING,
          f['default'].AUDIO_CHANNEL_CONFIGURATION,
          f['default'].CONTENT_PROTECTION,
          f['default'].ESSENTIAL_PROPERTY,
          f['default'].SUPPLEMENTAL_PROPERTY,
          f['default'].INBAND_EVENT_STREAM,
        ]
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(
          this,
          f['default'].ADAPTATION_SET,
          e,
          [
            new u['default'](f['default'].REPRESENTATION, e, [
              new u['default'](f['default'].SUB_REPRESENTATION, e),
            ]),
          ]
        )
      }
      return t
    })(u['default'])
    t['default'] = d
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(103)
    var u = i(o)
    var l = r(9)
    var f = i(l)
    var d = (function(e) {
      s(t, e)
      function t() {
        a(this, t)
        var e = [
          f['default'].SEGMENT_BASE,
          f['default'].SEGMENT_TEMPLATE,
          f['default'].SEGMENT_LIST,
        ]
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(
          this,
          f['default'].PERIOD,
          e,
          [
            new u['default'](f['default'].ADAPTATION_SET, e, [
              new u['default'](f['default'].REPRESENTATION, e),
            ]),
          ]
        )
      }
      return t
    })(u['default'])
    t['default'] = d
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(43)
    var u = i(o)
    var l = 60
    var f = 60
    var d = 1e3
    var c = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\.[0-9]*)?)?(?:([+-])([0-9]{2})(?::?)([0-9]{2}))?/
    var h = (function(e) {
      s(t, e)
      function t() {
        a(this, t)
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(
          this,
          function(e) {
            return c.test(e.value)
          },
          function(e) {
            var t = c.exec(e)
            var r = undefined
            r = Date.UTC(
              parseInt(t[1], 10),
              parseInt(t[2], 10) - 1,
              parseInt(t[3], 10),
              parseInt(t[4], 10),
              parseInt(t[5], 10),
              (t[6] && parseInt(t[6], 10)) || 0,
              (t[7] && parseFloat(t[7]) * d) || 0
            )
            if (t[9] && t[10]) {
              var n = parseInt(t[9], 10) * f + parseInt(t[10], 10)
              r += (t[8] === '+' ? -1 : +1) * n * l * d
            }
            return new Date(r)
          }
        )
      }
      return t
    })(u['default'])
    t['default'] = h
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(43)
    var u = i(o)
    var l = r(3)
    var f = i(l)
    var d = r(9)
    var c = i(d)
    var h = /^([-])?P(([\d.]*)Y)?(([\d.]*)M)?(([\d.]*)D)?T?(([\d.]*)H)?(([\d.]*)M)?(([\d.]*)S)?/
    var p = 365 * 24 * 60 * 60
    var v = 30 * 24 * 60 * 60
    var g = 24 * 60 * 60
    var m = 60 * 60
    var y = 60
    var _ = (function(e) {
      s(t, e)
      function t() {
        a(this, t)
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(
          this,
          function(e) {
            var t = [
              c['default'].MIN_BUFFER_TIME,
              c['default'].MEDIA_PRESENTATION_DURATION,
              c['default'].MINIMUM_UPDATE_PERIOD,
              c['default'].TIMESHIFT_BUFFER_DEPTH,
              c['default'].MAX_SEGMENT_DURATION,
              c['default'].MAX_SUBSEGMENT_DURATION,
              f['default'].SUGGESTED_PRESENTATION_DELAY,
              c['default'].START,
              f['default'].START_TIME,
              c['default'].DURATION,
            ]
            var r = t.length
            for (var n = 0; n < r; n++) {
              if (e.nodeName === t[n]) {
                return h.test(e.value)
              }
            }
            return false
          },
          function(e) {
            var t = h.exec(e)
            var r =
              parseFloat(t[2] || 0) * p +
              parseFloat(t[4] || 0) * v +
              parseFloat(t[6] || 0) * g +
              parseFloat(t[8] || 0) * m +
              parseFloat(t[10] || 0) * y +
              parseFloat(t[12] || 0)
            if (t[1] !== undefined) {
              r = -r
            }
            return r
          }
        )
      }
      return t
    })(u['default'])
    t['default'] = _
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(43)
    var u = i(o)
    var l = /^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$/
    var f = (function(e) {
      s(t, e)
      function t() {
        a(this, t)
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(
          this,
          function(e) {
            return l.test(e.value)
          },
          function(e) {
            return parseFloat(e)
          }
        )
      }
      return t
    })(u['default'])
    t['default'] = f
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t, r) {
      if (t in e) {
        Object.defineProperty(e, t, {
          value: r,
          enumerable: true,
          configurable: true,
          writable: true,
        })
      } else {
        e[t] = r
      }
      return e
    }
    function s(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function o(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var u = r(43)
    var l = i(u)
    var f = r(9)
    var d = i(f)
    var c = (function(e) {
      o(t, e)
      function t() {
        s(this, t)
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(
          this,
          function(e, t) {
            var r
            var n = ((r = {}),
            a(r, d['default'].MPD, [d['default'].ID, d['default'].PROFILES]),
            a(r, d['default'].PERIOD, [d['default'].ID]),
            a(r, d['default'].BASE_URL, [d['default'].SERVICE_LOCATION, d['default'].BYTE_RANGE]),
            a(r, d['default'].SEGMENT_BASE, [d['default'].INDEX_RANGE]),
            a(r, d['default'].INITIALIZATION, [d['default'].RANGE]),
            a(r, d['default'].REPRESENTATION_INDEX, [d['default'].RANGE]),
            a(r, d['default'].SEGMENT_LIST, [d['default'].INDEX_RANGE]),
            a(r, d['default'].BITSTREAM_SWITCHING, [d['default'].RANGE]),
            a(r, d['default'].SEGMENT_URL, [d['default'].MEDIA_RANGE, d['default'].INDEX_RANGE]),
            a(r, d['default'].SEGMENT_TEMPLATE, [
              d['default'].INDEX_RANGE,
              d['default'].MEDIA,
              d['default'].INDEX,
              d['default'].INITIALIZATION_MINUS,
              d['default'].BITSTREAM_SWITCHING_MINUS,
            ]),
            a(r, d['default'].ASSET_IDENTIFIER, [d['default'].VALUE, d['default'].ID]),
            a(r, d['default'].EVENT_STREAM, [d['default'].VALUE]),
            a(r, d['default'].ADAPTATION_SET, [
              d['default'].PROFILES,
              d['default'].MIME_TYPE,
              d['default'].SEGMENT_PROFILES,
              d['default'].CODECS,
              d['default'].CONTENT_TYPE,
            ]),
            a(r, d['default'].FRAME_PACKING, [d['default'].VALUE, d['default'].ID]),
            a(r, d['default'].AUDIO_CHANNEL_CONFIGURATION, [d['default'].VALUE, d['default'].ID]),
            a(r, d['default'].CONTENT_PROTECTION, [d['default'].VALUE, d['default'].ID]),
            a(r, d['default'].ESSENTIAL_PROPERTY, [d['default'].VALUE, d['default'].ID]),
            a(r, d['default'].SUPPLEMENTAL_PROPERTY, [d['default'].VALUE, d['default'].ID]),
            a(r, d['default'].INBAND_EVENT_STREAM, [d['default'].VALUE, d['default'].ID]),
            a(r, d['default'].ACCESSIBILITY, [d['default'].VALUE, d['default'].ID]),
            a(r, d['default'].ROLE, [d['default'].VALUE, d['default'].ID]),
            a(r, d['default'].RATING, [d['default'].VALUE, d['default'].ID]),
            a(r, d['default'].VIEWPOINT, [d['default'].VALUE, d['default'].ID]),
            a(r, d['default'].CONTENT_COMPONENT, [d['default'].CONTENT_TYPE]),
            a(r, d['default'].REPRESENTATION, [
              d['default'].ID,
              d['default'].DEPENDENCY_ID,
              d['default'].MEDIA_STREAM_STRUCTURE_ID,
            ]),
            a(r, d['default'].SUBSET, [d['default'].ID]),
            a(r, d['default'].METRICS, [d['default'].METRICS_MINUS]),
            a(r, d['default'].REPORTING, [d['default'].VALUE, d['default'].ID]),
            r)
            if (n.hasOwnProperty(t)) {
              var i = n[t]
              if (i !== undefined) {
                return i.indexOf(e.name) >= 0
              } else {
                return false
              }
            }
            return false
          },
          function(e) {
            return String(e)
          }
        )
      }
      return t
    })(l['default'])
    t['default'] = c
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    function s(e) {
      function t(e, t) {
        for (var r in e) {
          if (!t.hasOwnProperty(r)) {
            t[r] = e[r]
          }
        }
      }
      function r(e, r, n) {
        for (var i = 0, a = e.length; i < a; ++i) {
          var s = e[i]
          if (r[s.name]) {
            if (n[s.name]) {
              if (s.merge) {
                var o = r[s.name]
                var u = n[s.name]
                if (typeof o === 'object' && typeof u === 'object') {
                  t(o, u)
                } else {
                  n[s.name] = o + u
                }
              }
            } else {
              n[s.name] = r[s.name]
            }
          }
        }
      }
      function n(e, t) {
        for (var i = 0, a = e.children.length; i < a; ++i) {
          var s = e.children[i]
          var o = t[s.name + '_asArray']
          if (o) {
            for (var u = 0, l = o.length; u < l; ++u) {
              var f = o[u]
              r(e.properties, t, f)
              n(s, f)
            }
          }
        }
      }
      function i(t) {
        if (t === null || typeof t !== 'object') {
          return t
        }
        if ('period' in e) {
          var r = e.period
          var i = t.Period_asArray
          for (var a = 0, s = i.length; a < s; ++a) {
            var o = i[a]
            n(r, o)
            if ('adaptationset' in e) {
              var u = o.AdaptationSet_asArray
              if (u) {
                var l = e.adaptationset
                for (var f = 0, d = u.length; f < d; ++f) {
                  n(l, u[f])
                }
              }
            }
          }
        }
        return t
      }
      return { run: i }
    }
    s.__dashjs_factory_name = 'ObjectIron'
    var o = a['default'].getClassFactory(s)
    t['default'] = o
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(18)
    function o(e, t) {
      e = e || {}
      var r = e.timelineConverter
      var n = undefined
      function i(e, n, i, a) {
        var o =
          e.adaptation.period.mpd.manifest.Period_asArray[e.adaptation.period.index]
            .AdaptationSet_asArray[e.adaptation.index].Representation_asArray[e.index].SegmentList
        var u = o.SegmentURL_asArray.length
        var l = []
        var f = undefined,
          d = undefined,
          c = undefined,
          h = undefined,
          p = undefined,
          v = undefined,
          g = undefined
        g = e.startNumber
        h = (0, s.decideSegmentListRangeForTemplate)(r, t, e, n, i, a)
        p = Math.max(h.start, 0)
        v = Math.min(h.end, o.SegmentURL_asArray.length - 1)
        for (f = p; f <= v; f++) {
          c = o.SegmentURL_asArray[f]
          d = (0, s.getIndexBasedSegment)(r, t, e, f)
          d.replacementTime = (g + f - 1) * e.segmentDuration
          d.media = c.media ? c.media : ''
          d.mediaRange = c.mediaRange
          d.index = c.index
          d.indexRange = c.indexRange
          l.push(d)
          d = null
        }
        e.availableSegmentsNumber = u
        return l
      }
      n = { getSegments: i }
      return n
    }
    o.__dashjs_factory_name = 'ListSegmentsGetter'
    var u = a['default'].getClassFactory(o)
    t['default'] = u
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = (function() {
      function e() {
        i(this, e)
      }
      n(e, null, [
        {
          key: 'round10',
          value: function e(t, r) {
            return s('round', t, r)
          },
        },
      ])
      return e
    })()
    t['default'] = a
    function s(e, t, r) {
      if (typeof r === 'undefined' || +r === 0) {
        return Math[e](t)
      }
      t = +t
      r = +r
      if (t === null || isNaN(t) || !(typeof r === 'number' && r % 1 === 0)) {
        return NaN
      }
      t = t.toString().split('e')
      t = Math[e](+(t[0] + 'e' + (t[1] ? +t[1] - r : -r)))
      t = t.toString().split('e')
      return +(t[0] + 'e' + (t[1] ? +t[1] + r : r))
    }
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(9)
    var a = n(i)
    var s = r(0)
    var o = n(s)
    var u = r(207)
    var l = n(u)
    var f = r(205)
    var d = n(f)
    var c = r(202)
    var h = n(c)
    function p(e, t) {
      var r = this.context
      var n = undefined,
        i = undefined,
        s = undefined,
        o = undefined
      function u() {
        i = (0, l['default'])(r).create(e, t)
        s = (0, d['default'])(r).create(e, t)
        o = (0, h['default'])(r).create(e, t)
      }
      function f(e, t, r, n, u) {
        var l = undefined
        var f = e.segmentInfoType
        if (f === a['default'].SEGMENT_BASE || f === a['default'].BASE_URL || !c(e, r)) {
          l = e.segments
        } else {
          if (f === a['default'].SEGMENT_TIMELINE) {
            l = i.getSegments(e, t, r, u)
          } else if (f === a['default'].SEGMENT_TEMPLATE) {
            l = s.getSegments(e, t, r, u)
          } else if (f === a['default'].SEGMENT_LIST) {
            l = o.getSegments(e, t, r, u)
          }
          if (n) {
            n(e, l)
          }
        }
      }
      function c(e, t) {
        var r = e.segments
        var n = false
        var i = undefined,
          a = undefined
        if (!r || r.length === 0) {
          n = true
        } else {
          a = r[0].availabilityIdx
          i = r[r.length - 1].availabilityIdx
          n = t < a || t > i
        }
        return n
      }
      n = { getSegments: f }
      u()
      return n
    }
    p.__dashjs_factory_name = 'SegmentsGetter'
    var v = o['default'].getClassFactory(p)
    t['default'] = v
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(18)
    function o(e, t) {
      var r = e.timelineConverter
      var n = undefined
      function i(e, n, i, a) {
        var o =
          e.adaptation.period.mpd.manifest.Period_asArray[e.adaptation.period.index]
            .AdaptationSet_asArray[e.adaptation.index].Representation_asArray[e.index]
            .SegmentTemplate
        var u = e.segmentDuration
        var l = e.segmentAvailabilityRange
        var f = []
        var d = null
        var c = null
        var h = undefined,
          p = undefined,
          v = undefined,
          g = undefined,
          m = undefined
        m = e.startNumber
        if (isNaN(u) && !t) {
          h = { start: m, end: m }
        } else {
          h = (0, s.decideSegmentListRangeForTemplate)(r, t, e, n, i, a)
        }
        v = h.start
        g = h.end
        for (p = v; p <= g; p++) {
          c = (0, s.getIndexBasedSegment)(r, t, e, p)
          c.replacementTime = (m + p - 1) * e.segmentDuration
          d = o.media
          d = (0, s.replaceTokenForTemplate)(d, 'Number', c.replacementNumber)
          d = (0, s.replaceTokenForTemplate)(d, 'Time', c.replacementTime)
          c.media = d
          f.push(c)
          c = null
        }
        if (isNaN(u)) {
          e.availableSegmentsNumber = 1
        } else {
          e.availableSegmentsNumber = Math.ceil((l.end - l.start) / u)
        }
        return f
      }
      n = { getSegments: i }
      return n
    }
    o.__dashjs_factory_name = 'TemplateSegmentsGetter'
    var u = a['default'].getClassFactory(o)
    t['default'] = u
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(2)
    var a = n(i)
    var s = r(4)
    var o = n(s)
    var u = r(0)
    var l = n(u)
    function f() {
      var e = this.context
      var t = (0, a['default'])(e).getInstance()
      var r = undefined,
        n = undefined,
        i = undefined,
        s = undefined
      function u() {
        I()
        t.on(o['default'].TIME_SYNCHRONIZATION_COMPLETED, w, this)
      }
      function l() {
        return i
      }
      function f(e) {
        i = e
      }
      function d() {
        return n
      }
      function c(e) {
        n = e
      }
      function h() {
        return s
      }
      function p(e) {
        s = e
      }
      function v(e, t, r, i) {
        var a = NaN
        if (i) {
          if (r && t.timeShiftBufferDepth != Number.POSITIVE_INFINITY) {
            a = new Date(t.availabilityStartTime.getTime() + (e + t.timeShiftBufferDepth) * 1e3)
          } else {
            a = t.availabilityEndTime
          }
        } else {
          if (r) {
            a = new Date(t.availabilityStartTime.getTime() + (e - n) * 1e3)
          } else {
            a = t.availabilityStartTime
          }
        }
        return a
      }
      function g(e, t, r) {
        return v.call(this, e, t, r)
      }
      function m(e, t, r) {
        return v.call(this, e, t, r, true)
      }
      function y(e, t) {
        return (e.getTime() - t.mpd.availabilityStartTime.getTime() + n * 1e3) / 1e3
      }
      function _(e, t) {
        var r = t.adaptation.period.start
        var n = t.presentationTimeOffset
        return e + (r - n)
      }
      function T(e, t) {
        var r = t.adaptation.period.start
        var n = t.presentationTimeOffset
        return e - r + n
      }
      function E(e, t) {
        var r = undefined,
          n = undefined,
          i = undefined
        if (t) {
          r = e.representation.adaptation.period.mpd.suggestedPresentationDelay
          n = e.presentationStartTime + r
          i = new Date(e.availabilityStartTime.getTime() + n * 1e3)
        }
        return i
      }
      function b(e, t) {
        var r = e.adaptation.period
        var n = { start: r.start, end: r.start + r.duration }
        if (!t) return n
        if (!i && e.segmentAvailabilityRange) {
          return e.segmentAvailabilityRange
        }
        var a =
          e.segmentDuration ||
          (e.segments && e.segments.length ? e.segments[e.segments.length - 1].duration : 0)
        var s = y(new Date(), r)
        var o = r.start + r.duration
        n.start = Math.max(s - r.mpd.timeShiftBufferDepth, r.start)
        var u =
          e.availabilityTimeOffset !== undefined && e.availabilityTimeOffset < a
            ? a - e.availabilityTimeOffset
            : a
        n.end = s >= o && s - u < o ? o : s - u
        return n
      }
      function S(e, t) {
        var r = e.adaptation.period.start
        return t - r
      }
      function w(e) {
        if (i) return
        if (e.offset !== undefined) {
          c(e.offset / 1e3)
          i = true
        }
      }
      function A(e) {
        var t = e.presentationTimeOffset
        var r = e.adaptation.period.start
        return r - t
      }
      function I() {
        n = 0
        i = false
        s = NaN
      }
      function C() {
        t.off(o['default'].TIME_SYNCHRONIZATION_COMPLETED, w, this)
        I()
      }
      r = {
        initialize: u,
        isTimeSyncCompleted: l,
        setTimeSyncCompleted: f,
        getClientTimeOffset: d,
        setClientTimeOffset: c,
        getExpectedLiveEdge: h,
        setExpectedLiveEdge: p,
        calcAvailabilityStartTimeFromPresentationTime: g,
        calcAvailabilityEndTimeFromPresentationTime: m,
        calcPresentationTimeFromWallTime: y,
        calcPresentationTimeFromMediaTime: _,
        calcPeriodRelativeTimeFromMpdRelativeTime: S,
        calcMediaTimeFromPresentationTime: T,
        calcSegmentAvailabilityRange: b,
        calcWallTimeForSegment: E,
        calcMSETimeOffset: A,
        reset: C,
      }
      return r
    }
    f.__dashjs_factory_name = 'TimelineConverter'
    t['default'] = l['default'].getSingletonFactory(f)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(3)
    var o = n(s)
    var u = r(18)
    function l(e, t) {
      e = e || {}
      var r = e.timelineConverter
      var n = undefined
      function i() {
        if (
          !r ||
          !r.hasOwnProperty('calcMediaTimeFromPresentationTime') ||
          !r.hasOwnProperty('calcSegmentAvailabilityRange')
        ) {
          throw new Error(o['default'].MISSING_CONFIG_ERROR)
        }
      }
      function a(e, n, a, s) {
        i()
        if (!e) {
          throw new Error('no representation')
        }
        if (n === undefined) {
          n = null
        }
        var o =
          e.adaptation.period.mpd.manifest.Period_asArray[e.adaptation.period.index]
            .AdaptationSet_asArray[e.adaptation.index].Representation_asArray[e.index]
            .SegmentTemplate ||
          e.adaptation.period.mpd.manifest.Period_asArray[e.adaptation.period.index]
            .AdaptationSet_asArray[e.adaptation.index].Representation_asArray[e.index].SegmentList
        var l = o.SegmentTimeline
        var f = o.SegmentURL_asArray
        var d = e.availableSegmentsNumber > 0
        var c = undefined
        if (s) {
          c = s
        } else {
          c = a > -1 || n !== null ? 10 : Infinity
        }
        var h = 0
        var p = 0
        var v = -1
        var g = []
        var m = null
        var y = undefined,
          _ = undefined,
          T = undefined,
          E = undefined,
          b = undefined,
          S = undefined,
          w = undefined,
          A = undefined,
          I = undefined,
          C = undefined,
          R = undefined
        var D = function n(i, a) {
          var s = o.media
          var l = i.mediaRange
          if (f) {
            s = f[a].media || ''
            l = f[a].mediaRange
          }
          return (0, u.getTimeBasedSegment)(r, t, e, h, i.d, R, s, l, v, i.tManifest)
        }
        R = e.timescale
        y = l.S_asArray
        C = a
        if (n !== null) {
          m = r.calcMediaTimeFromPresentationTime(n, e)
        }
        for (T = 0, E = y.length; T < E; T++) {
          _ = y[T]
          S = 0
          if (_.hasOwnProperty('r')) {
            S = _.r
          }
          if (_.hasOwnProperty('t')) {
            h = _.t
            p = h / R
          }
          if (S < 0) {
            A = y[T + 1]
            if (A && A.hasOwnProperty('t')) {
              w = A.t / R
            } else {
              var O = e.segmentAvailabilityRange
                ? e.segmentAvailabilityRange.end
                : r.calcSegmentAvailabilityRange(e, t).end
              w = r.calcMediaTimeFromPresentationTime(O, e)
              e.segmentDuration = _.d / R
            }
            S = Math.ceil((w - p) / (_.d / R)) - 1
          }
          if (I) {
            if (d) break
            v += S + 1
            continue
          }
          for (b = 0; b <= S; b++) {
            v++
            if (g.length > c) {
              I = true
              if (d) break
              continue
            }
            if (m !== null) {
              if (p >= m - (_.d / R) * 1.5) {
                g.push(D(_, v))
              }
            } else if (v >= C) {
              g.push(D(_, v))
            }
            h += _.d
            p = h / R
          }
        }
        if (!d) {
          e.availableSegmentsNumber = v + 1
        }
        return g
      }
      n = { getSegments: a }
      return n
    }
    l.__dashjs_factory_name = 'TimelineSegmentsGetter'
    var f = a['default'].getClassFactory(l)
    t['default'] = f
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.period = null
      this.index = -1
      this.type = null
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.adaptionSet = null
      this.representation = null
      this.period = null
      this.timescale = 1
      this.value = ''
      this.schemeIdUri = ''
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.manifest = null
      this.suggestedPresentationDelay = 0
      this.availabilityStartTime = null
      this.availabilityEndTime = Number.POSITIVE_INFINITY
      this.timeShiftBufferDepth = Number.POSITIVE_INFINITY
      this.maxSegmentDuration = Number.POSITIVE_INFINITY
      this.minimumUpdatePeriod = NaN
      this.mediaPresentationDuration = NaN
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.id = null
      this.index = -1
      this.duration = NaN
      this.start = NaN
      this.mpd = null
    }
    i.DEFAULT_ID = 'defaultId'
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(34)
    var a = n(i)
    var s = r(299)
    var o = n(s)
    var u = r(5)
    var l = n(u)
    var f = r(2)
    var d = n(f)
    var c = r(36)
    var h = n(c)
    var p = r(4)
    var v = n(p)
    var g = r(6)
    var m = n(g)
    var y = r(0)
    var _ = n(y)
    function T(e) {
      e = e || {}
      var t = this.context
      var r = (0, d['default'])(t).getInstance()
      var n = undefined,
        i = undefined
      function s() {
        var r = (0, h['default'])(t).getInstance()
        i = (0, a['default'])(t).create({
          errHandler: e.errHandler,
          metricsModel: e.metricsModel,
          mediaPlayerModel: e.mediaPlayerModel,
          requestModifier: e.requestModifier,
          boxParser: r,
          useFetch: e.mediaPlayerModel.getLowLatencyEnabled(),
        })
      }
      function u(e) {
        var t = function t(n) {
          r.trigger(v['default'].CHECK_FOR_EXISTENCE_COMPLETED, { request: e, exists: n })
        }
        if (e) {
          var n = new o['default'](e.url)
          i.load({
            request: n,
            success: function e() {
              t(true)
            },
            error: function e() {
              t(false)
            },
          })
        } else {
          t(false)
        }
      }
      function f(e) {
        var t = function t(i, a) {
          r.trigger(v['default'].LOADING_COMPLETED, {
            request: e,
            response: i || null,
            error: a || null,
            sender: n,
          })
        }
        if (e) {
          i.load({
            request: e,
            progress: function t(i) {
              r.trigger(v['default'].LOADING_PROGRESS, { request: e, stream: i.stream })
              if (i.data) {
                r.trigger(v['default'].LOADING_DATA_PROGRESS, {
                  request: e,
                  response: i.data || null,
                  error: null,
                  sender: n,
                })
              }
            },
            success: function e(r) {
              t(r)
            },
            error: function e(r, n, i) {
              t(
                undefined,
                new l['default'](m['default'].FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE, i, n)
              )
            },
            abort: function e(t) {
              if (t) {
                r.trigger(v['default'].LOADING_ABANDONED, {
                  request: t,
                  mediaType: t.mediaType,
                  sender: n,
                })
              }
            },
          })
        } else {
          t(
            undefined,
            new l['default'](
              m['default'].FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE,
              m['default'].FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE
            )
          )
        }
      }
      function c() {
        if (i) {
          i.abort()
        }
      }
      function p() {
        if (i) {
          i.abort()
          i = null
        }
      }
      n = { checkForExistence: u, load: f, abort: c, reset: p }
      s()
      return n
    }
    T.__dashjs_factory_name = 'FragmentLoader'
    t['default'] = _['default'].getClassFactory(T)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(228)
    var o = n(s)
    var u = r(34)
    var l = n(u)
    var f = r(15)
    var d = n(f)
    var c = r(119)
    var h = n(c)
    var p = r(5)
    var v = n(p)
    var g = r(7)
    var m = r(2)
    var y = n(m)
    var _ = r(4)
    var T = n(_)
    var E = r(6)
    var b = n(E)
    var S = r(0)
    var w = n(S)
    var A = r(193)
    var I = n(A)
    var C = r(1)
    var R = n(C)
    function D(e) {
      e = e || {}
      var t = this.context
      var r = (0, y['default'])(t).getInstance()
      var n = (0, d['default'])(t).getInstance()
      var i = undefined,
        s = undefined,
        u = undefined,
        f = undefined,
        c = undefined
      var p = e.mssHandler
      var m = e.errHandler
      function _() {
        s = (0, R['default'])(t)
          .getInstance()
          .getLogger(i)
        r.on(T['default'].XLINK_READY, E, i)
        u = (0, l['default'])(t).create({
          errHandler: m,
          metricsModel: e.metricsModel,
          mediaPlayerModel: e.mediaPlayerModel,
          requestModifier: e.requestModifier,
        })
        f = (0, o['default'])(t).create({
          errHandler: m,
          metricsModel: e.metricsModel,
          mediaPlayerModel: e.mediaPlayerModel,
          requestModifier: e.requestModifier,
        })
        c = null
      }
      function E(e) {
        r.trigger(T['default'].INTERNAL_MANIFEST_LOADED, { manifest: e.manifest })
      }
      function S(e) {
        var r = null
        if (e.indexOf('SmoothStreamingMedia') > -1) {
          if (p) {
            r = p.createMssParser()
            p.registerEvents()
          }
          return r
        } else if (e.indexOf('MPD') > -1) {
          return (0, I['default'])(t).create()
        } else {
          return r
        }
      }
      function w(e) {
        var t = new h['default'](e, g.HTTPRequest.MPD_TYPE)
        u.load({
          request: t,
          success: function t(i, o, u) {
            if (!f) return
            var l = undefined,
              d = undefined,
              h = undefined
            if (u && u !== e) {
              d = n.parseBaseUrl(u)
              l = u
            } else {
              if (n.isRelative(e)) {
                e = n.resolve(e, window.location.href)
              }
              d = n.parseBaseUrl(e)
            }
            if (c === null) {
              c = S(i)
            }
            if (c === null) {
              r.trigger(T['default'].INTERNAL_MANIFEST_LOADED, {
                manifest: null,
                error: new v['default'](
                  b['default'].MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE,
                  b['default'].MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE + ('' + e)
                ),
              })
              return
            }
            f.setMatchers(c.getMatchers())
            f.setIron(c.getIron())
            try {
              h = c.parse(i)
            } catch (t) {
              r.trigger(T['default'].INTERNAL_MANIFEST_LOADED, {
                manifest: null,
                error: new v['default'](
                  b['default'].MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE,
                  b['default'].MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE + ('' + e)
                ),
              })
              return
            }
            if (h) {
              h.url = l || e
              if (!h.originalUrl) {
                h.originalUrl = h.url
              }
              if (h.hasOwnProperty(a['default'].LOCATION)) {
                d = n.parseBaseUrl(h.Location_asArray[0])
                s.debug('BaseURI set by Location to: ' + d)
              }
              h.baseUri = d
              h.loadedTime = new Date()
              f.resolveManifestOnLoad(h)
            } else {
              r.trigger(T['default'].INTERNAL_MANIFEST_LOADED, {
                manifest: null,
                error: new v['default'](
                  b['default'].MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE,
                  b['default'].MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE + ('' + e)
                ),
              })
            }
          },
          error: function t(n, i, a) {
            r.trigger(T['default'].INTERNAL_MANIFEST_LOADED, {
              manifest: null,
              error: new v['default'](
                b['default'].MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE,
                b['default'].MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE + (e + ', ' + a)
              ),
            })
          },
        })
      }
      function A() {
        r.off(T['default'].XLINK_READY, E, i)
        if (f) {
          f.reset()
          f = null
        }
        if (u) {
          u.abort()
          u = null
        }
        if (p) {
          p.reset()
        }
      }
      i = { load: w, reset: A }
      _()
      return i
    }
    D.__dashjs_factory_name = 'ManifestLoader'
    var O = w['default'].getClassFactory(D)
    t['default'] = O
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(2)
    var a = n(i)
    var s = r(4)
    var o = n(s)
    var u = r(0)
    var l = n(u)
    var f = r(1)
    var d = n(f)
    var c = r(6)
    var h = n(c)
    function p() {
      var e = this.context
      var t = (0, a['default'])(e).getInstance()
      var r = undefined,
        n = undefined,
        i = undefined,
        s = undefined,
        u = undefined,
        l = undefined,
        f = undefined,
        c = undefined,
        p = undefined,
        v = undefined,
        g = undefined
      function m() {
        n = (0, d['default'])(e)
          .getInstance()
          .getLogger(r)
      }
      function y(e) {
        if (!e) return
        if (e.manifestModel) {
          c = e.manifestModel
        }
        if (e.dashManifestModel) {
          p = e.dashManifestModel
        }
        if (e.mediaPlayerModel) {
          g = e.mediaPlayerModel
        }
        if (e.manifestLoader) {
          f = e.manifestLoader
        }
        if (e.errHandler) {
          v = e.errHandler
        }
      }
      function _() {
        E()
        t.on(o['default'].STREAMS_COMPOSED, M, this)
        t.on(o['default'].PLAYBACK_STARTED, D, this)
        t.on(o['default'].PLAYBACK_PAUSED, O, this)
        t.on(o['default'].INTERNAL_MANIFEST_LOADED, R, this)
      }
      function T(e) {
        I(e)
      }
      function E() {
        i = NaN
        l = false
        u = true
        S()
      }
      function b() {
        t.off(o['default'].PLAYBACK_STARTED, D, this)
        t.off(o['default'].PLAYBACK_PAUSED, O, this)
        t.off(o['default'].STREAMS_COMPOSED, M, this)
        t.off(o['default'].INTERNAL_MANIFEST_LOADED, R, this)
        E()
      }
      function S() {
        if (s !== null) {
          clearInterval(s)
          s = null
        }
      }
      function w(e) {
        S()
        if (isNaN(e) && !isNaN(i)) {
          e = i * 1e3
        }
        if (!isNaN(e)) {
          n.debug('Refresh manifest in ' + e + ' milliseconds.')
          s = setTimeout(C, e)
        }
      }
      function A() {
        l = true
        var e = c.getValue()
        var t = e.url
        var r = p.getLocation(e)
        if (r) {
          t = r
        }
        f.load(t)
      }
      function I(e) {
        c.setValue(e)
        var r = new Date()
        var a = (r.getTime() - e.loadedTime.getTime()) / 1e3
        i = p.getManifestUpdatePeriod(e, a)
        if (i * 1e3 > 2147483647) {
          i = 2147483647 / 1e3
        }
        t.trigger(o['default'].MANIFEST_UPDATED, { manifest: e })
        n.info('Manifest has been refreshed at ' + r + '[' + r.getTime() / 1e3 + '] ')
        if (!u) {
          w()
        }
      }
      function C() {
        if (u && !g.getScheduleWhilePaused()) {
          return
        }
        if (l) {
          w(g.getManifestUpdateRetryInterval())
          return
        }
        A()
      }
      function R(e) {
        if (!e.error) {
          I(e.manifest)
        } else if (e.error.code === h['default'].MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE) {
          v.error(e.error)
        }
      }
      function D() {
        u = false
        w()
      }
      function O() {
        u = true
        S()
      }
      function M() {
        l = false
      }
      r = { initialize: _, setManifest: T, refreshManifest: A, setConfig: y, reset: b }
      m()
      return r
    }
    p.__dashjs_factory_name = 'ManifestUpdater'
    t['default'] = l['default'].getClassFactory(p)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(107)
    var a = n(i)
    function s() {
      var e = 'application/dash+xml'
      var t = undefined
      function r(r, n, i) {
        if (!r || !/^VIDEO$/i.test(r.nodeName)) return null
        if (r._dashjs_player) return r._dashjs_player
        var s = undefined
        var o = r.id || r.name || 'video element'
        n =
          n ||
          [].slice.call(r.querySelectorAll('source')).filter(function(t) {
            return t.type == e
          })[0]
        if (!n && r.src) {
          n = document.createElement('source')
          n.src = r.src
        } else if (!n && !r.src) {
          return null
        }
        i = i || {}
        s = (0, a['default'])(i).create()
        s.initialize(r, n.src, r.autoplay)
        if (!t) {
          t = s.getDebug().getLogger()
        }
        t.debug('Converted ' + o + ' to dash.js player and added content: ' + n.src)
        r._dashjs_player = s
        return s
      }
      function n(t, n) {
        var a = []
        t = t || '[data-dashjs-player]'
        n = n || document
        var s = n.querySelectorAll(t)
        for (var o = 0; o < s.length; o++) {
          var u = r(s[o], null)
          a.push(u)
        }
        var l = n.querySelectorAll('source[type="' + e + '"]')
        for (var o = 0; o < l.length; o++) {
          var f = i(l[o])
          var u = r(f, null)
          a.push(u)
        }
        return a
      }
      function i(e) {
        var t = true
        e: while (t) {
          var r = e
          t = false
          if (/^VIDEO$/i.test(r.nodeName)) {
            return r
          } else {
            e = r.parentNode
            t = true
            continue e
          }
        }
      }
      return { create: r, createAll: n }
    }
    var o = s()
    var u = undefined
    function l() {
      window.removeEventListener('load', l)
      o.createAll()
    }
    function f() {
      if (window.dashjs) {
        window.clearInterval(u)
        o.createAll()
      }
    }
    var d = typeof window !== 'undefined' && window && window.dashjs && window.dashjs.skipAutoCreate
    if (!d && typeof window !== 'undefined' && window && window.addEventListener) {
      if (window.document.readyState === 'complete') {
        if (window.dashjs) {
          o.createAll()
        } else {
          u = window.setInterval(f, 500)
        }
      } else {
        window.addEventListener('load', l)
      }
    }
    t['default'] = o
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(1)
    var a = n(i)
    var s = r(0)
    var o = n(s)
    function u(e) {
      var t = this.context
      var r = undefined,
        n = undefined,
        i = undefined
      var s = []
      var o = e
      function u() {
        n = (0, a['default'])(t)
          .getInstance()
          .getLogger(r)
      }
      function l() {
        s = []
        i = null
        o = null
      }
      function f(e) {
        if (e.segmentType !== 'InitializationSegment') {
          s.push(e)
          s.sort(function(e, t) {
            return e.start - t.start
          })
          i = null
        } else {
          i = e
        }
        n.debug('PreBufferSink appended chunk s: ' + e.start + '; e: ' + e.end)
        if (o) {
          o({ chunk: e })
        }
      }
      function d(e, t) {
        s = s.filter(function(r) {
          return !((isNaN(t) || r.start < t) && (isNaN(e) || r.end > e))
        })
      }
      function c() {}
      function h() {
        var e = []
        for (var t = 0; t < s.length; t++) {
          var r = s[t]
          if (e.length === 0 || r.start > e[e.length - 1].end) {
            e.push({ start: r.start, end: r.end })
          } else {
            e[e.length - 1].end = r.end
          }
        }
        var n = {
          start: function t(r) {
            return e[r].start
          },
          end: function t(r) {
            return e[r].end
          },
        }
        Object.defineProperty(n, 'length', {
          get: function t() {
            return e.length
          },
        })
        return n
      }
      function p() {
        return false
      }
      function v() {}
      function g(e, t) {
        var r = m(e, t)
        if (i) {
          r.push(i)
          i = null
        }
        d(e, t)
        return r
      }
      function m(e, t) {
        return s.filter(function(r) {
          return (isNaN(t) || r.start < t) && (isNaN(e) || r.end > e)
        })
      }
      r = {
        getAllBufferRanges: h,
        append: f,
        remove: d,
        abort: c,
        discharge: g,
        reset: l,
        updateTimestampOffset: v,
        hasDiscontinuitiesAfter: p,
      }
      u()
      return r
    }
    u.__dashjs_factory_name = 'PreBufferSink'
    var l = o['default'].getClassFactory(u)
    t['default'] = l
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(218)
    var o = n(s)
    var u = r(221)
    var l = n(u)
    var f = r(222)
    var d = n(f)
    var c = r(286)
    var h = n(c)
    var p = r(2)
    var v = n(p)
    var g = r(4)
    var m = n(g)
    var y = r(1)
    var _ = n(y)
    var T = r(6)
    var E = n(T)
    var b = r(0)
    var S = n(b)
    var w = r(5)
    var A = n(w)
    function I(e) {
      e = e || {}
      var t = this.context
      var r = (0, v['default'])(t).getInstance()
      var n = e.manifestModel
      var i = e.dashManifestModel
      var s = e.mediaPlayerModel
      var u = e.manifestUpdater
      var f = e.adapter
      var c = e.capabilities
      var p = e.errHandler
      var g = e.timelineConverter
      var y = e.metricsModel
      var T = e.abrController
      var b = e.playbackController
      var S = e.mediaController
      var w = e.textController
      var I = e.videoModel
      var C = undefined,
        R = undefined,
        D = undefined,
        O = undefined,
        M = undefined,
        k = undefined,
        P = undefined,
        N = undefined,
        L = undefined,
        x = undefined,
        F = undefined,
        U = undefined,
        B = undefined,
        j = undefined
      var G = [
        { codec: 'avc1', compatibleCodecs: ['avc3'] },
        { codec: 'avc3', compatibleCodecs: ['avc1'] },
      ]
      function q() {
        R = (0, _['default'])(t)
          .getInstance()
          .getLogger(C)
        J()
        x = (0, d['default'])(t).create({ mediaPlayerModel: s, metricsModel: y, errHandler: p })
        H()
      }
      function H() {
        r.on(m['default'].BUFFERING_COMPLETED, we, C)
        r.on(m['default'].DATA_UPDATE_COMPLETED, Ae, C)
      }
      function V() {
        r.off(m['default'].DATA_UPDATE_COMPLETED, Ae, C)
        r.off(m['default'].BUFFERING_COMPLETED, we, C)
      }
      function K() {
        if (L) {
          r.on(m['default'].KEY_ERROR, fe, C)
          r.on(m['default'].SERVER_CERTIFICATE_UPDATED, fe, C)
          r.on(m['default'].LICENSE_REQUEST_COMPLETE, fe, C)
          r.on(m['default'].KEY_SYSTEM_SELECTED, fe, C)
          r.on(m['default'].KEY_SESSION_CREATED, fe, C)
          r.on(m['default'].KEY_STATUSES_CHANGED, fe, C)
        }
      }
      function Y() {
        if (L) {
          r.off(m['default'].KEY_ERROR, fe, C)
          r.off(m['default'].SERVER_CERTIFICATE_UPDATED, fe, C)
          r.off(m['default'].LICENSE_REQUEST_COMPLETE, fe, C)
          r.off(m['default'].KEY_SYSTEM_SELECTED, fe, C)
          r.off(m['default'].KEY_SESSION_CREATED, fe, C)
          r.off(m['default'].KEY_STATUSES_CHANGED, fe, C)
        }
      }
      function W(e, t) {
        k = e
        L = t
        K()
      }
      function z(e, t) {
        if (!O) {
          var n = undefined
          r.on(m['default'].CURRENT_TRACK_CHANGED, ce, C)
          if (!Le()) {
            n = ye(e, t)
          } else {
            _e()
            n = t
          }
          O = true
          return n
        }
        return t
      }
      function X(e) {
        var t = D ? D.length : 0
        var n = false
        for (var i = 0; i < t; i++) {
          var a = D[i].getFragmentModel()
          a.removeExecutedRequestsBeforeTime(te() + ee())
          D[i].reset(n, e)
        }
        D = []
        O = false
        M = false
        Ne(false)
        r.off(m['default'].CURRENT_TRACK_CHANGED, ce, C)
      }
      function $() {
        return O
      }
      function Q(e) {
        for (var t = 0; t < D.length; ) {
          if (de(D[t].getMediaInfo())) {
            D[t].setMediaSource(e)
            t++
          } else {
            D[t].reset()
            D.splice(t, 1)
          }
        }
        for (var t = 0; t < D.length; t++) {
          D[t].dischargePreBuffer()
        }
        if (D.length === 0) {
          var r = 'No streams to play.'
          p.manifestError(r, 'nostreams', n.getValue())
          p.error(
            new A['default'](
              E['default'].MANIFEST_ERROR_ID_NOSTREAMS_CODE,
              r + 'nostreams',
              n.getValue()
            )
          )
          R.fatal(r)
        }
      }
      function J() {
        X()
        k = null
        P = {}
        N = false
      }
      function Z() {
        if (b) {
          b.pause()
        }
        if (x) {
          x.reset()
          x = null
        }
        J()
        V()
        Y()
        Ne(false)
      }
      function ee() {
        return k ? k.duration : NaN
      }
      function te() {
        return k ? k.start : NaN
      }
      function re() {
        return k ? k.id : null
      }
      function ne() {
        return k
      }
      function ie() {
        return x
      }
      function ae() {
        return F
      }
      function se() {
        if (
          !T ||
          !T.hasOwnProperty('getBitrateList') ||
          !f ||
          !f.hasOwnProperty('getAllMediaInfoForType') ||
          !f.hasOwnProperty('getEventsFor')
        ) {
          throw new Error(a['default'].MISSING_CONFIG_ERROR)
        }
      }
      function oe(e) {
        se()
        if (e === a['default'].IMAGE) {
          if (!F) {
            return []
          }
          return F.getBitrateList()
        }
        var t = be(e)
        return T.getBitrateList(t)
      }
      function ue() {
        if (U) {
          U.start()
        }
      }
      function le() {
        if (U) {
          U.stop()
        }
      }
      function fe(e) {
        if (e.error) {
          p.mediaKeySessionError(e.error.message)
          p.error(e.error)
          R.fatal(e.error.message)
          Z()
        }
      }
      function de(e) {
        var t = e.type
        var r = undefined,
          i = undefined
        if (t === a['default'].MUXED && e) {
          i =
            'Multiplexed representations are intentionally not supported, as they are not compliant with the DASH-AVC/264 guidelines'
          R.fatal(i)
          p.manifestError(i, 'multiplexedrep', n.getValue())
          p.error(
            new A['default'](E['default'].MANIFEST_ERROR_ID_MULTIPLEXED_CODE, i, n.getValue())
          )
          return false
        }
        if (
          t === a['default'].TEXT ||
          t === a['default'].FRAGMENTED_TEXT ||
          t === a['default'].EMBEDDED_TEXT ||
          t === a['default'].IMAGE
        ) {
          return true
        }
        r = e.codec
        R.debug(t + ' codec: ' + r)
        if (!!e.contentProtection && !c.supportsEncryptedMedia()) {
          p.capabilityError('encryptedmedia')
          p.error(
            new A['default'](
              E['default'].CAPABILITY_MEDIAKEYS_ERROR_CODE,
              E['default'].CAPABILITY_MEDIAKEYS_ERROR_MESSAGE
            )
          )
        } else if (!c.supportsCodec(r)) {
          i = t + 'Codec (' + r + ') is not supported.'
          R.error(i)
          return false
        }
        return true
      }
      function ce(e) {
        if (e.newMediaInfo.streamInfo.id !== k.id) return
        var t = Ie(e.newMediaInfo)
        if (!t) return
        var r = b.getTime()
        R.info('Stream -  Process track changed at current time ' + r)
        var i = e.newMediaInfo
        var s = n.getValue()
        f.setCurrentMediaInfo(k.id, i.type, i)
        R.debug('Stream -  Update stream controller')
        if (s.refreshManifestOnSwitchTrack) {
          R.debug('Stream -  Refreshing manifest for switch track')
          j = e
          u.refreshManifest()
        } else {
          t.selectMediaInfo(i)
          if (i.type !== a['default'].FRAGMENTED_TEXT) {
            T.updateTopQualityIndex(i)
            t.switchTrackAsked()
            t.getFragmentModel().abortRequests()
          } else {
            t.getScheduleController().setSeekTarget(NaN)
            f.setIndexHandlerTime(t, r)
            f.resetIndexHandler(t)
          }
        }
      }
      function he(r, u, l, d) {
        var c = (0, o['default'])(t).create({
          type: r.type,
          mimeType: r.mimeType,
          timelineConverter: g,
          adapter: f,
          manifestModel: n,
          dashManifestModel: i,
          mediaPlayerModel: s,
          metricsModel: y,
          dashMetrics: e.dashMetrics,
          baseURLController: e.baseURLController,
          stream: C,
          abrController: T,
          domStorage: e.domStorage,
          playbackController: b,
          mediaController: S,
          streamController: e.streamController,
          textController: w,
          errHandler: p,
        })
        c.initialize(l)
        T.updateTopQualityIndex(r)
        if (d) {
          c.setBuffer(d.buffer)
          c.getIndexHandler().setCurrentTime(d.currentTime)
          D[d.replaceIdx] = c
        } else {
          D.push(c)
        }
        if (d && d.ignoreMediaInfo) {
          return
        }
        if (r.type === a['default'].TEXT || r.type === a['default'].FRAGMENTED_TEXT) {
          var h = undefined
          for (var v = 0; v < u.length; v++) {
            if (u[v].index === r.index) {
              h = v
            }
            c.addMediaInfo(u[v])
          }
          c.selectMediaInfo(u[h])
        } else {
          c.addMediaInfo(r, true)
        }
      }
      function pe(r, n) {
        var s = f.getAllMediaInfoForType(k, r)
        var o = null
        var u = undefined
        if (!s || s.length === 0) {
          R.info('No ' + r + ' data.')
          return
        }
        for (var l = 0, d = s.length; l < d; l++) {
          o = s[l]
          if (r === a['default'].EMBEDDED_TEXT) {
            w.addEmbeddedTrack(o)
          } else {
            if (!de(o)) continue
            S.addTrack(o)
          }
        }
        if (r === a['default'].EMBEDDED_TEXT || S.getTracksFor(r, k).length === 0) {
          return
        }
        if (r === a['default'].IMAGE) {
          F = (0, h['default'])(t).create({
            dashManifestModel: i,
            adapter: f,
            baseURLController: e.baseURLController,
            stream: C,
            timelineConverter: e.timelineConverter,
          })
          return
        }
        if (
          r !== a['default'].FRAGMENTED_TEXT ||
          (r === a['default'].FRAGMENTED_TEXT && w.getTextDefaultEnabled())
        ) {
          S.checkInitialMediaSettingsForType(r, k)
          u = S.getCurrentTrackFor(r, k)
        }
        if (r === a['default'].FRAGMENTED_TEXT && !w.getTextDefaultEnabled()) {
          u = S.getTracksFor(r, k)[0]
        }
        he(u, s, n)
      }
      function ve() {
        if (!U) {
          U = (0, l['default'])(t).create()
          U.setConfig({ manifestUpdater: u, playbackController: b })
          ge()
        }
      }
      function ge() {
        var e = f.getEventsFor(k)
        U.addInlineEvents(e)
      }
      function me(e) {
        if (U) {
          U.addInbandEvents(e)
        }
      }
      function ye(e, t) {
        se()
        var r = I.getElement()
        ve()
        N = true
        Te(a['default'].VIDEO)
        Te(a['default'].AUDIO)
        if (r === null || (r && /^VIDEO$/i.test(r.nodeName))) {
          pe(a['default'].VIDEO, e)
        }
        pe(a['default'].AUDIO, e)
        pe(a['default'].TEXT, e)
        pe(a['default'].FRAGMENTED_TEXT, e)
        pe(a['default'].EMBEDDED_TEXT, e)
        pe(a['default'].MUXED, e)
        pe(a['default'].IMAGE, e)
        var i = Se(t)
        M = true
        N = false
        if (D.length === 0) {
          var s = 'No streams to play.'
          p.manifestError(s, 'nostreams', n.getValue())
          p.error(new A['default'](E['default'].MANIFEST_ERROR_ID_NOSTREAMS_CODE, s, n.getValue()))
          R.fatal(s)
        } else {
          Ee()
        }
        return i
      }
      function _e() {
        N = true
        se()
        Te(a['default'].VIDEO)
        Te(a['default'].AUDIO)
        M = true
        N = false
        if (D.length === 0) {
          var e = 'No streams to play.'
          p.manifestError(e, 'nostreams', n.getValue())
          R.debug(e)
        } else {
          Ee()
        }
      }
      function Te(e) {
        var t = f.getAdaptationForType(n.getValue(), k.index, e, k)
        if (!t || !Array.isArray(t.Representation_asArray)) return
        t.Representation_asArray = t.Representation_asArray.filter(function(e, r) {
          if (r === 0) return true
          var n = i.getCodec(t, r, true)
          if (!c.supportsCodec(n)) {
            R.error('[Stream] codec not supported: ' + n)
            return false
          }
          return true
        })
      }
      function Ee() {
        var e = D.length
        var t = !!P.audio || !!P.video
        var n = t
          ? new A['default'](
              E['default'].DATA_UPDATE_FAILED_ERROR_CODE,
              E['default'].DATA_UPDATE_FAILED_ERROR_MESSAGE
            )
          : null
        for (var i = 0; i < e; i++) {
          if (D[i].isUpdating() || N) {
            return
          }
        }
        if (!M) {
          return
        }
        if (L) {
          for (var i = 0; i < e && D[i]; i++) {
            if (
              D[i].getType() === a['default'].AUDIO ||
              D[i].getType() === a['default'].VIDEO ||
              D[i].getType() === a['default'].FRAGMENTED_TEXT
            ) {
              L.initializeForMedia(D[i].getMediaInfo())
            }
          }
        }
        r.trigger(m['default'].STREAM_INITIALIZED, { streamInfo: k, error: n })
      }
      function be(e) {
        var t = D.length
        var r = null
        for (var n = 0; n < t; n++) {
          r = D[n]
          if (r.getType() === e) {
            return r.getMediaInfo()
          }
        }
        return null
      }
      function Se(e) {
        var t = {}
        for (var r = 0, n = D.length; r < n; r++) {
          t[D[r].getType()] = D[r].createBuffer(e).getBuffer()
        }
        return t
      }
      function we(e) {
        if (e.streamInfo !== k) {
          return
        }
        var t = Ce()
        var n = t.length
        if (n === 0) {
          R.warn(
            "onBufferingCompleted - can't trigger STREAM_BUFFERING_COMPLETED because no streamProcessor is defined"
          )
          return
        }
        for (var i = 0; i < n; i++) {
          if (
            !t[i].isBufferingCompleted() &&
            (t[i].getType() === a['default'].AUDIO || t[i].getType() === a['default'].VIDEO)
          ) {
            R.warn(
              'onBufferingCompleted - One streamProcessor has finished but',
              t[i].getType(),
              'one is not buffering completed'
            )
            return
          }
        }
        R.debug('onBufferingCompleted - trigger STREAM_BUFFERING_COMPLETED')
        r.trigger(m['default'].STREAM_BUFFERING_COMPLETED, { streamInfo: k })
      }
      function Ae(e) {
        var t = e.sender.getStreamProcessor()
        if (t.getStreamInfo() !== k) {
          return
        }
        P[t.getType()] = e.error
        Ee()
      }
      function Ie(e) {
        if (!e) {
          return null
        }
        var t = Ce()
        return t.filter(function(t) {
          return t.getType() === e.type
        })[0]
      }
      function Ce() {
        var e = D.length
        var t = []
        var r = undefined,
          n = undefined
        for (var i = 0; i < e; i++) {
          n = D[i]
          r = n.getType()
          if (
            r === a['default'].AUDIO ||
            r === a['default'].VIDEO ||
            r === a['default'].FRAGMENTED_TEXT ||
            r === a['default'].TEXT
          ) {
            t.push(n)
          }
        }
        return t
      }
      function Re(e) {
        R.info('Manifest updated... updating data system wide.')
        O = false
        N = true
        k = e
        if (U) {
          ge()
        }
        Te(a['default'].VIDEO)
        Te(a['default'].AUDIO)
        for (var t = 0, r = D.length; t < r; t++) {
          var n = D[t]
          var i = f.getMediaInfoForType(k, n.getType())
          T.updateTopQualityIndex(i)
          n.addMediaInfo(i, true)
        }
        if (j) {
          var i = j.newMediaInfo
          if (i.type !== 'fragmentedText') {
            var s = Ie(j.oldMediaInfo)
            if (!s) return
            s.switchTrackAsked()
            j = undefined
          }
        }
        N = false
        Ee()
      }
      function De(e) {
        return ke(e, a['default'].VIDEO) && ke(e, a['default'].AUDIO)
      }
      function Oe(e) {
        return Me(e, a['default'].VIDEO) && Me(e, a['default'].AUDIO)
      }
      function Me(e, t) {
        if (!e) {
          return false
        }
        var r = e.getStreamInfo()
        var i = ne()
        if (!r || !i) {
          return false
        }
        var a = f.getAdaptationForType(n.getValue(), r.index, t, r)
        var s = f.getAdaptationForType(n.getValue(), i.index, t, i)
        if (!a || !s) {
          return !a && !s
        }
        if (a.ContentProtection || s.ContentProtection) {
          return false
        }
        return true
      }
      function ke(e, t) {
        if (!e) {
          return false
        }
        var r = e.getStreamInfo()
        var i = ne()
        if (!r || !i) {
          return false
        }
        var a = f.getAdaptationForType(n.getValue(), r.index, t, r)
        var s = f.getAdaptationForType(n.getValue(), i.index, t, i)
        if (!a || !s) {
          return !a && !s
        }
        var o = a && s && a.mimeType === s.mimeType
        var u = s.Representation_asArray.map(function(e) {
          return e.codecs
        })
        var l = a.Representation_asArray.map(function(e) {
          return e.codecs
        })
        var d = l.some(function(e) {
          return u.indexOf(e) > -1
        })
        var c = l.some(function(e) {
          return u.some(function(t) {
            return Pe(t, e)
          })
        })
        return d || (c && o)
      }
      function Pe(e, t) {
        var r = e.split('.')[0]
        var n = t.indexOf(r) === 0
        var i = undefined
        for (var a = 0; a < G.length; a++) {
          if (G[a].codec === r) {
            i = G[a]
            break
          }
        }
        if (i) {
          return (
            n ||
            i.compatibleCodecs.some(function(e) {
              return t.indexOf(e) === 0
            })
          )
        }
        return n
      }
      function Ne(e) {
        B = e
      }
      function Le() {
        return B
      }
      function xe(e, t) {
        ve()
        pe(a['default'].VIDEO, e)
        pe(a['default'].AUDIO, e)
        pe(a['default'].TEXT, e)
        pe(a['default'].FRAGMENTED_TEXT, e)
        pe(a['default'].EMBEDDED_TEXT, e)
        pe(a['default'].MUXED, e)
        pe(a['default'].IMAGE, e)
        Se(t)
        r.on(m['default'].CURRENT_TRACK_CHANGED, ce, C)
        for (var n = 0; n < D.length && D[n]; n++) {
          D[n].getScheduleController().start()
        }
        Ne(true)
      }
      C = {
        initialize: W,
        activate: z,
        deactivate: X,
        isActive: $,
        getDuration: ee,
        getStartTime: te,
        getId: re,
        getStreamInfo: ne,
        preload: xe,
        getFragmentController: ie,
        getThumbnailController: ae,
        getBitrateListFor: oe,
        startEventController: ue,
        stopEventController: le,
        updateData: Re,
        reset: Z,
        getProcessors: Ce,
        setMediaSource: Q,
        isMediaCodecCompatible: De,
        isProtectionCompatible: Oe,
        getPreloaded: Le,
        addInbandEvents: me,
      }
      q()
      return C
    }
    I.__dashjs_factory_name = 'Stream'
    t['default'] = S['default'].getClassFactory(I)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(293)
    var o = n(s)
    var u = r(20)
    var l = n(u)
    var f = r(284)
    var d = n(f)
    var c = r(225)
    var h = n(c)
    var p = r(191)
    var v = n(p)
    var g = r(0)
    var m = n(g)
    var y = r(188)
    var _ = n(y)
    function T(e) {
      e = e || {}
      var t = this.context
      var r = e.type
      var n = e.errHandler
      var i = e.mimeType
      var s = e.timelineConverter
      var u = e.adapter
      var f = e.manifestModel
      var c = e.mediaPlayerModel
      var p = e.stream
      var g = e.abrController
      var m = e.playbackController
      var y = e.streamController
      var T = e.mediaController
      var E = e.textController
      var b = e.domStorage
      var S = e.metricsModel
      var w = e.dashMetrics
      var A = e.dashManifestModel
      var I = undefined,
        C = undefined,
        R = undefined,
        D = undefined,
        O = undefined,
        M = undefined,
        k = undefined,
        P = undefined,
        N = undefined,
        L = undefined
      function x() {
        if (m && m.getIsDynamic()) {
          M = (0, o['default'])(t).create({ timelineConverter: s, streamProcessor: I })
        }
        q()
      }
      function F(a) {
        L = (0, _['default'])(t).create({
          mimeType: i,
          timelineConverter: s,
          dashMetrics: w,
          metricsModel: S,
          mediaPlayerModel: c,
          baseURLController: e.baseURLController,
          errHandler: n,
        })
        L.initialize(I)
        g.registerStreamType(r, I)
        P = p.getFragmentController().getModel(r)
        P.setStreamProcessor(I)
        D = me(r)
        O = (0, h['default'])(t).create({
          type: r,
          mimeType: i,
          metricsModel: S,
          adapter: u,
          dashMetrics: w,
          dashManifestModel: A,
          timelineConverter: s,
          mediaPlayerModel: c,
          abrController: g,
          playbackController: m,
          streamController: y,
          textController: E,
          streamProcessor: I,
          mediaController: T,
        })
        k = (0, v['default'])(t).create()
        k.setConfig({
          abrController: g,
          domStorage: b,
          metricsModel: S,
          dashMetrics: w,
          dashManifestModel: A,
          manifestModel: f,
          playbackController: m,
          timelineConverter: s,
          streamProcessor: I,
        })
        D.initialize(a)
        O.initialize()
        k.initialize()
      }
      function U(e) {
        N.push(e)
      }
      function B(e) {
        var t = N.indexOf(e)
        if (t !== -1) {
          N.splice(t, 1)
        }
      }
      function j() {
        return N
      }
      function G() {
        N = []
      }
      function q() {
        R = []
        C = null
        G()
      }
      function H(e, t) {
        L.reset()
        if (D) {
          D.reset(e, t)
          D = null
        }
        if (O) {
          O.reset()
          O = null
        }
        if (k) {
          k.reset()
          k = null
        }
        if (g) {
          g.unRegisterStreamType(r)
        }
        N.forEach(function(e) {
          e.reset()
        })
        q()
        r = null
        p = null
        if (M) {
          M.reset()
          M = null
        }
      }
      function V() {
        return k ? k.isUpdating() : false
      }
      function K() {
        return r
      }
      function Y() {
        return k
      }
      function W() {
        return L
      }
      function z() {
        return p ? p.getFragmentController() : null
      }
      function X() {
        return D.getBuffer()
      }
      function $(e) {
        D.setBuffer(e)
      }
      function Q() {
        return D
      }
      function J() {
        return P
      }
      function Z() {
        return M
      }
      function ee() {
        return p ? p.getStreamInfo() : null
      }
      function te(e) {
        if (p) {
          p.addInbandEvents(e)
        }
      }
      function re(e) {
        if (e !== C && (!e || !C || e.type === C.type)) {
          C = e
        }
        u.updateData(this)
      }
      function ne(e, t) {
        if (R.indexOf(e) === -1) {
          R.push(e)
        }
        if (t) {
          this.selectMediaInfo(e)
        }
      }
      function ie() {
        return R
      }
      function ae() {
        return C
      }
      function se() {
        return D.getMediaSource()
      }
      function oe(e) {
        D.setMediaSource(e, ae())
      }
      function ue() {
        D.dischargePreBuffer()
      }
      function le() {
        return O
      }
      function fe(e) {
        return u.getRepresentationInfo(k, e)
      }
      function de() {
        if (D) {
          return D.getIsBufferingCompleted()
        }
        return false
      }
      function ce(e) {
        if (D) {
          return D.getRangeAt(e, 0) !== null
        }
        return false
      }
      function he() {
        return D.getBufferLevel()
      }
      function pe(e, t) {
        if (D) {
          D.switchInitData(ee().id, e, t)
        }
      }
      function ve(e) {
        return D.getBuffer() || D.createBuffer(C, e)
      }
      function ge() {
        O.switchTrackAsked()
      }
      function me(e) {
        var r = null
        if (e === a['default'].VIDEO || e === a['default'].AUDIO) {
          r = (0, l['default'])(t).create({
            type: e,
            metricsModel: S,
            mediaPlayerModel: c,
            manifestModel: f,
            errHandler: n,
            streamController: y,
            mediaController: T,
            adapter: u,
            textController: E,
            abrController: g,
            playbackController: m,
            streamProcessor: I,
          })
        } else {
          r = (0, d['default'])(t).create({
            type: e,
            mimeType: i,
            metricsModel: S,
            mediaPlayerModel: c,
            manifestModel: f,
            errHandler: n,
            streamController: y,
            mediaController: T,
            adapter: u,
            textController: E,
            abrController: g,
            playbackController: m,
            streamProcessor: I,
          })
        }
        return r
      }
      I = {
        initialize: F,
        isUpdating: V,
        getType: K,
        getBufferController: Q,
        getFragmentModel: J,
        getScheduleController: le,
        getLiveEdgeFinder: Z,
        getFragmentController: z,
        getRepresentationController: Y,
        getIndexHandler: W,
        getRepresentationInfo: fe,
        getBufferLevel: he,
        switchInitData: pe,
        isBufferingCompleted: de,
        timeIsBuffered: ce,
        createBuffer: ve,
        getStreamInfo: ee,
        selectMediaInfo: re,
        addMediaInfo: ne,
        switchTrackAsked: ge,
        getMediaInfoArr: ie,
        getMediaInfo: ae,
        getMediaSource: se,
        setMediaSource: oe,
        dischargePreBuffer: ue,
        getBuffer: X,
        setBuffer: $,
        registerExternalController: U,
        unregisterExternalController: B,
        getExternalControllers: j,
        unregisterAllExternalController: G,
        addInbandEvents: te,
        reset: H,
      }
      x()
      return I
    }
    T.__dashjs_factory_name = 'StreamProcessor'
    t['default'] = m['default'].getClassFactory(T)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(5)
    var a = n(i)
    var s = r(34)
    var o = n(s)
    var u = r(7)
    var l = r(119)
    var f = n(l)
    var d = r(2)
    var c = n(d)
    var h = r(4)
    var p = n(h)
    var v = r(0)
    var g = n(v)
    var m = r(6)
    var y = n(m)
    function _(e) {
      e = e || {}
      var t = 'urn:mpeg:dash:resolve-to-zero:2013'
      var r = this.context
      var n = (0, c['default'])(r).getInstance()
      var i = (0, o['default'])(r).create({
        errHandler: e.errHandler,
        metricsModel: e.metricsModel,
        mediaPlayerModel: e.mediaPlayerModel,
        requestModifier: e.requestModifier,
      })
      var s = undefined
      function l(e, r, s) {
        var o = function t(i, o) {
          r.resolved = true
          r.resolvedContent = i ? i : null
          n.trigger(p['default'].XLINK_ELEMENT_LOADED, {
            element: r,
            resolveObject: s,
            error:
              i || o
                ? null
                : new a['default'](
                    y['default'].XLINK_LOADER_LOADING_FAILURE_ERROR_CODE,
                    y['default'].XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE + e
                  ),
          })
        }
        if (e === t) {
          o(null, true)
        } else {
          var l = new f['default'](e, u.HTTPRequest.XLINK_EXPANSION_TYPE)
          i.load({
            request: l,
            success: function e(t) {
              o(t)
            },
            error: function e() {
              o(null)
            },
          })
        }
      }
      function d() {
        if (i) {
          i.abort()
          i = null
        }
      }
      s = { load: l, reset: d }
      return s
    }
    _.__dashjs_factory_name = 'XlinkLoader'
    t['default'] = g['default'].getClassFactory(_)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(2)
    var o = n(s)
    function u(e) {
      e = e || {}
      var t = []
      var r = (0, o['default'])(this.context).getInstance()
      var n = e.updateEventName
      var i = e.addBlacklistEventName
      function a(e) {
        if (!t.length || !e || !e.length) {
          return false
        }
        return t.indexOf(e) !== -1
      }
      function s(e) {
        if (t.indexOf(e) !== -1) {
          return
        }
        t.push(e)
        r.trigger(n, { entry: e })
      }
      function u(e) {
        s(e.entry)
      }
      function l() {
        if (i) {
          r.on(i, u, this)
        }
      }
      function f() {
        t = []
      }
      l()
      return { add: s, contains: a, reset: f }
    }
    u.__dashjs_factory_name = 'BlackListController'
    t['default'] = a['default'].getClassFactory(u)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(1)
    var o = n(s)
    var u = r(2)
    var l = n(u)
    var f = r(4)
    var d = n(f)
    var c = r(66)
    var h = n(c)
    function p() {
      var e = 'urn:mpeg:dash:event:2012'
      var t = 1
      var r = 'urn:mpeg:dash:event:callback:2015'
      var n = 1
      var i = this.context
      var a = (0, l['default'])(i).getInstance()
      var s = undefined,
        u = undefined,
        f = undefined,
        c = undefined,
        p = undefined,
        v = undefined,
        g = undefined,
        m = undefined,
        y = undefined,
        _ = undefined,
        T = undefined
      function E() {
        u = (0, o['default'])(i)
          .getInstance()
          .getLogger(s)
        b()
      }
      function b() {
        T = false
        f = {}
        c = {}
        p = {}
        v = null
        g = 100
        m = Date.now() / 1e3
      }
      function S() {
        if (!y || !_) {
          throw new Error('setConfig function has to be called previously')
        }
      }
      function w() {
        if (v !== null && T) {
          clearInterval(v)
          v = null
          T = false
        }
      }
      function A() {
        S()
        u.debug('Start Event Controller')
        if (!T && !isNaN(g)) {
          T = true
          v = setInterval(O, g)
        }
      }
      function I(e) {
        S()
        f = {}
        if (e) {
          for (var t = 0; t < e.length; t++) {
            var r = e[t]
            f[r.id] = r
            u.debug('Add inline event with id ' + r.id)
          }
        }
        u.debug('Added ' + e.length + ' inline events')
      }
      function C(t) {
        S()
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          if (!(n.id in c)) {
            if (n.eventStream.schemeIdUri === e && c[n.id] === undefined) {
              R(n)
            }
            c[n.id] = n
            u.debug('Add inband event with id ' + n.id)
          } else {
            u.debug('Repeated event with id ' + n.id)
          }
        }
      }
      function R(e) {
        if (e.eventStream.value == t) {
          var r = e.eventStream.timescale || 1
          var n = e.presentationTime / r
          var i = undefined
          if (e.presentationTime == 4294967295) {
            i = NaN
          } else {
            i = (e.presentationTime + e.duration) / r
          }
          u.info('Manifest validity changed: Valid until: ' + n + '; remaining duration: ' + i)
          a.trigger(d['default'].MANIFEST_VALIDITY_CHANGED, {
            id: e.id,
            validUntil: n,
            newDuration: i,
            newManifestValidAfter: NaN,
          })
        }
      }
      function D() {
        if (p) {
          var e = _.getTime()
          var t = Object.keys(p)
          for (var r = 0; r < t.length; r++) {
            var n = t[r]
            var i = p[n]
            if (i !== null && (i.duration + i.presentationTime) / i.eventStream.timescale < e) {
              u.debug('Remove Event ' + n + ' at time ' + e)
              i = null
              delete p[n]
            }
          }
        }
      }
      function O() {
        var e = _.getTime()
        var t = e - m
        m = e
        P(c, t, e)
        P(f, t, e)
        D()
      }
      function M() {
        S()
        y.refreshManifest()
      }
      function k(e) {
        var t = (0, h['default'])(i).create({})
        t.load({ method: 'get', url: e, request: { responseType: 'arraybuffer' } })
      }
      function P(i, s, o) {
        var l
        if (i) {
          var f = Object.keys(i)
          for (var d = 0; d < f.length; d++) {
            var c = f[d]
            var h = i[c]
            if (h !== undefined) {
              l = h.presentationTime / h.eventStream.timescale
              if (l === 0 || (l <= o && l + s > o)) {
                u.debug('Start Event ' + c + ' at ' + o)
                if (h.duration > 0) {
                  p[c] = h
                }
                if (h.eventStream.schemeIdUri == e && h.eventStream.value == t) {
                  if (h.duration !== 0 || h.presentationTimeDelta !== 0) {
                    M()
                  }
                } else if (h.eventStream.schemeIdUri == r && h.eventStream.value == n) {
                  k(h.messageData)
                } else {
                  a.trigger(h.eventStream.schemeIdUri, { event: h })
                }
                delete i[c]
              }
            }
          }
        }
      }
      function N(e) {
        if (!e) return
        if (e.manifestUpdater) {
          y = e.manifestUpdater
        }
        if (e.playbackController) {
          _ = e.playbackController
        }
      }
      function L() {
        w()
        b()
      }
      s = { addInlineEvents: I, addInbandEvents: C, stop: w, start: A, setConfig: N, reset: L }
      E()
      return s
    }
    p.__dashjs_factory_name = 'EventController'
    t['default'] = a['default'].getClassFactory(p)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(7)
    var o = r(298)
    var u = n(o)
    var l = r(46)
    var f = n(l)
    var d = r(212)
    var c = n(d)
    var h = r(48)
    var p = n(h)
    var v = r(2)
    var g = n(v)
    var m = r(4)
    var y = n(m)
    var _ = r(0)
    var T = n(_)
    var E = r(1)
    var b = n(E)
    function S(e) {
      e = e || {}
      var t = this.context
      var r = (0, g['default'])(t).getInstance()
      var n = e.errHandler
      var i = e.mediaPlayerModel
      var o = e.metricsModel
      var l = undefined,
        d = undefined,
        h = undefined
      function v() {
        d = (0, b['default'])(t)
          .getInstance()
          .getLogger(l)
        T()
        r.on(y['default'].FRAGMENT_LOADING_COMPLETED, w, l)
        r.on(y['default'].FRAGMENT_LOADING_PROGRESS, w, l)
      }
      function m(e) {
        var r = h[e]
        if (!r) {
          r = (0, f['default'])(t).create({
            metricsModel: o,
            fragmentLoader: (0, c['default'])(t).create({
              metricsModel: o,
              mediaPlayerModel: i,
              errHandler: n,
              requestModifier: (0, p['default'])(t).getInstance(),
            }),
          })
          h[e] = r
        }
        return r
      }
      function _(e) {
        return e && e.type && e.type === s.HTTPRequest.INIT_SEGMENT_TYPE
      }
      function T() {
        for (var e in h) {
          h[e].reset()
        }
        h = {}
      }
      function E() {
        r.off(y['default'].FRAGMENT_LOADING_COMPLETED, w, this)
        r.off(y['default'].FRAGMENT_LOADING_PROGRESS, w, this)
        T()
      }
      function S(e, t, r, n) {
        var i = new u['default']()
        i.streamId = r
        i.mediaInfo = t.mediaInfo
        i.segmentType = t.type
        i.start = t.startTime
        i.duration = t.duration
        i.end = i.start + i.duration
        i.bytes = e
        i.index = t.index
        i.quality = t.quality
        i.representationId = t.representationId
        i.endFragment = n
        return i
      }
      function w(e) {
        if (h[e.request.mediaType] !== e.sender) {
          return
        }
        var t = e.request
        var n = e.response
        var i = _(t)
        var s = t.mediaInfo.streamInfo
        if (e.error) {
          if (
            e.request.mediaType === a['default'].AUDIO ||
            e.request.mediaType === a['default'].VIDEO ||
            e.request.mediaType === a['default'].FRAGMENTED_TEXT
          ) {
            r.trigger(y['default'].SERVICE_LOCATION_BLACKLIST_ADD, {
              entry: e.request.serviceLocation,
            })
          }
        }
        if (!n || !s) {
          d.warn('No ' + t.mediaType + ' bytes to push or stream is inactive.')
          return
        }
        var o = S(n, t, s.id, e.type !== y['default'].FRAGMENT_LOADING_PROGRESS)
        r.trigger(i ? y['default'].INIT_FRAGMENT_LOADED : y['default'].MEDIA_FRAGMENT_LOADED, {
          chunk: o,
          fragmentModel: e.sender,
        })
      }
      l = { getModel: m, isInitializationRequest: _, reset: E }
      v()
      return l
    }
    S.__dashjs_factory_name = 'FragmentController'
    t['default'] = T['default'].getClassFactory(S)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(1)
    var o = n(s)
    function u() {
      var e = undefined,
        t = undefined
      var r = this.context
      function n() {
        t = (0, o['default'])(r)
          .getInstance()
          .getLogger(e)
      }
      function i() {
        var e = 'WebKitMediaSource' in window
        var t = 'MediaSource' in window
        if (t) {
          return new MediaSource()
        } else if (e) {
          return new WebKitMediaSource()
        }
        return null
      }
      function a(e, t) {
        var r = window.URL.createObjectURL(e)
        t.setSource(r)
        return r
      }
      function s(e) {
        e.setSource(null)
      }
      function u(e, t) {
        if (e.duration != t) e.duration = t
        return e.duration
      }
      function l(e, t, r) {
        if (
          e &&
          typeof e.setLiveSeekableRange === 'function' &&
          typeof e.clearLiveSeekableRange === 'function' &&
          e.readyState === 'open' &&
          t >= 0 &&
          t < r
        ) {
          e.clearLiveSeekableRange()
          e.setLiveSeekableRange(t, r)
        }
      }
      function f(e) {
        var r = e.sourceBuffers
        var n = r.length
        if (e.readyState !== 'open') {
          return
        }
        for (var i = 0; i < n; i++) {
          if (r[i].updating) {
            return
          }
          if (r[i].buffered.length === 0) {
            return
          }
        }
        t.info('call to mediaSource endOfStream')
        e.endOfStream()
      }
      e = {
        createMediaSource: i,
        attachMediaSource: a,
        detachMediaSource: s,
        setDuration: u,
        setSeekable: l,
        signalEndOfStream: f,
      }
      n()
      return e
    }
    u.__dashjs_factory_name = 'MediaSourceController'
    t['default'] = a['default'].getSingletonFactory(u)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(20)
    var o = n(s)
    var u = r(2)
    var l = n(u)
    var f = r(4)
    var d = n(f)
    var c = r(0)
    var h = n(c)
    var p = r(1)
    var v = n(p)
    var g = 500
    function m() {
      var e = this.context
      var t = (0, l['default'])(e).getInstance()
      var r = undefined,
        n = undefined,
        i = undefined,
        s = undefined,
        u = undefined,
        f = undefined,
        c = undefined,
        h = undefined,
        p = undefined,
        m = undefined,
        y = undefined,
        _ = undefined,
        T = undefined,
        E = undefined,
        b = undefined,
        S = undefined,
        w = undefined,
        A = undefined,
        I = undefined,
        C = undefined,
        R = undefined,
        D = undefined,
        O = undefined,
        M = undefined,
        k = undefined,
        P = undefined
      function N() {
        n = (0, v['default'])(e)
          .getInstance()
          .getLogger(r)
        ne()
      }
      function L(e, r) {
        S = e
        Ue()
        w = S.manifestInfo.isDynamic
        O = false
        M = false
        y = S.start
        D = r
        var n = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : ''
        var i = /safari/.test(n) && !/chrome/.test(n)
        k = i ? 0.25 : 0.02
        t.on(d['default'].DATA_UPDATE_COMPLETED, de, this)
        t.on(d['default'].BYTES_APPENDED_END_FRAGMENT, Ne, this)
        t.on(d['default'].LOADING_PROGRESS, Le, this)
        t.on(d['default'].BUFFER_LEVEL_STATE_CHANGED, xe, this)
        t.on(d['default'].PERIOD_SWITCH_STARTED, x, this)
        t.on(d['default'].PLAYBACK_PROGRESS, De, this)
        t.on(d['default'].PLAYBACK_TIME_UPDATED, De, this)
        t.on(d['default'].PLAYBACK_ENDED, Ae, this)
        if (I) {
          I = false
          B()
        }
      }
      function x(e) {
        if (!w && e.fromStreamInfo && T[e.fromStreamInfo.id] !== undefined) {
          delete b[e.fromStreamInfo.id]
          delete T[e.fromStreamInfo.id]
        }
      }
      function F() {
        return parseFloat((U() - K()).toFixed(5))
      }
      function U() {
        var e = se(true)
        var t = w && S ? e - S.start : 0
        return e + (S ? S.duration - t : t)
      }
      function B() {
        if (S && p && p.getElement()) {
          p.play()
        } else {
          I = true
        }
      }
      function j() {
        return S && p ? p.isPaused() : null
      }
      function G() {
        if (S && p) {
          p.pause()
        }
      }
      function q() {
        return S && p ? p.isSeeking() : null
      }
      function H(e, r, i) {
        if (S && p) {
          if (i === true) {
            if (e !== p.getTime()) {
              p.removeEventListener('seeking', me)
              n.info('Requesting seek to time: ' + e)
              p.setCurrentTime(e, r)
            }
          } else {
            t.trigger(d['default'].PLAYBACK_SEEK_ASKED)
            n.info('Requesting seek to time: ' + e)
            p.setCurrentTime(e, r)
          }
        }
      }
      function V() {
        var e =
          s.getReadOnlyMetricsFor(a['default'].VIDEO) || s.getReadOnlyMetricsFor(a['default'].AUDIO)
        var t = u.getCurrentDVRInfo(e)
        var r = t ? t.range : null
        H(r.end - A.getLiveDelay(), true, false)
      }
      function K() {
        return S && p ? p.getTime() : null
      }
      function Y() {
        var e = K()
        if (w && !isNaN(R)) {
          var t = R / 1e3
          if (e > t) {
            e -= t
          }
        }
        return e
      }
      function W() {
        return S && p ? p.getPlaybackRate() : null
      }
      function z() {
        return S && p ? p.getPlayedRanges() : null
      }
      function X() {
        return S && p ? p.getEnded() : null
      }
      function $() {
        return w
      }
      function Q() {
        return i
      }
      function J(e) {
        y = e
      }
      function Z() {
        return y
      }
      function ee(e, t) {
        var r = c.getMpd(f.getValue())
        var n = undefined
        var i = undefined
        var s = 10
        if (
          A.getUseSuggestedPresentationDelay() &&
          r.hasOwnProperty(a['default'].SUGGESTED_PRESENTATION_DELAY)
        ) {
          n = r.suggestedPresentationDelay
        } else if (A.getLowLatencyEnabled()) {
          n = 0
        } else if (A.getLiveDelay()) {
          n = A.getLiveDelay()
        } else if (!isNaN(e)) {
          n = e * A.getLiveDelayFragmentCount()
        } else {
          n = S.manifestInfo.minBufferTime * 2
        }
        if (r.availabilityStartTime) {
          R = r.availabilityStartTime.getTime()
        }
        if (t > 0) {
          var o = Math.max(t - s, t / 2)
          i = Math.min(n, o)
        } else {
          i = n
        }
        E = i
        return i
      }
      function te() {
        return E
      }
      function re() {
        if (!w || isNaN(R)) {
          return NaN
        }
        var e = Y()
        if (isNaN(e) || e === 0) {
          return 0
        }
        var t = new Date().getTime() + m.getClientTimeOffset() * 1e3
        return Math.max(((t - R - e * 1e3) / 1e3).toFixed(3), 0)
      }
      function ne() {
        y = NaN
        I = false
        T = {}
        E = 0
        R = 0
        b = {}
        if (p) {
          t.off(d['default'].DATA_UPDATE_COMPLETED, de, this)
          t.off(d['default'].BUFFER_LEVEL_STATE_CHANGED, xe, this)
          t.off(d['default'].BYTES_APPENDED_END_FRAGMENT, Ne, this)
          t.off(d['default'].LOADING_PROGRESS, Le, this)
          t.off(d['default'].PERIOD_SWITCH_STARTED, x, this)
          t.off(d['default'].PLAYBACK_PROGRESS, De, this)
          t.off(d['default'].PLAYBACK_TIME_UPDATED, De, this)
          t.off(d['default'].PLAYBACK_ENDED, Ae, this)
          le()
          Be()
        }
        _ = null
        p = null
        S = null
        w = null
      }
      function ie(e) {
        if (!e) return
        if (e.streamController) {
          i = e.streamController
        }
        if (e.metricsModel) {
          s = e.metricsModel
        }
        if (e.dashMetrics) {
          u = e.dashMetrics
        }
        if (e.manifestModel) {
          f = e.manifestModel
        }
        if (e.dashManifestModel) {
          c = e.dashManifestModel
        }
        if (e.mediaPlayerModel) {
          A = e.mediaPlayerModel
        }
        if (e.adapter) {
          h = e.adapter
        }
        if (e.videoModel) {
          p = e.videoModel
        }
        if (e.timelineConverter) {
          m = e.timelineConverter
        }
        if (e.uriFragmentModel) {
          P = e.uriFragmentModel
        }
      }
      function ae() {
        var e = P.getURIFragmentData()
        var t = undefined
        if (e) {
          t = {}
          var r = parseInt(e.r, 10)
          if (r >= 0 && S && r < S.manifestInfo.DVRWindowSize && e.t === null) {
            e.t =
              Math.max(
                Math.floor(Date.now() / 1e3) - S.manifestInfo.DVRWindowSize,
                S.manifestInfo.availableFrom.getTime() / 1e3 + S.start
              ) + r
          }
          t.fragS = parseFloat(e.s)
          t.fragT = parseFloat(e.t)
        }
        return t
      }
      function se(e, t) {
        var r = undefined
        var n = NaN
        if (!e) {
          var i = ae()
          if (i) {
            n = !isNaN(i.fragS) ? i.fragS : i.fragT
          } else {
            n = 0
          }
        } else {
          n = S ? S.start : n
        }
        if (w) {
          if (!isNaN(n) && S) {
            r = n - S.manifestInfo.availableFrom.getTime() / 1e3
            if (r > y || r < (!isNaN(t) ? t - S.manifestInfo.DVRWindowSize : NaN)) {
              r = null
            }
          }
          r = r || y
        } else {
          if (S) {
            if (!isNaN(n) && n < Math.max(S.manifestInfo.duration, S.duration) && n >= 0) {
              r = n
            } else {
              var a = T[S.id]
              r =
                a !== undefined
                  ? Math.max(
                      a.audio !== undefined ? a.audio : 0,
                      a.video !== undefined ? a.video : 0,
                      S.start
                    )
                  : S.start
            }
          }
        }
        return r
      }
      function oe(e) {
        var t =
          s.getReadOnlyMetricsFor(a['default'].VIDEO) || s.getReadOnlyMetricsFor(a['default'].AUDIO)
        var r = u.getCurrentDVRInfo(t)
        var n = r ? r.range : null
        var i = undefined
        if (!n) return NaN
        if (e > n.end) {
          i = Math.max(n.end - S.manifestInfo.minBufferTime * 2, n.start)
        } else if (e + 0.25 < n.start) {
          i = n.start
        } else {
          return e
        }
        return i
      }
      function ue() {
        if (_ !== null) return
        var e = function e() {
          Ce()
        }
        _ = setInterval(e, A.getWallclockTimeUpdateInterval())
      }
      function le() {
        clearInterval(_)
        _ = null
      }
      function fe() {
        if (j() || !w || p.getReadyState() === 0) return
        var e = Y()
        var t = oe(e)
        var r = !isNaN(t) && t !== e
        if (r) {
          H(t)
        }
      }
      function de(e) {
        if (e.error) return
        var t = h.convertDataToRepresentationInfo(e.currentRepresentation)
        var r = t.mediaInfo.streamInfo
        if (S.id !== r.id) return
        S = r
        fe()
      }
      function ce() {
        t.trigger(d['default'].CAN_PLAY)
      }
      function he() {
        n.info('Native video element event: play')
        fe()
        ue()
        t.trigger(d['default'].PLAYBACK_STARTED, { startTime: K() })
      }
      function pe() {
        n.info('Native video element event: waiting')
        t.trigger(d['default'].PLAYBACK_WAITING, { playingTime: K() })
      }
      function ve() {
        n.info('Native video element event: playing')
        t.trigger(d['default'].PLAYBACK_PLAYING, { playingTime: K() })
      }
      function ge() {
        n.info('Native video element event: pause')
        t.trigger(d['default'].PLAYBACK_PAUSED, { ended: X() })
      }
      function me() {
        var e = K()
        n.info('Seeking to: ' + e)
        ue()
        t.trigger(d['default'].PLAYBACK_SEEKING, { seekTime: e })
      }
      function ye() {
        n.info('Native video element event: seeked')
        t.trigger(d['default'].PLAYBACK_SEEKED)
        p.addEventListener('seeking', me)
      }
      function _e() {
        if (S) {
          t.trigger(d['default'].PLAYBACK_TIME_UPDATED, { timeToEnd: F(), time: K() })
        }
      }
      function Te() {
        var e = Date.now()
        if (!C || e > C + g) {
          C = e
          _e()
        }
      }
      function Ee() {
        t.trigger(d['default'].PLAYBACK_PROGRESS)
      }
      function be() {
        var e = W()
        n.info('Native video element event: ratechange: ', e)
        t.trigger(d['default'].PLAYBACK_RATE_CHANGED, { playbackRate: e })
      }
      function Se() {
        n.info('Native video element event: loadedmetadata')
        t.trigger(d['default'].PLAYBACK_METADATA_LOADED)
        ue()
      }
      function we() {
        n.info('Native video element event: ended')
        G()
        le()
        t.trigger(d['default'].PLAYBACK_ENDED, { isLast: i.getActiveStreamInfo().isLast })
      }
      function Ae(e) {
        if (_ && e.isLast) {
          n.info("onPlaybackEnded -- PLAYBACK_ENDED but native video element didn't fire ended")
          p.setCurrentTime(U())
          G()
          le()
        }
      }
      function Ie(e) {
        var r = e.target || e.srcElement
        t.trigger(d['default'].PLAYBACK_ERROR, { error: r.error })
      }
      function Ce() {
        t.trigger(d['default'].WALLCLOCK_TIME_UPDATED, { isDynamic: w, time: new Date() })
        if ($() && j()) {
          Te()
        }
      }
      function Re(e, t) {
        if (t && t.length > 0) {
          for (var r = 0, n = t.length; r < n; r++) {
            if (e >= t.start(r) && e < t.end(r)) {
              return true
            }
          }
        }
        return false
      }
      function De() {
        if (w && A.getLowLatencyEnabled() && A.getCatchUpPlaybackRate() > 0 && !j() && !q()) {
          if (Me()) {
            ke()
          } else {
            Pe()
          }
        }
      }
      function Oe() {
        var e = null
        i.getActiveStreamProcessors().forEach(function(t) {
          var r = t.getBufferLevel()
          if (e === null) {
            e = r
          } else {
            e = Math.min(e, r)
          }
        })
        return e
      }
      function Me() {
        return (
          A.getCatchUpPlaybackRate() > 0 &&
          K() > 0 &&
          Math.abs(re() - A.getLiveDelay()) > A.getLowLatencyMinDrift()
        )
      }
      function ke() {
        if (p) {
          var e = A.getCatchUpPlaybackRate()
          var t = A.getLiveDelay()
          var r = re() - t
          var i = r * 5
          var a = (e * 2) / (1 + Math.pow(Math.E, -i))
          var s = 1 - e + a
          if (M) {
            var o = Oe()
            if (o > t / 2) {
              M = false
            } else if (r > 0) {
              s = 1
            }
          }
          if (Math.abs(p.getPlaybackRate() - s) > k) {
            p.setPlaybackRate(s)
          }
          if (
            A.getLowLatencyMaxDriftBeforeSeeking() > 0 &&
            !O &&
            r > A.getLowLatencyMaxDriftBeforeSeeking()
          ) {
            n.info('Low Latency catchup mechanism. Latency too high, doing a seek to live point')
            O = true
            V()
          } else {
            O = false
          }
        }
      }
      function Pe() {
        if (p) {
          p.setPlaybackRate(1)
        }
      }
      function Ne(e) {
        var t = undefined,
          r = undefined
        var n = e.bufferedRanges
        if (!n || !n.length) return
        if (T[S.id] && T[S.id].started === true) {
          return
        }
        var s = e.sender.getType()
        if (b[S.id] === undefined) {
          b[S.id] = []
        }
        b[S.id][s] = n
        if (T[S.id] === undefined) {
          T[S.id] = []
          T[S.id].started = false
        }
        if (T[S.id][s] === undefined) {
          T[S.id][s] = Math.max(n.start(0), S.start)
        }
        var o = i.isTrackTypePresent(a['default'].VIDEO)
        var u = i.isTrackTypePresent(a['default'].AUDIO)
        r = se(false)
        if (u && o) {
          if (!isNaN(T[S.id].audio) && !isNaN(T[S.id].video)) {
            if (T[S.id].audio < T[S.id].video) {
              t = T[S.id].video > r ? T[S.id].video : r
              n = b[S.id].audio
            } else {
              t = T[S.id].audio > r ? T[S.id].audio : r
              n = b[S.id].video
            }
            if (Re(t, n)) {
              if (!q() && !D && t !== 0) {
                H(t, true, true)
              }
              T[S.id].started = true
            }
          }
        } else {
          if (T[S.id][s]) {
            t = T[S.id][s] > r ? T[S.id][s] : r
            if (!q() && !D) {
              H(t, false, true)
            }
            T[S.id].started = true
          }
        }
      }
      function Le(e) {
        if (e.stream === false && A.getLowLatencyEnabled() && !isNaN(e.request.duration)) {
          var t = 1.2 * e.request.duration
          if (t > A.getLiveDelay()) {
            n.warn(
              'Browser does not support fetch API with StreamReader. Increasing live delay to be 20% higher than segment duration:',
              t.toFixed(2)
            )
            A.setLiveDelay(t)
          }
        }
      }
      function xe(e) {
        if (e.streamInfo.id !== S.id) return
        if (A.getLowLatencyEnabled()) {
          if (e.state === o['default'].BUFFER_EMPTY && !q()) {
            if (!M) {
              M = true
              Pe()
            }
          }
        } else {
          p.setStallState(e.mediaType, e.state === o['default'].BUFFER_EMPTY)
        }
      }
      function Fe(e) {
        t.trigger(d['default'].PLAYBACK_STALLED, { e: e })
      }
      function Ue() {
        p.addEventListener('canplay', ce)
        p.addEventListener('play', he)
        p.addEventListener('waiting', pe)
        p.addEventListener('playing', ve)
        p.addEventListener('pause', ge)
        p.addEventListener('error', Ie)
        p.addEventListener('seeking', me)
        p.addEventListener('seeked', ye)
        p.addEventListener('timeupdate', _e)
        p.addEventListener('progress', Ee)
        p.addEventListener('ratechange', be)
        p.addEventListener('loadedmetadata', Se)
        p.addEventListener('stalled', Fe)
        p.addEventListener('ended', we)
      }
      function Be() {
        p.removeEventListener('canplay', ce)
        p.removeEventListener('play', he)
        p.removeEventListener('waiting', pe)
        p.removeEventListener('playing', ve)
        p.removeEventListener('pause', ge)
        p.removeEventListener('error', Ie)
        p.removeEventListener('seeking', me)
        p.removeEventListener('seeked', ye)
        p.removeEventListener('timeupdate', _e)
        p.removeEventListener('progress', Ee)
        p.removeEventListener('ratechange', be)
        p.removeEventListener('loadedmetadata', Se)
        p.removeEventListener('stalled', Fe)
        p.removeEventListener('ended', we)
      }
      r = {
        initialize: L,
        setConfig: ie,
        getStartTimeFromUriParameters: ae,
        getStreamStartTime: se,
        getTimeToStreamEnd: F,
        getTime: K,
        getNormalizedTime: Y,
        getPlaybackRate: W,
        getPlayedRanges: z,
        getEnded: X,
        getIsDynamic: $,
        getStreamController: Q,
        setLiveStartTime: J,
        getLiveStartTime: Z,
        computeLiveDelay: ee,
        getLiveDelay: te,
        getCurrentLiveLatency: re,
        play: B,
        isPaused: j,
        pause: G,
        isSeeking: q,
        seek: H,
        reset: ne,
      }
      N()
      return r
    }
    m.__dashjs_factory_name = 'PlaybackController'
    t['default'] = h['default'].getSingletonFactory(m)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(120)
    var o = r(44)
    var u = n(o)
    var l = r(20)
    var f = n(l)
    var d = r(280)
    var c = n(d)
    var h = r(281)
    var p = n(h)
    var v = r(46)
    var g = n(v)
    var m = r(2)
    var y = n(m)
    var _ = r(4)
    var T = n(_)
    var E = r(0)
    var b = n(E)
    var S = r(1)
    var w = n(S)
    var A = r(65)
    var I = n(A)
    var C = r(18)
    function R(e) {
      e = e || {}
      var t = this.context
      var r = (0, y['default'])(t).getInstance()
      var n = e.metricsModel
      var i = e.adapter
      var o = e.dashMetrics
      var l = e.dashManifestModel
      var d = e.timelineConverter
      var h = e.mediaPlayerModel
      var v = e.abrController
      var m = e.playbackController
      var _ = e.streamController
      var E = e.textController
      var b = e.type
      var S = e.streamProcessor
      var A = e.mediaController
      var R = undefined,
        D = undefined,
        O = undefined,
        M = undefined,
        k = undefined,
        P = undefined,
        N = undefined,
        L = undefined,
        x = undefined,
        F = undefined,
        U = undefined,
        B = undefined,
        j = undefined,
        G = undefined,
        q = undefined,
        H = undefined,
        V = undefined,
        K = undefined,
        Y = undefined,
        W = undefined,
        z = undefined,
        X = undefined,
        $ = undefined
      function Q() {
        D = (0, w['default'])(t)
          .getInstance()
          .getLogger(R)
        Ue()
      }
      function J() {
        O = S.getFragmentModel()
        G = (0, c['default'])(t).create({
          abrController: v,
          dashMetrics: o,
          metricsModel: n,
          mediaPlayerModel: h,
          textController: E,
        })
        q = (0, p['default'])(t).create({ adapter: i, textController: E, playbackController: m })
        if (l.getIsTextTrack(e.mimeType)) {
          r.on(T['default'].TIMED_TEXT_REQUESTED, Ie, this)
        }
        r.on(T['default'].QUALITY_CHANGE_REQUESTED, de, this)
        r.on(T['default'].DATA_UPDATE_STARTED, Ee, this)
        r.on(T['default'].DATA_UPDATE_COMPLETED, he, this)
        r.on(T['default'].FRAGMENT_LOADING_COMPLETED, me, this)
        r.on(T['default'].STREAM_COMPLETED, ge, this)
        r.on(T['default'].STREAM_INITIALIZED, pe, this)
        r.on(T['default'].BUFFER_LEVEL_STATE_CHANGED, Se, this)
        r.on(T['default'].BUFFER_CLEARED, be, this)
        r.on(T['default'].BYTES_APPENDED_END_FRAGMENT, _e, this)
        r.on(T['default'].INIT_REQUESTED, se, this)
        r.on(T['default'].QUOTA_EXCEEDED, we, this)
        r.on(T['default'].PLAYBACK_SEEKING, Re, this)
        r.on(T['default'].PLAYBACK_STARTED, Ce, this)
        r.on(T['default'].PLAYBACK_RATE_CHANGED, De, this)
        r.on(T['default'].PLAYBACK_TIME_UPDATED, ye, this)
        r.on(T['default'].URL_RESOLUTION_FAILED, Ae, this)
        r.on(T['default'].FRAGMENT_LOADING_ABANDONED, Te, this)
      }
      function Z() {
        return P === false
      }
      function ee() {
        if (!M || S.isBufferingCompleted()) {
          D.warn('Start denied to Schedule Controller')
          return
        }
        D.debug('Schedule Controller starts')
        Fe()
        P = false
        if (k) {
          k = false
        }
        ae(0)
      }
      function te() {
        if (P) {
          return
        }
        D.debug('Schedule Controller stops')
        P = true
        clearTimeout(B)
      }
      function re(e, t) {
        V[t] = V[t] || {}
        var r = v.getTopQualityIndexFor(e, t)
        if (V[t][e] != r) {
          D.info('Top quality ' + e + ' index has changed from ' + V[t][e] + ' to ' + r)
          V[t][e] = r
          return true
        }
        return false
      }
      function ne() {
        var e = S.getBufferController()
        if (
          P ||
          F ||
          !e ||
          (m.isPaused() && !h.getScheduleWhilePaused()) ||
          ((b === a['default'].FRAGMENTED_TEXT || b === a['default'].TEXT) && !E.isTextEnabled())
        ) {
          D.debug('Schedule stop!')
          return
        }
        if (e.getIsBufferingCompleted()) {
          D.debug('Schedule stop because buffering is completed!')
          return
        }
        ie()
        var t = Y.length > 0
        var r = S.getStreamInfo()
        if (
          z ||
          isNaN(K) ||
          W ||
          t ||
          re(M.mediaInfo.type, r.id) ||
          G.execute(S, _.isTrackTypePresent(a['default'].VIDEO))
        ) {
          var n = function e() {
            var t = S.getFragmentController()
            if ((M.quality !== K || W) && !z) {
              D.debug('Quality has changed, get init request for representationid = ' + M.id)
              if (W) {
                z =
                  A.getSwitchMode(b) === I['default'].TRACK_SWITCH_MODE_ALWAYS_REPLACE
                    ? true
                    : false
                D.debug(
                  'Switch track has been asked, get init request for ' +
                    b +
                    ' with representationid = ' +
                    M.id +
                    'bufferResetInProgress = ' +
                    z
                )
                S.switchInitData(M.id, z)
                W = false
              } else {
                S.switchInitData(M.id)
              }
              K = M.quality
            } else {
              var n = Y.shift()
              if (t.isInitializationRequest(n)) {
                S.switchInitData(n.representationId)
              } else {
                var a = undefined
                if (!S.getBufferController().getIsPruningInProgress()) {
                  a = q.execute(S, j, n)
                  Oe(NaN)
                  if (a && !n) {
                    if (!isNaN(a.startTime + a.duration)) {
                      i.setIndexHandlerTime(S, a.startTime + a.duration)
                    }
                    a.delayLoadingTime = new Date().getTime() + U
                    Me(0)
                  }
                  if (!a && r.manifestInfo && r.manifestInfo.isDynamic) {
                    D.debug(
                      'Next fragment seems to be at the bleeding live edge and is not available yet. Rescheduling.'
                    )
                  }
                }
                if (a) {
                  D.debug('Next fragment request url is ' + a.url)
                  O.executeRequest(a)
                } else {
                  oe(false)
                  ae(h.getLowLatencyEnabled() ? 100 : 500)
                }
              }
            }
          }
          oe(true)
          if (!t && !W) {
            v.checkPlaybackQuality(b)
          }
          n()
        } else {
          ae(500)
        }
      }
      function ie() {
        var e = m.getTime()
        var t = M.fragmentDuration * 1.5
        var r = O.getRequests({
          state: g['default'].FRAGMENT_MODEL_EXECUTED,
          time: e + t,
          threshold: 0,
        })[0]
        if (r && Y.indexOf(r) === -1 && !l.getIsTextTrack(b)) {
          var n = h.getFastSwitchEnabled()
          var i = S.getBufferLevel()
          var a = v.getAbandonmentStateFor(b)
          var s =
            !A.isCurrentTrack(r.mediaInfo) &&
            A.getSwitchMode(r.mediaInfo.type) === I['default'].TRACK_SWITCH_MODE_NEVER_REPLACE
          var o = r.quality < M.quality
          if (n && (s || o) && i >= t && a !== u['default'].ABANDON_LOAD) {
            fe(r)
            $ = true
            D.debug('Reloading outdated fragment at index: ', r.index)
          } else if (r.quality > M.quality && !z) {
            Oe(m.getTime() + S.getBufferLevel())
          }
        }
      }
      function ae(e) {
        clearTimeout(B)
        B = setTimeout(ne, e)
      }
      function se(e) {
        if (!e.sender || e.sender.getStreamProcessor() !== S) {
          return
        }
        ue(M.quality)
      }
      function oe(e) {
        if (F !== e) {
          F = e
        } else {
          D.debug('isFragmentProcessingInProgress is already equal to', e)
        }
      }
      function ue(e) {
        var t = i.getInitRequest(S, e)
        if (t) {
          oe(true)
          t.url = (0, C.replaceTokenForTemplate)(t.url, 'Bandwidth', M ? M.bandwidth : null)
          O.executeRequest(t)
        }
      }
      function le() {
        W = true
      }
      function fe(e) {
        Y.push(e)
      }
      function de(e) {
        if (b !== e.mediaType || S.getStreamInfo().id !== e.streamInfo.id) {
          return
        }
        M = S.getRepresentationInfo(e.newQuality)
        if (M === null || M === undefined) {
          throw new Error('Unexpected error! - currentRepresentationInfo is null or undefined')
        }
        xe(new Date(), s.PlayListTrace.REPRESENTATION_SWITCH_STOP_REASON)
        Fe()
      }
      function ce(e) {
        if (m && O) {
          var t = O.getRequests({
            state: g['default'].FRAGMENT_MODEL_EXECUTED,
            time: m.getTime(),
            threshold: 0,
          })[0]
          if (t && m.getTime() >= t.startTime) {
            if (
              (!H.mediaInfo ||
                (t.mediaInfo.type === H.mediaInfo.type && t.mediaInfo.id !== H.mediaInfo.id)) &&
              e
            ) {
              r.trigger(T['default'].TRACK_CHANGE_RENDERED, {
                mediaType: b,
                oldMediaInfo: H.mediaInfo,
                newMediaInfo: t.mediaInfo,
              })
            }
            if ((t.quality !== H.quality || t.adaptationIndex !== H.adaptationIndex) && e) {
              r.trigger(T['default'].QUALITY_CHANGE_RENDERED, {
                mediaType: b,
                oldQuality: H.quality,
                newQuality: t.quality,
              })
            }
            H = { mediaInfo: t.mediaInfo, quality: t.quality, adaptationIndex: t.adaptationIndex }
          }
        }
      }
      function he(e) {
        if (e.error || e.sender.getStreamProcessor() !== S) {
          return
        }
        M = i.convertDataToRepresentationInfo(e.currentRepresentation)
      }
      function pe(e) {
        if (e.error || S.getStreamInfo().id !== e.streamInfo.id) {
          return
        }
        M = S.getRepresentationInfo()
        if (k) {
          if (m.getIsDynamic()) {
            d.setTimeSyncCompleted(true)
            ve()
          } else {
            j = m.getStreamStartTime(false)
            S.getBufferController().setSeekStartTime(j)
          }
        }
        if (P) {
          ee()
        }
      }
      function ve() {
        var e = S.getLiveEdgeFinder()
        if (e) {
          var t = e.getLiveEdge()
          var r = M.mediaInfo.streamInfo.manifestInfo.DVRWindowSize / 2
          var s = t - m.computeLiveDelay(M.fragmentDuration, r)
          var u = i.getFragmentRequest(S, M, s, { ignoreIsFinished: true })
          if (u) {
            if (h.getLowLatencyEnabled()) {
              var l =
                u.duration < h.getLiveDelay()
                  ? u.startTime
                  : u.startTime + u.duration - h.getLiveDelay()
              m.setLiveStartTime(l)
            } else {
              m.setLiveStartTime(u.startTime)
            }
          } else {
            D.debug('setLiveEdgeSeekTarget : getFragmentRequest returned undefined request object')
          }
          j = m.getStreamStartTime(false, t)
          S.getBufferController().setSeekStartTime(j)
          if (j > M.mediaInfo.streamInfo.start + M.mediaInfo.streamInfo.duration) {
            m.seek(j)
          }
          var f = o.getCurrentManifestUpdate(n.getMetricsFor(a['default'].STREAM))
          n.updateManifestUpdateInfo(f, {
            currentTime: j,
            presentationStartTime: t,
            latency: t - j,
            clientTimeOffset: d.getClientTimeOffset(),
          })
        }
      }
      function ge(e) {
        if (e.fragmentModel !== O) {
          return
        }
        te()
        oe(false)
        D.info('Stream is complete')
      }
      function me(e) {
        if (e.sender !== O) {
          return
        }
        D.info(
          'OnFragmentLoadingCompleted - Url:',
          e.request ? e.request.url : 'undefined',
          ', Range:',
          e.request.range ? e.request.range : 'undefined'
        )
        if (l.getIsTextTrack(b)) {
          oe(false)
        }
        if (e.error && e.request.serviceLocation && !P) {
          fe(e.request)
          oe(false)
          ae(0)
        }
        if (z) {
          X = e.request
        }
      }
      function ye() {
        ce(true)
      }
      function _e(e) {
        if (e.sender.getStreamProcessor() !== S) {
          return
        }
        if (z && !isNaN(e.startTime)) {
          z = false
          O.addExecutedRequest(X)
        }
        oe(false)
        if ($ && !isNaN(e.startTime)) {
          var t = m.getTime()
          var r = e.startTime + M.fragmentDuration
          var n = M.fragmentDuration * 1.5
          if (t + n >= r) {
            ae(0)
          } else {
            ae((r - (t + n)) * 1e3)
          }
          $ = false
        } else {
          ae(0)
        }
      }
      function Te(e) {
        if (e.streamProcessor !== S) {
          return
        }
        D.info(
          'onFragmentLoadingAbandoned for ' +
            b +
            ', request: ' +
            e.request.url +
            ' has been aborted'
        )
        if (!m.isSeeking() && !W) {
          D.info(
            'onFragmentLoadingAbandoned for ' +
              b +
              ', request: ' +
              e.request.url +
              ' has to be downloaded again, origin is not seeking process or switch track call'
          )
          fe(e.request)
        }
        oe(false)
        ae(0)
      }
      function Ee(e) {
        if (e.sender.getStreamProcessor() !== S) {
          return
        }
        te()
      }
      function be(e) {
        if (e.sender.getStreamProcessor() !== S) {
          return
        }
        var t = S.getStreamInfo()
        if (t) {
          if (e.unintended) {
            O.removeExecutedRequestsAfterTime(e.from, t.duration)
          } else {
            O.syncExecutedRequestsWithBufferedRange(
              S.getBufferController()
                .getBuffer()
                .getAllBufferRanges(),
              t.duration
            )
          }
        }
        if (e.hasEnoughSpaceToAppend && P) {
          ee()
        }
      }
      function Se(e) {
        if (
          e.sender.getStreamProcessor() === S &&
          e.state === f['default'].BUFFER_EMPTY &&
          !m.isSeeking()
        ) {
          D.info('Buffer is empty! Stalling!')
          xe(new Date(), s.PlayListTrace.REBUFFERING_REASON)
        }
      }
      function we(e) {
        if (e.sender.getStreamProcessor() !== S) {
          return
        }
        te()
        oe(false)
      }
      function Ae() {
        O.abortRequests()
        te()
      }
      function Ie(e) {
        if (e.sender.getStreamProcessor() !== S) {
          return
        }
        if (E.isTextEnabled()) {
          ue(e.index)
        }
      }
      function Ce() {
        if (P || !h.getScheduleWhilePaused()) {
          ee()
        }
      }
      function Re(e) {
        j = e.seekTime
        Me(0)
        if (P) {
          ee()
        }
        var t = o.getCurrentManifestUpdate(n.getMetricsFor(a['default'].STREAM))
        var r = M.DVRWindow && m ? M.DVRWindow.end - m.getTime() : NaN
        n.updateManifestUpdateInfo(t, { latency: r })
        if (!F) {
          ae(0)
        } else {
          D.debug(
            'onPlaybackSeeking for ' +
              b +
              ', call fragmentModel.abortRequests in order to seek quicker'
          )
          O.abortRequests()
        }
      }
      function De(e) {
        if (L) {
          L.playbackspeed = e.playbackRate.toString()
        }
      }
      function Oe(e) {
        j = e
      }
      function Me(e) {
        U = e
      }
      function ke() {
        return G.getBufferTarget(S, _.isTrackTypePresent(a['default'].VIDEO))
      }
      function Pe() {
        return b
      }
      function Ne(e) {
        N = e
      }
      function Le(e, t) {
        xe(e, t)
        N = null
      }
      function xe(e, t) {
        if (N && x === false) {
          var r = L.start
          var n = e.getTime() - r.getTime()
          L.duration = n
          L.stopreason = t
          N.trace.push(L)
          x = true
        }
      }
      function Fe() {
        if (N && x === true && M) {
          x = false
          L = new s.PlayListTrace()
          L.representationid = M.id
          L.start = new Date()
          L.mstart = m.getTime() * 1e3
          L.playbackspeed = m.getPlaybackRate().toString()
        }
      }
      function Ue() {
        F = false
        U = 0
        j = NaN
        N = null
        L = null
        x = true
        k = true
        K = NaN
        H = { mediaInfo: undefined, quality: NaN, adaptationIndex: NaN }
        V = {}
        Y = []
        P = true
        W = false
        z = false
        X = null
        $ = false
      }
      function Be() {
        r.off(T['default'].DATA_UPDATE_STARTED, Ee, this)
        r.off(T['default'].DATA_UPDATE_COMPLETED, he, this)
        r.off(T['default'].BUFFER_LEVEL_STATE_CHANGED, Se, this)
        r.off(T['default'].QUALITY_CHANGE_REQUESTED, de, this)
        r.off(T['default'].FRAGMENT_LOADING_COMPLETED, me, this)
        r.off(T['default'].STREAM_COMPLETED, ge, this)
        r.off(T['default'].STREAM_INITIALIZED, pe, this)
        r.off(T['default'].QUOTA_EXCEEDED, we, this)
        r.off(T['default'].BYTES_APPENDED_END_FRAGMENT, _e, this)
        r.off(T['default'].BUFFER_CLEARED, be, this)
        r.off(T['default'].INIT_REQUESTED, se, this)
        r.off(T['default'].PLAYBACK_RATE_CHANGED, De, this)
        r.off(T['default'].PLAYBACK_SEEKING, Re, this)
        r.off(T['default'].PLAYBACK_STARTED, Ce, this)
        r.off(T['default'].PLAYBACK_TIME_UPDATED, ye, this)
        r.off(T['default'].URL_RESOLUTION_FAILED, Ae, this)
        r.off(T['default'].FRAGMENT_LOADING_ABANDONED, Te, this)
        if (l.getIsTextTrack(b)) {
          r.off(T['default'].TIMED_TEXT_REQUESTED, Ie, this)
        }
        te()
        ce(false)
        Ue()
      }
      R = {
        initialize: J,
        getType: Pe,
        setSeekTarget: Oe,
        setTimeToLoadDelay: Me,
        replaceRequest: fe,
        switchTrackAsked: le,
        isStarted: Z,
        start: ee,
        stop: te,
        reset: Be,
        setPlayList: Ne,
        getBufferTarget: ke,
        finalisePlayList: Le,
      }
      Q()
      return R
    }
    R.__dashjs_factory_name = 'ScheduleController'
    t['default'] = b['default'].getClassFactory(R)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(25)
    var o = n(s)
    var u = r(217)
    var l = n(u)
    var f = r(214)
    var d = n(f)
    var c = r(2)
    var h = n(c)
    var p = r(4)
    var v = n(p)
    var g = r(0)
    var m = n(g)
    var y = r(120)
    var _ = r(1)
    var T = n(_)
    var E = r(75)
    var b = n(E)
    var S = r(15)
    var w = n(S)
    var A = r(108)
    var I = n(A)
    var C = r(227)
    var R = n(C)
    var D = r(110)
    var O = n(D)
    var M = r(223)
    var k = n(M)
    var P = r(5)
    var N = n(P)
    var L = r(6)
    var x = n(L)
    function F() {
      var e = 40
      var t = this.context
      var r = (0, h['default'])(t).getInstance()
      var n = undefined,
        i = undefined,
        s = undefined,
        u = undefined,
        f = undefined,
        c = undefined,
        p = undefined,
        g = undefined,
        m = undefined,
        _ = undefined,
        E = undefined,
        S = undefined,
        A = undefined,
        C = undefined,
        D = undefined,
        M = undefined,
        P = undefined,
        L = undefined,
        F = undefined,
        U = undefined,
        B = undefined,
        j = undefined,
        G = undefined,
        q = undefined,
        H = undefined,
        V = undefined,
        K = undefined,
        Y = undefined,
        W = undefined,
        z = undefined,
        X = undefined,
        $ = undefined,
        Q = undefined,
        J = undefined,
        Z = undefined,
        ee = undefined,
        te = undefined,
        re = undefined,
        ne = undefined,
        ie = undefined,
        ae = undefined,
        se = undefined,
        oe = undefined,
        ue = undefined,
        le = undefined,
        fe = undefined,
        de = undefined
      function ce() {
        i = (0, T['default'])(t)
          .getInstance()
          .getLogger(n)
        S = (0, R['default'])(t).getInstance()
        A = (0, O['default'])(t).getInstance()
        E = (0, k['default'])(t).getInstance()
        L = (0, b['default'])(t).getInstance()
        F = (0, w['default'])(t).getInstance()
        nt()
      }
      function he(e, r) {
        $e()
        V = e
        H = r
        B.initialize()
        u = (0, d['default'])(t).create()
        u.setConfig({
          manifestModel: c,
          dashManifestModel: p,
          mediaPlayerModel: Q,
          manifestLoader: f,
          errHandler: U,
        })
        u.initialize()
        A.setConfig({ dashManifestModel: p })
        pe()
      }
      function pe() {
        r.on(v['default'].PLAYBACK_TIME_UPDATED, ge, this)
        r.on(v['default'].PLAYBACK_SEEKING, _e, this)
        r.on(v['default'].PLAYBACK_ERROR, We, this)
        r.on(v['default'].PLAYBACK_STARTED, Te, this)
        r.on(v['default'].PLAYBACK_PAUSED, Ee, this)
        r.on(v['default'].PLAYBACK_ENDED, Me, this)
        r.on(v['default'].MANIFEST_UPDATED, qe, this)
        r.on(v['default'].BUFFERING_COMPLETED, Ae, this)
        r.on(v['default'].STREAM_BUFFERING_COMPLETED, Ie, this)
        r.on(v['default'].MANIFEST_VALIDITY_CHANGED, et, this)
        r.on(v['default'].TIME_SYNCHRONIZATION_COMPLETED, Ge, this)
        r.on(v['default'].WALLCLOCK_TIME_UPDATED, me, this)
        r.on(I['default'].METRIC_ADDED, at, this)
      }
      function ve() {
        r.off(v['default'].PLAYBACK_TIME_UPDATED, ge, this)
        r.off(v['default'].PLAYBACK_SEEKING, _e, this)
        r.off(v['default'].PLAYBACK_ERROR, We, this)
        r.off(v['default'].PLAYBACK_STARTED, Te, this)
        r.off(v['default'].PLAYBACK_PAUSED, Ee, this)
        r.off(v['default'].PLAYBACK_ENDED, Me, this)
        r.off(v['default'].MANIFEST_UPDATED, qe, this)
        r.off(v['default'].BUFFERING_COMPLETED, Ae, this)
        r.off(v['default'].STREAM_BUFFERING_COMPLETED, Ie, this)
        r.off(v['default'].MANIFEST_VALIDITY_CHANGED, et, this)
        r.off(v['default'].TIME_SYNCHRONIZATION_COMPLETED, Ge, this)
        r.off(v['default'].WALLCLOCK_TIME_UPDATED, me, this)
        r.off(I['default'].METRIC_ADDED, at, this)
      }
      function ge() {
        if (He(a['default'].VIDEO)) {
          var e = X.getPlaybackQuality()
          if (e) {
            m.addDroppedFrames(a['default'].VIDEO, e)
          }
        }
      }
      function me() {
        if (!Q.getJumpGaps() || Oe() === 0 || $.isSeeking() || J || K || Y || W) {
          return
        }
        se++
        if (se >= e) {
          var t = $.getTime()
          if (fe === t) {
            ye(t)
          } else {
            fe = t
          }
          se = 0
        }
      }
      function ye(e) {
        var t = Oe()
        var n = Q.getSmallGapLimit()
        var a = undefined
        for (var s = 0; s < t.length; s++) {
          var o = t[s].getBuffer()
          var u = o.getAllBufferRanges()
          var l = undefined
          if (!u || u.length <= 1) continue
          for (var f = 0; f < u.length; f++) {
            if (e < u.start(f)) {
              l = u.start(f)
              break
            }
          }
          if (l > 0) {
            var d = l - e
            if (d > 0 && d <= n) {
              if (a === undefined || l > a) {
                a = l
              }
            }
          }
        }
        var c = $.getTimeToStreamEnd()
        if (a === undefined && !isNaN(c) && c < n) {
          a = e + c
        }
        if (a > 0) {
          if (!isNaN(c) && a >= e + c) {
            i.info(
              'Jumping media gap (discontinuity) at time ',
              e,
              '. Jumping to end of the stream'
            )
            r.trigger(v['default'].PLAYBACK_ENDED, { isLast: ze().isLast })
          } else {
            i.info('Jumping media gap (discontinuity) at time ', e, '. Jumping to time position', a)
            $.seek(a, true, true)
          }
        }
      }
      function _e(e) {
        var t = Re(e.seekTime)
        if (ie) {
          be()
          ne = false
        }
        if (ae) {
          Se()
        }
        if (t === G && le) {
          le.deactivate(true)
        }
        if (t && (t !== G || (le && !G.isActive()))) {
          Ke(y.PlayListTrace.END_OF_PERIOD_STOP_REASON)
          Pe(G, t, e.seekTime)
        } else {
          Ke(y.PlayListTrace.USER_REQUEST_STOP_REASON)
        }
        Ye(y.PlayList.SEEK_START_REASON)
      }
      function Te() {
        i.debug('[onPlaybackStarted]')
        if (Z) {
          Z = false
          Ye(y.PlayList.INITIAL_PLAYOUT_START_REASON)
        } else {
          if (J) {
            J = false
            Ye(y.PlayList.RESUME_FROM_PAUSE_START_REASON)
            we()
          }
        }
      }
      function Ee(e) {
        i.debug('[onPlaybackPaused]')
        if (!e.ended) {
          J = true
          Ke(y.PlayListTrace.USER_REQUEST_STOP_REASON)
          we()
        }
      }
      function be() {
        i.debug('[toggleEndPeriodTimer] stop end period timer.')
        clearTimeout(ie)
        ie = undefined
      }
      function Se() {
        i.debug('[PreloadTimer] stop period preload timer.')
        clearTimeout(ae)
        ae = undefined
      }
      function we() {
        if (ne) {
          if (ie) {
            be()
          } else {
            var e = $.getTimeToStreamEnd()
            var t = e > 0 ? e * 1e3 : 0
            var n = t < 2e3 ? t / 4 : t - 2e3
            i.debug('[toggleEndPeriodTimer] Going to fire preload in', n, 'milliseconds')
            ae = setTimeout(Ce, n)
            i.debug(
              '[toggleEndPeriodTimer] start-up of timer to notify PLAYBACK_ENDED event. It will be triggered in',
              t,
              'milliseconds'
            )
            ie = setTimeout(function() {
              r.trigger(v['default'].PLAYBACK_ENDED, { isLast: ze().isLast })
            }, t)
          }
        }
      }
      function Ae(e) {
        if (!e.sender) {
          return
        }
        if (
          e.sender.getType() !== a['default'].AUDIO &&
          e.sender.getType() !== a['default'].VIDEO
        ) {
          return
        }
        var t = ze().isLast
        if (z && !t && ie === undefined) {
          i.info(
            '[onTrackBufferingCompleted] end of period detected. Track',
            e.sender.getType(),
            'has finished'
          )
          ne = true
          if (J === false) {
            we()
          }
        }
      }
      function Ie() {
        var e = ze().isLast
        if (z && e) {
          i.info('[onStreamBufferingCompleted] calls signalEndOfStream of mediaSourceController.')
          E.signalEndOfStream(z)
        }
      }
      function Ce() {
        var e = ze().isLast
        if (z && !e) {
          ;(function() {
            var e = ke()
            ue = G.isProtectionCompatible(e) && (de || G.isMediaCodecCompatible(e))
            if (ue) {
              i.info('[onStreamCanLoadNext] Preloading next stream')
              G.stopEventController()
              G.deactivate(true)
              e.preload(z, oe)
              le = e
              e.getProcessors().forEach(function(t) {
                g.setIndexHandlerTime(t, e.getStartTime())
              })
            }
          })()
        }
      }
      function Re(e) {
        var t = 0
        var r = null
        var n = j.length
        if (n > 0) {
          t += j[0].getStartTime()
        }
        for (var i = 0; i < n; i++) {
          r = j[i]
          t = parseFloat((t + r.getDuration()).toFixed(5))
          if (e < t) {
            return r
          }
        }
        return null
      }
      function De(e, t) {
        var r = null
        var n = 0
        var i = 0
        var a = null
        var s = j.length
        for (var o = 0; o < s; o++) {
          r = j[o]
          i = r.getStartTime()
          a = r.getDuration()
          if (Number.isFinite(i)) {
            n = i
          }
          if (r.getId() === t) {
            return e - n
          } else {
            if (Number.isFinite(a)) {
              n += a
            }
          }
        }
        return null
      }
      function Oe() {
        return G ? G.getProcessors() : []
      }
      function Me() {
        var e = ke()
        if (e) {
          re = undefined
          te = undefined
          Pe(G, e, NaN)
        } else {
          i.debug('StreamController no next stream found')
        }
        Ke(
          e ? y.PlayListTrace.END_OF_PERIOD_STOP_REASON : y.PlayListTrace.END_OF_CONTENT_STOP_REASON
        )
        ie = undefined
        ne = false
      }
      function ke() {
        if (G) {
          var e = (function() {
            var e = ze().start
            var t = ze().duration
            return {
              v: j.filter(function(r) {
                return r.getStreamInfo().start === parseFloat((e + t).toFixed(5))
              })[0],
            }
          })()
          if (typeof e === 'object') return e.v
        }
      }
      function Pe(e, t, n) {
        if (K || !t || (e === t && t.isActive())) return
        K = true
        r.trigger(v['default'].PERIOD_SWITCH_STARTED, {
          fromStreamInfo: e ? e.getStreamInfo() : null,
          toStreamInfo: t.getStreamInfo(),
        })
        ue = false
        if (e) {
          e.stopEventController()
          ue =
            (G.isProtectionCompatible(t) && (de || G.isMediaCodecCompatible(t)) && !n) ||
            t.getPreloaded()
          e.deactivate(ue)
        }
        G = t
        le = false
        $.initialize(ze(), ue)
        if (X.getElement()) {
          xe(n, e, false, ue)
        } else {
          Ne(n)
        }
      }
      function Ne(e) {
        Fe(e, ue)
      }
      function Le(e) {
        if (G) {
          $.initialize(ze())
          xe(e, null, true, false)
        }
      }
      function xe(e, t, n, a) {
        var s = undefined
        function o() {
          if (!z) return
          i.debug('MediaSource is open!')
          window.URL.revokeObjectURL(s)
          z.removeEventListener('sourceopen', o)
          z.removeEventListener('webkitsourceopen', o)
          Ue()
          if (!t) {
            r.trigger(v['default'].SOURCE_INITIALIZED)
          }
          if (n) {
            G.setMediaSource(z)
          } else {
            Fe(e, a)
          }
        }
        if (!z) {
          z = E.createMediaSource()
          z.addEventListener('sourceopen', o, false)
          z.addEventListener('webkitsourceopen', o, false)
          s = E.attachMediaSource(z, X)
          i.debug('MediaSource attached to element.  Waiting on open...')
        } else {
          if (a) {
            Fe(e, a)
            if (!t) {
              r.trigger(v['default'].SOURCE_INITIALIZED)
            }
          } else {
            E.detachMediaSource(X)
            z.addEventListener('sourceopen', o, false)
            z.addEventListener('webkitsourceopen', o, false)
            s = E.attachMediaSource(z, X)
            i.debug('MediaSource attached to element.  Waiting on open...')
          }
        }
      }
      function Fe(e, t) {
        oe = G.activate(z, t ? oe : undefined)
        re = Ve(a['default'].AUDIO)
        te = Ve(a['default'].VIDEO)
        if (oe) {
          var n = Object.keys(oe)
          if (n.length > 0 && oe[n[0]].changeType) {
            i.debug(
              'SourceBuffer changeType method supported. Use it to switch codecs in periods transitions'
            )
            de = true
          }
        }
        if (!Z) {
          if (!isNaN(e)) {
            $.seek(e)
          } else {
            ;(function() {
              var e = $.getStreamStartTime(true)
              if (!t) {
                Oe().forEach(function(t) {
                  g.setIndexHandlerTime(t, e)
                })
              }
            })()
          }
        }
        G.startEventController()
        if (V || !Z) {
          $.play()
        }
        K = false
        r.trigger(v['default'].PERIOD_SWITCH_COMPLETED, { toStreamInfo: ze() })
      }
      function Ue(e) {
        var t = e ? e : ze().manifestInfo.duration
        var r = E.setDuration(z, t)
        i.debug('Duration successfully set to: ' + r)
      }
      function Be(e) {
        for (var t = 0, r = j.length; t < r; t++) {
          if (j[t].getId() === e.id) {
            return j[t]
          }
        }
        return null
      }
      function je() {
        try {
          var e = g.getStreamsInfo()
          if (e.length === 0) {
            throw new Error('There are no streams')
          }
          var i = _.getCurrentManifestUpdate(m.getMetricsFor(a['default'].STREAM))
          m.updateManifestUpdateInfo(i, {
            currentTime: $.getTime(),
            buffered: X.getBufferRange(),
            presentationStartTime: e[0].start,
            clientTimeOffset: B.getClientTimeOffset(),
          })
          for (var o = 0, f = e.length; o < f; o++) {
            var d = e[o]
            var h = Be(d)
            if (!h) {
              h = (0, l['default'])(t).create({
                manifestModel: c,
                dashManifestModel: p,
                mediaPlayerModel: Q,
                metricsModel: m,
                dashMetrics: _,
                manifestUpdater: u,
                adapter: g,
                timelineConverter: B,
                capabilities: s,
                errHandler: U,
                baseURLController: A,
                domStorage: C,
                abrController: D,
                playbackController: $,
                mediaController: M,
                textController: P,
                videoModel: X,
                streamController: n,
              })
              j.push(h)
              h.initialize(d, q)
            } else {
              h.updateData(d)
            }
            m.addManifestUpdateStreamInfo(i, d.id, d.index, d.start, d.duration)
          }
          if (!G) {
            var y = $.getStartTimeFromUriParameters()
            var T = null
            if (y) {
              var E = !isNaN(y.fragS) ? y.fragS : y.fragT
              T = Re(E)
            }
            Pe(null, T !== null ? T : j[0], NaN)
          }
          r.trigger(v['default'].STREAMS_COMPOSED)
        } catch (e) {
          U.manifestError(e.message, 'nostreamscomposed', c.getValue())
          U.error(
            new N['default'](
              x['default'].MANIFEST_ERROR_ID_NOSTREAMS_CODE,
              e.message + 'nostreamscomposed',
              c.getValue()
            )
          )
          W = true
          it()
        }
      }
      function Ge() {
        var e = c.getValue()
        if (q) {
          r.trigger(v['default'].PROTECTION_CREATED, { controller: q, manifest: e })
          q.setMediaElement(X.getElement())
          if (H) {
            q.setProtectionData(H)
          }
        }
        je()
      }
      function qe(e) {
        if (!e.error) {
          ;(function() {
            var t = e.manifest
            g.updatePeriods(t)
            var r = g.getStreamsInfo(undefined, 1)[0]
            var n =
              g.getMediaInfoForType(r, a['default'].VIDEO) ||
              g.getMediaInfoForType(r, a['default'].AUDIO)
            var s = undefined
            if (n) {
              s = p.getUseCalculatedLiveEdgeTimeForAdaptation(g.getDataForMedia(n))
              if (s) {
                i.debug('SegmentTimeline detected using calculated Live Edge Time')
                Q.setUseManifestDateHeaderTimeSource(false)
              }
            }
            var o = p.getUTCTimingSources(e.manifest)
            var u = !p.getIsDynamic(t) || s ? o : o.concat(Q.getUTCTimingSources())
            var l = F.isHTTPS(e.manifest.url)
            u.forEach(function(e) {
              if (
                e.value.replace(/.*?:\/\//g, '') ===
                Q.getDefaultUtcTimingSource().value.replace(/.*?:\/\//g, '')
              ) {
                e.value = e.value.replace(
                  l ? new RegExp(/^(http:)?\/\//i) : new RegExp(/^(https:)?\/\//i),
                  l ? 'https://' : 'http://'
                )
                i.debug('Matching default timing source protocol to manifest protocol: ', e.value)
              }
            })
            A.initialize(t)
            S.setConfig({ metricsModel: m, dashMetrics: _, baseURLController: A })
            S.initialize(u, Q.getUseManifestDateHeaderTimeSource())
          })()
        } else {
          W = true
          it()
        }
      }
      function He(e) {
        var t = undefined
        if (!e) {
          return t
        }
        switch (e) {
          case a['default'].VIDEO:
            t = te
            break
          case a['default'].AUDIO:
            t = re
            break
        }
        return t
      }
      function Ve(e) {
        var t = false
        Oe().forEach(function(r) {
          if (r.getMediaInfo().type === e) {
            t = true
          }
        })
        return t
      }
      function Ke(e, t) {
        t = t || new Date()
        if (ee) {
          Oe().forEach(function(r) {
            var n = r.getScheduleController()
            if (n) {
              n.finalisePlayList(t, e)
            }
          })
          m.addPlayList(ee)
          ee = null
        }
      }
      function Ye(e) {
        ee = new y.PlayList()
        ee.start = new Date()
        ee.mstart = $.getTime() * 1e3
        ee.starttype = e
        Oe().forEach(function(e) {
          var t = e.getScheduleController()
          if (t) {
            t.setPlayList(ee)
          }
        })
      }
      function We(e) {
        if (!e.error) return
        var t = ''
        switch (e.error.code) {
          case 1:
            t = 'MEDIA_ERR_ABORTED'
            break
          case 2:
            t = 'MEDIA_ERR_NETWORK'
            break
          case 3:
            t = 'MEDIA_ERR_DECODE'
            break
          case 4:
            t = 'MEDIA_ERR_SRC_NOT_SUPPORTED'
            break
          case 5:
            t = 'MEDIA_ERR_ENCRYPTED'
            break
          default:
            t = 'UNKNOWN'
            break
        }
        Y = true
        if (e.error.message) {
          t += ' (' + e.error.message + ')'
        }
        if (e.error.msExtendedCode) {
          t += ' (0x' + (e.error.msExtendedCode >>> 0).toString(16).toUpperCase() + ')'
        }
        i.fatal('Video Element Error: ' + t)
        if (e.error) {
          i.fatal(e.error)
        }
        U.mediaSourceError(t)
        U.error(new N['default'](e.error.code, t))
        it()
      }
      function ze() {
        return G ? G.getStreamInfo() : null
      }
      function Xe(e) {
        return j.filter(function(t) {
          return t.getId() === e
        })[0]
      }
      function $e() {
        if (
          !f ||
          !f.hasOwnProperty('load') ||
          !B ||
          !B.hasOwnProperty('initialize') ||
          !B.hasOwnProperty('reset') ||
          !B.hasOwnProperty('getClientTimeOffset') ||
          !c ||
          !U ||
          !m ||
          !$
        ) {
          throw new Error('setConfig function has to be called previously')
        }
      }
      function Qe() {
        if (!u || !u.hasOwnProperty('setManifest')) {
          throw new Error('initialize function has to be called previously')
        }
      }
      function Je(e) {
        $e()
        f.load(e)
      }
      function Ze(e) {
        Qe()
        u.setManifest(e)
      }
      function et(e) {
        if (!isNaN(e.newDuration)) {
          Ue(e.newDuration)
        }
      }
      function tt(e) {
        if (!e) return
        if (e.capabilities) {
          s = e.capabilities
        }
        if (e.manifestLoader) {
          f = e.manifestLoader
        }
        if (e.manifestModel) {
          c = e.manifestModel
        }
        if (e.dashManifestModel) {
          p = e.dashManifestModel
        }
        if (e.mediaPlayerModel) {
          Q = e.mediaPlayerModel
        }
        if (e.protectionController) {
          q = e.protectionController
        }
        if (e.adapter) {
          g = e.adapter
        }
        if (e.metricsModel) {
          m = e.metricsModel
        }
        if (e.dashMetrics) {
          _ = e.dashMetrics
        }
        if (e.errHandler) {
          U = e.errHandler
        }
        if (e.timelineConverter) {
          B = e.timelineConverter
        }
        if (e.videoModel) {
          X = e.videoModel
        }
        if (e.playbackController) {
          $ = e.playbackController
        }
        if (e.domStorage) {
          C = e.domStorage
        }
        if (e.abrController) {
          D = e.abrController
        }
        if (e.mediaController) {
          M = e.mediaController
        }
        if (e.textController) {
          P = e.textController
        }
      }
      function rt(e) {
        H = e
      }
      function nt() {
        j = []
        q = null
        K = false
        G = null
        Y = false
        W = false
        te = undefined
        re = undefined
        Z = true
        J = false
        V = true
        ee = null
        ie = undefined
        ne = false
        se = 0
      }
      function it() {
        $e()
        S.reset()
        Ke(Y || W ? y.PlayListTrace.FAILURE_STOP_REASON : y.PlayListTrace.USER_REQUEST_STOP_REASON)
        for (var e = 0, t = j ? j.length : 0; e < t; e++) {
          var n = j[e]
          n.reset(Y)
        }
        ve()
        A.reset()
        u.reset()
        m.clearAllCurrentMetrics()
        c.setValue(null)
        f.reset()
        B.reset()
        L.reset()
        if (z) {
          E.detachMediaSource(X)
          z = null
        }
        X = null
        if (q) {
          q.setMediaElement(null)
          q = null
          H = null
          if (c.getValue()) {
            r.trigger(v['default'].PROTECTION_DESTROYED, { data: c.getValue().url })
          }
        }
        r.trigger(v['default'].STREAM_TEARDOWN_COMPLETE)
        nt()
      }
      function at(e) {
        if (e.metric === o['default'].DVR_INFO) {
          if (e.mediaType === a['default'].AUDIO) {
            E.setSeekable(z, e.value.range.start, e.value.range.end)
          }
        }
      }
      n = {
        initialize: he,
        getActiveStreamInfo: ze,
        isTrackTypePresent: He,
        switchToVideoElement: Le,
        getStreamById: Xe,
        getStreamForTime: Re,
        getTimeRelativeToStreamId: De,
        load: Je,
        loadWithManifest: Ze,
        getActiveStreamProcessors: Oe,
        setConfig: tt,
        setProtectionData: rt,
        reset: it,
      }
      ce()
      return n
    }
    F.__dashjs_factory_name = 'StreamController'
    t['default'] = m['default'].getSingletonFactory(F)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(5)
    var o = n(s)
    var u = r(7)
    var l = r(2)
    var f = n(l)
    var d = r(4)
    var c = n(d)
    var h = r(6)
    var p = n(h)
    var v = r(0)
    var g = n(v)
    var m = r(1)
    var y = n(m)
    var _ = r(15)
    var T = n(_)
    var E = 5e3
    function b() {
      var e = this.context
      var t = (0, f['default'])(e).getInstance()
      var r = (0, T['default'])(e).getInstance()
      var n = undefined,
        i = undefined,
        s = undefined,
        l = undefined,
        d = undefined,
        h = undefined,
        v = undefined,
        g = undefined,
        m = undefined
      function _() {
        i = (0, y['default'])(e)
          .getInstance()
          .getLogger(n)
      }
      function b(e, t) {
        d = t
        s = 0
        l = false
        h = {
          'urn:mpeg:dash:utc:http-head:2014': x,
          'urn:mpeg:dash:utc:http-xsdate:2014': L.bind(null, O),
          'urn:mpeg:dash:utc:http-iso:2014': L.bind(null, M),
          'urn:mpeg:dash:utc:direct:2014': N,
          'urn:mpeg:dash:utc:http-head:2012': x,
          'urn:mpeg:dash:utc:http-xsdate:2012': L.bind(null, O),
          'urn:mpeg:dash:utc:http-iso:2012': L.bind(null, M),
          'urn:mpeg:dash:utc:direct:2012': N,
          'urn:mpeg:dash:utc:http-ntp:2014': P,
          'urn:mpeg:dash:utc:ntp:2014': P,
          'urn:mpeg:dash:utc:sntp:2014': P,
        }
        if (!I()) {
          j(e)
        }
      }
      function S(e) {
        if (!e) return
        if (e.metricsModel) {
          v = e.metricsModel
        }
        if (e.dashMetrics) {
          g = e.dashMetrics
        }
        if (e.baseURLController) {
          m = e.baseURLController
        }
      }
      function w() {
        return R()
      }
      function A(e) {
        l = e
      }
      function I() {
        return l
      }
      function C(e) {
        s = e
      }
      function R() {
        return s
      }
      function D(e) {
        var t = 60
        var r = 60
        var n = 1e3
        var i = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\.[0-9]*)?)?(?:([+\-])([0-9]{2})([0-9]{2}))?/
        var a = undefined,
          s = undefined
        var o = i.exec(e)
        a = Date.UTC(
          parseInt(o[1], 10),
          parseInt(o[2], 10) - 1,
          parseInt(o[3], 10),
          parseInt(o[4], 10),
          parseInt(o[5], 10),
          o[6] && (parseInt(o[6], 10) || 0),
          (o[7] && parseFloat(o[7]) * n) || 0
        )
        if (o[9] && o[10]) {
          s = parseInt(o[9], 10) * r + parseInt(o[10], 10)
          a += (o[8] === '+' ? -1 : +1) * s * t * n
        }
        return new Date(a).getTime()
      }
      function O(e) {
        var t = Date.parse(e)
        if (isNaN(t)) {
          t = D(e)
        }
        return t
      }
      function M(e) {
        return Date.parse(e)
      }
      function k(e) {
        return Date.parse(e)
      }
      function P(e, t, r) {
        r()
      }
      function N(e, t, r) {
        var n = O(e)
        if (!isNaN(n)) {
          t(n)
          return
        }
        r()
      }
      function L(e, t, n, i, a) {
        var s = undefined,
          o = undefined
        var l = false
        var f = new XMLHttpRequest()
        var d = a ? u.HTTPRequest.HEAD : u.HTTPRequest.GET
        var c = t.match(/\S+/g)
        t = c.shift()
        s = function() {
          if (l) {
            return
          }
          l = true
          if (c.length) {
            L(e, c.join(' '), n, i, a)
          } else {
            i()
          }
        }
        o = function() {
          var t = undefined,
            r = undefined
          if (f.status === 200) {
            t = a ? f.getResponseHeader('Date') : f.response
            r = e(t)
            if (!isNaN(r)) {
              n(r)
              l = true
            }
          }
        }
        if (r.isRelative(t)) {
          var h = m.resolve()
          if (h) {
            t = r.resolve(t, h.url)
          }
        }
        f.open(d, t)
        f.timeout = E || 0
        f.onload = o
        f.onloadend = s
        f.send()
      }
      function x(e, t, r) {
        L(k, e, t, r, true)
      }
      function F() {
        var e = v.getReadOnlyMetricsFor(a['default'].STREAM)
        var t = g.getLatestMPDRequestHeaderValueByID(e, 'Date')
        var r = t !== null ? new Date(t).getTime() : Number.NaN
        if (!isNaN(r)) {
          C(r - new Date().getTime())
          U(false, r / 1e3, s)
        } else {
          U(true)
        }
      }
      function U(e, r, n) {
        A(false)
        t.trigger(c['default'].TIME_SYNCHRONIZATION_COMPLETED, {
          time: r,
          offset: n,
          error: e
            ? new o['default'](
                p['default'].TIME_SYNC_FAILED_ERROR_CODE,
                p['default'].TIME_SYNC_FAILED_ERROR_MESSAGE
              )
            : null,
        })
      }
      function B(e, t) {
        return e - t
      }
      function j(e, t) {
        var r = t || 0
        var n = e[r]
        var a = function e(t, r) {
          var n = !t || !r
          if (n && d) {
            F()
          } else {
            U(n, t, r)
          }
        }
        A(true)
        if (n) {
          if (h.hasOwnProperty(n.schemeIdUri)) {
            h[n.schemeIdUri](
              n.value,
              function(e) {
                var t = new Date().getTime()
                var r = B(e, t)
                C(r)
                i.info('Local time: ' + new Date(t))
                i.info('Server time: ' + new Date(e))
                i.info('Server Time - Local Time (ms): ' + r)
                a(e, r)
              },
              function() {
                j(e, r + 1)
              }
            )
          } else {
            j(e, r + 1)
          }
        } else {
          C(0)
          a()
        }
      }
      function G() {
        A(false)
      }
      n = { initialize: b, getOffsetToDeviceTimeMs: w, setConfig: S, reset: G }
      _()
      return n
    }
    b.__dashjs_factory_name = 'TimeSyncController'
    var S = g['default'].getSingletonFactory(b)
    S.HTTP_TIMEOUT_MS = E
    g['default'].updateSingletonFactory(b.__dashjs_factory_name, S)
    t['default'] = S
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(219)
    var a = n(i)
    var s = r(2)
    var o = n(s)
    var u = r(4)
    var l = n(u)
    var f = r(0)
    var d = n(f)
    var c = r(99)
    var h = n(c)
    var p = r(15)
    var v = n(p)
    var g = r(9)
    var m = n(g)
    var y = 'onLoad'
    var _ = 'onActuate'
    var T = 'urn:mpeg:dash:resolve-to-zero:2013'
    function E(e) {
      e = e || {}
      var t = this.context
      var r = (0, o['default'])(t).getInstance()
      var n = (0, v['default'])(t).getInstance()
      var i = undefined,
        s = undefined,
        u = undefined,
        f = undefined,
        d = undefined,
        c = undefined
      function p() {
        r.on(l['default'].XLINK_ELEMENT_LOADED, A, i)
        c = (0, a['default'])(t).create({
          errHandler: e.errHandler,
          metricsModel: e.metricsModel,
          mediaPlayerModel: e.mediaPlayerModel,
          requestModifier: e.requestModifier,
        })
      }
      function g(e) {
        if (e) {
          s = e
        }
      }
      function E(e) {
        if (e) {
          u = e
        }
      }
      function b(e) {
        var t = undefined
        d = new h['default']({
          escapeMode: false,
          attributePrefix: '',
          arrayAccessForm: 'property',
          emptyNodeForm: 'object',
          stripWhitespaces: false,
          enableToStringFunc: false,
          ignoreRoot: true,
          matchers: s,
        })
        f = e
        t = C(f.Period_asArray, f, m['default'].PERIOD, y)
        w(t, m['default'].PERIOD, y)
      }
      function S() {
        r.off(l['default'].XLINK_ELEMENT_LOADED, A, i)
        if (c) {
          c.reset()
          c = null
        }
      }
      function w(e, t, r) {
        var i = {}
        var a = undefined,
          s = undefined
        i.elements = e
        i.type = t
        i.resolveType = r
        if (i.elements.length === 0) {
          I(i)
        }
        for (var o = 0; o < i.elements.length; o++) {
          a = i.elements[o]
          if (n.isHTTPURL(a.url)) {
            s = a.url
          } else {
            s = a.originalContent.BaseURL + a.url
          }
          c.load(s, a, i)
        }
      }
      function A(e) {
        var t = undefined,
          r = undefined
        var n = '<response>'
        var i = '</response>'
        var a = ''
        t = e.element
        r = e.resolveObject
        if (t.resolvedContent) {
          var s = 0
          if (t.resolvedContent.indexOf('<?xml') === 0) {
            s = t.resolvedContent.indexOf('?>') + 2
          }
          a = t.resolvedContent.substr(0, s) + n + t.resolvedContent.substr(s) + i
          t.resolvedContent = d.xml_str2json(a)
        }
        if (O(r)) {
          I(r)
        }
      }
      function I(e) {
        var t = []
        var n = undefined,
          i = undefined
        R(e)
        if (e.resolveType === _) {
          r.trigger(l['default'].XLINK_READY, { manifest: f })
        }
        if (e.resolveType === y) {
          switch (e.type) {
            case m['default'].PERIOD:
              for (n = 0; n < f[m['default'].PERIOD + '_asArray'].length; n++) {
                i = f[m['default'].PERIOD + '_asArray'][n]
                if (i.hasOwnProperty(m['default'].ADAPTATION_SET + '_asArray')) {
                  t = t.concat(
                    C(
                      i[m['default'].ADAPTATION_SET + '_asArray'],
                      i,
                      m['default'].ADAPTATION_SET,
                      y
                    )
                  )
                }
                if (i.hasOwnProperty(m['default'].EVENT_STREAM + '_asArray')) {
                  t = t.concat(
                    C(i[m['default'].EVENT_STREAM + '_asArray'], i, m['default'].EVENT_STREAM, y)
                  )
                }
              }
              w(t, m['default'].ADAPTATION_SET, y)
              break
            case m['default'].ADAPTATION_SET:
              r.trigger(l['default'].XLINK_READY, { manifest: f })
              break
          }
        }
      }
      function C(e, t, r, n) {
        var i = []
        var a = undefined,
          s = undefined,
          o = undefined
        for (s = e.length - 1; s >= 0; s--) {
          a = e[s]
          if (a.hasOwnProperty('xlink:href') && a['xlink:href'] === T) {
            e.splice(s, 1)
          }
        }
        for (s = 0; s < e.length; s++) {
          a = e[s]
          if (
            a.hasOwnProperty('xlink:href') &&
            a.hasOwnProperty('xlink:actuate') &&
            a['xlink:actuate'] === n
          ) {
            o = D(a['xlink:href'], t, r, s, n, a)
            i.push(o)
          }
        }
        return i
      }
      function R(e) {
        var t = []
        var r = undefined,
          n = undefined,
          i = undefined,
          a = undefined,
          s = undefined,
          o = undefined
        for (a = e.elements.length - 1; a >= 0; a--) {
          r = e.elements[a]
          n = r.type + '_asArray'
          if (!r.resolvedContent || M()) {
            delete r.originalContent['xlink:actuate']
            delete r.originalContent['xlink:href']
            t.push(r.originalContent)
          } else if (r.resolvedContent) {
            for (s = 0; s < r.resolvedContent[n].length; s++) {
              i = r.resolvedContent[n][s]
              t.push(i)
            }
          }
          r.parentElement[n].splice(r.index, 1)
          for (o = 0; o < t.length; o++) {
            r.parentElement[n].splice(r.index + o, 0, t[o])
          }
          t = []
        }
        if (e.elements.length > 0) {
          u.run(f)
        }
      }
      function D(e, t, r, n, i, a) {
        return {
          url: e,
          parentElement: t,
          type: r,
          index: n,
          resolveType: i,
          originalContent: a,
          resolvedContent: null,
          resolved: false,
        }
      }
      function O(e) {
        var t = undefined,
          r = undefined
        for (t = 0; t < e.elements.length; t++) {
          r = e.elements[t]
          if (r.resolved === false) {
            return false
          }
        }
        return true
      }
      function M() {
        return false
      }
      i = { resolveManifestOnLoad: b, setMatchers: g, setIron: E, reset: S }
      p()
      return i
    }
    E.__dashjs_factory_name = 'XlinkController'
    t['default'] = d['default'].getClassFactory(E)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(240)
    var a = n(i)
    var s = r(45)
    var o = n(s)
    var u = r(230)
    var l = n(u)
    var f = r(111)
    var d = n(f)
    var c = r(112)
    var h = n(c)
    function p() {
      var e = this.context
      var t = undefined,
        r = undefined
      function n(t) {
        r = (0, a['default'])(e).getInstance({
          eventBus: t.eventBus,
          metricsModel: t.metricsModel,
          metricsConstants: t.metricsConstants,
          events: t.events,
        })
        return (0, l['default'])(e).create(t)
      }
      function i() {
        return (0, h['default'])(e).getInstance()
      }
      function s() {
        return (0, d['default'])(e).getInstance()
      }
      t = { createMetricsReporting: n, getReportingFactory: i, getMetricsHandlerFactory: s }
      return t
    }
    p.__dashjs_factory_name = 'MetricsReporting'
    var v = dashjs.FactoryMaker.getClassFactory(p)
    v.events = o['default']
    dashjs.FactoryMaker.updateClassFactory(p.__dashjs_factory_name, v)
    t['default'] = v
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(231)
    var a = n(i)
    var s = r(241)
    var o = n(s)
    var u = r(45)
    var l = n(u)
    function f(e) {
      e = e || {}
      var t = {}
      var r = this.context
      var n = e.eventBus
      var i = e.events
      function s(i) {
        if (i.error) {
          return
        }
        var s = Object.keys(t)
        var u = (0, o['default'])(r)
          .getInstance({ dashManifestModel: e.dashManifestModel, constants: e.constants })
          .getMetrics(i.manifest)
        u.forEach(function(n) {
          var i = JSON.stringify(n)
          if (!t.hasOwnProperty(i)) {
            try {
              var o = (0, a['default'])(r).create(e)
              o.initialize(n)
              t[i] = o
            } catch (e) {}
          } else {
            s.splice(i, 1)
          }
        })
        s.forEach(function(e) {
          t[e].reset()
          delete t[e]
        })
        n.trigger(l['default'].METRICS_INITIALISATION_COMPLETE)
      }
      function u() {
        Object.keys(t).forEach(function(e) {
          t[e].reset()
        })
        t = {}
      }
      function f() {
        n.on(i.MANIFEST_UPDATED, s)
        n.on(i.STREAM_TEARDOWN_COMPLETE, u)
      }
      function d() {
        n.off(i.MANIFEST_UPDATED, s)
        n.off(i.STREAM_TEARDOWN_COMPLETE, u)
      }
      f()
      return { reset: d }
    }
    f.__dashjs_factory_name = 'MetricsCollectionController'
    t['default'] = dashjs.FactoryMaker.getClassFactory(f)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(233)
    var a = n(i)
    var s = r(234)
    var o = n(s)
    var u = r(232)
    var l = n(u)
    function f(e) {
      e = e || {}
      var t = undefined,
        r = undefined,
        n = undefined,
        i = undefined
      var s = this.context
      function u(i) {
        try {
          n = (0, a['default'])(s).create({ mediaElement: e.mediaElement })
          n.initialize(i.Range)
          r = (0, o['default'])(s).create({ debug: e.debug, metricsConstants: e.metricsConstants })
          r.initialize(i.Reporting, n)
          t = (0, l['default'])(s).create({
            debug: e.debug,
            eventBus: e.eventBus,
            metricsConstants: e.metricsConstants,
            events: e.events,
          })
          t.initialize(i.metrics, r)
        } catch (e) {
          f()
          throw e
        }
      }
      function f() {
        if (t) {
          t.reset()
        }
        if (r) {
          r.reset()
        }
        if (n) {
          n.reset()
        }
      }
      i = { initialize: u, reset: f }
      return i
    }
    f.__dashjs_factory_name = 'MetricsController'
    t['default'] = dashjs.FactoryMaker.getClassFactory(f)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(111)
    var a = n(i)
    function s(e) {
      e = e || {}
      var t = []
      var r = undefined
      var n = this.context
      var i = e.eventBus
      var s = e.events
      var o = (0, a['default'])(n).getInstance({
        debug: e.debug,
        eventBus: e.eventBus,
        metricsConstants: e.metricsConstants,
      })
      function u(e) {
        t.forEach(function(t) {
          t.handleNewMetric(e.metric, e.value, e.mediaType)
        })
      }
      function l(e, n) {
        e.split(',').forEach(function(e, r, i) {
          var a = undefined
          if (e.indexOf('(') !== -1 && e.indexOf(')') === -1) {
            var s = i[r + 1]
            if (s && s.indexOf('(') === -1 && s.indexOf(')') !== -1) {
              e += ',' + s
              delete i[r + 1]
            }
          }
          a = o.create(e, n)
          if (a) {
            t.push(a)
          }
        })
        i.on(s.METRIC_ADDED, u, r)
        i.on(s.METRIC_UPDATED, u, r)
      }
      function f() {
        i.off(s.METRIC_ADDED, u, r)
        i.off(s.METRIC_UPDATED, u, r)
        t.forEach(function(e) {
          return e.reset()
        })
        t = []
      }
      r = { initialize: l, reset: f }
      return r
    }
    s.__dashjs_factory_name = 'MetricsHandlersController'
    t['default'] = dashjs.FactoryMaker.getClassFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(116)
    var a = n(i)
    function s(e) {
      e = e || {}
      var t = false
      var r = this.context
      var n = undefined,
        i = undefined
      var s = e.mediaElement
      function o(e) {
        if (e && e.length) {
          e.forEach(function(e) {
            var t = e.starttime
            var r = t + e.duration
            i.add(t, r)
          })
          t = !!e[0]._useWallClockTime
        }
      }
      function u() {
        i.clear()
      }
      function l() {
        i = (0, a['default'])(r).create()
      }
      function f() {
        var e = i.length
        var r = undefined
        if (!e) {
          return true
        }
        r = t ? new Date().getTime() / 1e3 : s.currentTime
        for (var n = 0; n < e; n += 1) {
          var a = i.start(n)
          var o = i.end(n)
          if (a <= r && r < o) {
            return true
          }
        }
        return false
      }
      n = { initialize: o, reset: u, isEnabled: f }
      l()
      return n
    }
    s.__dashjs_factory_name = 'RangeController'
    t['default'] = dashjs.FactoryMaker.getClassFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(112)
    var a = n(i)
    function s(e) {
      var t = []
      var r = undefined
      var n = (0, a['default'])(this.context).getInstance(e)
      function i(e, r) {
        e.some(function(e) {
          var i = n.create(e, r)
          if (i) {
            t.push(i)
            return true
          }
        })
      }
      function s() {
        t.forEach(function(e) {
          return e.reset()
        })
        t = []
      }
      function o(e, r) {
        t.forEach(function(t) {
          return t.report(e, r)
        })
      }
      r = { initialize: i, reset: s, report: o }
      return r
    }
    s.__dashjs_factory_name = 'ReportingController'
    t['default'] = dashjs.FactoryMaker.getClassFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(113)
    var a = n(i)
    function s(e) {
      e = e || {}
      var t = undefined,
        r = undefined,
        n = undefined,
        i = undefined,
        s = undefined,
        o = undefined
      var u = this.context
      var l = (0, a['default'])(u).getInstance()
      var f = []
      var d = e.metricsConstants
      function c() {
        try {
          return Object.keys(f)
            .map(function(e) {
              return f[e]
            })
            .reduce(function(e, t) {
              return e.level < t.level ? e : t
            })
        } catch (e) {
          return
        }
      }
      function h() {
        var e = c()
        if (e) {
          if (o !== e.t) {
            o = e.t
            r.report(i, e)
          }
        }
      }
      function p(e, t, a) {
        if (t) {
          n = l.validateN(a)
          r = t
          i = l.reconstructFullMetricName(e, a)
          s = setInterval(h, n)
        }
      }
      function v() {
        clearInterval(s)
        s = null
        n = 0
        r = null
        o = null
      }
      function g(e, t, r) {
        if (e === d.BUFFER_LEVEL) {
          f[r] = t
        }
      }
      t = { initialize: p, reset: v, handleNewMetric: g }
      return t
    }
    s.__dashjs_factory_name = 'BufferLevelHandler'
    t['default'] = dashjs.FactoryMaker.getClassFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(45)
    var a = n(i)
    function s(e) {
      e = e || {}
      var t = undefined,
        r = undefined
      var n = e.eventBus
      var i = e.metricsConstants
      function s() {
        n.off(a['default'].METRICS_INITIALISATION_COMPLETE, s, this)
        n.trigger(a['default'].BECAME_REPORTING_PLAYER)
      }
      function o(e, t) {
        if (t) {
          r = t
          n.on(a['default'].METRICS_INITIALISATION_COMPLETE, s, this)
        }
      }
      function u() {
        r = null
      }
      function l(e, t) {
        if (e === i.DVB_ERRORS) {
          if (r) {
            r.report(e, t)
          }
        }
      }
      t = { initialize: o, reset: u, handleNewMetric: l }
      return t
    }
    t['default'] = dashjs.FactoryMaker.getClassFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n() {
      var e = undefined,
        t = undefined,
        r = undefined
      function n(e, n) {
        t = e
        r = n
      }
      function i() {
        r = null
        t = undefined
      }
      function a(e, n) {
        if (e === t) {
          if (r) {
            r.report(t, n)
          }
        }
      }
      e = { initialize: n, reset: i, handleNewMetric: a }
      return e
    }
    n.__dashjs_factory_name = 'GenericMetricHandler'
    t['default'] = dashjs.FactoryMaker.getClassFactory(n)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(113)
    var a = n(i)
    function s(e) {
      e = e || {}
      var t = undefined,
        r = undefined,
        n = undefined,
        i = undefined,
        s = undefined,
        o = undefined
      var u = []
      var l = (0, a['default'])(this.context).getInstance()
      var f = e.metricsConstants
      function d() {
        var e = u
        if (e.length) {
          if (r) {
            r.report(s, e)
          }
        }
        u = []
      }
      function c(e, t, a, u) {
        if (t) {
          n = l.validateN(a)
          r = t
          if (u && u.length) {
            i = u
          }
          s = l.reconstructFullMetricName(e, a, u)
          o = setInterval(d, n)
        }
      }
      function h() {
        clearInterval(o)
        o = null
        n = null
        i = null
        u = []
        r = null
      }
      function p(e, t) {
        if (e === f.HTTP_REQUEST) {
          if (!i || i === t.type) {
            u.push(t)
          }
        }
      }
      t = { initialize: c, reset: h, handleNewMetric: p }
      return t
    }
    s.__dashjs_factory_name = 'HttpListHandler'
    t['default'] = dashjs.FactoryMaker.getClassFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(242)
    var a = n(i)
    var s = r(243)
    var o = n(s)
    function u(e) {
      e = e || {}
      var t = undefined
      var r = this.context
      var n = undefined,
        i = undefined,
        s = undefined,
        u = undefined,
        l = undefined,
        f = undefined
      var d = true
      var c = true
      var h = []
      var p = e.metricsConstants
      function v() {
        n = (0, a['default'])(r).getInstance()
        i = (0, o['default'])(r).getInstance()
        _()
      }
      function g(e, t, r) {
        var n = new XMLHttpRequest()
        var i = function e() {
          var i = h.indexOf(n)
          if (i === -1) {
            return
          } else {
            h.splice(i, 1)
          }
          if (n.status >= 200 && n.status < 300) {
            if (t) {
              t()
            }
          } else {
            if (r) {
              r()
            }
          }
        }
        h.push(n)
        try {
          n.open('GET', e)
          n.onloadend = i
          n.onerror = i
          n.send()
        } catch (e) {
          n.onerror()
        }
      }
      function m(e, t) {
        if (!Array.isArray(t)) {
          t = [t]
        }
        if (u && f.isEnabled()) {
          t.forEach(function(t) {
            var r = n.serialise(t)
            if (d && e !== p.DVB_ERRORS) {
              r = 'metricname=' + e + '&' + r
            }
            r = l + '?' + r
            g(r, null, function() {
              u = false
            })
          })
        }
      }
      function y(e, t) {
        var r = undefined
        f = t
        l = e['dvb:reportingUrl']
        if (!l) {
          throw new Error('required parameter missing (dvb:reportingUrl)')
        }
        if (!s) {
          r = e['dvb:probability'] || e['dvb:priority'] || 0
          if (r && (r === 1e3 || r / 1e3 >= i.random())) {
            u = true
          }
          s = true
        }
      }
      function _() {
        s = false
        u = false
        l = null
        f = null
      }
      function T() {
        if (!c) {
          h.forEach(function(e) {
            return e.abort()
          })
          h = []
        }
        _()
      }
      t = { report: m, initialize: y, reset: T }
      v()
      return t
    }
    u.__dashjs_factory_name = 'DVBReporting'
    t['default'] = dashjs.FactoryMaker.getClassFactory(u)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(244)
    var a = n(i)
    var s = r(45)
    var o = n(s)
    function u(e) {
      e = e || {}
      var t = undefined,
        r = undefined
      var n = e.eventBus
      var i = e.metricsModel
      var s = e.metricsConstants
      var u = e.events
      function l(e) {
        var t = new a['default']()
        if (!r) {
          return
        }
        for (var n in e) {
          if (e.hasOwnProperty(n)) {
            t[n] = e[n]
          }
        }
        if (!t.mpdurl) {
          t.mpdurl = r.originalUrl || r.url
        }
        if (!t.terror) {
          t.terror = new Date()
        }
        i.addDVBErrors(t)
      }
      function f(e) {
        if (e.error) {
          return
        }
        r = e.manifest
      }
      function d(e) {
        l({ errorcode: a['default'].BASE_URL_CHANGED, servicelocation: e.entry })
      }
      function c() {
        l({ errorcode: a['default'].BECAME_REPORTER })
      }
      function h(e) {
        if (
          e.responsecode === 0 ||
          e.responsecode >= 400 ||
          e.responsecode < 100 ||
          e.responsecode >= 600
        ) {
          l({
            errorcode: e.responsecode || a['default'].CONNECTION_ERROR,
            url: e.url,
            terror: e.tresponse,
            servicelocation: e._serviceLocation,
          })
        }
      }
      function p(e) {
        switch (e.metric) {
          case s.HTTP_REQUEST:
            h(e.value)
            break
          default:
            break
        }
      }
      function v(e) {
        var t = e.error ? e.error.code : 0
        var r = undefined
        switch (t) {
          case MediaError.MEDIA_ERR_NETWORK:
            r = a['default'].CONNECTION_ERROR
            break
          case MediaError.MEDIA_ERR_DECODE:
            r = a['default'].CORRUPT_MEDIA_OTHER
            break
          default:
            return
        }
        l({ errorcode: r })
      }
      function g() {
        n.on(u.MANIFEST_UPDATED, f, t)
        n.on(u.SERVICE_LOCATION_BLACKLIST_CHANGED, d, t)
        n.on(u.METRIC_ADDED, p, t)
        n.on(u.METRIC_UPDATED, p, t)
        n.on(u.PLAYBACK_ERROR, v, t)
        n.on(o['default'].BECAME_REPORTING_PLAYER, c, t)
      }
      function m() {
        n.off(u.MANIFEST_UPDATED, f, t)
        n.off(u.SERVICE_LOCATION_BLACKLIST_CHANGED, d, t)
        n.off(u.METRIC_ADDED, p, t)
        n.off(u.METRIC_UPDATED, p, t)
        n.off(u.PLAYBACK_ERROR, v, t)
        n.off(o['default'].BECAME_REPORTING_PLAYER, c, t)
      }
      t = { initialise: g, reset: m }
      g()
      return t
    }
    u.__dashjs_factory_name = 'DVBErrorsTranslator'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(u)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(245)
    var a = n(i)
    var s = r(246)
    var o = n(s)
    var u = r(247)
    var l = n(u)
    function f(e) {
      e = e || {}
      var t = undefined
      var r = e.dashManifestModel
      var n = e.constants
      function i(e, t, i) {
        var a = r.getMpd(e)
        var s
        var o = 0
        var u
        if (t) {
          o = a.availabilityStartTime.getTime() / 1e3
        } else {
          s = this.getRegularPeriods(a)
          if (s.length) {
            o = s[0].start
          }
        }
        u = o
        if (i && i.hasOwnProperty(n.START_TIME)) {
          u += i.starttime
        }
        return u
      }
      function s(e) {
        var t = []
        if (e.Metrics_asArray) {
          e.Metrics_asArray.forEach(function(s) {
            var u = new a['default']()
            var f = r.getIsDynamic(e)
            if (s.hasOwnProperty('metrics')) {
              u.metrics = s.metrics
            } else {
              return
            }
            if (s.Range_asArray) {
              s.Range_asArray.forEach(function(t) {
                var n = new o['default']()
                n.starttime = i(e, f, t)
                if (t.hasOwnProperty('duration')) {
                  n.duration = t.duration
                } else {
                  n.duration = r.getDuration(e)
                }
                n._useWallClockTime = f
                u.Range.push(n)
              })
            }
            if (s.Reporting_asArray) {
              s.Reporting_asArray.forEach(function(e) {
                var t = new l['default']()
                if (e.hasOwnProperty(n.SCHEME_ID_URI)) {
                  t.schemeIdUri = e.schemeIdUri
                } else {
                  return
                }
                for (var r in e) {
                  if (e.hasOwnProperty(r)) {
                    t[r] = e[r]
                  }
                }
                u.Reporting.push(t)
              })
            } else {
              return
            }
            t.push(u)
          })
        }
        return t
      }
      t = { getMetrics: s }
      return t
    }
    f.__dashjs_factory_name = 'ManifestParsing'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(f)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n() {
      function e(t) {
        var r = []
        var n = []
        var i = undefined,
          a = undefined
        for (i in t) {
          if (t.hasOwnProperty(i) && i.indexOf('_') !== 0) {
            a = t[i]
            if (a === undefined || a === null) {
              a = ''
            }
            if (Array.isArray(a)) {
              if (!a.length) {
                continue
              }
              n = []
              a.forEach(function(t) {
                var r = Object.prototype.toString.call(t).slice(8, -1) !== 'Object'
                n.push(r ? t : e(t))
              })
              a = n.map(encodeURIComponent).join(',')
            } else if (typeof a === 'string') {
              a = encodeURIComponent(a)
            } else if (a instanceof Date) {
              a = a.toISOString()
            } else if (typeof a === 'number') {
              a = Math.round(a)
            }
            r.push(i + '=' + a)
          }
        }
        return r.join('&')
      }
      return { serialise: e }
    }
    n.__dashjs_factory_name = 'MetricSerialiser'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(n)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n() {
      var e = window.crypto || window.msCrypto
      var t = Uint32Array
      var r = Math.pow(2, t.BYTES_PER_ELEMENT * 8) - 1
      var n = 10
      var i = undefined,
        a = undefined,
        s = undefined
      function o() {
        if (e) {
          if (!i) {
            i = new t(n)
          }
          e.getRandomValues(i)
          a = 0
        }
      }
      function u(t, n) {
        var s = undefined
        if (!t) {
          t = 0
        }
        if (!n) {
          n = 1
        }
        if (e) {
          if (a === i.length) {
            o()
          }
          s = i[a] / r
          a += 1
        } else {
          s = Math.random()
        }
        return s * (n - t) + t
      }
      s = { random: u }
      o()
      return s
    }
    n.__dashjs_factory_name = 'RNG'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(n)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.mpdurl = null
      this.errorcode = null
      this.terror = null
      this.url = null
      this.ipaddress = null
      this.servicelocation = null
    }
    i.SSL_CONNECTION_FAILED_PREFIX = 'SSL'
    i.DNS_RESOLUTION_FAILED = 'C00'
    i.HOST_UNREACHABLE = 'C01'
    i.CONNECTION_REFUSED = 'C02'
    i.CONNECTION_ERROR = 'C03'
    i.CORRUPT_MEDIA_ISOBMFF = 'M00'
    i.CORRUPT_MEDIA_OTHER = 'M01'
    i.BASE_URL_CHANGED = 'F00'
    i.BECAME_REPORTER = 'S00'
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.metrics = ''
      this.Range = []
      this.Reporting = []
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.starttime = 0
      this.duration = Infinity
      this._useWallClockTime = false
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.schemeIdUri = ''
      this.value = ''
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = r(117)
    var s = n(a)
    var o = r(0)
    var u = n(o)
    var l = NaN
    var f = function e(t, r) {
      i(this, e)
      this.data = { baseUrls: t || null, selectedIdx: r || l }
      this.children = []
    }
    function d() {
      var e = undefined,
        t = undefined,
        r = undefined
      var n = this.context
      var i = (0, s['default'])(n).getInstance()
      function a() {
        g()
      }
      function o(e) {
        if (e.dashManifestModel) {
          r = e.dashManifestModel
        }
      }
      function u() {
        if (
          !r ||
          !r.hasOwnProperty('getBaseURLsFromElement') ||
          !r.hasOwnProperty('getRepresentationSortFunction')
        ) {
          throw new Error('setConfig function has to be called previously')
        }
      }
      function d(e, t, n) {
        var a = r.getBaseURLsFromElement(n)
        if (!e[t]) {
          e[t] = new f(a)
        } else {
          if (!i.areEqual(a, e[t].data.baseUrls)) {
            e[t].data.baseUrls = a
            e[t].data.selectedIdx = l
          }
        }
      }
      function c(e) {
        u()
        var n = r.getBaseURLsFromElement(e)
        if (!i.areEqual(n, t.data.baseUrls)) {
          t.data.baseUrls = n
          t.data.selectedIdx = l
        }
        if (e && e.Period_asArray) {
          e.Period_asArray.forEach(function(e, n) {
            d(t.children, n, e)
            if (e.AdaptationSet_asArray) {
              e.AdaptationSet_asArray.forEach(function(e, i) {
                d(t.children[n].children, i, e)
                if (e.Representation_asArray) {
                  e.Representation_asArray.sort(r.getRepresentationSortFunction()).forEach(function(
                    e,
                    r
                  ) {
                    d(t.children[n].children[i].children, r, e)
                  })
                }
              })
            }
          })
        }
      }
      function h(e, r) {
        var n = r || t
        e(n.data)
        if (n.children) {
          n.children.forEach(function(t) {
            return h(e, t)
          })
        }
      }
      function p(e) {
        h(function(t) {
          if (!isNaN(t.selectedIdx)) {
            if (e === t.baseUrls[t.selectedIdx].serviceLocation) {
              t.selectedIdx = l
            }
          }
        })
      }
      function v(e) {
        c(e)
      }
      function g() {
        t = new f()
      }
      function m(e) {
        var r = t
        var n = [r.data]
        if (e) {
          e.forEach(function(e) {
            r = r.children[e]
            if (r) {
              n.push(r.data)
            }
          })
        }
        return n.filter(function(e) {
          return e.baseUrls.length
        })
      }
      e = { reset: g, update: v, getForPath: m, invalidateSelectedIndexes: p, setConfig: o }
      a()
      return e
    }
    d.__dashjs_factory_name = 'BaseURLTreeModel'
    t['default'] = u['default'].getClassFactory(d)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(2)
    var a = n(i)
    var s = r(4)
    var o = n(s)
    var u = r(0)
    var l = n(u)
    function f() {
      var e = this.context
      var t = (0, a['default'])(e).getInstance()
      var r = undefined,
        n = undefined
      function i() {
        return n
      }
      function s(e) {
        n = e
        if (e) {
          t.trigger(o['default'].MANIFEST_LOADED, { data: e })
        }
      }
      r = { getValue: i, setValue: s }
      return r
    }
    f.__dashjs_factory_name = 'ManifestModel'
    t['default'] = l['default'].getSingletonFactory(f)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function i(e, t, r) {
      if (t in e) {
        Object.defineProperty(e, t, {
          value: r,
          enumerable: true,
          configurable: true,
          writable: true,
        })
      } else {
        e[t] = r
      }
      return e
    }
    var a = r(106)
    var s = n(a)
    var o = r(0)
    var u = n(o)
    var l = r(7)
    var f = r(3)
    var d = n(f)
    var c = r(114)
    var h = n(c)
    var p = r(27)
    var v = 4
    var g = 36e4
    var m = 36e4
    var y = 0.9
    var _ = 1e4
    var T = 20
    var E = 80
    var b = 10
    var S = 12
    var w = 20
    var A = 30
    var I = 60
    var C = 600
    var R = 0.2
    var D = 0.8
    var O = 100
    var M = 50
    var k = 5
    var P = 3
    var N = 1e3
    var L = 3
    var x = 500
    var F = 1
    var U = 500
    var B = 3
    var j = 10
    var G = 5
    var q = 0.02
    var H = 0
    var V = 0.5
    var K = 50
    var Y = false
    function W() {
      var e = undefined,
        t = undefined,
        r = undefined,
        n = undefined,
        a = undefined,
        o = undefined,
        u = undefined,
        f = undefined,
        c = undefined,
        W = undefined,
        z = undefined,
        X = undefined,
        $ = undefined,
        Q = undefined,
        J = undefined,
        Z = undefined,
        ee = undefined,
        te = undefined,
        re = undefined,
        ne = undefined,
        ie = undefined,
        ae = undefined,
        se = undefined,
        oe = undefined,
        ue = undefined,
        le = undefined,
        fe = undefined,
        de = undefined,
        ce = undefined,
        he = undefined,
        pe = undefined,
        ve = undefined,
        ge = undefined,
        me = undefined,
        ye = undefined,
        _e = undefined,
        Te = undefined
      var Ee = {
        scheme: 'urn:mpeg:dash:utc:http-xsdate:2014',
        value: 'http://time.akamai.com/?iso&ms',
      }
      function be() {
        var e, s
        n = []
        r = false
        t = true
        u = true
        se = d['default'].ABR_STRATEGY_DYNAMIC
        oe = true
        le = false
        z = { enabled: true, ttl: g }
        X = { enabled: true, ttl: m }
        a = v
        o = undefined
        f = T
        c = E
        W = b
        $ = NaN
        Q = A
        J = I
        Z = C
        ee = R
        te = y
        re = _
        ae = K
        he = false
        pe = D
        ge = O
        ue = { default: Y }
        fe = []
        de = d['default'].MOVING_AVERAGE_SLIDING_WINDOW
        ve = false
        ye = q
        _e = H
        Te = V
        ne = ((e = {}),
        i(e, l.HTTPRequest.MPD_TYPE, L),
        i(e, l.HTTPRequest.XLINK_EXPANSION_TYPE, F),
        i(e, l.HTTPRequest.MEDIA_SEGMENT_TYPE, P),
        i(e, l.HTTPRequest.INIT_SEGMENT_TYPE, P),
        i(e, l.HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE, P),
        i(e, l.HTTPRequest.INDEX_SEGMENT_TYPE, P),
        i(e, l.HTTPRequest.OTHER_TYPE, P),
        e)
        ie = ((s = {}),
        i(s, l.HTTPRequest.MPD_TYPE, x),
        i(s, l.HTTPRequest.XLINK_EXPANSION_TYPE, U),
        i(s, l.HTTPRequest.MEDIA_SEGMENT_TYPE, N),
        i(s, l.HTTPRequest.INIT_SEGMENT_TYPE, N),
        i(s, l.HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE, N),
        i(s, l.HTTPRequest.INDEX_SEGMENT_TYPE, N),
        i(s, l.HTTPRequest.OTHER_TYPE, N),
        s)
        ce = {}
        ce[d['default'].VIDEO] = M
        ce[d['default'].AUDIO] = k
        me = false
      }
      function Se(e) {
        if (
          e === d['default'].ABR_STRATEGY_DYNAMIC ||
          e === d['default'].ABR_STRATEGY_BOLA ||
          e === d['default'].ABR_STRATEGY_THROUGHPUT
        ) {
          se = e
        } else {
          throw d['default'].BAD_ARGUMENT_ERROR
        }
      }
      function we() {
        return se
      }
      function Ae(e) {
        ;(0, p.checkParameterType)(e, 'boolean')
        oe = e
      }
      function Ie() {
        return oe
      }
      function Ce(e) {
        var t = undefined
        for (t = 0; t < fe.length; t++) {
          if (fe[t].rulename === e) {
            return t
          }
        }
        return -1
      }
      function Re() {
        return fe
      }
      function De(e, t, r) {
        if (
          typeof e !== 'string' ||
          (e !== h['default'].ABANDON_FRAGMENT_RULES && e !== h['default'].QUALITY_SWITCH_RULES) ||
          typeof t !== 'string'
        ) {
          throw d['default'].BAD_ARGUMENT_ERROR
        }
        var n = Ce(t)
        if (n === -1) {
          fe.push({ type: e, rulename: t, rule: r })
        } else {
          fe[n].type = e
          fe[n].rule = r
        }
      }
      function Oe(e) {
        if (e) {
          var t = Ce(e)
          if (t !== -1) {
            fe.splice(t, 1)
          }
        } else {
          fe = []
        }
      }
      function Me(e) {
        ;(0, p.checkParameterType)(e, 'number')
        te = e
      }
      function ke() {
        return te
      }
      function Pe(e) {
        ;(0, p.checkParameterType)(e, 'number')
        re = e
      }
      function Ne() {
        return re
      }
      function Le(e) {
        ;(0, p.checkParameterType)(e, 'number')
        $ = e
      }
      function xe() {
        if (Nt()) {
          return pt() * 0.6
        }
        return !isNaN($) ? $ : le ? w : S
      }
      function Fe(e) {
        ;(0, p.checkParameterType)(e, 'number')
        Q = e
      }
      function Ue() {
        return Q
      }
      function Be(e) {
        ;(0, p.checkParameterType)(e, 'number')
        J = e
      }
      function je() {
        return J
      }
      function Ge(e) {
        ;(0, p.checkParameterType)(e, 'number')
        Z = e
      }
      function qe() {
        return Z
      }
      function He(e) {
        ;(0, p.checkParameterType)(e, 'number')
        ee = e
      }
      function Ve() {
        return ee
      }
      function Ke(e, t) {
        ;(0, p.checkParameterType)(t, 'number')
        ;(0, p.checkIsVideoOrAudioType)(e)
        ce[e] = t
      }
      function Ye(e) {
        return ce[e]
      }
      function We(e) {
        ;(0, p.checkParameterType)(e, 'number')
        f = e
      }
      function ze() {
        return f
      }
      function Xe(e) {
        ;(0, p.checkParameterType)(e, 'number')
        c = e
      }
      function $e() {
        return c
      }
      function Qe(e, t) {
        if (typeof e !== 'boolean' || (t !== undefined && (typeof t !== 'number' || isNaN(t)))) {
          throw d['default'].BAD_ARGUMENT_ERROR
        }
        z.enabled = e
        if (t !== undefined) {
          z.ttl = t
        }
      }
      function Je() {
        return z
      }
      function Ze(e, t) {
        if (typeof e !== 'boolean' || (t !== undefined && (typeof t !== 'number' || isNaN(t)))) {
          throw d['default'].BAD_ARGUMENT_ERROR
        }
        X.enabled = e
        if (t !== undefined) {
          X.ttl = t
        }
      }
      function et() {
        return X
      }
      function tt(e) {
        ;(0, p.checkParameterType)(e, 'number')
        W = e
      }
      function rt() {
        return W
      }
      function nt(e, t) {
        if (
          typeof t !== 'number' ||
          typeof e !== 'string' ||
          (e !== l.HTTPRequest.MPD_TYPE && e !== l.HTTPRequest.MEDIA_SEGMENT_TYPE)
        ) {
          throw d['default'].BAD_ARGUMENT_ERROR
        }
        ne[e] = t
      }
      function it(e) {
        return Nt() ? ne[e] * G : ne[e]
      }
      function at(e, t) {
        ;(0, p.checkParameterType)(t, 'number')
        ie[e] = t
      }
      function st(e) {
        return Nt() ? ie[e] / j : ie[e]
      }
      function ot(e) {
        ;(0, p.checkParameterType)(e, 'number')
        ae = e
      }
      function ut() {
        return ae
      }
      function lt(e) {
        ;(0, p.checkParameterType)(e, 'boolean')
        u = e
      }
      function ft() {
        return u
      }
      function dt(e) {
        ;(0, p.checkParameterType)(e, 'number')
        a = e
      }
      function ct() {
        return a
      }
      function ht(e) {
        if (e !== undefined) {
          ;(0, p.checkParameterType)(e, 'number')
        }
        o = e
      }
      function pt() {
        if (ve) {
          return o || B
        }
        return o
      }
      function vt(e) {
        ;(0, p.checkParameterType)(e, 'boolean')
        t = e
      }
      function gt() {
        return t
      }
      function mt(e) {
        ;(0, p.checkParameterType)(e, 'boolean')
        r = e
      }
      function yt() {
        return r
      }
      function _t(e, t) {
        Et(e, t)
        var r = new s['default']()
        r.schemeIdUri = e
        r.value = t
        n.push(r)
      }
      function Tt() {
        return n
      }
      function Et(e, t) {
        ;(0, p.checkParameterType)(e, 'string')
        ;(0, p.checkParameterType)(t, 'string')
        n.forEach(function(r, i) {
          if (r.schemeIdUri === e && r.value === t) {
            n.splice(i, 1)
          }
        })
      }
      function bt() {
        n = []
      }
      function St() {
        _t(Ee.scheme, Ee.value)
      }
      function wt(e, t) {
        if (!e) {
          Object.keys(ue).forEach(function(e) {
            wt(e, t)
          })
        } else {
          ue[e] = !!t
        }
      }
      function At(e) {
        var t = ue[e]
        return t === undefined ? ue['default'] : t
      }
      function It() {
        return le
      }
      function Ct(e) {
        ;(0, p.checkParameterType)(e, 'boolean')
        le = e
      }
      function Rt(e) {
        if (
          e === d['default'].MOVING_AVERAGE_SLIDING_WINDOW ||
          e === d['default'].MOVING_AVERAGE_EWMA
        ) {
          de = e
        } else {
          throw d['default'].BAD_ARGUMENT_ERROR
        }
      }
      function Dt() {
        return de
      }
      function Ot(e) {
        ;(0, p.checkParameterType)(e, 'boolean')
        he = e
      }
      function Mt() {
        return he
      }
      function kt(e) {
        ;(0, p.checkParameterType)(e, 'number')
        pe = e
      }
      function Pt() {
        return pe
      }
      function Nt() {
        return ve
      }
      function Lt(e) {
        ;(0, p.checkParameterType)(e, 'boolean')
        ve = e
      }
      function xt(e) {
        ;(0, p.checkParameterType)(e, 'number')
        ;(0, p.checkRange)(e, 0, 0.5)
        Te = e
      }
      function Ft() {
        return Te
      }
      function Ut(e) {
        ;(0, p.checkParameterType)(e, 'number')
        ye = e
      }
      function Bt() {
        return ye
      }
      function jt(e) {
        ;(0, p.checkParameterType)(e, 'number')
        _e = e
      }
      function Gt() {
        return _e
      }
      function qt(e) {
        ;(0, p.checkParameterType)(e, 'number')
        ge = e
      }
      function Ht() {
        return ge
      }
      function Vt(e) {
        ;(0, p.checkParameterType)(e, 'boolean')
        me = e
      }
      function Kt() {
        return me
      }
      function Yt() {
        return Ee
      }
      function Wt() {}
      e = {
        setABRStrategy: Se,
        getABRStrategy: we,
        setUseDefaultABRRules: Ae,
        getUseDefaultABRRules: Ie,
        getABRCustomRules: Re,
        addABRCustomRule: De,
        removeABRCustomRule: Oe,
        setBandwidthSafetyFactor: Me,
        getBandwidthSafetyFactor: ke,
        setAbandonLoadTimeout: Pe,
        getAbandonLoadTimeout: Ne,
        setLastBitrateCachingInfo: Qe,
        getLastBitrateCachingInfo: Je,
        setLastMediaSettingsCachingInfo: Ze,
        getLastMediaSettingsCachingInfo: et,
        setStableBufferTime: Le,
        getStableBufferTime: xe,
        setBufferTimeAtTopQuality: Fe,
        getBufferTimeAtTopQuality: Ue,
        setBufferTimeAtTopQualityLongForm: Be,
        getBufferTimeAtTopQualityLongForm: je,
        setLongFormContentDurationThreshold: Ge,
        getLongFormContentDurationThreshold: qe,
        setSegmentOverlapToleranceTime: He,
        getSegmentOverlapToleranceTime: Ve,
        getCacheLoadThresholdForType: Ye,
        setCacheLoadThresholdForType: Ke,
        setBufferToKeep: We,
        getBufferToKeep: ze,
        setBufferAheadToKeep: Xe,
        getBufferAheadToKeep: $e,
        setBufferPruningInterval: tt,
        getBufferPruningInterval: rt,
        setRetryAttemptsForType: nt,
        getRetryAttemptsForType: it,
        setRetryIntervalForType: at,
        getRetryIntervalForType: st,
        setWallclockTimeUpdateInterval: ot,
        getWallclockTimeUpdateInterval: ut,
        setScheduleWhilePaused: lt,
        getScheduleWhilePaused: ft,
        getUseSuggestedPresentationDelay: yt,
        setUseSuggestedPresentationDelay: mt,
        setLiveDelayFragmentCount: dt,
        getLiveDelayFragmentCount: ct,
        getLiveDelay: pt,
        setLiveDelay: ht,
        setUseManifestDateHeaderTimeSource: vt,
        getUseManifestDateHeaderTimeSource: gt,
        addUTCTimingSource: _t,
        removeUTCTimingSource: Et,
        getUTCTimingSources: Tt,
        clearDefaultUTCTimingSources: bt,
        restoreDefaultUTCTimingSources: St,
        setXHRWithCredentialsForType: wt,
        getXHRWithCredentialsForType: At,
        setFastSwitchEnabled: Ct,
        getFastSwitchEnabled: It,
        setMovingAverageMethod: Rt,
        getMovingAverageMethod: Dt,
        setJumpGaps: Ot,
        getJumpGaps: Mt,
        setSmallGapLimit: kt,
        getSmallGapLimit: Pt,
        getLowLatencyEnabled: Nt,
        setLowLatencyEnabled: Lt,
        setCatchUpPlaybackRate: xt,
        getCatchUpPlaybackRate: Ft,
        setLowLatencyMinDrift: Ut,
        getLowLatencyMinDrift: Bt,
        setLowLatencyMaxDriftBeforeSeeking: jt,
        getLowLatencyMaxDriftBeforeSeeking: Gt,
        setManifestUpdateRetryInterval: qt,
        getManifestUpdateRetryInterval: Ht,
        setKeepProtectionMediaKeys: Vt,
        getKeepProtectionMediaKeys: Kt,
        getDefaultUtcTimingSource: Yt,
        reset: Wt,
      }
      be()
      return e
    }
    W.__dashjs_factory_name = 'MediaPlayerModel'
    t['default'] = u['default'].getSingletonFactory(W)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(25)
    var o = n(s)
    var u = r(304)
    var l = n(u)
    var f = r(7)
    var d = r(316)
    var c = n(d)
    var h = r(311)
    var p = n(h)
    var v = r(312)
    var g = n(v)
    var m = r(313)
    var y = n(m)
    var _ = r(314)
    var T = n(_)
    var E = r(315)
    var b = r(318)
    var S = n(b)
    var w = r(2)
    var A = n(w)
    var I = r(317)
    var C = n(I)
    var R = r(4)
    var D = n(R)
    var O = r(0)
    var M = n(O)
    function k() {
      var e = 1e3
      var t = this.context
      var r = (0, A['default'])(t).getInstance()
      var n = undefined,
        i = undefined
      function s() {
        i = {}
      }
      function u() {
        r.trigger(D['default'].METRICS_CHANGED)
      }
      function d(e) {
        r.trigger(D['default'].METRIC_CHANGED, { mediaType: e })
        u()
      }
      function h(e, t, n) {
        r.trigger(D['default'].METRIC_UPDATED, { mediaType: e, metric: t, value: n })
        d(e)
      }
      function v(e, t, n) {
        r.trigger(D['default'].METRIC_ADDED, { mediaType: e, metric: t, value: n })
        d(e)
      }
      function m(e) {
        delete i[e]
        d(e)
      }
      function _() {
        i = {}
        u()
      }
      function b(e) {
        if (i.hasOwnProperty(e)) {
          return i[e]
        }
        return null
      }
      function w(e) {
        var t = undefined
        if (i.hasOwnProperty(e)) {
          t = i[e]
        } else {
          t = new l['default']()
          i[e] = t
        }
        return t
      }
      function I(t, r, n) {
        var i = w(t)
        i[r].push(n)
        if (i[r].length > e) {
          i[r].shift()
        }
      }
      function R(e, t, r, n) {
        var i = new f.HTTPRequestTrace()
        i.s = t
        i.d = r
        i.b = n
        e.trace.push(i)
        if (!e.interval) {
          e.interval = 0
        }
        e.interval += r
        return i
      }
      function O(e, t, r, n, i, a, s, u, l, d, c, h, p, v) {
        var g = new f.HTTPRequest()
        if (i && i !== n) {
          O(e, null, r, n, null, null, s, u, null, null, null, h, null, null)
          g.actualurl = i
        }
        g.tcpid = t
        g.type = r
        g.url = n
        g.range = s
        g.trequest = u
        g.tresponse = l
        g.responsecode = c
        g._tfinish = d
        g._stream = e
        g._mediaduration = h
        g._responseHeaders = p
        g._serviceLocation = a
        if (v) {
          v.forEach(function(e) {
            R(g, e.s, e.d, e.b)
          })
        } else {
          delete g.interval
          delete g.trace
        }
        k(e, o['default'].HTTP_REQUEST, g)
      }
      function M(e, t, r, n, i) {
        var a = new c['default']()
        a.t = t
        a.mt = r
        a.to = n
        if (i) {
          a.lto = i
        } else {
          delete a.lto
        }
        k(e, o['default'].TRACK_SWITCH, a)
      }
      function k(e, t, r) {
        I(e, t, r)
        v(e, t, r)
      }
      function P(e, t, r) {
        var n = new p['default']()
        n.t = t
        n.level = r
        k(e, o['default'].BUFFER_LEVEL, n)
      }
      function N(e, t, r) {
        var n = new g['default']()
        n.target = r
        n.state = t
        k(e, o['default'].BUFFER_STATE, n)
      }
      function L(e, t, r, n) {
        var i = new y['default']()
        i.time = t
        i.range = n
        i.manifestInfo = r
        k(e, o['default'].DVR_INFO, i)
      }
      function x(e, t) {
        var r = new T['default']()
        var n = w(e).DroppedFrames
        r.time = t.creationTime
        r.droppedFrames = t.droppedVideoFrames
        if (n.length > 0 && n[n.length - 1] == r) {
          return
        }
        k(e, o['default'].DROPPED_FRAMES, r)
      }
      function F(e, t, r, n, i, a, s, u, l) {
        var f = new S['default']()
        f.mediaType = e
        f.t = t
        f.type = r
        f.startTime = n
        f.availabilityStartTime = i
        f.duration = a
        f.quality = s
        f.range = u
        f.state = l
        k(e, o['default'].SCHEDULING_INFO, f)
      }
      function U(e, t, r) {
        var n = new C['default']()
        n.loadingRequests = t
        n.executedRequests = r
        w(e).RequestsQueue = n
        v(e, o['default'].REQUESTS_QUEUE, n)
      }
      function B(e, t, r, n, i, s, u, l, f, d) {
        var c = new E.ManifestUpdate()
        c.mediaType = e
        c.type = t
        c.requestTime = r
        c.fetchTime = n
        c.availabilityStartTime = i
        c.presentationStartTime = s
        c.clientTimeOffset = u
        c.currentTime = l
        c.buffered = f
        c.latency = d
        I(a['default'].STREAM, o['default'].MANIFEST_UPDATE, c)
        v(e, o['default'].MANIFEST_UPDATE, c)
      }
      function j(e, t) {
        if (e) {
          for (var r in t) {
            e[r] = t[r]
          }
          h(e.mediaType, o['default'].MANIFEST_UPDATE, e)
        }
      }
      function G(e, t, r, n, i) {
        if (e) {
          var a = new E.ManifestUpdateStreamInfo()
          a.id = t
          a.index = r
          a.start = n
          a.duration = i
          e.streamInfo.push(a)
          h(e.mediaType, o['default'].MANIFEST_UPDATE_STREAM_INFO, e)
        }
      }
      function q(e, t, r, n, i, a, s, u) {
        if (e) {
          var l = new E.ManifestUpdateRepresentationInfo()
          l.id = t
          l.index = r
          l.streamIndex = n
          l.mediaType = i
          l.startNumber = s
          l.fragmentInfoType = u
          l.presentationTimeOffset = a
          e.representationInfo.push(l)
          h(e.mediaType, o['default'].MANIFEST_UPDATE_TRACK_INFO, e)
        }
      }
      function H(e) {
        var t = a['default'].STREAM
        if (e.trace && Array.isArray(e.trace)) {
          e.trace.forEach(function(e) {
            if (e.hasOwnProperty('subreplevel') && !e.subreplevel) {
              delete e.subreplevel
            }
          })
        } else {
          delete e.trace
        }
        k(t, o['default'].PLAY_LIST, e)
      }
      function V(e) {
        var t = a['default'].STREAM
        k(t, o['default'].DVB_ERRORS, e)
      }
      n = {
        clearCurrentMetricsForType: m,
        clearAllCurrentMetrics: _,
        getReadOnlyMetricsFor: b,
        getMetricsFor: w,
        addHttpRequest: O,
        addRepresentationSwitch: M,
        addBufferLevel: P,
        addBufferState: N,
        addDVRInfo: L,
        addDroppedFrames: x,
        addSchedulingInfo: F,
        addRequestsQueue: U,
        addManifestUpdate: B,
        updateManifestUpdateInfo: j,
        addManifestUpdateStreamInfo: G,
        addManifestUpdateRepresentationInfo: q,
        addPlayList: H,
        addDVBErrors: V,
      }
      s()
      return n
    }
    k.__dashjs_factory_name = 'MetricsModel'
    t['default'] = M['default'].getSingletonFactory(k)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(310)
    var a = n(i)
    var s = r(0)
    var o = n(s)
    function u() {
      var e = undefined,
        t = undefined
      function r(e) {
        t = new a['default']()
        if (!e) return null
        var r = e.indexOf('#')
        if (r !== -1) {
          var n = e.substr(r + 1).split('&')
          for (var i = 0, s = n.length; i < s; ++i) {
            var o = n[i]
            var u = o.indexOf('=')
            if (u !== -1) {
              var l = o.substring(0, u)
              if (t.hasOwnProperty(l)) {
                t[l] = o.substr(u + 1)
              }
            }
          }
        }
      }
      function n() {
        return t
      }
      e = { initialize: r, getURIFragmentData: n }
      return e
    }
    u.__dashjs_factory_name = 'URIFragmentModel'
    t['default'] = o['default'].getSingletonFactory(u)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(2)
    var o = n(s)
    var u = r(4)
    var l = n(u)
    var f = r(1)
    var d = n(f)
    function c() {
      var e = undefined,
        t = undefined,
        r = undefined,
        n = undefined,
        i = undefined
      var a = 'element is not video or audio DOM type!'
      var s = this.context
      var u = (0, o['default'])(s).getInstance()
      var f = []
      function c() {
        t = (0, d['default'])(s)
          .getInstance()
          .getLogger(e)
      }
      function h() {
        u.on(l['default'].PLAYBACK_PLAYING, O, this)
      }
      function p() {
        u.off(l['default'].PLAYBACK_PLAYING, O, this)
      }
      function v() {
        if (r) {
          r.playbackRate = i || 1
          r.removeEventListener('canplay', v)
        }
      }
      function g(e) {
        if (!r) return
        if (r.readyState <= 2 && e > 0) {
          r.addEventListener('canplay', v)
        } else {
          r.playbackRate = e
        }
      }
      function m(e, t) {
        if (r) {
          if (r.currentTime == e) return
          try {
            e = t ? y(e) : e
            r.currentTime = e
          } catch (t) {
            if (r.readyState === 0 && t.code === t.INVALID_STATE_ERR) {
              setTimeout(function() {
                r.currentTime = e
              }, 400)
            }
          }
        }
      }
      function y(e) {
        var t = H()
        var r = e
        var n = 9999999999
        if (t) {
          for (var i = 0; i < t.length; i++) {
            var a = t.start(i)
            var s = t.end(i)
            var o = Math.abs(a - e)
            var u = Math.abs(s - e)
            if (e >= a && e <= s) {
              return e
            }
            if (o < n) {
              n = o
              r = a
            }
            if (u < n) {
              n = u
              r = s
            }
          }
        }
        return r
      }
      function _() {
        return r
      }
      function T(e) {
        if (e === null || e === undefined || (e && /^(VIDEO|AUDIO)$/i.test(e.nodeName))) {
          r = e
          if (r) {
            r.preload = 'auto'
          }
        } else {
          throw a
        }
      }
      function E(e) {
        if (r) {
          if (e) {
            r.src = e
          } else {
            r.removeAttribute('src')
            r.load()
          }
        }
      }
      function b() {
        return r ? r.src : null
      }
      function S() {
        return n
      }
      function w(e) {
        n = e
        n.style.position = 'absolute'
        n.style.display = 'flex'
        n.style.overflow = 'hidden'
        n.style.pointerEvents = 'none'
        n.style.top = 0
        n.style.left = 0
      }
      function A(e, t) {
        D(e, t)
      }
      function I() {
        return f.length > 0
      }
      function C(e) {
        var t = undefined
        if (e === null || r.seeking || f.indexOf(e) !== -1) {
          return
        }
        f.push(e)
        if (r && f.length === 1) {
          t = document.createEvent('Event')
          t.initEvent('waiting', true, false)
          i = r.playbackRate
          g(0)
          r.dispatchEvent(t)
        }
      }
      function R(e) {
        var t = f.indexOf(e)
        var n = undefined
        if (e === null) {
          return
        }
        if (t !== -1) {
          f.splice(t, 1)
        }
        if (r && I() === false && r.playbackRate === 0) {
          g(i || 1)
          if (!r.paused) {
            n = document.createEvent('Event')
            n.initEvent('playing', true, false)
            r.dispatchEvent(n)
          }
        }
      }
      function D(e, t) {
        if (t) {
          C(e)
        } else {
          R(e)
        }
      }
      function O() {
        if (r && I() && r.playbackRate === 0) {
          var e = document.createEvent('Event')
          e.initEvent('waiting', true, false)
          r.dispatchEvent(e)
        }
      }
      function M() {
        if (!r) {
          return null
        }
        var e = 'webkitDroppedFrameCount' in r && 'webkitDecodedFrameCount' in r
        var t = 'getVideoPlaybackQuality' in r
        var n = null
        if (t) {
          n = r.getVideoPlaybackQuality()
        } else if (e) {
          n = {
            droppedVideoFrames: r.webkitDroppedFrameCount,
            totalVideoFrames: r.webkitDroppedFrameCount + r.webkitDecodedFrameCount,
            creationTime: new Date(),
          }
        }
        return n
      }
      function k() {
        if (r) {
          r.autoplay = true
          var e = r.play()
          if (e && e['catch'] && typeof Promise !== 'undefined') {
            e['catch'](function(e) {
              if (e.name === 'NotAllowedError') {
                u.trigger(l['default'].PLAYBACK_NOT_ALLOWED)
              }
              t.warn('Caught pending play exception - continuing (' + e + ')')
            })
          }
        }
      }
      function P() {
        return r ? r.paused : null
      }
      function N() {
        if (r) {
          r.pause()
          r.autoplay = false
        }
      }
      function L() {
        return r ? r.seeking : null
      }
      function x() {
        return r ? r.currentTime : null
      }
      function F() {
        return r ? r.playbackRate : null
      }
      function U() {
        return r ? r.played : null
      }
      function B() {
        return r ? r.ended : null
      }
      function j(e, t) {
        if (r) {
          r.addEventListener(e, t)
        }
      }
      function G(e, t) {
        if (r) {
          r.removeEventListener(e, t)
        }
      }
      function q() {
        return r ? r.readyState : NaN
      }
      function H() {
        return r ? r.buffered : null
      }
      function V() {
        return r ? r.clientWidth : NaN
      }
      function K() {
        return r ? r.clientHeight : NaN
      }
      function Y() {
        return r ? r.videoWidth : NaN
      }
      function W() {
        return r ? r.videoHeight : NaN
      }
      function z() {
        return r && r.parentNode
          ? r.getBoundingClientRect().top - r.parentNode.getBoundingClientRect().top
          : NaN
      }
      function X() {
        return r && r.parentNode
          ? r.getBoundingClientRect().left - r.parentNode.getBoundingClientRect().left
          : NaN
      }
      function $() {
        return r ? r.textTracks : []
      }
      function Q(e, t, n, i, a) {
        if (r) {
          for (var s = 0; s < r.textTracks.length; s++) {
            if (
              r.textTracks[s].kind === e &&
              (t ? r.textTracks[s].label == t : true) &&
              r.textTracks[s].language === n &&
              r.textTracks[s].isTTML === i &&
              r.textTracks[s].isEmbedded === a
            ) {
              return r.textTracks[s]
            }
          }
        }
        return null
      }
      function J(e, t, n) {
        if (r) {
          return r.addTextTrack(e, t, n)
        }
        return null
      }
      function Z(e) {
        if (r) {
          r.appendChild(e)
          if (e.isTTML !== undefined) {
            r.textTracks[r.textTracks.length - 1].isTTML = e.isTTML
            r.textTracks[r.textTracks.length - 1].isEmbedded = e.isEmbedded
          }
        }
      }
      function ee(e) {
        if (r) {
          r.removeChild(e)
        }
      }
      e = {
        initialize: h,
        setCurrentTime: m,
        play: k,
        isPaused: P,
        pause: N,
        isSeeking: L,
        getTime: x,
        getPlaybackRate: F,
        setPlaybackRate: g,
        getPlayedRanges: U,
        getEnded: B,
        setStallState: A,
        getElement: _,
        setElement: T,
        setSource: E,
        getSource: b,
        getTTMLRenderingDiv: S,
        setTTMLRenderingDiv: w,
        getPlaybackQuality: M,
        addEventListener: j,
        removeEventListener: G,
        getReadyState: q,
        getBufferRange: H,
        getClientWidth: V,
        getClientHeight: K,
        getTextTracks: $,
        getTextTrack: Q,
        addTextTrack: J,
        appendChild: Z,
        removeChild: ee,
        getVideoWidth: Y,
        getVideoHeight: W,
        getVideoRelativeOffsetTop: z,
        getVideoRelativeOffsetLeft: X,
        reset: p,
      }
      c()
      return e
    }
    c.__dashjs_factory_name = 'VideoModel'
    t['default'] = a['default'].getSingletonFactory(c)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    function s(e) {
      e = e || {}
      var t = e.requestModifier
      var r = e.boxParser
      var n = undefined
      function i(e) {
        var n = new Date()
        var i = e.request
        var o = new Headers()
        if (i.range) {
          o.append('Range', 'bytes=' + i.range)
        }
        if (!i.requestStartDate) {
          i.requestStartDate = n
        }
        if (t) {
          t.modifyRequestHeader({
            setRequestHeader: function e(t, r) {
              o.append(t, r)
            },
          })
        }
        var l = undefined
        if (typeof window.AbortController === 'function') {
          l = new AbortController()
          e.abortController = l
        }
        var f = {
          method: e.method,
          headers: o,
          credentials: e.withCredentials ? 'include' : undefined,
          signal: l ? l.signal : undefined,
        }
        fetch(e.url, f)
          .then(function(t) {
            if (!e.response) {
              e.response = {}
            }
            e.response.status = t.status
            e.response.statusText = t.statusText
            e.response.responseURL = t.url
            if (!t.ok) {
              e.onerror()
            }
            var n = ''
            var i = true
            var o = false
            var l = undefined
            try {
              for (
                var f = t.headers.keys()[Symbol.iterator](), d;
                !(i = (d = f.next()).done);
                i = true
              ) {
                var c = d.value
                n += c + ': ' + t.headers.get(c) + '\n'
              }
            } catch (e) {
              o = true
              l = e
            } finally {
              try {
                if (!i && f['return']) {
                  f['return']()
                }
              } finally {
                if (o) {
                  throw l
                }
              }
            }
            e.response.responseHeaders = n
            if (!t.body) {
              return t.arrayBuffer().then(function(t) {
                e.response.response = t
                var r = { loaded: t.byteLength, total: t.byteLength, stream: false }
                e.progress(r)
                e.onload()
                e.onend()
                return
              })
            }
            var h = parseInt(t.headers.get('Content-Length'), 10)
            var p = 0
            var v = false
            var g = new Uint8Array()
            var m = 0
            e.reader = t.body.getReader()
            var y = []
            var _ = function t(n) {
              var i = n.value
              var o = n.done
              if (o) {
                if (g) {
                  e.progress({
                    loaded: p,
                    total: isNaN(h) ? p : h,
                    lengthComputable: true,
                    time: u(y, p),
                    stream: true,
                  })
                  e.response.response = g.buffer
                }
                e.onload()
                e.onend()
                return
              }
              if (i && i.length > 0) {
                g = s(g, i)
                p += i.length
                y.push({ ts: Date.now(), bytes: i.length })
                var l = r.findLastTopIsoBoxCompleted(['moov', 'mdat'], g, m)
                if (l.found) {
                  var f = l.lastCompletedOffset + l.size
                  var d = undefined
                  if (f === g.length) {
                    d = g
                    g = new Uint8Array()
                  } else {
                    d = new Uint8Array(g.subarray(0, f))
                    g = g.subarray(f)
                  }
                  e.progress({ data: d.buffer, lengthComputable: false, noTrace: true })
                  m = 0
                } else {
                  m = l.lastCompletedOffset
                  if (!v) {
                    e.progress({ lengthComputable: false, noTrace: true })
                    v = true
                  }
                }
              }
              a(e, t)
            }
            a(e, _)
          })
          ['catch'](function(t) {
            if (e.onerror) {
              e.onerror(t)
            }
          })
      }
      function a(e, t) {
        e.reader
          .read()
          .then(t)
          ['catch'](function(t) {
            if (e.onerror && e.response.status === 200) {
              e.onerror(t)
            }
          })
      }
      function s(e, t) {
        if (e.length === 0) {
          return t
        }
        var r = new Uint8Array(e.length + t.length)
        r.set(e)
        r.set(t, e.length)
        return r
      }
      function o(e) {
        if (e.abortController) {
          e.abortController.abort()
        } else if (e.reader) {
          try {
            e.reader.cancel()
          } catch (e) {}
        }
      }
      function u(e, t) {
        e = e.filter(function(r) {
          return r.bytes > t / 4 / e.length
        })
        if (e.length > 1) {
          var r = (function() {
            var t = 0
            var r = (e[e.length - 1].ts - e[0].ts) / e.length
            e.forEach(function(n, i) {
              var a = e[i + 1]
              if (a) {
                var s = a.ts - n.ts
                t += s < r ? s : 0
              }
            })
            return { v: t }
          })()
          if (typeof r === 'object') return r.v
        }
        return null
      }
      n = { load: i, abort: o, calculateDownloadedTime: u }
      return n
    }
    s.__dashjs_factory_name = 'FetchLoader'
    var o = a['default'].getClassFactory(s)
    t['default'] = o
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(257)
    var a = n(i)
    var s = r(47)
    var o = n(s)
    var u = r(256)
    var l = n(u)
    var f = r(35)
    var d = n(f)
    var c = r(263)
    var h = n(c)
    var p = r(264)
    var v = n(p)
    var g = r(262)
    var m = n(g)
    var y = [
      {
        generateKeyRequest: 'generateKeyRequest',
        addKey: 'addKey',
        cancelKeyRequest: 'cancelKeyRequest',
        needkey: 'needkey',
        keyerror: 'keyerror',
        keyadded: 'keyadded',
        keymessage: 'keymessage',
      },
      {
        generateKeyRequest: 'webkitGenerateKeyRequest',
        addKey: 'webkitAddKey',
        cancelKeyRequest: 'webkitCancelKeyRequest',
        needkey: 'webkitneedkey',
        keyerror: 'webkitkeyerror',
        keyadded: 'webkitkeyadded',
        keymessage: 'webkitkeymessage',
      },
    ]
    var _ = [
      {
        setMediaKeys: 'setMediaKeys',
        MediaKeys: 'MediaKeys',
        release: 'close',
        needkey: 'needkey',
        error: 'keyerror',
        message: 'keymessage',
        ready: 'keyadded',
        close: 'keyclose',
      },
      {
        setMediaKeys: 'msSetMediaKeys',
        MediaKeys: 'MSMediaKeys',
        release: 'close',
        needkey: 'msneedkey',
        error: 'mskeyerror',
        message: 'mskeymessage',
        ready: 'mskeyadded',
        close: 'mskeyclose',
      },
    ]
    function T() {
      var e = undefined
      var t = this.context
      function r(e) {
        var r = null
        var i = (0, o['default'])(t).getInstance()
        i.setConfig({ debug: e.debug, BASE64: e.BASE64 })
        i.initialize()
        var s = n(e)
        if (!r && s) {
          r = (0, a['default'])(t).create({
            protectionModel: s,
            protectionKeyController: i,
            eventBus: e.eventBus,
            debug: e.debug,
            events: e.events,
            BASE64: e.BASE64,
            constants: e.constants,
          })
          e.capabilities.setEncryptedMediaSupported(true)
        }
        return r
      }
      function n(r) {
        var n = r.debug
        var a = n.getLogger(e)
        var s = r.eventBus
        var o = r.errHandler
        var u = r.videoModel ? r.videoModel.getElement() : null
        if ((!u || u.onencrypted !== undefined) && (!u || u.mediaKeys !== undefined)) {
          a.info('EME detected on this user agent! (ProtectionModel_21Jan2015)')
          return (0, h['default'])(t).create({ debug: n, eventBus: s, events: r.events })
        } else if (i(u, _)) {
          a.info('EME detected on this user agent! (ProtectionModel_3Feb2014)')
          return (0, v['default'])(t).create({
            debug: n,
            eventBus: s,
            events: r.events,
            api: i(u, _),
          })
        } else if (i(u, y)) {
          a.info('EME detected on this user agent! (ProtectionModel_01b)')
          return (0, m['default'])(t).create({
            debug: n,
            eventBus: s,
            errHandler: o,
            events: r.events,
            api: i(u, y),
          })
        } else {
          a.warn(
            'No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!'
          )
          return null
        }
      }
      function i(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          if (typeof e[n[Object.keys(n)[0]]] !== 'function') {
            continue
          }
          return n
        }
        return null
      }
      e = { createProtectionSystem: r }
      return e
    }
    T.__dashjs_factory_name = 'Protection'
    var E = dashjs.FactoryMaker.getClassFactory(T)
    E.events = l['default']
    E.errors = d['default']
    dashjs.FactoryMaker.updateClassFactory(T.__dashjs_factory_name, E)
    t['default'] = E
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(42)
    var u = i(o)
    var l = (function(e) {
      s(t, e)
      function t() {
        a(this, t)
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(this)
        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage'
        this.INTERNAL_KEY_SYSTEM_SELECTED = 'internalKeySystemSelected'
        this.INTERNAL_KEY_STATUS_CHANGED = 'internalkeyStatusChanged'
        this.KEY_ADDED = 'public_keyAdded'
        this.KEY_ERROR = 'public_keyError'
        this.KEY_MESSAGE = 'public_keyMessage'
        this.KEY_SESSION_CLOSED = 'public_keySessionClosed'
        this.KEY_SESSION_CREATED = 'public_keySessionCreated'
        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved'
        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged'
        this.KEY_SYSTEM_ACCESS_COMPLETE = 'public_keySystemAccessComplete'
        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected'
        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete'
        this.NEED_KEY = 'needkey'
        this.PROTECTION_CREATED = 'public_protectioncreated'
        this.PROTECTION_DESTROYED = 'public_protectiondestroyed'
        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated'
        this.TEARDOWN_COMPLETE = 'protectionTeardownComplete'
        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected'
      }
      return t
    })(u['default'])
    var f = new l()
    t['default'] = f
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(26)
    var a = n(i)
    var s = r(269)
    var o = n(s)
    var u = r(71)
    var l = n(u)
    var f = r(35)
    var d = n(f)
    var c = r(5)
    var h = n(c)
    var p = 5
    var v = 500
    var g = 3
    var m = 1e3
    var y = 8e3
    function _(e) {
      e = e || {}
      var t = e.protectionKeyController
      var r = e.protectionModel
      var n = e.eventBus
      var i = e.events
      var s = e.debug
      var u = e.BASE64
      var f = e.constants
      var c = []
      var _ = undefined,
        T = undefined,
        E = undefined,
        b = undefined,
        S = undefined,
        w = undefined,
        A = undefined,
        I = undefined
      function C() {
        T = s.getLogger(_)
        E = []
        b = []
        w = 'temporary'
        A = ''
      }
      function R() {
        if (
          !n ||
          !n.hasOwnProperty('on') ||
          !t ||
          !t.hasOwnProperty('getSupportedKeySystemsFromContentProtection')
        ) {
          throw new Error('Missing config parameter(s)')
        }
      }
      function D(e) {
        if (!e) {
          throw new Error('mediaInfo can not be null or undefined')
        }
        R()
        n.on(i.INTERNAL_KEY_MESSAGE, z, this)
        n.on(i.INTERNAL_KEY_STATUS_CHANGED, W, this)
        b.push(e)
        var r = t.getSupportedKeySystemsFromContentProtection(e.contentProtection)
        if (r && r.length > 0) {
          K(r, true)
        }
      }
      function O(e) {
        return t.getSupportedKeySystemsFromContentProtection(e)
      }
      function M(e, s) {
        var o = a['default'].getPSSHForKeySystem(I, e)
        var u = q(I)
        if (o) {
          var l = r.getAllInitData()
          for (var f = 0; f < l.length; f++) {
            if (t.initDataEquals(o, l[f])) {
              T.warn('DRM: Ignoring initData because we have already seen it!')
              return
            }
          }
          try {
            r.createKeySession(o, u, V(I), s)
          } catch (e) {
            n.trigger(i.KEY_SESSION_CREATED, {
              data: null,
              error: new h['default'](
                d['default'].KEY_SESSION_CREATED_ERROR_CODE,
                d['default'].KEY_SESSION_CREATED_ERROR_MESSAGE + e.message
              ),
            })
          }
        } else if (e) {
          r.createKeySession(e, u, V(I), s)
        } else {
          n.trigger(i.KEY_SESSION_CREATED, {
            data: null,
            error: new h['default'](
              d['default'].KEY_SESSION_CREATED_ERROR_CODE,
              d['default'].KEY_SESSION_CREATED_ERROR_MESSAGE +
                'Selected key system is ' +
                I.systemString +
                '.  needkey/encrypted event contains no initData corresponding to that key system!'
            ),
          })
        }
      }
      function k(e, t) {
        r.loadKeySession(e, t, V(I))
      }
      function P(e) {
        r.removeKeySession(e)
      }
      function N(e) {
        r.closeKeySession(e)
      }
      function L(e) {
        r.setServerCertificate(e)
      }
      function x(e) {
        if (e) {
          r.setMediaElement(e)
          n.on(i.NEED_KEY, $, this)
        } else if (e === null) {
          r.setMediaElement(e)
          n.off(i.NEED_KEY, $, this)
        }
      }
      function F(e) {
        w = e
      }
      function U(e) {
        A = e
      }
      function B(e) {
        S = e
        t.setProtectionData(e)
      }
      function j() {
        if (r) {
          r.stop()
        }
      }
      function G() {
        n.off(i.INTERNAL_KEY_MESSAGE, z, this)
        n.off(i.INTERNAL_KEY_STATUS_CHANGED, W, this)
        x(null)
        I = undefined
        if (r) {
          r.reset()
          r = null
        }
        c.forEach(function(e) {
          return clearTimeout(e)
        })
        c = []
        b = []
      }
      function q(e) {
        var t = null
        if (e) {
          var r = e.systemString
          if (S) {
            t = r in S ? S[r] : null
          }
        }
        return t
      }
      function H(e) {
        var t = q(e)
        var r = []
        var n = []
        var i = t && t.audioRobustness && t.audioRobustness.length > 0 ? t.audioRobustness : A
        var a = t && t.videoRobustness && t.videoRobustness.length > 0 ? t.videoRobustness : A
        var s = V(e)
        var u = t && t.distinctiveIdentifier ? t.distinctiveIdentifier : 'optional'
        var d =
          t && t.persistentState ? t.persistentState : s === 'temporary' ? 'optional' : 'required'
        b.forEach(function(e) {
          if (e.type === f.AUDIO) {
            r.push(new o['default'](e.codec, i))
          } else if (e.type === f.VIDEO) {
            n.push(new o['default'](e.codec, a))
          }
        })
        return new l['default'](r, n, u, d, [s])
      }
      function V(e) {
        var t = q(e)
        var r = t && t.sessionType ? t.sessionType : w
        return r
      }
      function K(e, a) {
        var s = this
        var o = []
        var l = undefined
        if (I) {
          for (l = 0; l < e.length; l++) {
            if (I === e[l].ks) {
              var f = (function() {
                o.push({ ks: e[l].ks, configs: [H(I)] })
                var t = function t(r) {
                  n.off(i.KEY_SYSTEM_ACCESS_COMPLETE, t, s)
                  if (r.error) {
                    if (!a) {
                      n.trigger(i.KEY_SYSTEM_SELECTED, {
                        error: new h['default'](
                          d['default'].KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE,
                          d['default'].KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + r.error
                        ),
                      })
                    }
                  } else {
                    T.info('DRM: KeySystem Access Granted')
                    n.trigger(i.KEY_SYSTEM_SELECTED, { data: r.data })
                    if (e[l].sessionId) {
                      k(e[l].sessionId, e[l].initData)
                    } else if (e[l].initData) {
                      M(e[l].initData, e[l].cdmData)
                    }
                  }
                }
                n.on(i.KEY_SYSTEM_ACCESS_COMPLETE, t, s)
                r.requestKeySystemAccess(o)
                return 'break'
              })()
              if (f === 'break') break
            }
          }
        } else if (I === undefined) {
          var c
          ;(function() {
            I = null
            E.push(e)
            for (var f = 0; f < e.length; f++) {
              o.push({ ks: e[f].ks, configs: [H(e[f].ks)] })
            }
            var p = undefined
            var v = function e(t) {
              n.off(i.KEY_SYSTEM_ACCESS_COMPLETE, e, s)
              if (t.error) {
                I = undefined
                n.off(i.INTERNAL_KEY_SYSTEM_SELECTED, c, s)
                if (!a) {
                  n.trigger(i.KEY_SYSTEM_SELECTED, {
                    data: null,
                    error: new h['default'](
                      d['default'].KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE,
                      d['default'].KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + t.error
                    ),
                  })
                }
              } else {
                p = t.data
                T.info(
                  'DRM: KeySystem Access Granted (' +
                    p.keySystem.systemString +
                    ')!  Selecting key system...'
                )
                r.selectKeySystem(p)
              }
            }
            c = function e(o) {
              n.off(i.INTERNAL_KEY_SYSTEM_SELECTED, e, s)
              n.off(i.KEY_SYSTEM_ACCESS_COMPLETE, v, s)
              if (!o.error) {
                if (!r) {
                  return
                }
                I = r.getKeySystem()
                n.trigger(i.KEY_SYSTEM_SELECTED, { data: p })
                var f = q(I)
                if (f && f.serverCertificate && f.serverCertificate.length > 0) {
                  r.setServerCertificate(u.decodeArray(f.serverCertificate).buffer)
                }
                for (var c = 0; c < E.length; c++) {
                  for (l = 0; l < E[c].length; l++) {
                    if (I === E[c][l].ks) {
                      if (t.isClearKey(I) && f && f.hasOwnProperty('clearkeys')) {
                        var g = { kids: Object.keys(f.clearkeys) }
                        E[c][l].initData = new TextEncoder().encode(JSON.stringify(g))
                      }
                      if (E[c][l].sessionId) {
                        k(E[c][l].sessionId, E[c][l].initData)
                      } else if (E[c][l].initData !== null) {
                        M(E[c][l].initData, E[c][l].cdmData)
                      }
                      break
                    }
                  }
                }
              } else {
                I = undefined
                if (!a) {
                  n.trigger(i.KEY_SYSTEM_SELECTED, {
                    data: null,
                    error: new h['default'](
                      d['default'].KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE,
                      d['default'].KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE +
                        'Error selecting key system! -- ' +
                        o.error
                    ),
                  })
                }
              }
            }
            n.on(i.INTERNAL_KEY_SYSTEM_SELECTED, c, s)
            n.on(i.KEY_SYSTEM_ACCESS_COMPLETE, v, s)
            r.requestKeySystemAccess(o)
          })()
        } else {
          E.push(e)
        }
      }
      function Y(e, t) {
        n.trigger(i.LICENSE_REQUEST_COMPLETE, { data: e, error: t })
      }
      function W(e) {
        if (e.error) {
          n.trigger(i.KEY_STATUSES_CHANGED, { data: null, error: e.error })
        } else {
          T.debug('DRM: key status = ' + e.status)
        }
      }
      function z(e) {
        T.debug('DRM: onKeyMessage')
        var s = e.data
        n.trigger(i.KEY_MESSAGE, { data: s })
        var o = s.messageType ? s.messageType : 'license-request'
        var u = s.message
        var l = s.sessionToken
        var f = q(I)
        var c = I ? I.systemString : null
        var p = t.getLicenseServer(I, f, o)
        var v = { sessionToken: l, messageType: o }
        if (!u || u.byteLength === 0) {
          Y(
            v,
            new h['default'](
              d['default'].MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE,
              d['default'].MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE
            )
          )
          return
        }
        if (!p) {
          T.debug(
            'DRM: License server request not required for this message (type = ' +
              e.data.messageType +
              ').  Session ID = ' +
              l.getSessionID()
          )
          Y(v)
          return
        }
        if (t.isClearKey(I)) {
          var m = t.processClearKeyLicenseRequest(I, f, u)
          if (m) {
            T.debug('DRM: ClearKey license request handled by application!')
            Y(v)
            r.updateKeySession(l, m)
            return
          }
        }
        var _ = null
        if (f && f.serverURL) {
          var E = f.serverURL
          if (typeof E === 'string' && E !== '') {
            _ = E
          } else if (typeof E === 'object' && E.hasOwnProperty(o)) {
            _ = E[o]
          }
        } else if (f && f.laURL && f.laURL !== '') {
          _ = f.laURL
        } else {
          _ = I.getLicenseServerURLFromInitData(a['default'].getPSSHData(l.initData))
          if (!_) {
            _ = e.data.laURL
          }
        }
        _ = p.getServerURLFromMessage(_, u, o)
        if (!_) {
          Y(
            v,
            new h['default'](
              d['default'].MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE,
              d['default'].MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE
            )
          )
          return
        }
        var b = {}
        var S = false
        var w = function e(t) {
          if (t) {
            for (var r in t) {
              if ('authorization' === r.toLowerCase()) {
                S = true
              }
              b[r] = t[r]
            }
          }
        }
        if (f) {
          w(f.httpRequestHeaders)
        }
        w(I.getRequestHeadersFromMessage(u))
        if (f && typeof f.withCredentials == 'boolean') {
          S = f.withCredentials
        }
        var A = function e(t, r, n, i) {
          var a = t.response ? p.getErrorResponse(t.response, n, i) : 'NONE'
          Y(
            r,
            new h['default'](
              d['default'].MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,
              d['default'].MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE +
                n +
                ' update, XHR complete. status is "' +
                t.statusText +
                '" (' +
                t.status +
                '), readyState is ' +
                t.readyState +
                '.  Response is ' +
                a
            )
          )
        }
        var C = function e(t) {
          if (!r) {
            return
          }
          if (t.status === 200) {
            var n = p.getLicenseMessage(t.response, c, o)
            if (n !== null) {
              Y(v)
              r.updateKeySession(l, n)
            } else {
              A(t, v, c, o)
            }
          } else {
            A(t, v, c, o)
          }
        }
        var R = function e(t) {
          Y(
            v,
            new h['default'](
              d['default'].MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,
              d['default'].MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE +
                c +
                ' update, XHR aborted. status is "' +
                t.statusText +
                '" (' +
                t.status +
                '), readyState is ' +
                t.readyState
            )
          )
        }
        var D = function e(t) {
          Y(
            v,
            new h['default'](
              d['default'].MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,
              d['default'].MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE +
                c +
                ' update, XHR error. status is "' +
                t.statusText +
                '" (' +
                t.status +
                '), readyState is ' +
                t.readyState
            )
          )
        }
        var O = I.getLicenseRequestFromMessage(u)
        var M = p.getHTTPMethod(o)
        var k = p.getResponseType(c, o)
        var P = f && !isNaN(f.httpTimeout) ? f.httpTimeout : y
        X(_, b, M, k, S, O, g, P, C, R, D)
      }
      function X(e, t, r, n, i, a, s, o, u, l, f) {
        var d = new XMLHttpRequest()
        d.open(r, e, true)
        d.responseType = n
        d.withCredentials = i
        if (o > 0) {
          d.timeout = o
        }
        for (var c in t) {
          d.setRequestHeader(c, t[c])
        }
        var h = function d() {
          s--
          setTimeout(function() {
            X(e, t, r, n, i, a, s, o, u, l, f)
          }, m)
        }
        d.onload = function() {
          if (this.status === 200 || s <= 0) {
            u(this)
          } else {
            T.warn(
              'License request failed (' + this.status + '). Retrying it... Pending retries: ' + s
            )
            h()
          }
        }
        d.ontimeout = d.onerror = function() {
          if (s <= 0) {
            f(this)
          } else {
            T.warn('License request network request failed . Retrying it... Pending retries: ' + s)
            h()
          }
        }
        d.onabort = function() {
          l(this)
        }
        d.send(a)
      }
      function $(e, n) {
        T.debug('DRM: onNeedKey')
        if (e.key.initDataType !== 'cenc') {
          T.warn(
            "DRM:  Only 'cenc' initData is supported!  Ignoring initData of type: " +
              e.key.initDataType
          )
          return
        }
        if (b.length === 0) {
          T.warn('DRM: onNeedKey called before initializeForMedia, wait until initialized')
          n = typeof n === 'undefined' ? 1 : n + 1
          if (n < p) {
            c.push(
              setTimeout(function() {
                $(e, n)
              }, v)
            )
            return
          }
        }
        var i = e.key.initData
        if (ArrayBuffer.isView(i)) {
          i = i.buffer
        }
        if (I) {
          var s = a['default'].getPSSHForKeySystem(I, i)
          if (s) {
            var o = r.getAllInitData()
            for (var u = 0; u < o.length; u++) {
              if (t.initDataEquals(s, o[u])) {
                T.warn('DRM: Ignoring initData because we have already seen it!')
                return
              }
            }
          }
        }
        T.debug('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(i)))
        var l = t.getSupportedKeySystems(i, S)
        if (l.length === 0) {
          T.debug(
            "DRM: Received needkey event with initData, but we don't support any of the key systems!"
          )
          return
        }
        K(l, false)
      }
      function Q() {
        return t ? t.getKeySystems() : []
      }
      _ = {
        initializeForMedia: D,
        createKeySession: M,
        loadKeySession: k,
        removeKeySession: P,
        closeKeySession: N,
        setServerCertificate: L,
        setMediaElement: x,
        setSessionType: F,
        setRobustnessLevel: U,
        setProtectionData: B,
        getSupportedKeySystemsFromContentProtection: O,
        getKeySystems: Q,
        stop: j,
        reset: G,
      }
      C()
      return _
    }
    _.__dashjs_factory_name = 'ProtectionController'
    t['default'] = dashjs.FactoryMaker.getClassFactory(_)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(69)
    var a = n(i)
    var s = r(67)
    var o = n(s)
    var u = r(26)
    var l = n(u)
    var f = r(19)
    var d = n(f)
    var c = 'e2719d58-a985-b3c9-781a-b030af78d30e'
    var h = d['default'].CLEARKEY_KEYSTEM_STRING
    var p = 'urn:uuid:' + c
    function v(e) {
      e = e || {}
      var t = undefined
      var r = e.BASE64
      function n(e, t) {
        var r = null
        if (e) {
          var n = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(t)))
          var i = []
          for (var s = 0; s < n.kids.length; s++) {
            var u = n.kids[s]
            var l = e.clearkeys && e.clearkeys.hasOwnProperty(u) ? e.clearkeys[u] : null
            if (!l) {
              throw new Error('DRM: ClearKey keyID (' + u + ') is not known!')
            }
            i.push(new a['default'](u, l))
          }
          r = new o['default'](i)
        }
        return r
      }
      function i(e) {
        return l['default'].parseInitDataFromContentProtection(e, r)
      }
      function s() {
        return null
      }
      function u(e) {
        return new Uint8Array(e)
      }
      function f() {
        return null
      }
      function d() {
        return null
      }
      function v() {
        return null
      }
      t = {
        uuid: c,
        schemeIdURI: p,
        systemString: h,
        getInitData: i,
        getRequestHeadersFromMessage: s,
        getLicenseRequestFromMessage: u,
        getLicenseServerURLFromInitData: f,
        getCDMData: d,
        getSessionId: v,
        getClearKeysFromProtectionData: n,
      }
      return t
    }
    v.__dashjs_factory_name = 'KeySystemClearKey'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(v)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(26)
    var a = n(i)
    var s = r(19)
    var o = n(s)
    var u = '9a04f079-9840-4286-ab92-e65be0885f95'
    var l = o['default'].PLAYREADY_KEYSTEM_STRING
    var f = 'urn:uuid:' + u
    var d =
      '<PlayReadyCDMData type="LicenseAcquisition"><LicenseAcquisition version="1.0" Proactive="false"><CustomData encoding="base64encoded">%CUSTOMDATA%</CustomData></LicenseAcquisition></PlayReadyCDMData>'
    var c = undefined
    function h(e) {
      e = e || {}
      var t = undefined
      var r = 'utf16'
      var n = e.BASE64
      function i() {
        if (!n || !n.hasOwnProperty('decodeArray') || !n.hasOwnProperty('decodeArray')) {
          throw new Error('Missing config parameter(s)')
        }
      }
      function s(e) {
        var t = undefined,
          n = undefined
        var i = {}
        var a = new DOMParser()
        var s = r === 'utf16' ? new Uint16Array(e) : new Uint8Array(e)
        t = String.fromCharCode.apply(null, s)
        n = a.parseFromString(t, 'application/xml')
        var o = n.getElementsByTagName('name')
        var u = n.getElementsByTagName('value')
        for (var l = 0; l < o.length; l++) {
          i[o[l].childNodes[0].nodeValue] = u[l].childNodes[0].nodeValue
        }
        if (i.hasOwnProperty('Content')) {
          i['Content-Type'] = i.Content
          delete i.Content
        }
        if (!i.hasOwnProperty('Content-Type')) {
          i['Content-Type'] = 'text/xml; charset=' + r
        }
        return i
      }
      function o(e) {
        var t = null
        var a = new DOMParser()
        var s = r === 'utf16' ? new Uint16Array(e) : new Uint8Array(e)
        i()
        var o = String.fromCharCode.apply(null, s)
        var u = a.parseFromString(o, 'application/xml')
        if (u.getElementsByTagName('Challenge')[0]) {
          var l = u.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue
          if (l) {
            t = n.decode(l)
          }
        } else if (u.getElementsByTagName('parsererror').length) {
          return e
        }
        return t
      }
      function h(e) {
        if (e) {
          var t = new DataView(e)
          var r = t.getUint16(4, true)
          var n = 6
          var i = new DOMParser()
          for (var a = 0; a < r; a++) {
            var s = t.getUint16(n, true)
            n += 2
            var o = t.getUint16(n, true)
            n += 2
            if (s !== 1) {
              n += o
              continue
            }
            var u = e.slice(n, n + o)
            var l = String.fromCharCode.apply(null, new Uint16Array(u))
            var f = i.parseFromString(l, 'application/xml')
            if (f.getElementsByTagName('LA_URL')[0]) {
              var d = f.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue
              if (d) {
                return d
              }
            }
            if (f.getElementsByTagName('LUI_URL')[0]) {
              var c = f.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue
              if (c) {
                return c
              }
            }
          }
        }
        return null
      }
      function p(e) {
        var t = new Uint8Array([112, 115, 115, 104, 0, 0, 0, 0])
        var r = new Uint8Array([
          154,
          4,
          240,
          121,
          152,
          64,
          66,
          134,
          171,
          146,
          230,
          91,
          224,
          136,
          95,
          149,
        ])
        var s = 0
        var o = null
        var u = undefined,
          l = undefined,
          f = undefined,
          d = undefined,
          c = undefined
        i()
        if ('pssh' in e) {
          return a['default'].parseInitDataFromContentProtection(e, n)
        }
        if ('pro' in e) {
          o = n.decodeArray(e.pro.__text)
        } else if ('prheader' in e) {
          o = n.decodeArray(e.prheader.__text)
        } else {
          return null
        }
        u = o.length
        l = 4 + t.length + r.length + 4 + u
        f = new ArrayBuffer(l)
        d = new Uint8Array(f)
        c = new DataView(f)
        c.setUint32(s, l)
        s += 4
        d.set(t, s)
        s += t.length
        d.set(r, s)
        s += r.length
        c.setUint32(s, u)
        s += 4
        d.set(o, s)
        s += u
        return d.buffer
      }
      function v(e) {
        if (e !== 'utf8' && e !== 'utf16') {
          throw new Error('Illegal PlayReady message format! -- ' + e)
        }
        r = e
      }
      function g(e) {
        if (e) {
          c = e
        }
      }
      function m() {
        var e = undefined,
          t = undefined,
          r = undefined,
          a = undefined
        i()
        if (c && c.cdmData) {
          e = []
          for (a = 0; a < c.cdmData.length; ++a) {
            e.push(c.cdmData.charCodeAt(a))
            e.push(0)
          }
          e = String.fromCharCode.apply(null, e)
          e = n.encode(e)
          t = d.replace('%CUSTOMDATA%', e)
          r = []
          for (a = 0; a < t.length; ++a) {
            r.push(t.charCodeAt(a))
            r.push(0)
          }
          return new Uint8Array(r).buffer
        }
        return null
      }
      function y(e) {
        if (c && c.sessionId) {
          return c.sessionId
        } else if (e && e.sessionId) {
          return e.sessionId
        }
        return null
      }
      t = {
        uuid: u,
        schemeIdURI: f,
        systemString: l,
        getInitData: p,
        getRequestHeadersFromMessage: s,
        getLicenseRequestFromMessage: o,
        getLicenseServerURLFromInitData: h,
        getCDMData: m,
        getSessionId: y,
        setPlayReadyMessageFormat: v,
        init: g,
      }
      return t
    }
    h.__dashjs_factory_name = 'KeySystemPlayReady'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(h)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(69)
    var a = n(i)
    var s = r(67)
    var o = n(s)
    var u = r(26)
    var l = n(u)
    var f = r(19)
    var d = n(f)
    var c = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b'
    var h = d['default'].CLEARKEY_KEYSTEM_STRING
    var p = 'urn:uuid:' + c
    function v(e) {
      var t = undefined
      var r = e.BASE64
      var n = e.debug.getLogger(t)
      function i(e, t) {
        var r = null
        if (e) {
          var i = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(t)))
          var s = []
          for (var u = 0; u < i.kids.length; u++) {
            var l = i.kids[u]
            var f = e.clearkeys && e.clearkeys.hasOwnProperty(l) ? e.clearkeys[l] : null
            if (!f) {
              throw new Error('DRM: ClearKey keyID (' + l + ') is not known!')
            }
            s.push(new a['default'](l, f))
          }
          r = new o['default'](s)
          n.warn(
            'ClearKey schemeIdURI is using W3C Common PSSH systemID (1077efec-c0b2-4d02-ace3-3c1e52e2fb4b) in Content Protection. See DASH-IF IOP v4.1 section 7.6.2.4'
          )
        }
        return r
      }
      function s(e) {
        return l['default'].parseInitDataFromContentProtection(e, r)
      }
      function u() {
        return null
      }
      function f(e) {
        return new Uint8Array(e)
      }
      function d() {
        return null
      }
      function v() {
        return null
      }
      function g() {
        return null
      }
      t = {
        uuid: c,
        schemeIdURI: p,
        systemString: h,
        getInitData: s,
        getRequestHeadersFromMessage: u,
        getLicenseRequestFromMessage: f,
        getLicenseServerURLFromInitData: d,
        getCDMData: v,
        getSessionId: g,
        getClearKeysFromProtectionData: i,
      }
      return t
    }
    v.__dashjs_factory_name = 'KeySystemW3CClearKey'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(v)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(26)
    var a = n(i)
    var s = r(19)
    var o = n(s)
    var u = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'
    var l = o['default'].WIDEVINE_KEYSTEM_STRING
    var f = 'urn:uuid:' + u
    function d(e) {
      e = e || {}
      var t = undefined
      var r = null
      var n = e.BASE64
      function i(e) {
        if (e) {
          r = e
        }
      }
      function s(e) {
        return a['default'].parseInitDataFromContentProtection(e, n)
      }
      function o() {
        return null
      }
      function d(e) {
        return new Uint8Array(e)
      }
      function c() {
        return null
      }
      function h() {
        return null
      }
      function p(e) {
        if (r && r.sessionId) {
          return r.sessionId
        } else if (e && e.sessionId) {
          return e.sessionId
        }
        return null
      }
      t = {
        uuid: u,
        schemeIdURI: f,
        systemString: l,
        init: i,
        getInitData: s,
        getRequestHeadersFromMessage: o,
        getLicenseRequestFromMessage: d,
        getLicenseServerURLFromInitData: c,
        getCDMData: h,
        getSessionId: p,
      }
      return t
    }
    d.__dashjs_factory_name = 'KeySystemWidevine'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(d)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(47)
    var a = n(i)
    var s = r(72)
    var o = n(s)
    var u = r(5)
    var l = n(u)
    var f = r(68)
    var d = n(f)
    var c = r(71)
    var h = n(c)
    var p = r(70)
    var v = n(p)
    var g = r(35)
    var m = n(g)
    function y(e) {
      e = e || {}
      var t = this.context
      var r = e.eventBus
      var n = e.events
      var i = e.debug
      var s = e.api
      var u = e.errHandler
      var f = undefined,
        c = undefined,
        p = undefined,
        g = undefined,
        y = undefined,
        _ = undefined,
        T = undefined,
        E = undefined,
        b = undefined
      function S() {
        c = i.getLogger(f)
        p = null
        g = null
        _ = []
        T = []
        y = (0, a['default'])(t).getInstance()
        b = x()
      }
      function w() {
        if (p) {
          U()
        }
        for (var e = 0; e < T.length; e++) {
          k(T[e])
        }
        r.trigger(n.TEARDOWN_COMPLETE)
      }
      function A() {
        return g
      }
      function I() {
        var e = []
        for (var t = 0; t < _.length; t++) {
          e.push(_[t].initData)
        }
        for (var t = 0; t < T.length; t++) {
          e.push(T[t].initData)
        }
        return e
      }
      function C(e) {
        var t = p
        if (!t) {
          t = document.createElement('video')
        }
        var i = false
        for (var a = 0; a < e.length; a++) {
          var s = e[a].ks.systemString
          var o = e[a].configs
          var u = null
          var l = null
          for (var f = 0; f < o.length; f++) {
            var d = o[f].videoCapabilities
            if (d && d.length !== 0) {
              l = []
              for (var c = 0; c < d.length; c++) {
                if (t.canPlayType(d[c].contentType, s) !== '') {
                  l.push(d[c])
                }
              }
            }
            if ((!u && !l) || (u && u.length === 0) || (l && l.length === 0)) {
              continue
            }
            i = true
            var g = new h['default'](u, l)
            var m = y.getKeySystemBySystemString(s)
            r.trigger(n.KEY_SYSTEM_ACCESS_COMPLETE, { data: new v['default'](m, g) })
            break
          }
        }
        if (!i) {
          r.trigger(n.KEY_SYSTEM_ACCESS_COMPLETE, {
            error:
              'Key system access denied! -- No valid audio/video content configurations detected!',
          })
        }
      }
      function R(e) {
        g = e.keySystem
        r.trigger(n.INTERNAL_KEY_SYSTEM_SELECTED)
      }
      function D(e) {
        if (p === e) {
          return
        }
        if (p) {
          U()
          for (var t = 0; t < T.length; t++) {
            k(T[t])
          }
          T = []
        }
        p = e
        if (p) {
          p.addEventListener(s.keyerror, b)
          p.addEventListener(s.needkey, b)
          p.addEventListener(s.keymessage, b)
          p.addEventListener(s.keyadded, b)
          r.trigger(n.VIDEO_ELEMENT_SELECTED)
        }
      }
      function O(e) {
        if (!g) {
          throw new Error('Can not create sessions until you have selected a key system')
        }
        if (E || T.length === 0) {
          var t = {
            sessionID: null,
            initData: e,
            getSessionID: function e() {
              return this.sessionID
            },
            getExpirationTime: function e() {
              return NaN
            },
            getSessionType: function e() {
              return 'temporary'
            },
          }
          _.push(t)
          p[s.generateKeyRequest](g.systemString, new Uint8Array(e))
          return t
        } else {
          throw new Error('Multiple sessions not allowed!')
        }
      }
      function M(e, t) {
        var r = e.sessionID
        if (!y.isClearKey(g)) {
          p[s.addKey](g.systemString, new Uint8Array(t), new Uint8Array(e.initData), r)
        } else {
          for (var n = 0; n < t.keyPairs.length; n++) {
            p[s.addKey](g.systemString, t.keyPairs[n].key, t.keyPairs[n].keyID, r)
          }
        }
      }
      function k(e) {
        try {
          p[s.cancelKeyRequest](g.systemString, e.sessionID)
        } catch (t) {
          r.trigger(n.KEY_SESSION_CLOSED, {
            data: null,
            error: 'Error closing session (' + e.sessionID + ') ' + t.message,
          })
        }
      }
      function P() {}
      function N() {}
      function L() {}
      function x() {
        return {
          handleEvent: function e(t) {
            var i = null
            switch (t.type) {
              case s.needkey:
                var a = ArrayBuffer.isView(t.initData) ? t.initData.buffer : t.initData
                r.trigger(n.NEED_KEY, { key: new o['default'](a, 'cenc') })
                break
              case s.keyerror:
                i = F(T, t.sessionId)
                if (!i) {
                  i = F(_, t.sessionId)
                }
                if (i) {
                  var f = m['default'].MEDIA_KEYERR_CODE
                  var h = ''
                  switch (t.errorCode.code) {
                    case 1:
                      f = m['default'].MEDIA_KEYERR_UNKNOWN_CODE
                      h += 'MEDIA_KEYERR_UNKNOWN - ' + m['default'].MEDIA_KEYERR_UNKNOWN_MESSAGE
                      break
                    case 2:
                      f = m['default'].MEDIA_KEYERR_CLIENT_CODE
                      h += 'MEDIA_KEYERR_CLIENT - ' + m['default'].MEDIA_KEYERR_CLIENT_MESSAGE
                      break
                    case 3:
                      f = m['default'].MEDIA_KEYERR_SERVICE_CODE
                      h += 'MEDIA_KEYERR_SERVICE - ' + m['default'].MEDIA_KEYERR_SERVICE_MESSAGE
                      break
                    case 4:
                      f = m['default'].MEDIA_KEYERR_OUTPUT_CODE
                      h += 'MEDIA_KEYERR_OUTPUT - ' + m['default'].MEDIA_KEYERR_OUTPUT_MESSAGE
                      break
                    case 5:
                      f = m['default'].MEDIA_KEYERR_HARDWARECHANGE_CODE
                      h +=
                        'MEDIA_KEYERR_HARDWARECHANGE - ' +
                        m['default'].MEDIA_KEYERR_HARDWARECHANGE_MESSAGE
                      break
                    case 6:
                      f = m['default'].MEDIA_KEYERR_DOMAIN_CODE
                      h += 'MEDIA_KEYERR_DOMAIN - ' + m['default'].MEDIA_KEYERR_DOMAIN_MESSAGE
                      break
                  }
                  h += '  System Code = ' + t.systemCode
                  r.trigger(n.KEY_ERROR, { data: new l['default'](f, h, i) })
                } else {
                  c.error('No session token found for key error')
                }
                break
              case s.keyadded:
                i = F(T, t.sessionId)
                if (!i) {
                  i = F(_, t.sessionId)
                }
                if (i) {
                  c.debug('DRM: Key added.')
                  r.trigger(n.KEY_ADDED, { data: i })
                } else {
                  c.debug('No session token found for key added')
                }
                break
              case s.keymessage:
                E = t.sessionId !== null && t.sessionId !== undefined
                if (E) {
                  i = F(T, t.sessionId)
                  if (!i && _.length > 0) {
                    i = _.shift()
                    T.push(i)
                    i.sessionID = t.sessionId
                    r.trigger(n.KEY_SESSION_CREATED, { data: i })
                  }
                } else if (_.length > 0) {
                  i = _.shift()
                  T.push(i)
                  if (_.length !== 0) {
                    u.mediaKeyMessageError(m['default'].MEDIA_KEY_MESSAGE_ERROR_MESSAGE)
                    u.error(
                      new l['default'](
                        m['default'].MEDIA_KEY_MESSAGE_ERROR_CODE,
                        m['default'].MEDIA_KEY_MESSAGE_ERROR_MESSAGE
                      )
                    )
                  }
                }
                if (i) {
                  var p = ArrayBuffer.isView(t.message) ? t.message.buffer : t.message
                  i.keyMessage = p
                  r.trigger(n.INTERNAL_KEY_MESSAGE, { data: new d['default'](i, p, t.defaultURL) })
                } else {
                  c.warn('No session token found for key message')
                }
                break
            }
          },
        }
      }
      function F(e, t) {
        if (!t || !e) {
          return null
        } else {
          var r = e.length
          for (var n = 0; n < r; n++) {
            if (e[n].sessionID == t) {
              return e[n]
            }
          }
          return null
        }
      }
      function U() {
        p.removeEventListener(s.keyerror, b)
        p.removeEventListener(s.needkey, b)
        p.removeEventListener(s.keymessage, b)
        p.removeEventListener(s.keyadded, b)
      }
      f = {
        getAllInitData: I,
        requestKeySystemAccess: C,
        getKeySystem: A,
        selectKeySystem: R,
        setMediaElement: D,
        createKeySession: O,
        updateKeySession: M,
        closeKeySession: k,
        setServerCertificate: P,
        loadKeySession: N,
        removeKeySession: L,
        stop: w,
        reset: w,
      }
      S()
      return f
    }
    y.__dashjs_factory_name = 'ProtectionModel_01b'
    t['default'] = dashjs.FactoryMaker.getClassFactory(y)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(47)
    var a = n(i)
    var s = r(72)
    var o = n(s)
    var u = r(35)
    var l = n(u)
    var f = r(5)
    var d = n(f)
    var c = r(68)
    var h = n(c)
    var p = r(70)
    var v = n(p)
    var g = r(19)
    var m = n(g)
    function y(e) {
      e = e || {}
      var t = this.context
      var r = e.eventBus
      var n = e.events
      var i = e.debug
      var s = undefined,
        u = undefined,
        f = undefined,
        c = undefined,
        p = undefined,
        g = undefined,
        y = undefined,
        _ = undefined
      function T() {
        u = i.getLogger(s)
        f = null
        c = null
        p = null
        g = []
        _ = (0, a['default'])(t).getInstance()
        y = x()
      }
      function E() {
        var e = g.length
        var t = undefined
        if (e !== 0) {
          ;(function() {
            var i = function e(t) {
              F(t)
              if (g.length === 0) {
                if (c) {
                  c.removeEventListener('encrypted', y)
                  c.setMediaKeys(null).then(function() {
                    r.trigger(n.TEARDOWN_COMPLETE)
                  })
                } else {
                  r.trigger(n.TEARDOWN_COMPLETE)
                }
              }
            }
            for (var a = 0; a < e; a++) {
              t = g[a]
              ;(function(e) {
                t.session.closed.then(function() {
                  i(e)
                })
                L(t)['catch'](function() {
                  i(e)
                })
              })(t)
            }
          })()
        } else {
          r.trigger(n.TEARDOWN_COMPLETE)
        }
      }
      function b() {
        var e = undefined
        for (var t = 0; t < g.length; t++) {
          e = g[t]
          if (!e.getUsable()) {
            L(e)['catch'](function() {
              F(e)
            })
          }
        }
      }
      function S() {
        return f
      }
      function w() {
        var e = []
        for (var t = 0; t < g.length; t++) {
          if (g[t].initData) {
            e.push(g[t].initData)
          }
        }
        return e
      }
      function A(e) {
        N(e, 0)
      }
      function I(e) {
        e.mksa
          .createMediaKeys()
          .then(function(t) {
            f = e.keySystem
            p = t
            if (c) {
              c.setMediaKeys(p).then(function() {
                r.trigger(n.INTERNAL_KEY_SYSTEM_SELECTED)
              })
            } else {
              r.trigger(n.INTERNAL_KEY_SYSTEM_SELECTED)
            }
          })
          ['catch'](function() {
            r.trigger(n.INTERNAL_KEY_SYSTEM_SELECTED, {
              error:
                'Error selecting keys system (' +
                e.keySystem.systemString +
                ')! Could not create MediaKeys -- TODO',
            })
          })
      }
      function C(e) {
        if (c === e) return
        if (c) {
          c.removeEventListener('encrypted', y)
          if (c.setMediaKeys) {
            c.setMediaKeys(null)
          }
        }
        c = e
        if (c) {
          c.addEventListener('encrypted', y)
          if (c.setMediaKeys && p) {
            c.setMediaKeys(p)
          }
        }
      }
      function R(e) {
        if (!f || !p) {
          throw new Error('Can not set server certificate until you have selected a key system')
        }
        p.setServerCertificate(e)
          .then(function() {
            u.info('DRM: License server certificate successfully updated.')
            r.trigger(n.SERVER_CERTIFICATE_UPDATED)
          })
          ['catch'](function(e) {
            r.trigger(n.SERVER_CERTIFICATE_UPDATED, {
              error: new d['default'](
                l['default'].SERVER_CERTIFICATE_UPDATED_ERROR_CODE,
                l['default'].SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE + e.name
              ),
            })
          })
      }
      function D(e, t, i) {
        if (!f || !p) {
          throw new Error('Can not create sessions until you have selected a key system')
        }
        var a = p.createSession(i)
        var s = B(a, e, i)
        var o = this.getKeySystem()
        var c =
          o.systemString === m['default'].CLEARKEY_KEYSTEM_STRING && t && t.clearkeys
            ? 'keyids'
            : 'cenc'
        a.generateRequest(c, e)
          .then(function() {
            u.debug('DRM: Session created.  SessionID = ' + s.getSessionID())
            r.trigger(n.KEY_SESSION_CREATED, { data: s })
          })
          ['catch'](function(e) {
            F(s)
            r.trigger(n.KEY_SESSION_CREATED, {
              data: null,
              error: new d['default'](
                l['default'].KEY_SESSION_CREATED_ERROR_CODE,
                l['default'].KEY_SESSION_CREATED_ERROR_MESSAGE +
                  'Error generating key request -- ' +
                  e.name
              ),
            })
          })
      }
      function O(e, t) {
        var i = e.session
        if (_.isClearKey(f)) {
          t = t.toJWK()
        }
        i.update(t)['catch'](function(t) {
          r.trigger(n.KEY_ERROR, {
            data: new d['default'](
              l['default'].MEDIA_KEYERR_CODE,
              'Error sending update() message! ' + t.name,
              e
            ),
          })
        })
      }
      function M(e, t, i) {
        if (!f || !p) {
          throw new Error('Can not load sessions until you have selected a key system')
        }
        for (var a = 0; a < g.length; a++) {
          if (e === g[a].sessionId) {
            u.warn('DRM: Ignoring session ID because we have already seen it!')
            return
          }
        }
        var s = p.createSession(i)
        var o = B(s, t, i, e)
        s.load(e)
          .then(function(t) {
            if (t) {
              u.debug('DRM: Session loaded.  SessionID = ' + o.getSessionID())
              r.trigger(n.KEY_SESSION_CREATED, { data: o })
            } else {
              F(o)
              r.trigger(n.KEY_SESSION_CREATED, {
                data: null,
                error: new d['default'](
                  l['default'].KEY_SESSION_CREATED_ERROR_CODE,
                  l['default'].KEY_SESSION_CREATED_ERROR_MESSAGE +
                    'Could not load session! Invalid Session ID (' +
                    e +
                    ')'
                ),
              })
            }
          })
          ['catch'](function(t) {
            F(o)
            r.trigger(n.KEY_SESSION_CREATED, {
              data: null,
              error: new d['default'](
                l['default'].KEY_SESSION_CREATED_ERROR_CODE,
                l['default'].KEY_SESSION_CREATED_ERROR_MESSAGE +
                  'Could not load session (' +
                  e +
                  ')! ' +
                  t.name
              ),
            })
          })
      }
      function k(e) {
        var t = e.session
        t.remove().then(
          function() {
            u.debug('DRM: Session removed.  SessionID = ' + e.getSessionID())
            r.trigger(n.KEY_SESSION_REMOVED, { data: e.getSessionID() })
          },
          function(t) {
            r.trigger(n.KEY_SESSION_REMOVED, {
              data: null,
              error: 'Error removing session (' + e.getSessionID() + '). ' + t.name,
            })
          }
        )
      }
      function P(e) {
        L(e)['catch'](function(t) {
          F(e)
          r.trigger(n.KEY_SESSION_CLOSED, {
            data: null,
            error: 'Error closing session (' + e.getSessionID() + ') ' + t.name,
          })
        })
      }
      function N(e, t) {
        if (
          navigator.requestMediaKeySystemAccess === undefined ||
          typeof navigator.requestMediaKeySystemAccess !== 'function'
        ) {
          r.trigger(n.KEY_SYSTEM_ACCESS_COMPLETE, { error: 'Insecure origins are not allowed' })
          return
        }
        ;(function(t) {
          var i = e[t].ks
          var a = e[t].configs
          var s = i.systemString
          if (s === m['default'].PLAYREADY_KEYSTEM_STRING && a[0].persistentState === 'required') {
            s += '.recommendation'
          }
          navigator
            .requestMediaKeySystemAccess(s, a)
            .then(function(e) {
              var t = typeof e.getConfiguration === 'function' ? e.getConfiguration() : null
              var a = new v['default'](i, t)
              a.mksa = e
              r.trigger(n.KEY_SYSTEM_ACCESS_COMPLETE, { data: a })
            })
            ['catch'](function(i) {
              if (++t < e.length) {
                N(e, t)
              } else {
                r.trigger(n.KEY_SYSTEM_ACCESS_COMPLETE, {
                  error: 'Key system access denied! ' + i.message,
                })
              }
            })
        })(t)
      }
      function L(e) {
        var t = e.session
        t.removeEventListener('keystatuseschange', e)
        t.removeEventListener('message', e)
        return t.close()
      }
      function x() {
        return {
          handleEvent: function e(t) {
            switch (t.type) {
              case 'encrypted':
                if (t.initData) {
                  var i = ArrayBuffer.isView(t.initData) ? t.initData.buffer : t.initData
                  r.trigger(n.NEED_KEY, { key: new o['default'](i, t.initDataType) })
                }
                break
            }
          },
        }
      }
      function F(e) {
        for (var t = 0; t < g.length; t++) {
          if (g[t] === e) {
            g.splice(t, 1)
            break
          }
        }
      }
      function U(e) {
        var t = undefined,
          r = undefined
        if (e && e.length > 0) {
          if (e[0]) {
            if (typeof e[0] === 'string') {
              t = e[0]
            } else {
              r = e[0]
            }
          }
          if (e[1]) {
            if (typeof e[1] === 'string') {
              t = e[1]
            } else {
              r = e[1]
            }
          }
        }
        return { status: t, keyId: r }
      }
      function B(e, t, i, a) {
        var s = {
          session: e,
          initData: t,
          sessionId: a,
          handleEvent: function e(t) {
            switch (t.type) {
              case 'keystatuseschange':
                r.trigger(n.KEY_STATUSES_CHANGED, { data: this })
                t.target.keyStatuses.forEach(function() {
                  var e = U(arguments)
                  switch (e.status) {
                    case 'expired':
                      r.trigger(n.INTERNAL_KEY_STATUS_CHANGED, {
                        error: new d['default'](
                          l['default'].KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE,
                          l['default'].KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE
                        ),
                      })
                      break
                    default:
                      r.trigger(n.INTERNAL_KEY_STATUS_CHANGED, e)
                      break
                  }
                })
                break
              case 'message':
                var i = ArrayBuffer.isView(t.message) ? t.message.buffer : t.message
                r.trigger(n.INTERNAL_KEY_MESSAGE, {
                  data: new h['default'](this, i, undefined, t.messageType),
                })
                break
            }
          },
          getSessionID: function t() {
            return e.sessionId
          },
          getExpirationTime: function t() {
            return e.expiration
          },
          getKeyStatuses: function t() {
            return e.keyStatuses
          },
          getUsable: function t() {
            var r = false
            e.keyStatuses.forEach(function() {
              var e = U(arguments)
              if (e.status === 'usable') {
                r = true
              }
            })
            return r
          },
          getSessionType: function e() {
            return i
          },
        }
        e.addEventListener('keystatuseschange', s)
        e.addEventListener('message', s)
        e.closed.then(function() {
          F(s)
          u.debug('DRM: Session closed.  SessionID = ' + s.getSessionID())
          r.trigger(n.KEY_SESSION_CLOSED, { data: s.getSessionID() })
        })
        g.push(s)
        return s
      }
      s = {
        getAllInitData: w,
        requestKeySystemAccess: A,
        getKeySystem: S,
        selectKeySystem: I,
        setMediaElement: C,
        setServerCertificate: R,
        createKeySession: D,
        updateKeySession: O,
        loadKeySession: M,
        removeKeySession: k,
        closeKeySession: P,
        stop: b,
        reset: E,
      }
      T()
      return s
    }
    y.__dashjs_factory_name = 'ProtectionModel_21Jan2015'
    t['default'] = dashjs.FactoryMaker.getClassFactory(y)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(47)
    var a = n(i)
    var s = r(72)
    var o = n(s)
    var u = r(5)
    var l = n(u)
    var f = r(35)
    var d = n(f)
    var c = r(68)
    var h = n(c)
    var p = r(71)
    var v = n(p)
    var g = r(70)
    var m = n(g)
    function y(e) {
      e = e || {}
      var t = this.context
      var r = e.eventBus
      var n = e.events
      var i = e.debug
      var s = e.api
      var u = undefined,
        f = undefined,
        c = undefined,
        p = undefined,
        g = undefined,
        y = undefined,
        _ = undefined,
        T = undefined,
        E = undefined
      function b() {
        f = i.getLogger(u)
        c = null
        p = null
        g = null
        y = null
        _ = []
        E = (0, a['default'])(t).getInstance()
        T = L()
      }
      function S() {
        try {
          for (var e = 0; e < _.length; e++) {
            M(_[e])
          }
          if (c) {
            c.removeEventListener(s.needkey, T)
          }
          r.trigger(n.TEARDOWN_COMPLETE)
        } catch (e) {
          r.trigger(n.TEARDOWN_COMPLETE, {
            error: 'Error tearing down key sessions and MediaKeys! -- ' + e.message,
          })
        }
      }
      function w() {
        return p
      }
      function A() {
        var e = []
        for (var t = 0; t < _.length; t++) {
          e.push(_[t].initData)
        }
        return e
      }
      function I(e) {
        var t = false
        for (var i = 0; i < e.length; i++) {
          var a = e[i].ks.systemString
          var o = e[i].configs
          var u = null
          var l = null
          for (var f = 0; f < o.length; f++) {
            var d = o[f].audioCapabilities
            var c = o[f].videoCapabilities
            if (d && d.length !== 0) {
              u = []
              for (var h = 0; h < d.length; h++) {
                if (window[s.MediaKeys].isTypeSupported(a, d[h].contentType)) {
                  u.push(d[h])
                }
              }
            }
            if (c && c.length !== 0) {
              l = []
              for (var p = 0; p < c.length; p++) {
                if (window[s.MediaKeys].isTypeSupported(a, c[p].contentType)) {
                  l.push(c[p])
                }
              }
            }
            if ((!u && !l) || (u && u.length === 0) || (l && l.length === 0)) {
              continue
            }
            t = true
            var g = new v['default'](u, l)
            var y = E.getKeySystemBySystemString(a)
            r.trigger(n.KEY_SYSTEM_ACCESS_COMPLETE, { data: new m['default'](y, g) })
            break
          }
        }
        if (!t) {
          r.trigger(n.KEY_SYSTEM_ACCESS_COMPLETE, {
            error:
              'Key system access denied! -- No valid audio/video content configurations detected!',
          })
        }
      }
      function C(e) {
        try {
          g = e.mediaKeys = new window[s.MediaKeys](e.keySystem.systemString)
          p = e.keySystem
          y = e
          if (c) {
            x()
          }
          r.trigger(n.INTERNAL_KEY_SYSTEM_SELECTED)
        } catch (e) {
          r.trigger(n.INTERNAL_KEY_SYSTEM_SELECTED, {
            error:
              'Error selecting keys system (' +
              p.systemString +
              ')! Could not create MediaKeys -- TODO',
          })
        }
      }
      function R(e) {
        if (c === e) return
        if (c) {
          c.removeEventListener(s.needkey, T)
        }
        c = e
        if (c) {
          c.addEventListener(s.needkey, T)
          if (g) {
            x()
          }
        }
      }
      function D(e, t, i, a) {
        if (!p || !g || !y) {
          throw new Error('Can not create sessions until you have selected a key system')
        }
        var o = null
        if (y.ksConfiguration.videoCapabilities && y.ksConfiguration.videoCapabilities.length > 0) {
          o = y.ksConfiguration.videoCapabilities[0]
        }
        if (
          o === null &&
          y.ksConfiguration.audioCapabilities &&
          y.ksConfiguration.audioCapabilities.length > 0
        ) {
          o = y.ksConfiguration.audioCapabilities[0]
        }
        if (o === null) {
          throw new Error('Can not create sessions for unknown content types.')
        }
        var u = o.contentType
        var l = g.createSession(u, new Uint8Array(e), a ? new Uint8Array(a) : null)
        var d = F(l, e)
        l.addEventListener(s.error, d)
        l.addEventListener(s.message, d)
        l.addEventListener(s.ready, d)
        l.addEventListener(s.close, d)
        _.push(d)
        f.debug('DRM: Session created.  SessionID = ' + d.getSessionID())
        r.trigger(n.KEY_SESSION_CREATED, { data: d })
      }
      function O(e, t) {
        var r = e.session
        if (!E.isClearKey(p)) {
          r.update(new Uint8Array(t))
        } else {
          r.update(new Uint8Array(t.toJWK()))
        }
      }
      function M(e) {
        var t = e.session
        t.removeEventListener(s.error, e)
        t.removeEventListener(s.message, e)
        t.removeEventListener(s.ready, e)
        t.removeEventListener(s.close, e)
        for (var r = 0; r < _.length; r++) {
          if (_[r] === e) {
            _.splice(r, 1)
            break
          }
        }
        t[s.release]()
      }
      function k() {}
      function P() {}
      function N() {}
      function L() {
        return {
          handleEvent: function e(t) {
            switch (t.type) {
              case s.needkey:
                if (t.initData) {
                  var i = ArrayBuffer.isView(t.initData) ? t.initData.buffer : t.initData
                  r.trigger(n.NEED_KEY, { key: new o['default'](i, 'cenc') })
                }
                break
            }
          },
        }
      }
      function x() {
        var e = null
        var t = function t() {
          c.removeEventListener('loadedmetadata', e)
          c[s.setMediaKeys](g)
          r.trigger(n.VIDEO_ELEMENT_SELECTED)
        }
        if (c.readyState >= 1) {
          t()
        } else {
          e = t.bind(this)
          c.addEventListener('loadedmetadata', e)
        }
      }
      function F(e, t) {
        return {
          session: e,
          initData: t,
          getSessionID: function e() {
            return this.session.sessionId
          },
          getExpirationTime: function e() {
            return NaN
          },
          getSessionType: function e() {
            return 'temporary'
          },
          handleEvent: function e(t) {
            switch (t.type) {
              case s.error:
                var i = 'KeyError'
                r.trigger(n.KEY_ERROR, {
                  data: new l['default'](d['default'].MEDIA_KEYERR_CODE, i, this),
                })
                break
              case s.message:
                var a = ArrayBuffer.isView(t.message) ? t.message.buffer : t.message
                r.trigger(n.INTERNAL_KEY_MESSAGE, {
                  data: new h['default'](this, a, t.destinationURL),
                })
                break
              case s.ready:
                f.debug('DRM: Key added.')
                r.trigger(n.KEY_ADDED)
                break
              case s.close:
                f.debug('DRM: Session closed.  SessionID = ' + this.getSessionID())
                r.trigger(n.KEY_SESSION_CLOSED, { data: this.getSessionID() })
                break
            }
          },
        }
      }
      u = {
        getAllInitData: A,
        requestKeySystemAccess: I,
        getKeySystem: w,
        selectKeySystem: C,
        setMediaElement: R,
        createKeySession: D,
        updateKeySession: O,
        closeKeySession: M,
        setServerCertificate: k,
        loadKeySession: P,
        removeKeySession: N,
        stop: S,
        reset: S,
      }
      b()
      return u
    }
    y.__dashjs_factory_name = 'ProtectionModel_3Feb2014'
    t['default'] = dashjs.FactoryMaker.getClassFactory(y)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(69)
    var a = n(i)
    var s = r(67)
    var o = n(s)
    function u() {
      var e = undefined
      function t(e, t) {
        var r = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(t)))
        e += '/?'
        for (var n = 0; n < r.kids.length; n++) {
          e += r.kids[n] + '&'
        }
        e = e.substring(0, e.length - 1)
        return e
      }
      function r() {
        return 'GET'
      }
      function n() {
        return 'json'
      }
      function i(e) {
        if (!e.hasOwnProperty('keys')) {
          return null
        }
        var t = []
        for (var r = 0; r < e.keys.length; r++) {
          var n = e.keys[r]
          var i = n.kid.replace(/=/g, '')
          var s = n.k.replace(/=/g, '')
          t.push(new a['default'](i, s))
        }
        return new o['default'](t)
      }
      function s(e) {
        return String.fromCharCode.apply(null, new Uint8Array(e))
      }
      e = {
        getServerURLFromMessage: t,
        getHTTPMethod: r,
        getResponseType: n,
        getLicenseMessage: i,
        getErrorResponse: s,
      }
      return e
    }
    u.__dashjs_factory_name = 'ClearKey'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(u)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(19)
    var a = n(i)
    function s(e) {
      e = e || {}
      var t = e.BASE64
      var r = {}
      r[a['default'].WIDEVINE_KEYSTEM_STRING] = {
        responseType: 'json',
        getLicenseMessage: function e(r) {
          return t.decodeArray(r.license)
        },
        getErrorResponse: function e(t) {
          return t
        },
      }
      r[a['default'].PLAYREADY_KEYSTEM_STRING] = {
        responseType: 'arraybuffer',
        getLicenseMessage: function e(t) {
          return t
        },
        getErrorResponse: function e(t) {
          return String.fromCharCode.apply(null, new Uint8Array(t))
        },
      }
      var n = undefined
      function i() {
        if (!t || !t.hasOwnProperty('decodeArray')) {
          throw new Error('Missing config parameter(s)')
        }
      }
      function s(e) {
        return e
      }
      function o() {
        return 'POST'
      }
      function u(e) {
        return r[e].responseType
      }
      function l(e, t) {
        i()
        return r[t].getLicenseMessage(e)
      }
      function f(e, t) {
        return r[t].getErrorResponse(e)
      }
      n = {
        getServerURLFromMessage: s,
        getHTTPMethod: o,
        getResponseType: u,
        getLicenseMessage: l,
        getErrorResponse: f,
      }
      return n
    }
    s.__dashjs_factory_name = 'DRMToday'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n() {
      var e = undefined
      var t = 'http://schemas.xmlsoap.org/soap/envelope/'
      function r(e) {
        var t = String.fromCharCode.apply(null, new Uint8Array(e))
        var r = decodeURIComponent(escape(t))
        return r
      }
      function n(e) {
        if (window.DOMParser) {
          var n = r(e)
          var i = new window.DOMParser()
          var a = i.parseFromString(n, 'text/xml')
          var s = a ? a.getElementsByTagNameNS(t, 'Envelope')[0] : null
          var o = s ? s.getElementsByTagNameNS(t, 'Body')[0] : null
          var u = o ? o.getElementsByTagNameNS(t, 'Fault')[0] : null
          if (u) {
            return null
          }
        }
        return e
      }
      function i(e) {
        var n = ''
        var i = ''
        var a = ''
        var s = -1
        var o = -1
        if (window.DOMParser) {
          var u = r(e)
          var l = new window.DOMParser()
          var f = l.parseFromString(u, 'text/xml')
          var d = f ? f.getElementsByTagNameNS(t, 'Envelope')[0] : null
          var c = d ? d.getElementsByTagNameNS(t, 'Body')[0] : null
          var h = c ? c.getElementsByTagNameNS(t, 'Fault')[0] : null
          var p = h ? h.getElementsByTagName('detail')[0] : null
          var v = p ? p.getElementsByTagName('Exception')[0] : null
          var g = null
          if (h === null) {
            return u
          }
          g = h.getElementsByTagName('faultstring')[0].firstChild
          n = g ? g.nodeValue : null
          if (v !== null) {
            g = v.getElementsByTagName('StatusCode')[0]
            i = g ? g.firstChild.nodeValue : null
            g = v.getElementsByTagName('Message')[0]
            a = g ? g.firstChild.nodeValue : null
            s = a ? a.lastIndexOf('[') + 1 : -1
            o = a ? a.indexOf(']') : -1
            a = a ? a.substring(s, o) : ''
          }
        }
        var m = 'code: ' + i + ', name: ' + n
        if (a) {
          m += ', message: ' + a
        }
        return m
      }
      function a(e) {
        return e
      }
      function s() {
        return 'POST'
      }
      function o() {
        return 'arraybuffer'
      }
      function u(e) {
        return n.call(this, e)
      }
      function l(e) {
        return i.call(this, e)
      }
      e = {
        getServerURLFromMessage: a,
        getHTTPMethod: s,
        getResponseType: o,
        getLicenseMessage: u,
        getErrorResponse: l,
      }
      return e
    }
    n.__dashjs_factory_name = 'PlayReady'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(n)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n() {
      var e = undefined
      function t(e) {
        return e
      }
      function r() {
        return 'POST'
      }
      function n() {
        return 'arraybuffer'
      }
      function i(e) {
        return e
      }
      function a(e) {
        return String.fromCharCode.apply(null, new Uint8Array(e))
      }
      e = {
        getServerURLFromMessage: t,
        getHTTPMethod: r,
        getResponseType: n,
        getLicenseMessage: i,
        getErrorResponse: a,
      }
      return e
    }
    n.__dashjs_factory_name = 'Widevine'
    t['default'] = dashjs.FactoryMaker.getSingletonFactory(n)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e(t, r) {
      n(this, e)
      this.contentType = t
      this.robustness = r
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    function s() {
      var e = []
      var t = 0
      var r = 0
      function n(n, i) {
        var a = i && i.droppedVideoFrames ? i.droppedVideoFrames : 0
        var s = i && i.totalVideoFrames ? i.totalVideoFrames : 0
        var o = a - t
        t = a
        var u = s - r
        r = s
        if (!isNaN(n)) {
          if (!e[n]) {
            e[n] = { droppedVideoFrames: o, totalVideoFrames: u }
          } else {
            e[n].droppedVideoFrames += o
            e[n].totalVideoFrames += u
          }
        }
      }
      function i() {
        return e
      }
      function a(n) {
        e = []
        t = n.droppedVideoFrames
        r = n.totalVideoFrames
      }
      return { push: n, getFrameHistory: i, reset: a }
    }
    s.__dashjs_factory_name = 'DroppedFramesHistory'
    var o = a['default'].getClassFactory(s)
    t['default'] = o
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    function s(e) {
      e = e || {}
      var t = undefined
      var r = e.abrController
      var n = e.switchHistory
      var i = e.droppedFramesHistory
      var a = e.currentRequest
      var s = e.useBufferOccupancyABR
      var o = e.streamProcessor ? e.streamProcessor.getScheduleController() : null
      var u = e.streamProcessor ? e.streamProcessor.getRepresentationInfo() : null
      function l() {
        var e = d()
        return e ? e.type : null
      }
      function f() {
        var e = d()
        return e ? e.streamInfo : null
      }
      function d() {
        return u ? u.mediaInfo : null
      }
      function c() {
        return u
      }
      function h() {
        return o
      }
      function p() {
        return r
      }
      function v() {
        return n
      }
      function g() {
        return i
      }
      function m() {
        return a
      }
      function y() {
        return s
      }
      t = {
        getMediaType: l,
        getMediaInfo: d,
        getDroppedFramesHistory: g,
        getCurrentRequest: m,
        getSwitchHistory: v,
        getStreamInfo: f,
        getScheduleController: h,
        getAbrController: p,
        getRepresentationInfo: c,
        useBufferOccupancyABR: y,
      }
      return t
    }
    s.__dashjs_factory_name = 'RulesContext'
    t['default'] = a['default'].getClassFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(14)
    var o = n(s)
    var u = 8
    function l() {
      var e = []
      var t = []
      function r(r) {
        if (r.newValue === o['default'].NO_CHANGE) {
          r.newValue = r.oldValue
        }
        if (!e[r.oldValue]) {
          e[r.oldValue] = { noDrops: 0, drops: 0, dropSize: 0 }
        }
        var n = r.newValue - r.oldValue
        var i = n < 0 ? 1 : 0
        var a = i ? -n : 0
        var s = i ? 0 : 1
        e[r.oldValue].drops += i
        e[r.oldValue].dropSize += a
        e[r.oldValue].noDrops += s
        t.push({ idx: r.oldValue, noDrop: s, drop: i, dropSize: a })
        if (t.length > u) {
          var l = t.shift()
          e[l.idx].drops -= l.drop
          e[l.idx].dropSize -= l.dropSize
          e[l.idx].noDrops -= l.noDrop
        }
      }
      function n() {
        return e
      }
      function i() {
        e = []
        t = []
      }
      return { push: r, getSwitchRequests: n, reset: i }
    }
    l.__dashjs_factory_name = 'SwitchRequestHistory'
    var f = a['default'].getClassFactory(l)
    t['default'] = f
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(0)
    var o = n(s)
    function u(e) {
      e = e || {}
      var t = 20
      var r = 3
      var n = 4
      var i = 4
      var s = 1.3
      var o = 1.3
      var u = 8
      var l = 3
      var f = 2
      var d = 1
      var c = e.mediaPlayerModel
      var h = undefined,
        p = undefined,
        v = undefined,
        g = undefined,
        m = undefined
      function y() {
        m = { throughputHalfLife: { fast: l, slow: u }, latencyHalfLife: { fast: d, slow: f } }
        M()
      }
      function _(e, t, r) {
        if (e === a['default'].VIDEO) {
          return r < c.getCacheLoadThresholdForType(a['default'].VIDEO)
        } else if (e === a['default'].AUDIO) {
          return r < c.getCacheLoadThresholdForType(a['default'].AUDIO)
        }
      }
      function T(e, r, n) {
        if (!r.trace || !r.trace.length) {
          return
        }
        var i = r.tresponse.getTime() - r.trequest.getTime() || 1
        var a = r._tfinish.getTime() - r.tresponse.getTime() || 1
        var s = r.trace.reduce(function(e, t) {
          return e + t.b[0]
        }, 0)
        var o = undefined
        if (c.getLowLatencyEnabled()) {
          o = r.trace.reduce(function(e, t) {
            return e + t.d
          }, 0)
        } else {
          o = n ? a : i + a
        }
        var u = Math.round((8 * s) / o)
        D(e)
        if (_(e, i, a)) {
          if (h[e].length > 0 && !h[e].hasCachedEntries) {
            return
          } else {
            h[e].hasCachedEntries = true
          }
        } else if (h[e] && h[e].hasCachedEntries) {
          O(e)
        }
        h[e].push(u)
        if (h[e].length > t) {
          h[e].shift()
        }
        p[e].push(i)
        if (p[e].length > t) {
          p[e].shift()
        }
        E(v[e], u, 0.001 * a, m.throughputHalfLife)
        E(g[e], i, 1, m.latencyHalfLife)
      }
      function E(e, t, r, n) {
        var i = Math.pow(0.5, r / n.fast)
        e.fastEstimate = (1 - i) * t + i * e.fastEstimate
        var a = Math.pow(0.5, r / n.slow)
        e.slowEstimate = (1 - a) * t + a * e.slowEstimate
        e.totalWeight += r
      }
      function b(e, t, a) {
        var u = undefined,
          l = undefined
        if (e) {
          u = h[t]
          l = a ? r : n
        } else {
          u = p[t]
          l = i
        }
        if (!u) {
          l = 0
        } else if (l >= u.length) {
          l = u.length
        } else if (e) {
          for (var f = 1; f < l; ++f) {
            var d = u[f] / u[f - 1]
            if (d >= o || d <= 1 / s) {
              l += 1
              if (l === u.length) {
                break
              }
            }
          }
        }
        return l
      }
      function S(e, t, r) {
        return c.getMovingAverageMethod() !== a['default'].MOVING_AVERAGE_SLIDING_WINDOW
          ? A(e, t)
          : w(e, t, r)
      }
      function w(e, t, r) {
        var n = b(e, t, r)
        var i = e ? h : p
        var a = i[t]
        if (n === 0 || !a || a.length === 0) {
          return NaN
        }
        a = a.slice(-n)
        return (
          a.reduce(function(e, t) {
            return e + t
          }) / a.length
        )
      }
      function A(e, t) {
        var r = e ? m.throughputHalfLife : m.latencyHalfLife
        var n = e ? v[t] : g[t]
        if (!n || n.totalWeight <= 0) {
          return NaN
        }
        var i = n.fastEstimate / (1 - Math.pow(0.5, n.totalWeight / r.fast))
        var a = n.slowEstimate / (1 - Math.pow(0.5, n.totalWeight / r.slow))
        return e ? Math.min(i, a) : Math.max(i, a)
      }
      function I(e, t) {
        return S(true, e, t)
      }
      function C(e, t) {
        var r = I(e, t)
        if (!isNaN(r)) {
          r *= c.getBandwidthSafetyFactor()
        }
        return r
      }
      function R(e) {
        return S(false, e)
      }
      function D(e) {
        h[e] = h[e] || []
        p[e] = p[e] || []
        v[e] = v[e] || { fastEstimate: 0, slowEstimate: 0, totalWeight: 0 }
        g[e] = g[e] || { fastEstimate: 0, slowEstimate: 0, totalWeight: 0 }
      }
      function O(e) {
        delete h[e]
        delete p[e]
        delete v[e]
        delete g[e]
        D(e)
      }
      function M() {
        h = {}
        p = {}
        v = {}
        g = {}
      }
      var k = {
        push: T,
        getAverageThroughput: I,
        getSafeAverageThroughput: C,
        getAverageLatency: R,
        reset: M,
      }
      y()
      return k
    }
    u.__dashjs_factory_name = 'ThroughputHistory'
    t['default'] = o['default'].getClassFactory(u)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(14)
    var a = n(i)
    var s = r(0)
    var o = n(s)
    var u = r(1)
    var l = n(u)
    function f(e) {
      e = e || {}
      var t = 1.8
      var r = 500
      var n = 5
      var i = this.context
      var s = e.mediaPlayerModel
      var o = e.metricsModel
      var u = e.dashMetrics
      var d = undefined,
        c = undefined,
        h = undefined,
        p = undefined,
        v = undefined
      function g() {
        c = (0, l['default'])(i)
          .getInstance()
          .getLogger(d)
        T()
      }
      function m(e, t) {
        h[e] = h[e] || {}
        h[e][t] = h[e][t] || {}
      }
      function y(e, t) {
        v[e] = v[e] || []
        v[e].push(t)
      }
      function _(e) {
        var l = (0, a['default'])(i).create(a['default'].NO_CHANGE, {
          name: f.__dashjs_factory_name,
        })
        if (
          !e ||
          !e.hasOwnProperty('getMediaInfo') ||
          !e.hasOwnProperty('getMediaType') ||
          !e.hasOwnProperty('getCurrentRequest') ||
          !e.hasOwnProperty('getRepresentationInfo') ||
          !e.hasOwnProperty('getAbrController')
        ) {
          return l
        }
        var d = e.getMediaInfo()
        var g = e.getMediaType()
        var _ = e.getCurrentRequest()
        if (!isNaN(_.index)) {
          m(g, _.index)
          var T = s.getStableBufferTime()
          var E = u.getCurrentBufferLevel(o.getReadOnlyMetricsFor(g))
          if (E > T) {
            return l
          }
          var b = h[g][_.index]
          if (b === null || _.firstByteDate === null || p.hasOwnProperty(b.id)) {
            return l
          }
          if (b.firstByteTime === undefined) {
            v[g] = []
            b.firstByteTime = _.firstByteDate.getTime()
            b.segmentDuration = _.duration
            b.bytesTotal = _.bytesTotal
            b.id = _.index
          }
          b.bytesLoaded = _.bytesLoaded
          b.elapsedTime = new Date().getTime() - b.firstByteTime
          if (b.bytesLoaded > 0 && b.elapsedTime > 0) {
            y(g, Math.round((b.bytesLoaded * 8) / b.elapsedTime))
          }
          if (v[g].length >= n && b.elapsedTime > r && b.bytesLoaded < b.bytesTotal) {
            var S = v[g].reduce(function(e, t) {
              return e + t
            }, 0)
            b.measuredBandwidthInKbps = Math.round(S / v[g].length)
            b.estimatedTimeOfDownload = +(
              (b.bytesTotal * 8) /
              b.measuredBandwidthInKbps /
              1e3
            ).toFixed(2)
            if (
              b.estimatedTimeOfDownload < b.segmentDuration * t ||
              e.getRepresentationInfo().quality === 0
            ) {
              return l
            } else if (!p.hasOwnProperty(b.id)) {
              var w = e.getAbrController()
              var A = b.bytesTotal - b.bytesLoaded
              var I = w.getBitrateList(d)
              var C = w.getQualityForBitrate(
                d,
                b.measuredBandwidthInKbps * s.getBandwidthSafetyFactor()
              )
              var R = (b.bytesTotal * I[C].bitrate) / I[w.getQualityFor(g, d.streamInfo)].bitrate
              if (A > R) {
                l.quality = C
                l.reason.throughput = b.measuredBandwidthInKbps
                l.reason.fragmentID = b.id
                p[b.id] = b
                c.debug(
                  '( ',
                  g,
                  'frag id',
                  b.id,
                  ') is asking to abandon and switch to quality to ',
                  C,
                  ' measured bandwidth was',
                  b.measuredBandwidthInKbps
                )
                delete h[g][b.id]
              }
            }
          } else if (b.bytesLoaded === b.bytesTotal) {
            delete h[g][b.id]
          }
        }
        return l
      }
      function T() {
        h = {}
        p = {}
        v = []
      }
      d = { shouldAbandon: _, reset: T }
      g()
      return d
    }
    f.__dashjs_factory_name = 'AbandonRequestsRule'
    t['default'] = o['default'].getClassFactory(f)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(25)
    var a = n(i)
    var s = r(14)
    var o = n(s)
    var u = r(0)
    var l = n(u)
    var f = r(7)
    var d = r(2)
    var c = n(d)
    var h = r(4)
    var p = n(h)
    var v = r(1)
    var g = n(v)
    var m = 0
    var y = 1
    var _ = 2
    var T = 10
    var E = 2
    var b = 0.99
    function S(e) {
      e = e || {}
      var t = this.context
      var r = e.dashMetrics
      var n = e.metricsModel
      var i = e.mediaPlayerModel
      var s = (0, c['default'])(t).getInstance()
      var u = undefined,
        l = undefined,
        d = undefined
      function h() {
        l = (0, g['default'])(t)
          .getInstance()
          .getLogger(u)
        G()
        s.on(p['default'].BUFFER_EMPTY, k, u)
        s.on(p['default'].PLAYBACK_SEEKING, P, u)
        s.on(p['default'].PERIOD_SWITCH_STARTED, N, u)
        s.on(p['default'].MEDIA_FRAGMENT_LOADED, L, u)
        s.on(p['default'].METRIC_ADDED, x, u)
        s.on(p['default'].QUALITY_CHANGE_REQUESTED, U, u)
        s.on(p['default'].FRAGMENT_LOADING_ABANDONED, B, u)
      }
      function v(e) {
        return e.map(function(e) {
          return Math.log(e)
        })
      }
      function S(e, t, r) {
        var n = r.reduce(function(e, t, n) {
          return t > r[e] ? n : e
        }, 0)
        if (n === 0) {
          return null
        }
        var i = Math.max(e, T + E * t.length)
        var a = (r[n] - 1) / (i / T - 1)
        var s = T / a
        return { gp: a, Vp: s }
      }
      function w(e) {
        var t = {}
        var r = e.getMediaInfo()
        var n = r.bitrateList.map(function(e) {
          return e.bandwidth
        })
        var a = v(n)
        a = a.map(function(e) {
          return e - a[0] + 1
        })
        var s = i.getStableBufferTime()
        var o = S(s, n, a)
        if (!o) {
          t.state = m
        } else {
          t.state = y
          t.bitrates = n
          t.utilities = a
          t.stableBufferTime = s
          t.Vp = o.Vp
          t.gp = o.gp
          t.lastQuality = 0
          A(t)
        }
        return t
      }
      function A(e) {
        e.placeholderBuffer = 0
        e.mostAdvancedSegmentStart = NaN
        e.lastSegmentWasReplacement = false
        e.lastSegmentStart = NaN
        e.lastSegmentDurationS = NaN
        e.lastSegmentRequestTimeMs = NaN
        e.lastSegmentFinishTimeMs = NaN
      }
      function I(e, t) {
        var a = i.getStableBufferTime()
        if (e.stableBufferTime !== a) {
          var s = S(a, e.bitrates, e.utilities)
          if (s.Vp !== e.Vp || s.gp !== e.gp) {
            var o = r.getCurrentBufferLevel(n.getReadOnlyMetricsFor(t))
            var u = o + e.placeholderBuffer
            u -= T
            u *= s.Vp / e.Vp
            u += T
            e.stableBufferTime = a
            e.Vp = s.Vp
            e.gp = s.gp
            e.placeholderBuffer = Math.max(0, u - o)
          }
        }
      }
      function C(e) {
        var t = e.getMediaType()
        var r = d[t]
        if (!r) {
          r = w(e)
          d[t] = r
        } else if (r.state !== m) {
          I(r, t)
        }
        return r
      }
      function R(e, t) {
        var r = e.bitrates.length
        var n = NaN
        var i = NaN
        for (var a = 0; a < r; ++a) {
          var s = (e.Vp * (e.utilities[a] + e.gp) - t) / e.bitrates[a]
          if (isNaN(i) || s >= i) {
            i = s
            n = a
          }
        }
        return n
      }
      function D(e, t) {
        return e.Vp * (e.utilities[t] + e.gp)
      }
      function O(e, t) {
        var r = e.bitrates[t]
        var n = e.utilities[t]
        var i = 0
        for (var a = t - 1; a >= 0; --a) {
          if (e.utilities[a] < e.utilities[t]) {
            var s = e.bitrates[a]
            var o = e.utilities[a]
            var u = e.Vp * (e.gp + (r * o - s * n) / (r - s))
            i = Math.max(i, u)
          }
        }
        return i
      }
      function M(e, t) {
        var r = Date.now()
        if (!isNaN(e.lastSegmentFinishTimeMs)) {
          var n = 0.001 * (r - e.lastSegmentFinishTimeMs)
          e.placeholderBuffer += Math.max(0, n)
        } else if (!isNaN(e.lastCallTimeMs)) {
          var n = 0.001 * (r - e.lastCallTimeMs)
          e.placeholderBuffer += Math.max(0, n)
        }
        e.lastCallTimeMs = r
        e.lastSegmentStart = NaN
        e.lastSegmentRequestTimeMs = NaN
        e.lastSegmentFinishTimeMs = NaN
        I(e, t)
      }
      function k() {
        for (var e in d) {
          if (d.hasOwnProperty(e) && d[e].state === _) {
            d[e].placeholderBuffer = 0
          }
        }
      }
      function P() {
        for (var e in d) {
          if (d.hasOwnProperty(e)) {
            var t = d[e]
            if (t.state !== m) {
              t.state = y
              A(t)
            }
          }
        }
      }
      function N() {}
      function L(e) {
        if (e && e.chunk && e.chunk.mediaInfo) {
          var t = d[e.chunk.mediaInfo.type]
          if (t && t.state !== m) {
            var r = e.chunk.start
            if (isNaN(t.mostAdvancedSegmentStart) || r > t.mostAdvancedSegmentStart) {
              t.mostAdvancedSegmentStart = r
              t.lastSegmentWasReplacement = false
            } else {
              t.lastSegmentWasReplacement = true
            }
            t.lastSegmentStart = r
            t.lastSegmentDurationS = e.chunk.duration
            t.lastQuality = e.chunk.quality
            F(t, e.chunk.mediaInfo.type)
          }
        }
      }
      function x(e) {
        if (
          e &&
          e.metric === a['default'].HTTP_REQUEST &&
          e.value &&
          e.value.type === f.HTTPRequest.MEDIA_SEGMENT_TYPE &&
          e.value.trace &&
          e.value.trace.length
        ) {
          var t = d[e.mediaType]
          if (t && t.state !== m) {
            t.lastSegmentRequestTimeMs = e.value.trequest.getTime()
            t.lastSegmentFinishTimeMs = e.value._tfinish.getTime()
            F(t, e.mediaType)
          }
        }
      }
      function F(e, t) {
        if (
          !isNaN(e.lastSegmentStart) &&
          !isNaN(e.lastSegmentRequestTimeMs) &&
          !isNaN(e.placeholderBuffer)
        ) {
          e.placeholderBuffer *= b
          if (!isNaN(e.lastSegmentFinishTimeMs)) {
            var i = r.getCurrentBufferLevel(n.getReadOnlyMetricsFor(t))
            var a = i + 0.001 * (e.lastSegmentFinishTimeMs - e.lastSegmentRequestTimeMs)
            var s = D(e, e.lastQuality)
            var o = Math.max(0, s - a)
            e.placeholderBuffer = Math.min(o, e.placeholderBuffer)
          }
          if (e.lastSegmentWasReplacement && !isNaN(e.lastSegmentDurationS)) {
            e.placeholderBuffer += e.lastSegmentDurationS
          }
          e.lastSegmentStart = NaN
          e.lastSegmentRequestTimeMs = NaN
        }
      }
      function U(e) {
        if (e) {
          var t = d[e.mediaType]
          if (t && t.state !== m) {
            t.abrQuality = e.newQuality
          }
        }
      }
      function B(e) {
        if (e) {
          var t = d[e.mediaType]
          if (t && t.state !== m) {
            var i = r.getCurrentBufferLevel(n.getReadOnlyMetricsFor(e.mediaType))
            var a = undefined
            if (t.abrQuality > 0) {
              a = O(t, t.abrQuality)
            } else {
              a = T
            }
            var s = Math.max(0, a - i)
            t.placeholderBuffer = Math.min(t.placeholderBuffer, s)
          }
        }
      }
      function j(e) {
        var i = e.getMediaInfo()
        var a = e.getMediaType()
        var s = n.getReadOnlyMetricsFor(a)
        var u = e.getScheduleController()
        var f = e.getStreamInfo()
        var d = e.getAbrController()
        var c = d.getThroughputHistory()
        var h = f ? f.id : null
        var p = f && f.manifestInfo && f.manifestInfo.isDynamic
        var v = e.useBufferOccupancyABR()
        var g = (0, o['default'])(t).create()
        g.reason = g.reason || {}
        if (!v) {
          return g
        }
        u.setTimeToLoadDelay(0)
        var T = C(e)
        if (T.state === m) {
          return g
        }
        var E = r.getCurrentBufferLevel(s)
        var b = c.getAverageThroughput(a, p)
        var S = c.getSafeAverageThroughput(a, p)
        var w = c.getAverageLatency(a)
        var I = undefined
        g.reason.state = T.state
        g.reason.throughput = b
        g.reason.latency = w
        if (isNaN(b)) {
          return g
        }
        switch (T.state) {
          case y:
            I = d.getQualityForBitrate(i, S, w)
            g.quality = I
            g.reason.throughput = S
            T.placeholderBuffer = Math.max(0, O(T, I) - E)
            T.lastQuality = I
            if (!isNaN(T.lastSegmentDurationS) && E >= T.lastSegmentDurationS) {
              T.state = _
            }
            break
          case _:
            M(T, a)
            I = R(T, E + T.placeholderBuffer)
            var k = d.getQualityForBitrate(i, S, w)
            if (I > T.lastQuality && I > k) {
              I = Math.max(k, T.lastQuality)
            }
            var P = Math.max(0, E + T.placeholderBuffer - D(T, I))
            if (P <= T.placeholderBuffer) {
              T.placeholderBuffer -= P
              P = 0
            } else {
              P -= T.placeholderBuffer
              T.placeholderBuffer = 0
              if (I < d.getTopQualityIndexFor(a, h)) {
                u.setTimeToLoadDelay(1e3 * P)
              } else {
                P = 0
              }
            }
            g.quality = I
            g.reason.throughput = b
            g.reason.latency = w
            g.reason.bufferLevel = E
            g.reason.placeholderBuffer = T.placeholderBuffer
            g.reason.delay = P
            T.lastQuality = I
            break
          default:
            l.debug('BOLA ABR rule invoked in bad state.')
            g.quality = d.getQualityForBitrate(i, S, w)
            g.reason.state = T.state
            g.reason.throughput = S
            g.reason.latency = w
            T.state = y
            A(T)
        }
        return g
      }
      function G() {
        d = {}
      }
      function q() {
        G()
        s.off(p['default'].BUFFER_EMPTY, k, u)
        s.off(p['default'].PLAYBACK_SEEKING, P, u)
        s.off(p['default'].PERIOD_SWITCH_STARTED, N, u)
        s.off(p['default'].MEDIA_FRAGMENT_LOADED, L, u)
        s.off(p['default'].METRIC_ADDED, x, u)
        s.off(p['default'].QUALITY_CHANGE_REQUESTED, U, u)
        s.off(p['default'].FRAGMENT_LOADING_ABANDONED, B, u)
      }
      u = { getMaxIndex: j, reset: q }
      h()
      return u
    }
    S.__dashjs_factory_name = 'BolaRule'
    t['default'] = l['default'].getClassFactory(S)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(14)
    var o = n(s)
    var u = r(1)
    var l = n(u)
    function f() {
      var e = this.context
      var t = undefined,
        r = undefined
      var n = 0.15
      var i = 375
      function a() {
        r = (0, l['default'])(e)
          .getInstance()
          .getLogger(t)
      }
      function s(t) {
        var a = t.getDroppedFramesHistory()
        if (a) {
          var s = a.getFrameHistory()
          var u = 0
          var l = 0
          var f = o['default'].NO_CHANGE
          for (var d = 1; d < s.length; d++) {
            if (s[d]) {
              u = s[d].droppedVideoFrames
              l = s[d].totalVideoFrames
              if (l > i && u / l > n) {
                f = d - 1
                r.debug('index: ' + f + ' Dropped Frames: ' + u + ' Total Frames: ' + l)
                break
              }
            }
          }
          return (0, o['default'])(e).create(f, { droppedFrames: u })
        }
        return (0, o['default'])(e).create()
      }
      t = { getMaxIndex: s }
      a()
      return t
    }
    f.__dashjs_factory_name = 'DroppedFramesRule'
    t['default'] = a['default'].getClassFactory(f)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(20)
    var a = n(i)
    var s = r(2)
    var o = n(s)
    var u = r(4)
    var l = n(u)
    var f = r(0)
    var d = n(f)
    var c = r(1)
    var h = n(c)
    var p = r(14)
    var v = n(p)
    var g = r(3)
    var m = n(g)
    function y(e) {
      e = e || {}
      var t = 0.5
      var r = this.context
      var n = (0, o['default'])(r).getInstance()
      var i = e.metricsModel
      var s = e.dashMetrics
      var u = undefined,
        f = undefined,
        d = undefined
      function c() {
        f = (0, h['default'])(r)
          .getInstance()
          .getLogger(u)
        _()
        n.on(l['default'].PLAYBACK_SEEKING, T, u)
      }
      function p() {
        if (
          !i ||
          !i.hasOwnProperty('getReadOnlyMetricsFor') ||
          !s ||
          !s.hasOwnProperty('getCurrentBufferLevel')
        ) {
          throw new Error(m['default'].MISSING_CONFIG_ERROR)
        }
      }
      function g(e) {
        var n = (0, v['default'])(r).create()
        if (!e || !e.hasOwnProperty('getMediaType')) {
          return n
        }
        p()
        var o = e.getMediaType()
        var u = i.getReadOnlyMetricsFor(o)
        var l = u.BufferState.length > 0 ? u.BufferState[u.BufferState.length - 1] : null
        var d = e.getRepresentationInfo()
        var c = d.fragmentDuration
        if (!l || !y(o, l) || !c) {
          return n
        }
        if (l.state === a['default'].BUFFER_EMPTY) {
          f.debug('Switch to index 0; buffer is empty.')
          n.quality = 0
          n.reason = 'InsufficientBufferRule: Buffer is empty'
        } else {
          var h = e.getMediaInfo()
          var g = e.getAbrController()
          var m = g.getThroughputHistory()
          var _ = s.getCurrentBufferLevel(u)
          var T = m.getAverageThroughput(o)
          var E = m.getAverageLatency(o)
          var b = T * (_ / c) * t
          n.quality = g.getQualityForBitrate(h, b, E)
          n.reason = 'InsufficientBufferRule: being conservative to avoid immediate rebuffering'
        }
        return n
      }
      function y(e, t) {
        d[e] = d[e] || {}
        var r = false
        if (d[e].firstBufferLoadedEvent) {
          r = true
        } else if (t && t.state === a['default'].BUFFER_LOADED) {
          d[e].firstBufferLoadedEvent = true
          r = true
        }
        return r
      }
      function _() {
        d = {}
      }
      function T() {
        _()
      }
      function E() {
        _()
        n.off(l['default'].PLAYBACK_SEEKING, T, u)
      }
      u = { getMaxIndex: g, reset: E }
      c()
      return u
    }
    y.__dashjs_factory_name = 'InsufficientBufferRule'
    t['default'] = d['default'].getClassFactory(y)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(1)
    var o = n(s)
    var u = r(14)
    var l = n(u)
    function f() {
      var e = this.context
      var t = undefined,
        r = undefined
      var n = 0.075
      var i = 6
      function a() {
        r = (0, o['default'])(e)
          .getInstance()
          .getLogger(t)
      }
      function s(t) {
        var a = t ? t.getSwitchHistory() : null
        var s = a ? a.getSwitchRequests() : []
        var o = 0
        var u = 0
        var f = 0
        var d = (0, l['default'])(e).create()
        for (var c = 0; c < s.length; c++) {
          if (s[c] !== undefined) {
            o += s[c].drops
            u += s[c].noDrops
            f += s[c].dropSize
            if (o + u >= i && o / u > n) {
              d.quality = c > 0 && s[c].drops > 0 ? c - 1 : c
              d.reason = { index: d.quality, drops: o, noDrops: u, dropSize: f }
              r.debug(
                'Switch history rule index: ' + d.quality + ' samples: ' + (o + u) + ' drops: ' + o
              )
              break
            }
          }
        }
        return d
      }
      t = { getMaxIndex: s }
      a()
      return t
    }
    f.__dashjs_factory_name = 'SwitchHistoryRule'
    t['default'] = a['default'].getClassFactory(f)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(20)
    var a = n(i)
    var s = r(44)
    var o = n(s)
    var u = r(0)
    var l = n(u)
    var f = r(1)
    var d = n(f)
    var c = r(14)
    var h = n(c)
    var p = r(3)
    var v = n(p)
    function g(e) {
      e = e || {}
      var t = this.context
      var r = e.metricsModel
      var n = undefined,
        i = undefined
      function s() {
        i = (0, d['default'])(t)
          .getInstance()
          .getLogger(n)
      }
      function u() {
        if (!r || !r.hasOwnProperty('getReadOnlyMetricsFor')) {
          throw new Error(v['default'].MISSING_CONFIG_ERROR)
        }
      }
      function l(e) {
        var n = (0, h['default'])(t).create()
        if (
          !e ||
          !e.hasOwnProperty('getMediaInfo') ||
          !e.hasOwnProperty('getMediaType') ||
          !e.hasOwnProperty('useBufferOccupancyABR') ||
          !e.hasOwnProperty('getAbrController') ||
          !e.hasOwnProperty('getScheduleController')
        ) {
          return n
        }
        u()
        var s = e.getMediaInfo()
        var l = e.getMediaType()
        var f = r.getReadOnlyMetricsFor(l)
        var d = e.getScheduleController()
        var c = e.getAbrController()
        var p = e.getStreamInfo()
        var v = p && p.manifestInfo ? p.manifestInfo.isDynamic : null
        var g = c.getThroughputHistory()
        var m = g.getSafeAverageThroughput(l, v)
        var y = g.getAverageLatency(l)
        var _ = f.BufferState.length > 0 ? f.BufferState[f.BufferState.length - 1] : null
        var T = e.useBufferOccupancyABR()
        if (!f || isNaN(m) || !_ || T) {
          return n
        }
        if (c.getAbandonmentStateFor(l) !== o['default'].ABANDON_LOAD) {
          if (_.state === a['default'].BUFFER_LOADED || v) {
            n.quality = c.getQualityForBitrate(s, m, y)
            d.setTimeToLoadDelay(0)
            i.debug(
              'requesting switch to index: ',
              n.quality,
              'type: ',
              l,
              'Average throughput',
              Math.round(m),
              'kbps'
            )
            n.reason = { throughput: m, latency: y }
          }
        }
        return n
      }
      function f() {}
      n = { getMaxIndex: l, reset: f }
      s()
      return n
    }
    g.__dashjs_factory_name = 'ThroughputRule'
    t['default'] = l['default'].getClassFactory(g)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(0)
    var o = n(s)
    function u(e) {
      e = e || {}
      var t = e.dashMetrics
      var r = e.metricsModel
      var n = e.mediaPlayerModel
      var i = e.textController
      var s = e.abrController
      function o() {}
      function u(e, n) {
        if (!e) {
          return true
        }
        var i = t.getCurrentBufferLevel(r.getReadOnlyMetricsFor(e.getType()))
        return i < l(e, n)
      }
      function l(e, o) {
        var u = NaN
        if (!e) {
          return u
        }
        var l = e.getType()
        var f = e.getRepresentationInfo()
        if (l === a['default'].FRAGMENTED_TEXT) {
          u = i.isTextEnabled() ? f.fragmentDuration : 0
        } else if (l === a['default'].AUDIO && o) {
          var d = t.getCurrentBufferLevel(r.getReadOnlyMetricsFor(a['default'].VIDEO))
          if (isNaN(f.fragmentDuration)) {
            u = d
          } else {
            u = Math.max(d, f.fragmentDuration)
          }
        } else {
          var c = f.mediaInfo.streamInfo
          if (s.isPlayingAtTopQuality(c)) {
            var h = c.manifestInfo.duration >= n.getLongFormContentDurationThreshold()
            u = h ? n.getBufferTimeAtTopQualityLongForm() : n.getBufferTimeAtTopQuality()
          } else {
            u = n.getStableBufferTime()
          }
        }
        return u
      }
      var f = { execute: u, getBufferTarget: l }
      o()
      return f
    }
    u.__dashjs_factory_name = 'BufferLevelRule'
    t['default'] = o['default'].getClassFactory(u)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(1)
    var o = n(s)
    var u = r(0)
    var l = n(u)
    var f = r(21)
    var d = n(f)
    function c(e) {
      e = e || {}
      var t = this.context
      var r = e.adapter
      var n = e.textController
      var i = e.playbackController
      var s = undefined,
        u = undefined
      function l() {
        u = (0, o['default'])(t)
          .getInstance()
          .getLogger(s)
      }
      function f(e, t, s) {
        if (!e) {
          return null
        }
        var o = e.getRepresentationInfo()
        var l = e.getType()
        var f = !isNaN(t)
        var c = e.getBufferController()
        var h = i.getNormalizedTime()
        var p = f ? t : r.getIndexHandlerTime(e)
        var v = false
        var g = undefined
        if (isNaN(p) || (l === a['default'].FRAGMENTED_TEXT && !n.isTextEnabled())) {
          return null
        }
        if (c) {
          var m = c.getRangeAt(p)
          var y = c.getRangeAt(h)
          var _ = c.getBuffer().hasDiscontinuitiesAfter(h)
          if ((m !== null || y !== null) && !f) {
            if (!m || (y && y.start != m.start && y.end != m.end)) {
              if (_ && l !== a['default'].FRAGMENTED_TEXT) {
                e.getFragmentModel().removeExecutedRequestsAfterTime(y.end)
                v = true
              }
              m = y
            }
            if (p !== m.end) {
              u.debug(
                "Prior to making a request for time, NextFragmentRequestRule is aligning index handler's currentTime with bufferedRange.end for",
                l,
                '.',
                p,
                'was changed to',
                m.end
              )
              p = m.end
            }
          }
        }
        if (s) {
          p = s.startTime + s.duration / 2
          g = r.getFragmentRequest(e, o, p, { timeThreshold: 0, ignoreIsFinished: true })
        } else {
          g = r.getFragmentRequest(e, o, p, { keepIdx: !f && !v })
          while (
            g &&
            g.action !== d['default'].ACTION_COMPLETE &&
            e.getFragmentModel().isFragmentLoaded(g)
          ) {
            g = r.getFragmentRequest(e, o)
          }
        }
        return g
      }
      s = { execute: f }
      l()
      return s
    }
    c.__dashjs_factory_name = 'NextFragmentRequestRule'
    t['default'] = l['default'].getClassFactory(c)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    function s() {
      var e = 0
      var t = undefined
      function r(e) {
        var t = ''
        for (var r = 0; r < e.length; ++r) {
          var n = e[r]
          t += n.uchar
        }
        var i = t.length
        var a = t.replace(/^\s+/, '').length
        return i - a
      }
      function n(e) {
        return (
          'left: ' +
          e.x * 3.125 +
          '%; top: ' +
          e.y1 * 6.66 +
          '%; width: ' +
          (100 - e.x * 3.125) +
          '%; height: ' +
          Math.max(e.y2 - 1 - e.y1, 1) * 6.66 +
          '%; align-items: flex-start; overflow: visible; -webkit-writing-mode: horizontal-tb;'
        )
      }
      function i(e) {
        if (e === 'red') {
          return 'rgb(255, 0, 0)'
        } else if (e === 'green') {
          return 'rgb(0, 255, 0)'
        } else if (e === 'blue') {
          return 'rgb(0, 0, 255)'
        } else if (e === 'cyan') {
          return 'rgb(0, 255, 255)'
        } else if (e === 'magenta') {
          return 'rgb(255, 0, 255)'
        } else if (e === 'yellow') {
          return 'rgb(255, 255, 0)'
        } else if (e === 'white') {
          return 'rgb(255, 255, 255)'
        } else if (e === 'black') {
          return 'rgb(0, 0, 0)'
        }
        return e
      }
      function a(e, t) {
        var r = e.videoHeight / 15
        if (t) {
          return (
            'font-size: ' +
            r +
            "px; font-family: Menlo, Consolas, 'Cutive Mono', monospace; color: " +
            (t.foreground ? i(t.foreground) : 'rgb(255, 255, 255)') +
            '; font-style: ' +
            (t.italics ? 'italic' : 'normal') +
            '; text-decoration: ' +
            (t.underline ? 'underline' : 'none') +
            '; white-space: pre; background-color: ' +
            (t.background ? i(t.background) : 'transparent') +
            ';'
          )
        } else {
          return (
            'font-size: ' +
            r +
            "px; font-family: Menlo, Consolas, 'Cutive Mono', monospace; justify-content: flex-start; text-align: left; color: rgb(255, 255, 255); font-style: normal; white-space: pre; line-height: normal; font-weight: normal; text-decoration: none; width: 100%; display: flex;"
          )
        }
      }
      function s(e) {
        return e.replace(/^\s+/g, '')
      }
      function o(e) {
        return e.replace(/\s+$/g, '')
      }
      function u(t, i, u, l) {
        var f = null
        var d = null
        var c = false
        var h = -1
        var p = { start: i, end: u, spans: [] }
        var v = 'style_cea608_white_black'
        var g = {}
        var m = {}
        var y = []
        var _ = undefined,
          T = undefined
        for (_ = 0; _ < 15; ++_) {
          var E = l.rows[_]
          var b = ''
          var S = null
          if (false === E.isEmpty()) {
            var w = r(E.chars)
            if (f === null) {
              f = { x: w, y1: _, y2: _ + 1, p: [] }
            }
            if (w !== h && c) {
              f.p.push(p)
              p = { start: i, end: u, spans: [] }
              f.y2 = _
              f.name = 'region_' + f.x + '_' + f.y1 + '_' + f.y2
              if (false === g.hasOwnProperty(f.name)) {
                y.push(f)
                g[f.name] = f
              } else {
                d = g[f.name]
                d.p.contat(f.p)
              }
              f = { x: w, y1: _, y2: _ + 1, p: [] }
            }
            for (var A = 0; A < E.chars.length; ++A) {
              var I = E.chars[A]
              var C = I.penState
              if (S === null || !C.equals(S)) {
                if (b.trim().length > 0) {
                  p.spans.push({ name: v, line: b, row: _ })
                  b = ''
                }
                var R = 'style_cea608_' + C.foreground + '_' + C.background
                if (C.underline) {
                  R += '_underline'
                }
                if (C.italics) {
                  R += '_italics'
                }
                if (!m.hasOwnProperty(R)) {
                  m[R] = JSON.parse(JSON.stringify(C))
                }
                S = C
                v = R
              }
              b += I.uchar
            }
            if (b.trim().length > 0) {
              p.spans.push({ name: v, line: b, row: _ })
            }
            c = true
            h = w
          } else {
            c = false
            h = -1
            if (f) {
              f.p.push(p)
              p = { start: i, end: u, spans: [] }
              f.y2 = _
              f.name = 'region_' + f.x + '_' + f.y1 + '_' + f.y2
              if (false === g.hasOwnProperty(f.name)) {
                y.push(f)
                g[f.name] = f
              } else {
                d = g[f.name]
                d.p.contat(f.p)
              }
              f = null
            }
          }
        }
        if (f) {
          f.p.push(p)
          f.y2 = _ + 1
          f.name = 'region_' + f.x + '_' + f.y1 + '_' + f.y2
          if (false === g.hasOwnProperty(f.name)) {
            y.push(f)
            g[f.name] = f
          } else {
            d = g[f.name]
            d.p.contat(f.p)
          }
          f = null
        }
        var D = []
        for (_ = 0; _ < y.length; ++_) {
          var O = y[_]
          var M = 'sub_cea608_' + e++
          var k = document.createElement('div')
          k.id = M
          var P = n(O)
          k.style.cssText =
            'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' +
            P
          var N = document.createElement('div')
          N.className = 'paragraph bodyStyle'
          N.style.cssText = a(t)
          var L = document.createElement('div')
          L.className = 'cueUniWrapper'
          L.style.cssText = 'unicode-bidi: normal; direction: ltr;'
          for (var x = 0; x < O.p.length; ++x) {
            var F = O.p[x]
            var U = 0
            for (T = 0; T < F.spans.length; ++T) {
              var B = F.spans[T]
              if (B.line.length > 0) {
                if (T !== 0 && U != B.row) {
                  var j = document.createElement('br')
                  j.className = 'lineBreak'
                  L.appendChild(j)
                }
                var G = false
                if (U === B.row) {
                  G = true
                }
                U = B.row
                var q = m[B.name]
                var H = document.createElement('span')
                H.className = 'spanPadding ' + B.name + ' customSpanColor'
                H.style.cssText = a(t, q)
                if (T !== 0 && G) {
                  if (T === F.spans.length - 1) {
                    H.textContent = o(B.line)
                  } else {
                    H.textContent = B.line
                  }
                } else {
                  if (F.spans.length > 1 && T < F.spans.length - 1) {
                    if (B.row === F.spans[T + 1].row) {
                      H.textContent = s(B.line)
                    } else {
                      H.textContent = B.line.trim()
                    }
                  } else {
                    H.textContent = B.line.trim()
                  }
                }
                L.appendChild(H)
              }
            }
          }
          N.appendChild(L)
          k.appendChild(N)
          var V = { bodyStyle: ['%', 90] }
          for (var K in m) {
            if (m.hasOwnProperty(K)) {
              V[K] = ['%', 90]
            }
          }
          D.push({
            type: 'html',
            start: i,
            end: u,
            cueHTMLElement: k,
            cueID: M,
            cellResolution: [32, 15],
            isFromCEA608: true,
            fontSize: V,
            lineHeight: {},
            linePadding: {},
          })
        }
        return D
      }
      t = { createHTMLCaptionsFromScreen: u }
      return t
    }
    s.__dashjs_factory_name = 'EmbeddedTextHtmlRender'
    t['default'] = a['default'].getSingletonFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(2)
    var o = n(s)
    var u = r(4)
    var l = n(u)
    var f = r(0)
    var d = n(f)
    var c = r(75)
    var h = n(c)
    var p = r(109)
    var v = n(p)
    var g = r(73)
    var m = n(g)
    var y = r(5)
    var _ = n(y)
    var T = r(6)
    var E = n(T)
    var b = 'NotFragmentedTextBufferController'
    function S(e) {
      e = e || {}
      var t = this.context
      var r = (0, o['default'])(t).getInstance()
      var n = (0, m['default'])(t).getInstance()
      var i = e.errHandler
      var s = e.type
      var u = e.mimeType
      var f = e.streamProcessor
      var d = undefined,
        c = undefined,
        p = undefined,
        g = undefined,
        y = undefined,
        T = undefined
      function S() {
        p = false
        g = null
        c = false
        r.on(l['default'].DATA_UPDATE_COMPLETED, U, d)
        r.on(l['default'].INIT_FRAGMENT_LOADED, B, d)
      }
      function w() {
        return b
      }
      function A(e) {
        D(e)
        T = (0, h['default'])(t).getInstance()
      }
      function I(e) {
        try {
          y = (0, v['default'])(t).create(g, e)
          if (!p) {
            var r = y.getBuffer()
            if (r.hasOwnProperty(a['default'].INITIALIZE)) {
              r.initialize(u, f)
            }
            p = true
          }
          return y
        } catch (t) {
          if (
            e.isText ||
            e.codec.indexOf('codecs="stpp') !== -1 ||
            e.codec.indexOf('codecs="wvtt') !== -1
          ) {
            try {
              y = n.getTextSourceBuffer()
            } catch (e) {
              i.mediaSourceError('Error creating ' + s + ' source buffer.')
              i.error(
                new _['default'](
                  E['default'].MEDIASOURCE_TYPE_UNSUPPORTED_CODE,
                  E['default'].MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE + s + ' : ' + e.message
                )
              )
            }
          } else {
            i.mediaSourceError('Error creating ' + s + ' source buffer.')
            i.error(
              new _['default'](
                E['default'].MEDIASOURCE_TYPE_UNSUPPORTED_CODE,
                E['default'].MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE + s
              )
            )
          }
        }
      }
      function C() {
        return s
      }
      function R() {
        return y
      }
      function D(e) {
        g = e
      }
      function O() {
        return g
      }
      function M() {
        return f
      }
      function k() {
        return false
      }
      function P() {}
      function N() {}
      function L() {
        return 0
      }
      function x() {
        return c
      }
      function F(e) {
        r.off(l['default'].DATA_UPDATE_COMPLETED, U, d)
        r.off(l['default'].INIT_FRAGMENT_LOADED, B, d)
        if (!e && y) {
          y.abort()
          y.reset()
          y = null
        }
      }
      function U(e) {
        if (e.sender.getStreamProcessor() !== f) {
          return
        }
        var t = T.extract(f.getStreamInfo().id, e.sender.getCurrentRepresentation().id)
        if (!t) {
          r.trigger(l['default'].TIMED_TEXT_REQUESTED, { index: 0, sender: e.sender })
        }
      }
      function B(e) {
        if (e.fragmentModel !== f.getFragmentModel() || !e.chunk.bytes) {
          return
        }
        T.save(e.chunk)
        y.append(e.chunk)
        r.trigger(l['default'].STREAM_COMPLETED, {
          request: e.request,
          fragmentModel: e.fragmentModel,
        })
      }
      function j(e, t) {
        var n = T.extract(e, t)
        if (!n) {
          r.trigger(l['default'].TIMED_TEXT_REQUESTED, { index: 0, sender: d })
        }
      }
      function G() {
        return null
      }
      function q(e) {
        if (y.timestampOffset !== e && !isNaN(e)) {
          y.timestampOffset = e
        }
      }
      d = {
        getBufferControllerType: w,
        initialize: A,
        createBuffer: I,
        getType: C,
        getStreamProcessor: M,
        setSeekStartTime: N,
        getBuffer: R,
        getBufferLevel: L,
        setMediaSource: D,
        getMediaSource: O,
        getIsBufferingCompleted: x,
        getIsPruningInProgress: k,
        dischargePreBuffer: P,
        switchInitData: j,
        getRangeAt: G,
        reset: F,
        updateTimestampOffset: q,
      }
      S()
      return d
    }
    S.__dashjs_factory_name = b
    t['default'] = d['default'].getClassFactory(S)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(0)
    var o = n(s)
    var u = r(20)
    var l = n(u)
    var f = r(283)
    var d = n(f)
    function c(e) {
      e = e || {}
      var t = this.context
      var r = undefined,
        n = undefined
      function i() {
        if (e.type === a['default'].FRAGMENTED_TEXT) {
          r = (0, l['default'])(t).create({
            type: e.type,
            metricsModel: e.metricsModel,
            mediaPlayerModel: e.mediaPlayerModel,
            manifestModel: e.manifestModel,
            errHandler: e.errHandler,
            streamController: e.streamController,
            mediaController: e.mediaController,
            adapter: e.adapter,
            textController: e.textController,
            abrController: e.abrController,
            playbackController: e.playbackController,
            streamProcessor: e.streamProcessor,
          })
        } else {
          r = (0, d['default'])(t).create({
            type: e.type,
            mimeType: e.mimeType,
            errHandler: e.errHandler,
            streamProcessor: e.streamProcessor,
          })
        }
      }
      function s() {
        return r.getBufferControllerType()
      }
      function o(e, t) {
        return r.initialize(e, t)
      }
      function u(e) {
        return r.createBuffer(e)
      }
      function f() {
        return r.getType()
      }
      function c() {
        return r.getBuffer()
      }
      function h(e) {
        r.setBuffer(e)
      }
      function p() {
        return r.getMediaSource()
      }
      function v(e) {
        r.setMediaSource(e)
      }
      function g() {
        r.getStreamProcessor()
      }
      function m(e) {
        r.setSeekStartTime(e)
      }
      function y() {
        return r.getBufferLevel()
      }
      function _(e) {
        r.reset(e)
      }
      function T() {
        return r.getIsBufferingCompleted()
      }
      function E(e, t) {
        r.switchInitData(e, t)
      }
      function b() {
        return r.getIsPruningInProgress()
      }
      function S() {
        return r.dischargePreBuffer()
      }
      function w(e) {
        return r.getRangeAt(e)
      }
      function A(e) {
        var t = c()
        if (t.timestampOffset !== e && !isNaN(e)) {
          t.timestampOffset = e
        }
      }
      n = {
        getBufferControllerType: s,
        initialize: o,
        createBuffer: u,
        getType: f,
        getStreamProcessor: g,
        setSeekStartTime: m,
        getBuffer: c,
        setBuffer: h,
        getBufferLevel: y,
        setMediaSource: v,
        getMediaSource: p,
        getIsBufferingCompleted: T,
        getIsPruningInProgress: b,
        dischargePreBuffer: S,
        switchInitData: E,
        getRangeAt: w,
        reset: _,
        updateTimestampOffset: A,
      }
      i()
      return n
    }
    c.__dashjs_factory_name = 'TextBufferController'
    t['default'] = o['default'].getClassFactory(c)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(3)
    var a = n(i)
    var s = r(7)
    var o = r(307)
    var u = n(o)
    var l = r(36)
    var f = n(l)
    var d = r(116)
    var c = n(d)
    var h = r(0)
    var p = n(h)
    var v = r(1)
    var g = n(v)
    var m = r(74)
    var y = n(m)
    var _ = r(282)
    var T = n(_)
    var E = r(54)
    var b = n(E)
    var S = r(98)
    var w = n(S)
    var A = r(2)
    var I = n(A)
    var C = r(4)
    var R = n(C)
    var D = r(5)
    var O = n(D)
    var M = r(6)
    var k = n(M)
    function P() {
      var e = this.context
      var t = (0, I['default'])(e).getInstance()
      var r = false
      var n = undefined,
        i = undefined,
        o = undefined,
        l = undefined,
        d = undefined,
        h = undefined,
        p = undefined,
        v = undefined,
        m = undefined,
        _ = undefined,
        E = undefined,
        S = undefined,
        A = undefined,
        C = undefined,
        D = undefined,
        M = undefined,
        P = undefined,
        N = undefined,
        L = undefined,
        x = undefined,
        F = undefined,
        U = undefined,
        B = undefined,
        j = undefined,
        G = undefined,
        q = undefined,
        H = undefined,
        V = undefined
      function K() {
        i = (0, g['default'])(e)
          .getInstance()
          .getLogger(n)
        W()
      }
      function Y() {
        A = null
        D = NaN
        M = []
        L = null
        C = false
      }
      function W() {
        Y()
        E = []
        v = null
      }
      function z(t, n) {
        if (!r) {
          Z()
        }
        S.setConfig({ videoModel: P })
        S.initialize()
        if (!o) {
          o = (0, f['default'])(e).getInstance()
        }
        X(t, n)
      }
      function X(t, r) {
        var i = !d.getIsTextTrack(t)
        if (r) {
          E = E.concat(r.getMediaInfoArr())
          if (i) {
            A = r.getFragmentModel()
            n.buffered = (0, c['default'])(e).create()
            M = p.getTracksFor(a['default'].FRAGMENTED_TEXT, N.getActiveStreamInfo())
            var s = p.getCurrentTrackFor(a['default'].FRAGMENTED_TEXT, N.getActiveStreamInfo())
            for (var o = 0; o < M.length; o++) {
              if (M[o] === s) {
                ie(o)
                break
              }
            }
          }
          for (var o = 0; o < E.length; o++) {
            ae(null, E[o])
          }
        }
      }
      function $() {
        S.deleteAllTextTracks()
        o = null
        E = []
        A = null
        C = false
        M = []
      }
      function Q() {
        W()
        N = null
        P = null
        S = null
      }
      function J(e) {
        var t = e.chunk
        if (t.mediaInfo.embeddedCaptions) {
          se(t.bytes, t)
        }
      }
      function Z() {
        F = []
        S = (0, y['default'])(e).getInstance()
        S.setConfig({ videoModel: P })
        S.initialize()
        o = (0, f['default'])(e).getInstance()
        x = null
        U = false
        B = 0
        q = []
        G = []
        j = null
        r = true
        H = (0, T['default'])(e).getInstance()
        var n = N.getActiveStreamProcessors()
        for (var i in n) {
          if (n[i].getType() === 'video') {
            V = n[i].getRepresentationInfo().MSETimeOffset
            break
          }
        }
        t.on(R['default'].VIDEO_CHUNK_RECEIVED, J, this)
      }
      function ee() {
        t.off(R['default'].VIDEO_CHUNK_RECEIVED, J, this)
        if (S) {
          S.deleteAllTextTracks()
        }
        r = false
        F = []
        q = [null, null]
        G = []
        j = null
      }
      function te(e) {
        if (!r) {
          Z()
        }
        if (e) {
          if (e.id === a['default'].CC1 || e.id === a['default'].CC3) {
            for (var t = 0; t < F.length; t++) {
              if (F[t].id === e.id) {
                return
              }
            }
            F.push(e)
          } else {
            i.warn('Embedded track ' + e.id + ' not supported!')
          }
        }
      }
      function re(e) {
        if (!e) {
          return
        }
        if (e.errHandler) {
          l = e.errHandler
        }
        if (e.dashManifestModel) {
          d = e.dashManifestModel
        }
        if (e.manifestModel) {
          h = e.manifestModel
        }
        if (e.mediaController) {
          p = e.mediaController
        }
        if (e.videoModel) {
          P = e.videoModel
        }
        if (e.streamController) {
          N = e.streamController
        }
        if (e.textTracks) {
          S = e.textTracks
        }
        if (e.vttParser) {
          m = e.vttParser
        }
        if (e.ttmlParser) {
          _ = e.ttmlParser
        }
      }
      function ne() {
        var e = { fragmentModel: A, fragmentedTracks: M, videoModel: P }
        return e
      }
      function ie(e) {
        x = e
      }
      function ae(e, t) {
        var r = new u['default']()
        var n = { subtitle: 'subtitles', caption: 'captions' }
        var i = function e() {
          var r = t.roles.length > 0 ? n[t.roles[0]] : n.caption
          r = r === n.caption || r === n.subtitle ? r : n.caption
          return r
        }
        var s = function e() {
          var r = false
          if (t.codec && t.codec.search(a['default'].STPP) >= 0) {
            r = true
          }
          if (t.mimeType && t.mimeType.search(a['default'].TTML) >= 0) {
            r = true
          }
          return r
        }
        r.captionData = e
        r.lang = t.lang
        r.labels = t.labels
        r.id = t.id ? t.id : t.index
        r.index = t.index
        r.isTTML = s()
        r.defaultTrack = ue(t)
        r.isFragmented = !d.getIsTextTrack(t.mimeType)
        r.isEmbedded = t.isEmbedded ? true : false
        r.kind = i()
        r.roles = t.roles
        r.accessibility = t.accessibility
        var o = (E ? E.length : 0) + F.length
        S.addTextTrack(r, o)
      }
      function se(e, t) {
        var r = undefined,
          n = undefined,
          u = undefined,
          f = undefined,
          d = undefined,
          c = undefined,
          p = undefined
        var g = t.mediaInfo
        var m = g.type
        var y = g.mimeType
        var _ = g.codec || y
        if (!_) {
          i.error('No text type defined')
          return
        }
        if (m === a['default'].FRAGMENTED_TEXT) {
          if (!C) {
            C = true
            D = o.getMediaTimescaleFromMoov(e)
          } else {
            c = o.getSamplesInfo(e)
            n = c.sampleList
            if (L === null && n.length > 0) {
              L = n[0].cts - t.start * D
            }
            if (_.search(a['default'].STPP) >= 0) {
              v = v !== null ? v : le(_)
              for (u = 0; u < n.length; u++) {
                var T = n[u]
                var E = T.cts
                var I = E - L
                this.buffered.add(I / D, (I + T.duration) / D)
                var R = new DataView(e, T.offset, T.subSizes[0])
                p = b['default'].Utils.dataViewToString(R, a['default'].UTF8)
                var M = []
                var N = T.offset + T.subSizes[0]
                for (f = 1; f < T.subSizes.length; f++) {
                  var U = new Uint8Array(e, N, T.subSizes[f])
                  var V = String.fromCharCode.apply(null, U)
                  M.push(V)
                  N += T.subSizes[f]
                }
                try {
                  var K = h.getValue()
                  var Y = K.ttmlTimeIsRelative ? E / D : 0
                  r = v.parse(p, Y, E / D, (E + T.duration) / D, M)
                  S.addCaptions(x, L / D, r)
                } catch (e) {
                  A.removeExecutedRequestsBeforeTime()
                  this.remove()
                  i.error('TTML parser error: ' + e.message)
                }
              }
            } else {
              var W = []
              for (u = 0; u < n.length; u++) {
                var T = n[u]
                T.cts -= L
                this.buffered.add(T.cts / D, (T.cts + T.duration) / D)
                var z = e.slice(T.offset, T.offset + T.size)
                var X = b['default'].parseBuffer(z)
                for (f = 0; f < X.boxes.length; f++) {
                  var $ = X.boxes[f]
                  i.debug('VTT box1: ' + $.type)
                  if ($.type === 'vtte') {
                    continue
                  }
                  if ($.type === 'vttc') {
                    i.debug('VTT vttc boxes.length = ' + $.boxes.length)
                    for (d = 0; d < $.boxes.length; d++) {
                      var Q = $.boxes[d]
                      i.debug('VTT box2: ' + Q.type)
                      if (Q.type === 'payl') {
                        var J = Q.cue_text
                        i.debug('VTT cue_text = ' + J)
                        var Z = T.cts / D
                        var ee = (T.cts + T.duration) / D
                        W.push({ start: Z, end: ee, data: J, styles: {} })
                        i.debug('VTT ' + Z + '-' + ee + ' : ' + J)
                      }
                    }
                  }
                }
              }
              if (W.length > 0) {
                S.addCaptions(x, 0, W)
              }
            }
          }
        } else if (m === a['default'].TEXT) {
          var R = new DataView(e, 0, e.byteLength)
          p = b['default'].Utils.dataViewToString(R, a['default'].UTF8)
          try {
            r = le(_).parse(p, 0)
            S.addCaptions(S.getCurrentTrackIdx(), 0, r)
          } catch (e) {
            l.timedTextError(e, 'parse', p)
            l.error(
              new O['default'](
                k['default'].TIMED_TEXT_ERROR_ID_PARSE_CODE,
                k['default'].TIMED_TEXT_ERROR_MESSAGE_PARSE + e.message,
                p
              )
            )
          }
        } else if (m === a['default'].VIDEO) {
          if (t.segmentType === s.HTTPRequest.INIT_SEGMENT_TYPE) {
            if (B === 0) {
              B = o.getMediaTimescaleFromMoov(e)
              for (u = 0; u < F.length; u++) {
                ae(null, F[u])
              }
            }
          } else {
            if (B === 0) {
              i.warn('CEA-608: No timescale for embeddedTextTrack yet')
              return
            }
            var te = function e(t, r) {
              function n(e, t, n) {
                var i = null
                if (P.getTTMLRenderingDiv()) {
                  i = H.createHTMLCaptionsFromScreen(P.getElement(), e, t, n)
                } else {
                  var a = n.getDisplayText()
                  i = [{ start: e, end: t, data: a, styles: {} }]
                }
                if (i) {
                  S.addCaptions(r, 0, i)
                }
              }
              return n
            }
            c = o.getSamplesInfo(e)
            var re = c.lastSequenceNumber
            if (!q[0] && !q[1]) {
              var ne = undefined,
                ie = undefined,
                se = undefined
              for (u = 0; u < F.length; u++) {
                if (F[u].id === a['default'].CC1) {
                  ne = 0
                  se = S.getTrackIdxForId(a['default'].CC1)
                } else if (F[u].id === a['default'].CC3) {
                  ne = 1
                  se = S.getTrackIdxForId(a['default'].CC3)
                }
                if (se === -1) {
                  i.warn('CEA-608: data before track is ready.')
                  return
                }
                ie = te(this, se)
                q[u] = new w['default'].Cea608Parser(u + 1, { newCue: ie }, null)
              }
            }
            if (B && G.indexOf(re) == -1) {
              if (j !== null && re !== j + c.numSequences) {
                for (u = 0; u < q.length; u++) {
                  if (q[u]) {
                    q[u].reset()
                  }
                }
              }
              var ue = oe(e, c.sampleList)
              for (var fe = 0; fe < q.length; fe++) {
                var de = ue.fields[fe]
                var ce = q[fe]
                if (ce) {
                  for (u = 0; u < de.length; u++) {
                    ce.addData(de[u][0] / B, de[u][1])
                  }
                }
              }
              j = re
              G.push(re)
            }
          }
        }
      }
      function oe(e, t) {
        if (t.length === 0) {
          return null
        }
        var r = { splits: [], fields: [[], []] }
        var n = new DataView(e)
        for (var i = 0; i < t.length; i++) {
          var a = t[i]
          var s = w['default'].findCea608Nalus(n, a.offset, a.size)
          var o = null
          var u = 0
          for (var l = 0; l < s.length; l++) {
            var f = w['default'].extractCea608DataFromRange(n, s[l])
            for (var d = 0; d < 2; d++) {
              if (f[d].length > 0) {
                if (a.cts !== o) {
                  u = 0
                } else {
                  u += 1
                }
                r.fields[d].push([a.cts + V * B, f[d], u])
                o = a.cts
              }
            }
          }
        }
        r.fields.forEach(function e(t) {
          t.sort(function(e, t) {
            if (e[0] === t[0]) {
              return e[2] - t[2]
            }
            return e[0] - t[0]
          })
        })
        return r
      }
      function ue(e) {
        var t = false
        if (F.length > 1 && e.isEmbedded) {
          t = e.id && e.id === a['default'].CC1
        } else if (F.length === 1) {
          if (e.id && typeof e.id === 'string' && e.id.substring(0, 2) === 'CC') {
            t = true
          }
        } else if (F.length === 0) {
          t = e.index === E[0].index
        }
        return t
      }
      function le(e) {
        var t = undefined
        if (e.search(a['default'].VTT) >= 0) {
          t = m
        } else if (e.search(a['default'].TTML) >= 0 || e.search(a['default'].STPP) >= 0) {
          t = _
        }
        return t
      }
      function fe(e, t) {
        if (e === undefined && e === t) {
          e = this.buffered.start(0)
          t = this.buffered.end(this.buffered.length - 1)
        }
        this.buffered.remove(e, t)
      }
      n = {
        initialize: z,
        append: se,
        abort: $,
        addEmbeddedTrack: te,
        resetEmbedded: ee,
        setConfig: re,
        getConfig: ne,
        setCurrentFragmentedTrackIdx: ie,
        remove: fe,
        reset: Q,
      }
      K()
      return n
    }
    P.__dashjs_factory_name = 'TextSourceBuffer'
    t['default'] = p['default'].getSingletonFactory(P)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(3)
    var o = n(s)
    var u = r(308)
    var l = n(u)
    var f = r(115)
    var d = n(f)
    var c = r(118)
    var h = n(c)
    var p = r(18)
    function v(e) {
      var t = this.context
      var r = undefined,
        n = undefined
      function i() {
        v()
        n = (0, d['default'])(t).create({
          dashManifestModel: e.dashManifestModel,
          adapter: e.adapter,
          baseURLController: e.baseURLController,
          stream: e.stream,
          timelineConverter: e.timelineConverter,
        })
      }
      function a(e, t) {
        var r = n.getCurrentTrack()
        if (!r || r.segmentDuration <= 0 || e === undefined || e === null) {
          return null
        }
        var i = Math.floor(e / r.segmentDuration)
        var a = e % r.segmentDuration
        var o = Math.floor((a * r.tilesHor * r.tilesVert) / r.segmentDuration)
        var u = new l['default']()
        u.width = Math.floor(r.widthPerTile)
        u.height = Math.floor(r.heightPerTile)
        u.x = Math.floor(o % r.tilesHor) * r.widthPerTile
        u.y = Math.floor(o / r.tilesHor) * r.heightPerTile
        if ('readThumbnail' in r) {
          return r.readThumbnail(e, function(e) {
            u.url = e
            if (t) t(u)
          })
        } else {
          u.url = s(r, i)
          if (t) t(u)
          return u
        }
      }
      function s(e, t) {
        var r = t + e.startNumber
        var n = (0, p.replaceTokenForTemplate)(e.templateUrl, 'Number', r)
        n = (0, p.replaceTokenForTemplate)(n, 'Time', (r - 1) * e.segmentDuration)
        n = (0, p.replaceTokenForTemplate)(n, 'Bandwidth', e.bandwidth)
        return (0, p.unescapeDollarsInTemplate)(n)
      }
      function u(e) {
        n.setTrackByIndex(e)
      }
      function f() {
        return n.getCurrentTrackIndex()
      }
      function c() {
        var e = n.getTracks()
        var t = 0
        return e.map(function(e) {
          var r = new h['default']()
          r.mediaType = o['default'].IMAGE
          r.qualityIndex = t++
          r.bitrate = e.bitrate
          r.width = e.width
          r.height = e.height
          return r
        })
      }
      function v() {
        if (n) {
          n.reset()
        }
      }
      r = { get: a, setTrackByIndex: u, getCurrentTrackIndex: f, getBitrateList: c, reset: v }
      i()
      return r
    }
    v.__dashjs_factory_name = 'ThumbnailController'
    t['default'] = a['default'].getClassFactory(v)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(6)
    var a = n(i)
    var s = r(2)
    var o = n(s)
    var u = r(4)
    var l = n(u)
    var f = r(220)
    var d = n(f)
    var c = r(297)
    var h = n(c)
    var p = r(296)
    var v = n(p)
    var g = r(0)
    var m = n(g)
    var y = r(5)
    var _ = n(y)
    var T = r(3)
    var E = n(T)
    function b() {
      var e = this.context
      var t = (0, o['default'])(e).getInstance()
      var r = undefined
      var n = undefined,
        i = undefined,
        s = undefined,
        u = undefined,
        f = undefined
      function c() {
        i = (0, d['default'])(e).create({
          updateEventName: l['default'].SERVICE_LOCATION_BLACKLIST_CHANGED,
          addBlacklistEventName: l['default'].SERVICE_LOCATION_BLACKLIST_ADD,
        })
        s = (0, v['default'])(e).create({ blacklistController: i })
        u = (0, h['default'])(e).create({ blacklistController: i })
        f = s
      }
      function p(e) {
        if (e.selector) {
          f = e.selector
        }
        if (e.dashManifestModel) {
          r = e.dashManifestModel
        }
      }
      function g() {
        if (!r || !r.hasOwnProperty('getIsDVB')) {
          throw new Error(E['default'].MISSING_CONFIG_ERROR)
        }
      }
      function m(e) {
        g()
        if (r.getIsDVB(e)) {
          f = u
        } else {
          f = s
        }
      }
      function y(e) {
        if (!e) {
          return
        }
        var r = e.baseUrls
        var n = e.selectedIdx
        if (!isNaN(n)) {
          return r[n]
        }
        var i = f.select(r)
        if (!i) {
          t.trigger(l['default'].URL_RESOLUTION_FAILED, {
            error: new _['default'](
              a['default'].URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE,
              a['default'].URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE
            ),
          })
          if (f === s) {
            T()
          }
          return
        }
        e.selectedIdx = r.indexOf(i)
        return i
      }
      function T() {
        i.reset()
      }
      n = { chooseSelectorFromManifest: m, select: y, reset: T, setConfig: p }
      c()
      return n
    }
    b.__dashjs_factory_name = 'BaseURLSelector'
    t['default'] = m['default'].getClassFactory(b)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    function s() {
      var e = undefined,
        t = undefined
      function r() {
        t = false
      }
      function n() {
        var e = 'WebKitMediaSource' in window
        var t = 'MediaSource' in window
        return e || t
      }
      function i() {
        return t
      }
      function a(e) {
        t = e
      }
      function s(e) {
        if ('MediaSource' in window && MediaSource.isTypeSupported(e)) {
          return true
        }
        if ('WebKitMediaSource' in window && WebKitMediaSource.isTypeSupported(e)) {
          return true
        }
        return false
      }
      e = {
        supportsMediaSource: n,
        supportsEncryptedMedia: i,
        supportsCodec: s,
        setEncryptedMediaSupported: a,
      }
      r()
      return e
    }
    s.__dashjs_factory_name = 'Capabilities'
    t['default'] = a['default'].getSingletonFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(1)
    var o = n(s)
    var u = r(3)
    var l = n(u)
    var f = [
      { oldKey: 'dashjs_vbitrate', newKey: 'dashjs_video_bitrate' },
      { oldKey: 'dashjs_abitrate', newKey: 'dashjs_audio_bitrate' },
      { oldKey: 'dashjs_vsettings', newKey: 'dashjs_video_settings' },
      { oldKey: 'dashjs_asettings', newKey: 'dashjs_audio_settings' },
    ]
    var d = 'dashjs_?_bitrate'
    var c = 'dashjs_?_settings'
    var h = 'localStorage'
    var p = 'sessionStorage'
    var v = 'LastBitrate'
    var g = 'LastMediaSettings'
    function m(e) {
      e = e || {}
      var t = this.context
      var r = e.mediaPlayerModel
      var n = undefined,
        i = undefined,
        a = undefined
      function s() {
        i = (0, o['default'])(t)
          .getInstance()
          .getLogger(n)
        m()
      }
      function u(e) {
        if (a !== undefined) return a
        a = false
        var t = '1'
        var r = '1'
        var n = undefined
        try {
          if (typeof window !== 'undefined') {
            n = window[e]
          }
        } catch (e) {
          i.warn('DOMStorage access denied: ' + e.message)
          return a
        }
        if (!n || (e !== h && e !== p)) {
          return a
        }
        try {
          n.setItem(t, r)
          n.removeItem(t)
          a = true
        } catch (e) {
          i.warn('DOMStorage is supported, but cannot be used: ' + e.message)
        }
        return a
      }
      function m() {
        if (u(h)) {
          f.forEach(function(e) {
            var t = localStorage.getItem(e.oldKey)
            if (t) {
              localStorage.removeItem(e.oldKey)
              try {
                localStorage.setItem(e.newKey, t)
              } catch (e) {
                i.error(e.message)
              }
            }
          })
        }
      }
      function y() {
        var e = 60 * 1e3 * 10
        return Math.round(new Date().getTime() / e) * e
      }
      function _(e, t) {
        return u(e) && r['get' + t + 'CachingInfo']().enabled
      }
      function T() {
        if (!r || !r.hasOwnProperty('getLastMediaSettingsCachingInfo')) {
          throw new Error(l['default'].MISSING_CONFIG_ERROR)
        }
      }
      function E(e) {
        T()
        if (!_(h, g)) return null
        var t = null
        var n = c.replace(/\?/, e)
        try {
          var i = JSON.parse(localStorage.getItem(n)) || {}
          var a =
            new Date().getTime() - parseInt(i.timestamp, 10) >=
              r.getLastMediaSettingsCachingInfo().ttl || false
          t = i.settings
          if (a) {
            localStorage.removeItem(n)
            t = null
          }
        } catch (e) {
          return null
        }
        return t
      }
      function b(e) {
        var t = NaN
        T()
        if (_(h, v)) {
          var n = d.replace(/\?/, e)
          try {
            var a = JSON.parse(localStorage.getItem(n)) || {}
            var s =
              new Date().getTime() - parseInt(a.timestamp, 10) >=
                r.getLastMediaSettingsCachingInfo().ttl || false
            var o = parseFloat(a.bitrate)
            if (!isNaN(o) && !s) {
              t = o
              i.debug('Last saved bitrate for ' + e + ' was ' + o)
            } else if (s) {
              localStorage.removeItem(n)
            }
          } catch (e) {
            return null
          }
        }
        return t
      }
      function S(e, t) {
        if (_(h, g)) {
          var r = c.replace(/\?/, e)
          try {
            localStorage.setItem(r, JSON.stringify({ settings: t, timestamp: y() }))
          } catch (e) {
            i.error(e.message)
          }
        }
      }
      function w(e, t) {
        if (_(h, v) && t) {
          var r = d.replace(/\?/, e)
          try {
            localStorage.setItem(r, JSON.stringify({ bitrate: t.toFixed(3), timestamp: y() }))
          } catch (e) {
            i.error(e.message)
          }
        }
      }
      n = {
        getSavedBitrateSettings: b,
        setSavedBitrateSettings: w,
        getSavedMediaSettings: E,
        setSavedMediaSettings: S,
      }
      s()
      return n
    }
    m.__dashjs_factory_name = 'DOMStorage'
    var y = a['default'].getSingletonFactory(m)
    t['default'] = y
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    function s(e) {
      e = e || {}
      var t = undefined
      var r = new DataView(e.data)
      var n = 0
      function i() {
        return n
      }
      function a(e) {
        n = e
      }
      function s(e, t) {
        var i = true
        var a = 0
        var s = undefined,
          o = undefined
        if (t === undefined) {
          t = false
        }
        if (e.tag > 16777215) {
          if (r.getUint32(n) !== e.tag) {
            i = false
          }
          a = 4
        } else if (e.tag > 65535) {
          s = r.getUint16(n)
          o = r.getUint8(n + 2)
          if (s * 256 + o !== e.tag) {
            i = false
          }
          a = 3
        } else if (e.tag > 255) {
          if (r.getUint16(n) !== e.tag) {
            i = false
          }
          a = 2
        } else {
          if (r.getUint8(n) !== e.tag) {
            i = false
          }
          a = 1
        }
        if (!i && e.required && !t) {
          throw new Error('required tag not found')
        }
        if (i) {
          n += a
        }
        return i
      }
      function o(e, t) {
        var r = s(e, t)
        if (r) {
          f()
        }
        return r
      }
      function u(e) {
        var r = undefined
        s(e)
        r = f()
        return t[e.parse](r)
      }
      function l(e, t) {
        var r = s(e, t)
        var i = undefined
        if (r) {
          i = f()
          n += i
        }
        return r
      }
      function f(e) {
        var t = 1
        var i = 128
        var a = 8
        var s = -1
        var o = 0
        var u = r.getUint8(n)
        var l = 0
        for (l = 0; l < a; l += 1) {
          if ((u & i) === i) {
            o = e === undefined ? u & ~i : u
            s = l
            break
          }
          i >>= 1
        }
        for (l = 0; l < s; l += 1, t += 1) {
          o = (o << 8) | (255 & r.getUint8(n + t))
        }
        n += t
        return o
      }
      function d(e) {
        var t = undefined
        switch (e) {
          case 4:
            t = r.getFloat32(n)
            n += 4
            break
          case 8:
            t = r.getFloat64(n)
            n += 8
            break
        }
        return t
      }
      function c(e) {
        var t = 0
        for (var i = 0; i < e; i += 1) {
          t <<= 8
          t |= r.getUint8(n + i) & 255
        }
        n += e
        return t
      }
      function h() {
        return n < r.byteLength
      }
      t = {
        getPos: i,
        setPos: a,
        consumeTag: s,
        consumeTagAndSize: o,
        parseTag: u,
        skipOverElement: l,
        getMatroskaCodedNum: f,
        getMatroskaFloat: d,
        getMatroskaUint: c,
        moreData: h,
      }
      return t
    }
    s.__dashjs_factory_name = 'EBMLParser'
    t['default'] = a['default'].getClassFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(2)
    var a = n(i)
    var s = r(4)
    var o = n(s)
    var u = r(0)
    var l = n(u)
    function f() {
      var e = undefined
      var t = this.context
      var r = (0, a['default'])(t).getInstance()
      function n(e) {
        r.trigger(o['default'].ERROR, { error: 'capability', event: e })
      }
      function i(e, t, n) {
        r.trigger(o['default'].ERROR, { error: 'download', event: { id: e, url: t, request: n } })
      }
      function s(e, t, n, i) {
        r.trigger(o['default'].ERROR, {
          error: 'manifestError',
          event: { message: e, id: t, manifest: n, event: i },
        })
      }
      function u(e, t, n) {
        r.trigger(o['default'].ERROR, { error: 'cc', event: { message: e, id: t, cc: n } })
      }
      function l(e) {
        r.trigger(o['default'].ERROR, { error: 'mediasource', event: e })
      }
      function f(e) {
        r.trigger(o['default'].ERROR, { error: 'key_session', event: e })
      }
      function d(e) {
        r.trigger(o['default'].ERROR, { error: 'key_message', event: e })
      }
      function c(e) {
        r.trigger(o['default'].ERROR, { error: e })
      }
      e = {
        capabilityError: n,
        downloadError: i,
        manifestError: s,
        timedTextError: u,
        mediaSourceError: l,
        mediaKeySessionError: f,
        mediaKeyMessageError: d,
        error: c,
      }
      return e
    }
    f.__dashjs_factory_name = 'ErrorHandler'
    t['default'] = l['default'].getSingletonFactory(f)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(300)
    var a = n(i)
    var s = r(0)
    var o = n(s)
    function u() {
      var e = undefined,
        t = undefined
      function r(e) {
        if (!e || !t || !t.boxes || t.boxes.length === 0 || typeof t.fetch !== 'function')
          return null
        return o(t.fetch(e))
      }
      function n(e) {
        var r = []
        if (!e || !t || typeof t.fetchAll !== 'function') {
          return r
        }
        var n = t.fetchAll(e)
        var i = undefined
        for (var a = 0, s = n.length; a < s; a++) {
          i = o(n[a])
          if (i) {
            r.push(i)
          }
        }
        return r
      }
      function i(e) {
        t = e
      }
      function s() {
        if (!t || !t.boxes || !t.boxes.length) return null
        var e = t.boxes[t.boxes.length - 1].type
        var r = n(e)
        return r.length > 0 ? r[r.length - 1] : null
      }
      function o(e) {
        if (!e) return null
        var t = new a['default'](e)
        if (e.hasOwnProperty('_incomplete')) {
          t.isComplete = !e._incomplete
        }
        return t
      }
      e = { getBox: r, getBoxes: n, setData: i, getLastBox: s }
      return e
    }
    u.__dashjs_factory_name = 'IsoFile'
    t['default'] = o['default'].getClassFactory(u)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(3)
    var o = n(s)
    function u(e) {
      e = e || {}
      var t = undefined
      var r = e.timelineConverter
      var n = e.streamProcessor
      function i() {
        if (
          !r ||
          !r.hasOwnProperty('getExpectedLiveEdge') ||
          !n ||
          !n.hasOwnProperty('getRepresentationInfo')
        ) {
          throw new Error(o['default'].MISSING_CONFIG_ERROR)
        }
      }
      function a() {
        i()
        var e = n.getRepresentationInfo()
        var t = e.DVRWindow ? e.DVRWindow.end : 0
        var a = t
        if (e.useCalculatedLiveEdgeTime) {
          a = r.getExpectedLiveEdge()
          r.setClientTimeOffset(a - t)
        }
        return a
      }
      function s() {
        r = null
        n = null
      }
      t = { getLiveEdge: a, reset: s }
      return t
    }
    u.__dashjs_factory_name = 'LiveEdgeFinder'
    t['default'] = a['default'].getClassFactory(u)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(1)
    var o = n(s)
    var u = r(2)
    var l = n(u)
    var f = r(4)
    var d = n(f)
    var c = r(123)
    function h() {
      var e = this.context
      var t = (0, l['default'])(e).getInstance()
      var r = undefined,
        n = undefined
      var i = 0
      function a() {
        n = (0, o['default'])(e)
          .getInstance()
          .getLogger(r)
      }
      function s() {
        var e = 'cue_TTML_' + i
        i++
        return e
      }
      function u(e, r, i, a, o) {
        var u = ''
        var l = []
        var f = undefined,
          h = undefined,
          p = undefined
        var v = {}
        var g = {}
        var m = ''
        var y = ''
        var _ = {
          onOpenTag: function e(t, r, i) {
            if (r === 'image' && t === 'http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt') {
              if (!i[' imagetype'] || i[' imagetype'].value !== 'PNG') {
                n.warn('smpte-tt imagetype != PNG. Discarded')
                return
              }
              m = i['http://www.w3.org/XML/1998/namespace id'].value
            }
          },
          onCloseTag: function e() {
            if (m) {
              g[m] = y.trim()
            }
            y = ''
            m = ''
          },
          onText: function e(t) {
            if (m) {
              y = y + t
            }
          },
        }
        if (!e) {
          u = 'no ttml data to parse'
          throw new Error(u)
        }
        v.data = e
        t.trigger(d['default'].TTML_TO_PARSE, v)
        var T = (0, c.fromXML)(
          v.data,
          function(e) {
            u = e
          },
          _
        )
        t.trigger(d['default'].TTML_PARSED, { ttmlString: v.data, ttmlDoc: T })
        var E = T.getMediaTimeEvents()
        for (p = 0; p < E.length; p++) {
          var b = (0, c.generateISD)(T, E[p], function(e) {
            u = e
          })
          if (
            b.contents.some(function(e) {
              return e.contents.length
            })
          ) {
            f = E[p] + r < i ? i : E[p] + r
            h = E[p + 1] + r > a ? a : E[p + 1] + r
            if (f < h) {
              l.push({
                start: f,
                end: h,
                type: 'html',
                cueID: s(),
                isd: b,
                images: o,
                embeddedImages: g,
              })
            }
          }
        }
        if (u !== '') {
          n.error(u)
          throw new Error(u)
        }
        return l
      }
      r = { parse: u }
      a()
      return r
    }
    h.__dashjs_factory_name = 'TTMLParser'
    t['default'] = a['default'].getSingletonFactory(h)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    var s = r(1)
    var o = n(s)
    var u = 'WEBVTT'
    function l() {
      var e = this.context
      var t = undefined,
        r = undefined,
        n = undefined,
        i = undefined,
        a = undefined,
        s = undefined
      function l() {
        r = (0, o['default'])(e)
          .getInstance()
          .getLogger(t)
        n = /(?:\r\n|\r|\n)/gm
        i = /-->/
        a = /(^[\s]+|[\s]+$)/g
        s = /\s\b/g
      }
      function f(e) {
        var t = []
        var s = undefined,
          o = undefined
        if (!e) {
          return t
        }
        e = e.split(n)
        s = e.length
        o = -1
        for (var l = 0; l < s; l++) {
          var f = e[l]
          if (f.length > 0 && f !== u) {
            if (f.match(i)) {
              var h = c(f)
              var v = h.cuePoints
              var g = h.styles
              var m = p(e, l + 1)
              var y = d(v[0].replace(a, ''))
              var _ = d(v[1].replace(a, ''))
              if (!isNaN(y) && !isNaN(_) && y >= o && _ > y) {
                if (m !== '') {
                  o = y
                  t.push({ start: y, end: _, data: m, styles: g })
                } else {
                  r.error('Skipping cue due to empty/malformed cue text')
                }
              } else {
                r.error('Skipping cue due to incorrect cue timing')
              }
            }
          }
        }
        return t
      }
      function d(e) {
        var t = e.split(':')
        var r = t.length - 1
        e = parseInt(t[r - 1], 10) * 60 + parseFloat(t[r])
        if (r === 2) {
          e += parseInt(t[0], 10) * 3600
        }
        return e
      }
      function c(e) {
        var t = e.split(i)
        var r = t[1].split(s)
        r.shift()
        t[1] = r[0]
        r.shift()
        return { cuePoints: t, styles: h(r) }
      }
      function h(e) {
        var t = {}
        e.forEach(function(e) {
          if (e.split(/:/).length > 1) {
            var r = e.split(/:/)[1]
            if (r && r.search(/%/) != -1) {
              r = parseInt(r.replace(/%/, ''), 10)
            }
            if (e.match(/align/) || e.match(/A/)) {
              t.align = r
            }
            if (e.match(/line/) || e.match(/L/)) {
              t.line = r
            }
            if (e.match(/position/) || e.match(/P/)) {
              t.position = r
            }
            if (e.match(/size/) || e.match(/S/)) {
              t.size = r
            }
          }
        })
        return t
      }
      function p(e, t) {
        var r = t
        var n = ''
        var a = ''
        var s = undefined
        while (e[r] !== '' && r < e.length) {
          r++
        }
        s = r - t
        if (s > 1) {
          for (var o = 0; o < s; o++) {
            a = e[t + o]
            if (!a.match(i)) {
              n += a
              if (o !== s - 1) {
                n += '\n'
              }
            } else {
              n = ''
              break
            }
          }
        } else {
          a = e[t]
          if (!a.match(i)) n = a
        }
        return n
      }
      t = { parse: f }
      l()
      return t
    }
    l.__dashjs_factory_name = 'VTTParser'
    t['default'] = a['default'].getSingletonFactory(l)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    function s(e) {
      e = e || {}
      var t = undefined
      var r = e.blacklistController
      function n(e) {
        var t = 0
        var n = undefined
        if (
          e &&
          e.some(function(e, n) {
            t = n
            return !r.contains(e.serviceLocation)
          })
        ) {
          n = e[t]
        }
        return n
      }
      t = { select: n }
      return t
    }
    s.__dashjs_factory_name = 'BasicSelector'
    t['default'] = a['default'].getClassFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    var i = r(0)
    var a = n(i)
    function s(e) {
      e = e || {}
      var t = undefined
      var r = e.blacklistController
      function n(e) {
        var t = []
        var n = function e(r) {
          if (t.length) {
            if (r.dvb_priority && t.indexOf(r.dvb_priority) !== -1) {
              return false
            }
          }
          return true
        }
        var i = function e(n) {
          if (r.contains(n.serviceLocation)) {
            if (n.dvb_priority) {
              t.push(n.dvb_priority)
            }
            return false
          }
          return true
        }
        return e.filter(i).filter(n)
      }
      function i(e) {
        var t = function e(t, r) {
          var n = t.dvb_priority - r.dvb_priority
          return isNaN(n) ? 0 : n
        }
        var r = function e(t, r, n) {
          return !r || (n[0].dvb_priority && t.dvb_priority && n[0].dvb_priority === t.dvb_priority)
        }
        var n = 0
        var i = []
        var a = 0
        var s = undefined,
          o = undefined
        o = e.sort(t).filter(r)
        if (o.length) {
          if (o.length > 1) {
            o.forEach(function(e) {
              n += e.dvb_weight
              i.push(n)
            })
            s = Math.floor(Math.random() * (n - 1))
            i.every(function(e, t) {
              a = t
              if (s < e) {
                return false
              }
              return true
            })
          }
          return o[a]
        }
      }
      function a(e) {
        return e && i(n(e))
      }
      t = { select: a }
      return t
    }
    s.__dashjs_factory_name = 'DVBSelector'
    t['default'] = a['default'].getClassFactory(s)
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.streamId = null
      this.mediaInfo = null
      this.segmentType = null
      this.quality = NaN
      this.index = NaN
      this.bytes = null
      this.start = NaN
      this.end = NaN
      this.duration = NaN
      this.representationId = null
      this.endFragment = null
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = function e(t, r, n) {
      var i = true
      e: while (i) {
        var a = t,
          s = r,
          o = n
        i = false
        if (a === null) a = Function.prototype
        var u = Object.getOwnPropertyDescriptor(a, s)
        if (u === undefined) {
          var l = Object.getPrototypeOf(a)
          if (l === null) {
            return undefined
          } else {
            t = l
            r = s
            n = o
            i = true
            u = l = undefined
            continue e
          }
        } else if ('value' in u) {
          return u.value
        } else {
          var f = u.get
          if (f === undefined) {
            return undefined
          }
          return f.call(o)
        }
      }
    }
    function i(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function a(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    function s(e, t) {
      if (typeof t !== 'function' && t !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
      }
      e.prototype = Object.create(t && t.prototype, {
        constructor: { value: e, enumerable: false, writable: true, configurable: true },
      })
      if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t)
    }
    var o = r(21)
    var u = i(o)
    var l = (function(e) {
      s(t, e)
      function t(e) {
        a(this, t)
        n(Object.getPrototypeOf(t.prototype), 'constructor', this).call(this)
        this.url = e || null
        this.checkForExistenceOnly = true
      }
      return t
    })(u['default'])
    t['default'] = l
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = (function() {
      function e(t) {
        i(this, e)
        this.offset = t._offset
        this.type = t.type
        this.size = t.size
        this.boxes = []
        if (t.boxes) {
          for (var r = 0; r < t.boxes.length; r++) {
            this.boxes.push(new e(t.boxes[r]))
          }
        }
        this.isComplete = true
        switch (t.type) {
          case 'sidx':
            this.timescale = t.timescale
            this.earliest_presentation_time = t.earliest_presentation_time
            this.first_offset = t.first_offset
            this.references = t.references
            if (t.references) {
              this.references = []
              for (var r = 0; r < t.references.length; r++) {
                var n = {
                  reference_type: t.references[r].reference_type,
                  referenced_size: t.references[r].referenced_size,
                  subsegment_duration: t.references[r].subsegment_duration,
                }
                this.references.push(n)
              }
            }
            break
          case 'emsg':
            this.id = t.id
            this.value = t.value
            this.timescale = t.timescale
            this.scheme_id_uri = t.scheme_id_uri
            this.presentation_time_delta =
              t.version === 1 ? t.presentation_time : t.presentation_time_delta
            this.event_duration = t.event_duration
            this.message_data = t.message_data
            break
          case 'mdhd':
            this.timescale = t.timescale
            break
          case 'mfhd':
            this.sequence_number = t.sequence_number
            break
          case 'subs':
            this.entry_count = t.entry_count
            this.entries = t.entries
            break
          case 'tfhd':
            this.base_data_offset = t.base_data_offset
            this.sample_description_index = t.sample_description_index
            this.default_sample_duration = t.default_sample_duration
            this.default_sample_size = t.default_sample_size
            this.default_sample_flags = t.default_sample_flags
            this.flags = t.flags
            break
          case 'tfdt':
            this.version = t.version
            this.baseMediaDecodeTime = t.baseMediaDecodeTime
            this.flags = t.flags
            break
          case 'trun':
            this.sample_count = t.sample_count
            this.first_sample_flags = t.first_sample_flags
            this.data_offset = t.data_offset
            this.flags = t.flags
            this.samples = t.samples
            if (t.samples) {
              this.samples = []
              for (var r = 0, a = t.samples.length; r < a; r++) {
                var s = {
                  sample_size: t.samples[r].sample_size,
                  sample_duration: t.samples[r].sample_duration,
                  sample_composition_time_offset: t.samples[r].sample_composition_time_offset,
                }
                this.samples.push(s)
              }
            }
            break
        }
      }
      n(e, [
        {
          key: 'getChildBox',
          value: function e(t) {
            for (var r = 0; r < this.boxes.length; r++) {
              if (this.boxes[r].type === t) {
                return this.boxes[r]
              }
            }
          },
        },
        {
          key: 'getChildBoxes',
          value: function e(t) {
            var r = []
            for (var n = 0; n < this.boxes.length; n++) {
              if (this.boxes[n].type === t) {
                r.push(this.boxes[n])
              }
            }
            return r
          },
        },
      ])
      return e
    })()
    t['default'] = a
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e(t, r, i) {
      n(this, e)
      this.lastCompletedOffset = t
      this.found = r
      this.size = i
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.DVRWindowSize = NaN
      this.loadedTime = null
      this.availableFrom = null
      this.minBufferTime = NaN
      this.duration = NaN
      this.isDynamic = false
      this.maxFragmentDuration = null
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    var n = (function() {
      function e(e, t) {
        for (var r = 0; r < t.length; r++) {
          var n = t[r]
          n.enumerable = n.enumerable || false
          n.configurable = true
          if ('value' in n) n.writable = true
          Object.defineProperty(e, n.key, n)
        }
      }
      return function(t, r, n) {
        if (r) e(t.prototype, r)
        if (n) e(t, n)
        return t
      }
    })()
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = (function() {
      function e() {
        i(this, e)
        this.id = null
        this.index = null
        this.type = null
        this.streamInfo = null
        this.representationCount = 0
        this.lang = null
        this.viewpoint = null
        this.accessibility = null
        this.audioChannelConfiguration = null
        this.roles = null
        this.codec = null
        this.mimeType = null
        this.contentProtection = null
        this.isText = false
        this.KID = null
        this.bitrateList = null
      }
      n(e, [
        {
          key: 'isMediaInfoEqual',
          value: function e(t) {
            if (!t) {
              return false
            }
            var r = this.id === t.id
            var n = this.viewpoint === t.viewpoint
            var i = this.lang === t.lang
            var a = this.roles.toString() === t.roles.toString()
            var s = this.accessibility.toString() === t.accessibility.toString()
            var o =
              this.audioChannelConfiguration.toString() === t.audioChannelConfiguration.toString()
            return r && n && i && a && s && o
          },
        },
      ])
      return e
    })()
    t['default'] = a
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.TcpList = []
      this.HttpList = []
      this.RepSwitchList = []
      this.BufferLevel = []
      this.BufferState = []
      this.PlayList = []
      this.DroppedFrames = []
      this.SchedulingInfo = []
      this.DVRInfo = []
      this.ManifestUpdate = []
      this.RequestsQueue = null
      this.DVBErrors = []
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.id = null
      this.quality = null
      this.DVRWindow = null
      this.fragmentDuration = null
      this.mediaInfo = null
      this.MSETimeOffset = null
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.id = null
      this.index = null
      this.start = NaN
      this.duration = NaN
      this.manifestInfo = null
      this.isLast = true
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.captionData = null
      this.label = null
      this.lang = null
      this.defaultTrack = false
      this.kind = null
      this.isFragmented = false
      this.isEmbedded = false
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.url = null
      this.width = null
      this.height = null
      this.x = null
      this.y = null
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.bitrate = 0
      this.width = 0
      this.height = 0
      this.tilesHor = 0
      this.tilesVert = 0
      this.widthPerTile = 0
      this.heightPerTile = 0
      this.startNumber = 0
      this.segmentDuration = 0
      this.timescale = 0
      this.templateUrl = ''
      this.id = ''
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.t = null
      this.xywh = null
      this.track = null
      this.id = null
      this.s = null
      this.r = null
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.t = null
      this.level = null
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e) {
      return e && e.__esModule ? e : { default: e }
    }
    function i(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var a = r(20)
    var s = n(a)
    var o = function e() {
      i(this, e)
      this.target = null
      this.state = s['default'].BUFFER_EMPTY
    }
    t['default'] = o
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.time = null
      this.range = null
      this.manifestInfo = null
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.time = null
      this.droppedFrames = null
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.mediaType = null
      this.type = null
      this.requestTime = null
      this.fetchTime = null
      this.availabilityStartTime = null
      this.presentationStartTime = 0
      this.clientTimeOffset = 0
      this.currentTime = null
      this.buffered = null
      this.latency = 0
      this.streamInfo = []
      this.representationInfo = []
    }
    var a = function e() {
      n(this, e)
      this.id = null
      this.index = null
      this.start = null
      this.duration = null
    }
    var s = function e() {
      n(this, e)
      this.id = null
      this.index = null
      this.mediaType = null
      this.streamIndex = null
      this.presentationTimeOffset = null
      this.startNumber = null
      this.fragmentInfoType = null
    }
    t.ManifestUpdate = i
    t.ManifestUpdateStreamInfo = a
    t.ManifestUpdateRepresentationInfo = s
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.t = null
      this.mt = null
      this.to = null
      this.lto = null
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.loadingRequests = []
      this.executedRequests = []
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    Object.defineProperty(t, '__esModule', { value: true })
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = function e() {
      n(this, e)
      this.mediaType = null
      this.t = null
      this.type = null
      this.startTime = null
      this.availabilityStartTime = null
      this.duration = null
      this.quality = null
      this.range = null
      this.state = null
    }
    t['default'] = i
    e.exports = t['default']
  },
  function(e, t, r) {
    'use strict'
    var n = Array.isArray
    var i = Object.keys
    var a = Object.prototype.hasOwnProperty
    e.exports = function e(t, r) {
      if (t === r) return true
      if (t && r && typeof t == 'object' && typeof r == 'object') {
        var s = n(t),
          o = n(r),
          u,
          l,
          f
        if (s && o) {
          l = t.length
          if (l != r.length) return false
          for (u = l; u-- !== 0; ) if (!e(t[u], r[u])) return false
          return true
        }
        if (s != o) return false
        var d = t instanceof Date,
          c = r instanceof Date
        if (d != c) return false
        if (d && c) return t.getTime() == r.getTime()
        var h = t instanceof RegExp,
          p = r instanceof RegExp
        if (h != p) return false
        if (h && p) return t.toString() == r.toString()
        var v = i(t)
        l = v.length
        if (l !== i(r).length) return false
        for (u = l; u-- !== 0; ) if (!a.call(r, v[u])) return false
        for (u = l; u-- !== 0; ) {
          f = v[u]
          if (!e(t[f], r[f])) return false
        }
        return true
      }
      return t !== t && r !== r
    }
  },
  function(e, t) {
    t.read = function(e, t, r, n, i) {
      var a, s
      var o = i * 8 - n - 1
      var u = (1 << o) - 1
      var l = u >> 1
      var f = -7
      var d = r ? i - 1 : 0
      var c = r ? -1 : 1
      var h = e[t + d]
      d += c
      a = h & ((1 << -f) - 1)
      h >>= -f
      f += o
      for (; f > 0; a = a * 256 + e[t + d], d += c, f -= 8) {}
      s = a & ((1 << -f) - 1)
      a >>= -f
      f += n
      for (; f > 0; s = s * 256 + e[t + d], d += c, f -= 8) {}
      if (a === 0) {
        a = 1 - l
      } else if (a === u) {
        return s ? NaN : (h ? -1 : 1) * Infinity
      } else {
        s = s + Math.pow(2, n)
        a = a - l
      }
      return (h ? -1 : 1) * s * Math.pow(2, a - n)
    }
    t.write = function(e, t, r, n, i, a) {
      var s, o, u
      var l = a * 8 - i - 1
      var f = (1 << l) - 1
      var d = f >> 1
      var c = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0
      var h = n ? 0 : a - 1
      var p = n ? 1 : -1
      var v = t < 0 || (t === 0 && 1 / t < 0) ? 1 : 0
      t = Math.abs(t)
      if (isNaN(t) || t === Infinity) {
        o = isNaN(t) ? 1 : 0
        s = f
      } else {
        s = Math.floor(Math.log(t) / Math.LN2)
        if (t * (u = Math.pow(2, -s)) < 1) {
          s--
          u *= 2
        }
        if (s + d >= 1) {
          t += c / u
        } else {
          t += c * Math.pow(2, 1 - d)
        }
        if (t * u >= 2) {
          s++
          u /= 2
        }
        if (s + d >= f) {
          o = 0
          s = f
        } else if (s + d >= 1) {
          o = (t * u - 1) * Math.pow(2, i)
          s = s + d
        } else {
          o = t * Math.pow(2, d - 1) * Math.pow(2, i)
          s = 0
        }
      }
      for (; i >= 8; e[r + h] = o & 255, h += p, o /= 256, i -= 8) {}
      s = (s << i) | o
      l += i
      for (; l > 0; e[r + h] = s & 255, h += p, s /= 256, l -= 8) {}
      e[r + h - p] |= v * 128
    }
  },
  function(e, t, r) {
    ;(function(e) {
      ;(function(t) {
        t.parser = function(e, t) {
          return new i(e, t)
        }
        t.SAXParser = i
        t.SAXStream = d
        t.createStream = f
        t.MAX_BUFFER_LENGTH = 64 * 1024
        var n = [
          'comment',
          'sgmlDecl',
          'textNode',
          'tagName',
          'doctype',
          'procInstName',
          'procInstBody',
          'entity',
          'attribName',
          'attribValue',
          'cdata',
          'script',
        ]
        t.EVENTS = [
          'text',
          'processinginstruction',
          'sgmldeclaration',
          'doctype',
          'comment',
          'opentagstart',
          'attribute',
          'opentag',
          'closetag',
          'opencdata',
          'cdata',
          'closecdata',
          'error',
          'end',
          'ready',
          'script',
          'opennamespace',
          'closenamespace',
        ]
        function i(e, r) {
          if (!(this instanceof i)) {
            return new i(e, r)
          }
          var n = this
          s(n)
          n.q = n.c = ''
          n.bufferCheckPosition = t.MAX_BUFFER_LENGTH
          n.opt = r || {}
          n.opt.lowercase = n.opt.lowercase || n.opt.lowercasetags
          n.looseCase = n.opt.lowercase ? 'toLowerCase' : 'toUpperCase'
          n.tags = []
          n.closed = n.closedRoot = n.sawRoot = false
          n.tag = n.error = null
          n.strict = !!e
          n.noscript = !!(e || n.opt.noscript)
          n.state = O.BEGIN
          n.strictEntities = n.opt.strictEntities
          n.ENTITIES = n.strictEntities ? Object.create(t.XML_ENTITIES) : Object.create(t.ENTITIES)
          n.attribList = []
          if (n.opt.xmlns) {
            n.ns = Object.create(E)
          }
          n.trackPosition = n.opt.position !== false
          if (n.trackPosition) {
            n.position = n.line = n.column = 0
          }
          k(n, 'onready')
        }
        if (!Object.create) {
          Object.create = function(e) {
            function t() {}
            t.prototype = e
            var r = new t()
            return r
          }
        }
        if (!Object.keys) {
          Object.keys = function(e) {
            var t = []
            for (var r in e) if (e.hasOwnProperty(r)) t.push(r)
            return t
          }
        }
        function a(e) {
          var r = Math.max(t.MAX_BUFFER_LENGTH, 10)
          var i = 0
          for (var a = 0, s = n.length; a < s; a++) {
            var o = e[n[a]].length
            if (o > r) {
              switch (n[a]) {
                case 'textNode':
                  N(e)
                  break
                case 'cdata':
                  P(e, 'oncdata', e.cdata)
                  e.cdata = ''
                  break
                case 'script':
                  P(e, 'onscript', e.script)
                  e.script = ''
                  break
                default:
                  x(e, 'Max buffer length exceeded: ' + n[a])
              }
            }
            i = Math.max(i, o)
          }
          var u = t.MAX_BUFFER_LENGTH - i
          e.bufferCheckPosition = u + e.position
        }
        function s(e) {
          for (var t = 0, r = n.length; t < r; t++) {
            e[n[t]] = ''
          }
        }
        function o(e) {
          N(e)
          if (e.cdata !== '') {
            P(e, 'oncdata', e.cdata)
            e.cdata = ''
          }
          if (e.script !== '') {
            P(e, 'onscript', e.script)
            e.script = ''
          }
        }
        i.prototype = {
          end: function() {
            F(this)
          },
          write: W,
          resume: function() {
            this.error = null
            return this
          },
          close: function() {
            return this.write(null)
          },
          flush: function() {
            o(this)
          },
        }
        var u
        try {
          u = r(335).Stream
        } catch (e) {
          u = function() {}
        }
        var l = t.EVENTS.filter(function(e) {
          return e !== 'error' && e !== 'end'
        })
        function f(e, t) {
          return new d(e, t)
        }
        function d(e, t) {
          if (!(this instanceof d)) {
            return new d(e, t)
          }
          u.apply(this)
          this._parser = new i(e, t)
          this.writable = true
          this.readable = true
          var r = this
          this._parser.onend = function() {
            r.emit('end')
          }
          this._parser.onerror = function(e) {
            r.emit('error', e)
            r._parser.error = null
          }
          this._decoder = null
          l.forEach(function(e) {
            Object.defineProperty(r, 'on' + e, {
              get: function() {
                return r._parser['on' + e]
              },
              set: function(t) {
                if (!t) {
                  r.removeAllListeners(e)
                  r._parser['on' + e] = t
                  return t
                }
                r.on(e, t)
              },
              enumerable: true,
              configurable: false,
            })
          })
        }
        d.prototype = Object.create(u.prototype, { constructor: { value: d } })
        d.prototype.write = function(t) {
          if (typeof e === 'function' && typeof e.isBuffer === 'function' && e.isBuffer(t)) {
            if (!this._decoder) {
              var n = r(78).StringDecoder
              this._decoder = new n('utf8')
            }
            t = this._decoder.write(t)
          }
          this._parser.write(t.toString())
          this.emit('data', t)
          return true
        }
        d.prototype.end = function(e) {
          if (e && e.length) {
            this.write(e)
          }
          this._parser.end()
          return true
        }
        d.prototype.on = function(e, t) {
          var r = this
          if (!r._parser['on' + e] && l.indexOf(e) !== -1) {
            r._parser['on' + e] = function() {
              var t = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)
              t.splice(0, 0, e)
              r.emit.apply(r, t)
            }
          }
          return u.prototype.on.call(r, e, t)
        }
        var c = '\r\n\t '
        var h = '0124356789'
        var p = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
        var v = '\'"'
        var g = c + '>'
        var m = '[CDATA['
        var y = 'DOCTYPE'
        var _ = 'http://www.w3.org/XML/1998/namespace'
        var T = 'http://www.w3.org/2000/xmlns/'
        var E = { xml: _, xmlns: T }
        c = I(c)
        h = I(h)
        p = I(p)
        var b = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/
        var S = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040\.\d-]/
        var w = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/
        var A = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040\.\d-]/
        v = I(v)
        g = I(g)
        function I(e) {
          return e.split('').reduce(function(e, t) {
            e[t] = true
            return e
          }, {})
        }
        function C(e) {
          return Object.prototype.toString.call(e) === '[object RegExp]'
        }
        function R(e, t) {
          return C(e) ? !!t.match(e) : e[t]
        }
        function D(e, t) {
          return !R(e, t)
        }
        var O = 0
        t.STATE = {
          BEGIN: O++,
          BEGIN_WHITESPACE: O++,
          TEXT: O++,
          TEXT_ENTITY: O++,
          OPEN_WAKA: O++,
          SGML_DECL: O++,
          SGML_DECL_QUOTED: O++,
          DOCTYPE: O++,
          DOCTYPE_QUOTED: O++,
          DOCTYPE_DTD: O++,
          DOCTYPE_DTD_QUOTED: O++,
          COMMENT_STARTING: O++,
          COMMENT: O++,
          COMMENT_ENDING: O++,
          COMMENT_ENDED: O++,
          CDATA: O++,
          CDATA_ENDING: O++,
          CDATA_ENDING_2: O++,
          PROC_INST: O++,
          PROC_INST_BODY: O++,
          PROC_INST_ENDING: O++,
          OPEN_TAG: O++,
          OPEN_TAG_SLASH: O++,
          ATTRIB: O++,
          ATTRIB_NAME: O++,
          ATTRIB_NAME_SAW_WHITE: O++,
          ATTRIB_VALUE: O++,
          ATTRIB_VALUE_QUOTED: O++,
          ATTRIB_VALUE_CLOSED: O++,
          ATTRIB_VALUE_UNQUOTED: O++,
          ATTRIB_VALUE_ENTITY_Q: O++,
          ATTRIB_VALUE_ENTITY_U: O++,
          CLOSE_TAG: O++,
          CLOSE_TAG_SAW_WHITE: O++,
          SCRIPT: O++,
          SCRIPT_ENDING: O++,
        }
        t.XML_ENTITIES = { amp: '&', gt: '>', lt: '<', quot: '"', apos: "'" }
        t.ENTITIES = {
          amp: '&',
          gt: '>',
          lt: '<',
          quot: '"',
          apos: "'",
          AElig: 198,
          Aacute: 193,
          Acirc: 194,
          Agrave: 192,
          Aring: 197,
          Atilde: 195,
          Auml: 196,
          Ccedil: 199,
          ETH: 208,
          Eacute: 201,
          Ecirc: 202,
          Egrave: 200,
          Euml: 203,
          Iacute: 205,
          Icirc: 206,
          Igrave: 204,
          Iuml: 207,
          Ntilde: 209,
          Oacute: 211,
          Ocirc: 212,
          Ograve: 210,
          Oslash: 216,
          Otilde: 213,
          Ouml: 214,
          THORN: 222,
          Uacute: 218,
          Ucirc: 219,
          Ugrave: 217,
          Uuml: 220,
          Yacute: 221,
          aacute: 225,
          acirc: 226,
          aelig: 230,
          agrave: 224,
          aring: 229,
          atilde: 227,
          auml: 228,
          ccedil: 231,
          eacute: 233,
          ecirc: 234,
          egrave: 232,
          eth: 240,
          euml: 235,
          iacute: 237,
          icirc: 238,
          igrave: 236,
          iuml: 239,
          ntilde: 241,
          oacute: 243,
          ocirc: 244,
          ograve: 242,
          oslash: 248,
          otilde: 245,
          ouml: 246,
          szlig: 223,
          thorn: 254,
          uacute: 250,
          ucirc: 251,
          ugrave: 249,
          uuml: 252,
          yacute: 253,
          yuml: 255,
          copy: 169,
          reg: 174,
          nbsp: 160,
          iexcl: 161,
          cent: 162,
          pound: 163,
          curren: 164,
          yen: 165,
          brvbar: 166,
          sect: 167,
          uml: 168,
          ordf: 170,
          laquo: 171,
          not: 172,
          shy: 173,
          macr: 175,
          deg: 176,
          plusmn: 177,
          sup1: 185,
          sup2: 178,
          sup3: 179,
          acute: 180,
          micro: 181,
          para: 182,
          middot: 183,
          cedil: 184,
          ordm: 186,
          raquo: 187,
          frac14: 188,
          frac12: 189,
          frac34: 190,
          iquest: 191,
          times: 215,
          divide: 247,
          OElig: 338,
          oelig: 339,
          Scaron: 352,
          scaron: 353,
          Yuml: 376,
          fnof: 402,
          circ: 710,
          tilde: 732,
          Alpha: 913,
          Beta: 914,
          Gamma: 915,
          Delta: 916,
          Epsilon: 917,
          Zeta: 918,
          Eta: 919,
          Theta: 920,
          Iota: 921,
          Kappa: 922,
          Lambda: 923,
          Mu: 924,
          Nu: 925,
          Xi: 926,
          Omicron: 927,
          Pi: 928,
          Rho: 929,
          Sigma: 931,
          Tau: 932,
          Upsilon: 933,
          Phi: 934,
          Chi: 935,
          Psi: 936,
          Omega: 937,
          alpha: 945,
          beta: 946,
          gamma: 947,
          delta: 948,
          epsilon: 949,
          zeta: 950,
          eta: 951,
          theta: 952,
          iota: 953,
          kappa: 954,
          lambda: 955,
          mu: 956,
          nu: 957,
          xi: 958,
          omicron: 959,
          pi: 960,
          rho: 961,
          sigmaf: 962,
          sigma: 963,
          tau: 964,
          upsilon: 965,
          phi: 966,
          chi: 967,
          psi: 968,
          omega: 969,
          thetasym: 977,
          upsih: 978,
          piv: 982,
          ensp: 8194,
          emsp: 8195,
          thinsp: 8201,
          zwnj: 8204,
          zwj: 8205,
          lrm: 8206,
          rlm: 8207,
          ndash: 8211,
          mdash: 8212,
          lsquo: 8216,
          rsquo: 8217,
          sbquo: 8218,
          ldquo: 8220,
          rdquo: 8221,
          bdquo: 8222,
          dagger: 8224,
          Dagger: 8225,
          bull: 8226,
          hellip: 8230,
          permil: 8240,
          prime: 8242,
          Prime: 8243,
          lsaquo: 8249,
          rsaquo: 8250,
          oline: 8254,
          frasl: 8260,
          euro: 8364,
          image: 8465,
          weierp: 8472,
          real: 8476,
          trade: 8482,
          alefsym: 8501,
          larr: 8592,
          uarr: 8593,
          rarr: 8594,
          darr: 8595,
          harr: 8596,
          crarr: 8629,
          lArr: 8656,
          uArr: 8657,
          rArr: 8658,
          dArr: 8659,
          hArr: 8660,
          forall: 8704,
          part: 8706,
          exist: 8707,
          empty: 8709,
          nabla: 8711,
          isin: 8712,
          notin: 8713,
          ni: 8715,
          prod: 8719,
          sum: 8721,
          minus: 8722,
          lowast: 8727,
          radic: 8730,
          prop: 8733,
          infin: 8734,
          ang: 8736,
          and: 8743,
          or: 8744,
          cap: 8745,
          cup: 8746,
          int: 8747,
          there4: 8756,
          sim: 8764,
          cong: 8773,
          asymp: 8776,
          ne: 8800,
          equiv: 8801,
          le: 8804,
          ge: 8805,
          sub: 8834,
          sup: 8835,
          nsub: 8836,
          sube: 8838,
          supe: 8839,
          oplus: 8853,
          otimes: 8855,
          perp: 8869,
          sdot: 8901,
          lceil: 8968,
          rceil: 8969,
          lfloor: 8970,
          rfloor: 8971,
          lang: 9001,
          rang: 9002,
          loz: 9674,
          spades: 9824,
          clubs: 9827,
          hearts: 9829,
          diams: 9830,
        }
        Object.keys(t.ENTITIES).forEach(function(e) {
          var r = t.ENTITIES[e]
          var n = typeof r === 'number' ? String.fromCharCode(r) : r
          t.ENTITIES[e] = n
        })
        for (var M in t.STATE) {
          t.STATE[t.STATE[M]] = M
        }
        O = t.STATE
        function k(e, t, r) {
          e[t] && e[t](r)
        }
        function P(e, t, r) {
          if (e.textNode) N(e)
          k(e, t, r)
        }
        function N(e) {
          e.textNode = L(e.opt, e.textNode)
          if (e.textNode) k(e, 'ontext', e.textNode)
          e.textNode = ''
        }
        function L(e, t) {
          if (e.trim) t = t.trim()
          if (e.normalize) t = t.replace(/\s+/g, ' ')
          return t
        }
        function x(e, t) {
          N(e)
          if (e.trackPosition) {
            t += '\nLine: ' + e.line + '\nColumn: ' + e.column + '\nChar: ' + e.c
          }
          t = new Error(t)
          e.error = t
          k(e, 'onerror', t)
          return e
        }
        function F(e) {
          if (e.sawRoot && !e.closedRoot) U(e, 'Unclosed root tag')
          if (e.state !== O.BEGIN && e.state !== O.BEGIN_WHITESPACE && e.state !== O.TEXT) {
            x(e, 'Unexpected end')
          }
          N(e)
          e.c = ''
          e.closed = true
          k(e, 'onend')
          i.call(e, e.strict, e.opt)
          return e
        }
        function U(e, t) {
          if (typeof e !== 'object' || !(e instanceof i)) {
            throw new Error('bad call to strictFail')
          }
          if (e.strict) {
            x(e, t)
          }
        }
        function B(e) {
          if (!e.strict) e.tagName = e.tagName[e.looseCase]()
          var t = e.tags[e.tags.length - 1] || e
          var r = (e.tag = { name: e.tagName, attributes: {} })
          if (e.opt.xmlns) {
            r.ns = t.ns
          }
          e.attribList.length = 0
          P(e, 'onopentagstart', r)
        }
        function j(e, t) {
          var r = e.indexOf(':')
          var n = r < 0 ? ['', e] : e.split(':')
          var i = n[0]
          var a = n[1]
          if (t && e === 'xmlns') {
            i = 'xmlns'
            a = ''
          }
          return { prefix: i, local: a }
        }
        function G(e) {
          if (!e.strict) {
            e.attribName = e.attribName[e.looseCase]()
          }
          if (
            e.attribList.indexOf(e.attribName) !== -1 ||
            e.tag.attributes.hasOwnProperty(e.attribName)
          ) {
            e.attribName = e.attribValue = ''
            return
          }
          if (e.opt.xmlns) {
            var t = j(e.attribName, true)
            var r = t.prefix
            var n = t.local
            if (r === 'xmlns') {
              if (n === 'xml' && e.attribValue !== _) {
                U(e, 'xml: prefix must be bound to ' + _ + '\n' + 'Actual: ' + e.attribValue)
              } else if (n === 'xmlns' && e.attribValue !== T) {
                U(e, 'xmlns: prefix must be bound to ' + T + '\n' + 'Actual: ' + e.attribValue)
              } else {
                var i = e.tag
                var a = e.tags[e.tags.length - 1] || e
                if (i.ns === a.ns) {
                  i.ns = Object.create(a.ns)
                }
                i.ns[n] = e.attribValue
              }
            }
            e.attribList.push([e.attribName, e.attribValue])
          } else {
            e.tag.attributes[e.attribName] = e.attribValue
            P(e, 'onattribute', { name: e.attribName, value: e.attribValue })
          }
          e.attribName = e.attribValue = ''
        }
        function q(e, t) {
          if (e.opt.xmlns) {
            var r = e.tag
            var n = j(e.tagName)
            r.prefix = n.prefix
            r.local = n.local
            r.uri = r.ns[n.prefix] || ''
            if (r.prefix && !r.uri) {
              U(e, 'Unbound namespace prefix: ' + JSON.stringify(e.tagName))
              r.uri = n.prefix
            }
            var i = e.tags[e.tags.length - 1] || e
            if (r.ns && i.ns !== r.ns) {
              Object.keys(r.ns).forEach(function(t) {
                P(e, 'onopennamespace', { prefix: t, uri: r.ns[t] })
              })
            }
            for (var a = 0, s = e.attribList.length; a < s; a++) {
              var o = e.attribList[a]
              var u = o[0]
              var l = o[1]
              var f = j(u, true)
              var d = f.prefix
              var c = f.local
              var h = d === '' ? '' : r.ns[d] || ''
              var p = { name: u, value: l, prefix: d, local: c, uri: h }
              if (d && d !== 'xmlns' && !h) {
                U(e, 'Unbound namespace prefix: ' + JSON.stringify(d))
                p.uri = d
              }
              e.tag.attributes[u] = p
              P(e, 'onattribute', p)
            }
            e.attribList.length = 0
          }
          e.tag.isSelfClosing = !!t
          e.sawRoot = true
          e.tags.push(e.tag)
          P(e, 'onopentag', e.tag)
          if (!t) {
            if (!e.noscript && e.tagName.toLowerCase() === 'script') {
              e.state = O.SCRIPT
            } else {
              e.state = O.TEXT
            }
            e.tag = null
            e.tagName = ''
          }
          e.attribName = e.attribValue = ''
          e.attribList.length = 0
        }
        function H(e) {
          if (!e.tagName) {
            U(e, 'Weird empty close tag.')
            e.textNode += '</>'
            e.state = O.TEXT
            return
          }
          if (e.script) {
            if (e.tagName !== 'script') {
              e.script += '</' + e.tagName + '>'
              e.tagName = ''
              e.state = O.SCRIPT
              return
            }
            P(e, 'onscript', e.script)
            e.script = ''
          }
          var t = e.tags.length
          var r = e.tagName
          if (!e.strict) {
            r = r[e.looseCase]()
          }
          var n = r
          while (t--) {
            var i = e.tags[t]
            if (i.name !== n) {
              U(e, 'Unexpected close tag')
            } else {
              break
            }
          }
          if (t < 0) {
            U(e, 'Unmatched closing tag: ' + e.tagName)
            e.textNode += '</' + e.tagName + '>'
            e.state = O.TEXT
            return
          }
          e.tagName = r
          var a = e.tags.length
          while (a-- > t) {
            var s = (e.tag = e.tags.pop())
            e.tagName = e.tag.name
            P(e, 'onclosetag', e.tagName)
            var o = {}
            for (var u in s.ns) {
              o[u] = s.ns[u]
            }
            var l = e.tags[e.tags.length - 1] || e
            if (e.opt.xmlns && s.ns !== l.ns) {
              Object.keys(s.ns).forEach(function(t) {
                var r = s.ns[t]
                P(e, 'onclosenamespace', { prefix: t, uri: r })
              })
            }
          }
          if (t === 0) e.closedRoot = true
          e.tagName = e.attribValue = e.attribName = ''
          e.attribList.length = 0
          e.state = O.TEXT
        }
        function V(e) {
          var t = e.entity
          var r = t.toLowerCase()
          var n
          var i = ''
          if (e.ENTITIES[t]) {
            return e.ENTITIES[t]
          }
          if (e.ENTITIES[r]) {
            return e.ENTITIES[r]
          }
          t = r
          if (t.charAt(0) === '#') {
            if (t.charAt(1) === 'x') {
              t = t.slice(2)
              n = parseInt(t, 16)
              i = n.toString(16)
            } else {
              t = t.slice(1)
              n = parseInt(t, 10)
              i = n.toString(10)
            }
          }
          t = t.replace(/^0+/, '')
          if (i.toLowerCase() !== t) {
            U(e, 'Invalid character entity')
            return '&' + e.entity + ';'
          }
          return String.fromCodePoint(n)
        }
        function K(e, t) {
          if (t === '<') {
            e.state = O.OPEN_WAKA
            e.startTagPosition = e.position
          } else if (D(c, t)) {
            U(e, 'Non-whitespace before first tag.')
            e.textNode = t
            e.state = O.TEXT
          }
        }
        function Y(e, t) {
          var r = ''
          if (t < e.length) {
            r = e.charAt(t)
          }
          return r
        }
        function W(e) {
          var t = this
          if (this.error) {
            throw this.error
          }
          if (t.closed) {
            return x(t, 'Cannot write after close. Assign an onready handler.')
          }
          if (e === null) {
            return F(t)
          }
          if (typeof e === 'object') {
            e = e.toString()
          }
          var r = 0
          var n = ''
          while (true) {
            n = Y(e, r++)
            t.c = n
            if (!n) {
              break
            }
            if (t.trackPosition) {
              t.position++
              if (n === '\n') {
                t.line++
                t.column = 0
              } else {
                t.column++
              }
            }
            switch (t.state) {
              case O.BEGIN:
                t.state = O.BEGIN_WHITESPACE
                if (n === '\ufeff') {
                  continue
                }
                K(t, n)
                continue
              case O.BEGIN_WHITESPACE:
                K(t, n)
                continue
              case O.TEXT:
                if (t.sawRoot && !t.closedRoot) {
                  var i = r - 1
                  while (n && n !== '<' && n !== '&') {
                    n = Y(e, r++)
                    if (n && t.trackPosition) {
                      t.position++
                      if (n === '\n') {
                        t.line++
                        t.column = 0
                      } else {
                        t.column++
                      }
                    }
                  }
                  t.textNode += e.substring(i, r - 1)
                }
                if (n === '<' && !(t.sawRoot && t.closedRoot && !t.strict)) {
                  t.state = O.OPEN_WAKA
                  t.startTagPosition = t.position
                } else {
                  if (D(c, n) && (!t.sawRoot || t.closedRoot)) {
                    U(t, 'Text data outside of root node.')
                  }
                  if (n === '&') {
                    t.state = O.TEXT_ENTITY
                  } else {
                    t.textNode += n
                  }
                }
                continue
              case O.SCRIPT:
                if (n === '<') {
                  t.state = O.SCRIPT_ENDING
                } else {
                  t.script += n
                }
                continue
              case O.SCRIPT_ENDING:
                if (n === '/') {
                  t.state = O.CLOSE_TAG
                } else {
                  t.script += '<' + n
                  t.state = O.SCRIPT
                }
                continue
              case O.OPEN_WAKA:
                if (n === '!') {
                  t.state = O.SGML_DECL
                  t.sgmlDecl = ''
                } else if (R(c, n)) {
                } else if (R(b, n)) {
                  t.state = O.OPEN_TAG
                  t.tagName = n
                } else if (n === '/') {
                  t.state = O.CLOSE_TAG
                  t.tagName = ''
                } else if (n === '?') {
                  t.state = O.PROC_INST
                  t.procInstName = t.procInstBody = ''
                } else {
                  U(t, 'Unencoded <')
                  if (t.startTagPosition + 1 < t.position) {
                    var s = t.position - t.startTagPosition
                    n = new Array(s).join(' ') + n
                  }
                  t.textNode += '<' + n
                  t.state = O.TEXT
                }
                continue
              case O.SGML_DECL:
                if ((t.sgmlDecl + n).toUpperCase() === m) {
                  P(t, 'onopencdata')
                  t.state = O.CDATA
                  t.sgmlDecl = ''
                  t.cdata = ''
                } else if (t.sgmlDecl + n === '--') {
                  t.state = O.COMMENT
                  t.comment = ''
                  t.sgmlDecl = ''
                } else if ((t.sgmlDecl + n).toUpperCase() === y) {
                  t.state = O.DOCTYPE
                  if (t.doctype || t.sawRoot) {
                    U(t, 'Inappropriately located doctype declaration')
                  }
                  t.doctype = ''
                  t.sgmlDecl = ''
                } else if (n === '>') {
                  P(t, 'onsgmldeclaration', t.sgmlDecl)
                  t.sgmlDecl = ''
                  t.state = O.TEXT
                } else if (R(v, n)) {
                  t.state = O.SGML_DECL_QUOTED
                  t.sgmlDecl += n
                } else {
                  t.sgmlDecl += n
                }
                continue
              case O.SGML_DECL_QUOTED:
                if (n === t.q) {
                  t.state = O.SGML_DECL
                  t.q = ''
                }
                t.sgmlDecl += n
                continue
              case O.DOCTYPE:
                if (n === '>') {
                  t.state = O.TEXT
                  P(t, 'ondoctype', t.doctype)
                  t.doctype = true
                } else {
                  t.doctype += n
                  if (n === '[') {
                    t.state = O.DOCTYPE_DTD
                  } else if (R(v, n)) {
                    t.state = O.DOCTYPE_QUOTED
                    t.q = n
                  }
                }
                continue
              case O.DOCTYPE_QUOTED:
                t.doctype += n
                if (n === t.q) {
                  t.q = ''
                  t.state = O.DOCTYPE
                }
                continue
              case O.DOCTYPE_DTD:
                t.doctype += n
                if (n === ']') {
                  t.state = O.DOCTYPE
                } else if (R(v, n)) {
                  t.state = O.DOCTYPE_DTD_QUOTED
                  t.q = n
                }
                continue
              case O.DOCTYPE_DTD_QUOTED:
                t.doctype += n
                if (n === t.q) {
                  t.state = O.DOCTYPE_DTD
                  t.q = ''
                }
                continue
              case O.COMMENT:
                if (n === '-') {
                  t.state = O.COMMENT_ENDING
                } else {
                  t.comment += n
                }
                continue
              case O.COMMENT_ENDING:
                if (n === '-') {
                  t.state = O.COMMENT_ENDED
                  t.comment = L(t.opt, t.comment)
                  if (t.comment) {
                    P(t, 'oncomment', t.comment)
                  }
                  t.comment = ''
                } else {
                  t.comment += '-' + n
                  t.state = O.COMMENT
                }
                continue
              case O.COMMENT_ENDED:
                if (n !== '>') {
                  U(t, 'Malformed comment')
                  t.comment += '--' + n
                  t.state = O.COMMENT
                } else {
                  t.state = O.TEXT
                }
                continue
              case O.CDATA:
                if (n === ']') {
                  t.state = O.CDATA_ENDING
                } else {
                  t.cdata += n
                }
                continue
              case O.CDATA_ENDING:
                if (n === ']') {
                  t.state = O.CDATA_ENDING_2
                } else {
                  t.cdata += ']' + n
                  t.state = O.CDATA
                }
                continue
              case O.CDATA_ENDING_2:
                if (n === '>') {
                  if (t.cdata) {
                    P(t, 'oncdata', t.cdata)
                  }
                  P(t, 'onclosecdata')
                  t.cdata = ''
                  t.state = O.TEXT
                } else if (n === ']') {
                  t.cdata += ']'
                } else {
                  t.cdata += ']]' + n
                  t.state = O.CDATA
                }
                continue
              case O.PROC_INST:
                if (n === '?') {
                  t.state = O.PROC_INST_ENDING
                } else if (R(c, n)) {
                  t.state = O.PROC_INST_BODY
                } else {
                  t.procInstName += n
                }
                continue
              case O.PROC_INST_BODY:
                if (!t.procInstBody && R(c, n)) {
                  continue
                } else if (n === '?') {
                  t.state = O.PROC_INST_ENDING
                } else {
                  t.procInstBody += n
                }
                continue
              case O.PROC_INST_ENDING:
                if (n === '>') {
                  P(t, 'onprocessinginstruction', { name: t.procInstName, body: t.procInstBody })
                  t.procInstName = t.procInstBody = ''
                  t.state = O.TEXT
                } else {
                  t.procInstBody += '?' + n
                  t.state = O.PROC_INST_BODY
                }
                continue
              case O.OPEN_TAG:
                if (R(S, n)) {
                  t.tagName += n
                } else {
                  B(t)
                  if (n === '>') {
                    q(t)
                  } else if (n === '/') {
                    t.state = O.OPEN_TAG_SLASH
                  } else {
                    if (D(c, n)) {
                      U(t, 'Invalid character in tag name')
                    }
                    t.state = O.ATTRIB
                  }
                }
                continue
              case O.OPEN_TAG_SLASH:
                if (n === '>') {
                  q(t, true)
                  H(t)
                } else {
                  U(t, 'Forward-slash in opening tag not followed by >')
                  t.state = O.ATTRIB
                }
                continue
              case O.ATTRIB:
                if (R(c, n)) {
                  continue
                } else if (n === '>') {
                  q(t)
                } else if (n === '/') {
                  t.state = O.OPEN_TAG_SLASH
                } else if (R(b, n)) {
                  t.attribName = n
                  t.attribValue = ''
                  t.state = O.ATTRIB_NAME
                } else {
                  U(t, 'Invalid attribute name')
                }
                continue
              case O.ATTRIB_NAME:
                if (n === '=') {
                  t.state = O.ATTRIB_VALUE
                } else if (n === '>') {
                  U(t, 'Attribute without value')
                  t.attribValue = t.attribName
                  G(t)
                  q(t)
                } else if (R(c, n)) {
                  t.state = O.ATTRIB_NAME_SAW_WHITE
                } else if (R(S, n)) {
                  t.attribName += n
                } else {
                  U(t, 'Invalid attribute name')
                }
                continue
              case O.ATTRIB_NAME_SAW_WHITE:
                if (n === '=') {
                  t.state = O.ATTRIB_VALUE
                } else if (R(c, n)) {
                  continue
                } else {
                  U(t, 'Attribute without value')
                  t.tag.attributes[t.attribName] = ''
                  t.attribValue = ''
                  P(t, 'onattribute', { name: t.attribName, value: '' })
                  t.attribName = ''
                  if (n === '>') {
                    q(t)
                  } else if (R(b, n)) {
                    t.attribName = n
                    t.state = O.ATTRIB_NAME
                  } else {
                    U(t, 'Invalid attribute name')
                    t.state = O.ATTRIB
                  }
                }
                continue
              case O.ATTRIB_VALUE:
                if (R(c, n)) {
                  continue
                } else if (R(v, n)) {
                  t.q = n
                  t.state = O.ATTRIB_VALUE_QUOTED
                } else {
                  U(t, 'Unquoted attribute value')
                  t.state = O.ATTRIB_VALUE_UNQUOTED
                  t.attribValue = n
                }
                continue
              case O.ATTRIB_VALUE_QUOTED:
                if (n !== t.q) {
                  if (n === '&') {
                    t.state = O.ATTRIB_VALUE_ENTITY_Q
                  } else {
                    t.attribValue += n
                  }
                  continue
                }
                G(t)
                t.q = ''
                t.state = O.ATTRIB_VALUE_CLOSED
                continue
              case O.ATTRIB_VALUE_CLOSED:
                if (R(c, n)) {
                  t.state = O.ATTRIB
                } else if (n === '>') {
                  q(t)
                } else if (n === '/') {
                  t.state = O.OPEN_TAG_SLASH
                } else if (R(b, n)) {
                  U(t, 'No whitespace between attributes')
                  t.attribName = n
                  t.attribValue = ''
                  t.state = O.ATTRIB_NAME
                } else {
                  U(t, 'Invalid attribute name')
                }
                continue
              case O.ATTRIB_VALUE_UNQUOTED:
                if (D(g, n)) {
                  if (n === '&') {
                    t.state = O.ATTRIB_VALUE_ENTITY_U
                  } else {
                    t.attribValue += n
                  }
                  continue
                }
                G(t)
                if (n === '>') {
                  q(t)
                } else {
                  t.state = O.ATTRIB
                }
                continue
              case O.CLOSE_TAG:
                if (!t.tagName) {
                  if (R(c, n)) {
                    continue
                  } else if (D(b, n)) {
                    if (t.script) {
                      t.script += '</' + n
                      t.state = O.SCRIPT
                    } else {
                      U(t, 'Invalid tagname in closing tag.')
                    }
                  } else {
                    t.tagName = n
                  }
                } else if (n === '>') {
                  H(t)
                } else if (R(S, n)) {
                  t.tagName += n
                } else if (t.script) {
                  t.script += '</' + t.tagName
                  t.tagName = ''
                  t.state = O.SCRIPT
                } else {
                  if (D(c, n)) {
                    U(t, 'Invalid tagname in closing tag')
                  }
                  t.state = O.CLOSE_TAG_SAW_WHITE
                }
                continue
              case O.CLOSE_TAG_SAW_WHITE:
                if (R(c, n)) {
                  continue
                }
                if (n === '>') {
                  H(t)
                } else {
                  U(t, 'Invalid characters in closing tag')
                }
                continue
              case O.TEXT_ENTITY:
              case O.ATTRIB_VALUE_ENTITY_Q:
              case O.ATTRIB_VALUE_ENTITY_U:
                var o
                var u
                switch (t.state) {
                  case O.TEXT_ENTITY:
                    o = O.TEXT
                    u = 'textNode'
                    break
                  case O.ATTRIB_VALUE_ENTITY_Q:
                    o = O.ATTRIB_VALUE_QUOTED
                    u = 'attribValue'
                    break
                  case O.ATTRIB_VALUE_ENTITY_U:
                    o = O.ATTRIB_VALUE_UNQUOTED
                    u = 'attribValue'
                    break
                }
                if (n === ';') {
                  t[u] += V(t)
                  t.entity = ''
                  t.state = o
                } else if (R(t.entity.length ? A : w, n)) {
                  t.entity += n
                } else {
                  U(t, 'Invalid character in entity name')
                  t[u] += '&' + t.entity + n
                  t.entity = ''
                  t.state = o
                }
                continue
              default:
                throw new Error(t, 'Unknown state: ' + t.state)
            }
          }
          if (t.position >= t.bufferCheckPosition) {
            a(t)
          }
          return t
        } /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */
        if (!String.fromCodePoint) {
          ;(function() {
            var e = String.fromCharCode
            var t = Math.floor
            var r = function() {
              var r = 16384
              var n = []
              var i
              var a
              var s = -1
              var o = arguments.length
              if (!o) {
                return ''
              }
              var u = ''
              while (++s < o) {
                var l = Number(arguments[s])
                if (!isFinite(l) || l < 0 || l > 1114111 || t(l) !== l) {
                  throw RangeError('Invalid code point: ' + l)
                }
                if (l <= 65535) {
                  n.push(l)
                } else {
                  l -= 65536
                  i = (l >> 10) + 55296
                  a = (l % 1024) + 56320
                  n.push(i, a)
                }
                if (s + 1 === o || n.length > r) {
                  u += e.apply(null, n)
                  n.length = 0
                }
              }
              return u
            }
            if (Object.defineProperty) {
              Object.defineProperty(String, 'fromCodePoint', {
                value: r,
                configurable: true,
                writable: true,
              })
            } else {
              String.fromCodePoint = r
            }
          })()
        }
      })(false ? (this.sax = {}) : t)
    }.call(t, r(37).Buffer))
  },
  function(e, t, r) {
    ;(function(e, t, r, n, i) {
      e.fromXML = function(e, i, v) {
        var g = t.parser(true, { xmlns: true })
        var m = []
        var y = []
        var _ = []
        var T = 0
        var E = null
        g.onclosetag = function(e) {
          if (m[0] instanceof f) {
            for (var t in m[0].styles) {
              q(m[0], m[0].styles[t], i)
            }
          } else if (m[0] instanceof w || m[0] instanceof A) {
            if (m[0].contents.length > 1) {
              var n = [m[0].contents[0]]
              var a
              for (a = 1; a < m[0].contents.length; a++) {
                if (m[0].contents[a] instanceof I && n[n.length - 1] instanceof I) {
                  n[n.length - 1].text += m[0].contents[a].text
                } else {
                  n.push(m[0].contents[a])
                }
              }
              m[0].contents = n
            }
            if (m[0] instanceof A && m[0].contents.length === 1 && m[0].contents[0] instanceof I) {
              m[0].text = m[0].contents[0].text
              delete m[0].contents
            }
          } else if (m[0] instanceof o) {
            if (m[0].node.uri === r.ns_tt && m[0].node.local === 'metadata') {
              T--
            } else if (T > 0 && v && 'onCloseTag' in v) {
              v.onCloseTag()
            }
          }
          _.shift()
          y.shift()
          m.shift()
        }
        g.ontext = function(e) {
          if (m[0] === undefined) {
          } else if (m[0] instanceof A || m[0] instanceof w) {
            if (m[0] instanceof A) {
              var t = m[0].styleAttrs[n.byName.ruby.qname]
              if (t === 'container' || t === 'textContainer' || t === 'baseContainer') {
                return
              }
            }
            var r = new I()
            r.initFromText(E, m[0], e, _[0], i)
            m[0].contents.push(r)
          } else if (m[0] instanceof o && T > 0 && v && 'onText' in v) {
            v.onText(e)
          }
        }
        g.onopentag = function(e) {
          var t = e.attributes['xml:space']
          if (t) {
            _.unshift(t.value)
          } else {
            if (_.length === 0) {
              _.unshift('default')
            } else {
              _.unshift(_[0])
            }
          }
          var a = e.attributes['xml:lang']
          if (a) {
            y.unshift(a.value)
          } else {
            if (y.length === 0) {
              y.unshift('')
            } else {
              y.unshift(y[0])
            }
          }
          if (e.uri === r.ns_tt) {
            if (e.local === 'tt') {
              if (E !== null) {
                z(i, 'Two <tt> elements at (' + this.line + ',' + this.column + ')')
              }
              E = new u()
              E.initFromNode(e, i)
              m.unshift(E)
            } else if (e.local === 'head') {
              if (!(m[0] instanceof u)) {
                z(
                  i,
                  'Parent of <head> element is not <tt> at (' + this.line + ',' + this.column + ')'
                )
              }
              m.unshift(E.head)
            } else if (e.local === 'styling') {
              if (!(m[0] instanceof l)) {
                z(
                  i,
                  'Parent of <styling> element is not <head> at (' +
                    this.line +
                    ',' +
                    this.column +
                    ')'
                )
              }
              m.unshift(E.head.styling)
            } else if (e.local === 'style') {
              var s
              if (m[0] instanceof f) {
                s = new d()
                s.initFromNode(e, i)
                if (!s.id) {
                  W(i, '<style> element missing @id attribute')
                } else {
                  E.head.styling.styles[s.id] = s
                }
                m.unshift(s)
              } else if (m[0] instanceof R) {
                s = new d()
                s.initFromNode(e, i)
                V(s.styleAttrs, m[0].styleAttrs)
                m.unshift(s)
              } else {
                z(
                  i,
                  'Parent of <style> element is not <styling> or <region> at (' +
                    this.line +
                    ',' +
                    this.column +
                    ')'
                )
              }
            } else if (e.local === 'initial') {
              var g
              if (m[0] instanceof f) {
                g = new c()
                g.initFromNode(e, i)
                for (var I in g.styleAttrs) {
                  E.head.styling.initials[I] = g.styleAttrs[I]
                }
                m.unshift(g)
              } else {
                z(
                  i,
                  'Parent of <initial> element is not <styling> at (' +
                    this.line +
                    ',' +
                    this.column +
                    ')'
                )
              }
            } else if (e.local === 'layout') {
              if (!(m[0] instanceof l)) {
                z(
                  i,
                  'Parent of <layout> element is not <head> at ' +
                    this.line +
                    ',' +
                    this.column +
                    ')'
                )
              }
              m.unshift(E.head.layout)
            } else if (e.local === 'region') {
              if (!(m[0] instanceof h)) {
                z(
                  i,
                  'Parent of <region> element is not <layout> at ' +
                    this.line +
                    ',' +
                    this.column +
                    ')'
                )
              }
              var O = new R()
              O.initFromNode(E, e, i)
              if (!O.id || O.id in E.head.layout.regions) {
                W(
                  i,
                  'Ignoring <region> with duplicate or missing @id at ' +
                    this.line +
                    ',' +
                    this.column +
                    ')'
                )
              } else {
                E.head.layout.regions[O.id] = O
              }
              m.unshift(O)
            } else if (e.local === 'body') {
              if (!(m[0] instanceof u)) {
                z(
                  i,
                  'Parent of <body> element is not <tt> at ' + this.line + ',' + this.column + ')'
                )
              }
              if (E.body !== null) {
                z(i, 'Second <body> element at ' + this.line + ',' + this.column + ')')
              }
              var M = new b()
              M.initFromNode(E, e, i)
              E.body = M
              m.unshift(M)
            } else if (e.local === 'div') {
              if (!(m[0] instanceof S || m[0] instanceof b)) {
                z(
                  i,
                  'Parent of <div> element is not <body> or <div> at ' +
                    this.line +
                    ',' +
                    this.column +
                    ')'
                )
              }
              var k = new S()
              k.initFromNode(E, m[0], e, i)
              var P = k.styleAttrs[n.byName.backgroundImage.qname]
              if (P) {
                k.contents.push(new p(P))
                delete k.styleAttrs[n.byName.backgroundImage.qname]
              }
              m[0].contents.push(k)
              m.unshift(k)
            } else if (e.local === 'image') {
              if (!(m[0] instanceof S)) {
                z(
                  i,
                  'Parent of <image> element is not <div> at ' + this.line + ',' + this.column + ')'
                )
              }
              var N = new p()
              N.initFromNode(E, m[0], e, i)
              m[0].contents.push(N)
              m.unshift(N)
            } else if (e.local === 'p') {
              if (!(m[0] instanceof S)) {
                z(i, 'Parent of <p> element is not <div> at ' + this.line + ',' + this.column + ')')
              }
              var L = new w()
              L.initFromNode(E, m[0], e, i)
              m[0].contents.push(L)
              m.unshift(L)
            } else if (e.local === 'span') {
              if (!(m[0] instanceof A || m[0] instanceof w)) {
                z(
                  i,
                  'Parent of <span> element is not <span> or <p> at ' +
                    this.line +
                    ',' +
                    this.column +
                    ')'
                )
              }
              var x = new A()
              x.initFromNode(E, m[0], e, _[0], i)
              m[0].contents.push(x)
              m.unshift(x)
            } else if (e.local === 'br') {
              if (!(m[0] instanceof A || m[0] instanceof w)) {
                z(
                  i,
                  'Parent of <br> element is not <span> or <p> at ' +
                    this.line +
                    ',' +
                    this.column +
                    ')'
                )
              }
              var F = new C()
              F.initFromNode(E, m[0], e, i)
              m[0].contents.push(F)
              m.unshift(F)
            } else if (e.local === 'set') {
              if (
                !(
                  m[0] instanceof A ||
                  m[0] instanceof w ||
                  m[0] instanceof S ||
                  m[0] instanceof b ||
                  m[0] instanceof R ||
                  m[0] instanceof C
                )
              ) {
                z(
                  i,
                  'Parent of <set> element is not a content element or a region at ' +
                    this.line +
                    ',' +
                    this.column +
                    ')'
                )
              }
              var U = new D()
              U.initFromNode(E, m[0], e, i)
              m[0].sets.push(U)
              m.unshift(U)
            } else {
              m.unshift(new o(e))
            }
          } else {
            m.unshift(new o(e))
          }
          if (m[0] instanceof o) {
            if (e.uri === r.ns_tt && e.local === 'metadata') {
              T++
            } else if (T > 0 && v && 'onOpenTag' in v) {
              var B = []
              for (var j in e.attributes) {
                B[e.attributes[j].uri + ' ' + e.attributes[j].local] = {
                  uri: e.attributes[j].uri,
                  local: e.attributes[j].local,
                  value: e.attributes[j].value,
                }
              }
              v.onOpenTag(e.uri, e.local, B)
            }
          }
        }
        g.write(e).close()
        delete E.head.styling.styles
        var O = false
        for (var M in E.head.layout.regions) {
          O = true
          break
        }
        if (!O) {
          var k = R.prototype.createDefaultRegion()
          E.head.layout.regions[k.id] = k
        }
        for (var P in E.head.layout.regions) {
          s(E, E.head.layout.regions[P], null, null)
        }
        if (E.body) {
          s(E, E.body, null, null)
        }
        if (E.body) {
          a(E.body)
        }
        return E
      }
      function a(e) {
        if (!('contents' in e)) return
        var t = 'styleAttrs' in e ? e.styleAttrs[n.byName.ruby.qname] : null
        var r =
          e.kind === 'span' && (t === 'container' || t === 'textContainer' || t === 'textContainer')
        for (var i = e.contents.length - 1; i >= 0; i--) {
          if (
            r &&
            !('styleAttrs' in e.contents[i] && n.byName.ruby.qname in e.contents[i].styleAttrs)
          ) {
            delete e.contents[i]
          } else {
            a(e.contents[i])
          }
        }
      }
      function s(e, t, r, n) {
        var i = n && n.timeContainer === 'seq'
        var a = 0
        if (n) {
          if (i && r) {
            a = r.end
          } else {
            a = n.begin
          }
        }
        t.begin = t.explicit_begin ? t.explicit_begin + a : a
        var o = t.begin
        var u = null
        for (var l in t.sets) {
          s(e, t.sets[l], u, t)
          if (t.timeContainer === 'seq') {
            o = t.sets[l].end
          } else {
            o = Math.max(o, t.sets[l].end)
          }
          u = t.sets[l]
        }
        if (!('contents' in t)) {
          if (i) {
            o = t.begin
          } else {
            o = Number.POSITIVE_INFINITY
          }
        } else {
          for (var f in t.contents) {
            s(e, t.contents[f], u, t)
            if (t.timeContainer === 'seq') {
              o = t.contents[f].end
            } else {
              o = Math.max(o, t.contents[f].end)
            }
            u = t.contents[f]
          }
        }
        if (t.explicit_end !== null && t.explicit_dur !== null) {
          t.end = Math.min(t.begin + t.explicit_dur, a + t.explicit_end)
        } else if (t.explicit_end === null && t.explicit_dur !== null) {
          t.end = t.begin + t.explicit_dur
        } else if (t.explicit_end !== null && t.explicit_dur === null) {
          t.end = a + t.explicit_end
        } else {
          t.end = o
        }
        delete t.explicit_begin
        delete t.explicit_dur
        delete t.explicit_end
        e._registerEvent(t)
      }
      function o(e) {
        this.node = e
      }
      function u() {
        this.events = []
        this.head = new l()
        this.body = null
      }
      u.prototype.initFromNode = function(e, t) {
        var n = F(e, t)
        this.cellLength = {
          h: new i.ComputedLength(0, 1 / n.h),
          w: new i.ComputedLength(1 / n.w, 0),
        }
        var a = U(e, t)
        this.effectiveFrameRate = a.effectiveFrameRate
        this.tickRate = a.tickRate
        this.aspectRatio = x(e, t)
        var s = L(e, r.ns_ttp, 'timeBase')
        if (s !== null && s !== 'media') {
          z(t, 'Unsupported time base')
        }
        var o = B(e, t)
        if (o === null) {
          this.pxLength = { h: null, w: null }
        } else {
          if (o.h.unit !== 'px' || o.w.unit !== 'px') {
            z(t, 'Extent on TT must be in px or absent')
          }
          this.pxLength = {
            h: new i.ComputedLength(0, 1 / o.h.value),
            w: new i.ComputedLength(1 / o.w.value, 0),
          }
        }
        this.dimensions = { h: new i.ComputedLength(0, 1), w: new i.ComputedLength(1, 0) }
      }
      u.prototype._registerEvent = function(e) {
        if (e.end <= e.begin) return
        var t = X(this.events, e.begin)
        if (!t.found) {
          this.events.splice(t.index, 0, e.begin)
        }
        if (e.end !== Number.POSITIVE_INFINITY) {
          var r = X(this.events, e.end)
          if (!r.found) {
            this.events.splice(r.index, 0, e.end)
          }
        }
      }
      u.prototype.getMediaTimeRange = function() {
        return [this.events[0], this.events[this.events.length - 1]]
      }
      u.prototype.getMediaTimeEvents = function() {
        return this.events
      }
      function l() {
        this.styling = new f()
        this.layout = new h()
      }
      function f() {
        this.styles = {}
        this.initials = {}
      }
      function d() {
        this.id = null
        this.styleAttrs = null
        this.styleRefs = null
      }
      d.prototype.initFromNode = function(e, t) {
        this.id = O(e)
        this.styleAttrs = N(e, t)
        this.styleRefs = P(e)
      }
      function c() {
        this.styleAttrs = null
      }
      c.prototype.initFromNode = function(e, t) {
        this.styleAttrs = {}
        for (var n in e.attributes) {
          if (
            e.attributes[n].uri === r.ns_itts ||
            e.attributes[n].uri === r.ns_ebutts ||
            e.attributes[n].uri === r.ns_tts
          ) {
            var i = e.attributes[n].uri + ' ' + e.attributes[n].local
            this.styleAttrs[i] = e.attributes[n].value
          }
        }
      }
      function h() {
        this.regions = {}
      }
      function p(e, t) {
        v.call(this, 'image')
        this.src = e
        this.type = t
      }
      p.prototype.initFromNode = function(e, t, r, n) {
        this.src = 'src' in r.attributes ? r.attributes.src.value : null
        if (!this.src) {
          W(n, 'Invalid image@src attribute')
        }
        this.type = 'type' in r.attributes ? r.attributes.type.value : null
        if (!this.type) {
          W(n, 'Invalid image@type attribute')
        }
        y.prototype.initFromNode.call(this, e, t, r, n)
        E.prototype.initFromNode.call(this, e, t, r, n)
        _.prototype.initFromNode.call(this, e, t, r, n)
        m.prototype.initFromNode.call(this, e, t, r, n)
      }
      function v(e) {
        this.kind = e
      }
      function g(e) {
        this.id = e
      }
      g.prototype.initFromNode = function(e, t, r, n) {
        this.id = O(r)
      }
      function m(e) {
        this.regionID = e
      }
      m.prototype.initFromNode = function(e, t, r, n) {
        this.regionID = M(r)
      }
      function y(e) {
        this.styleAttrs = e
      }
      y.prototype.initFromNode = function(e, t, r, n) {
        this.styleAttrs = N(r, n)
        if (e.head !== null && e.head.styling !== null) {
          H(e.head.styling, P(r), this.styleAttrs, n)
        }
      }
      function _(e) {
        this.sets = e
      }
      _.prototype.initFromNode = function(e, t, r, n) {
        this.sets = []
      }
      function T(e) {
        this.contents = e
      }
      T.prototype.initFromNode = function(e, t, r, n) {
        this.contents = []
      }
      function E(e, t, r) {
        this.explicit_begin = e
        this.explicit_end = t
        this.explicit_dur = r
      }
      E.prototype.initFromNode = function(e, t, r, n) {
        var i = G(e, t, r, n)
        this.explicit_begin = i.explicit_begin
        this.explicit_end = i.explicit_end
        this.explicit_dur = i.explicit_dur
        this.timeContainer = k(r, n)
      }
      function b() {
        v.call(this, 'body')
      }
      b.prototype.initFromNode = function(e, t, r) {
        y.prototype.initFromNode.call(this, e, null, t, r)
        E.prototype.initFromNode.call(this, e, null, t, r)
        _.prototype.initFromNode.call(this, e, null, t, r)
        m.prototype.initFromNode.call(this, e, null, t, r)
        T.prototype.initFromNode.call(this, e, null, t, r)
      }
      function S() {
        v.call(this, 'div')
      }
      S.prototype.initFromNode = function(e, t, r, n) {
        y.prototype.initFromNode.call(this, e, t, r, n)
        E.prototype.initFromNode.call(this, e, t, r, n)
        _.prototype.initFromNode.call(this, e, t, r, n)
        m.prototype.initFromNode.call(this, e, t, r, n)
        T.prototype.initFromNode.call(this, e, t, r, n)
      }
      function w() {
        v.call(this, 'p')
      }
      w.prototype.initFromNode = function(e, t, r, n) {
        y.prototype.initFromNode.call(this, e, t, r, n)
        E.prototype.initFromNode.call(this, e, t, r, n)
        _.prototype.initFromNode.call(this, e, t, r, n)
        m.prototype.initFromNode.call(this, e, t, r, n)
        T.prototype.initFromNode.call(this, e, t, r, n)
      }
      function A() {
        v.call(this, 'span')
      }
      A.prototype.initFromNode = function(e, t, r, n, i) {
        y.prototype.initFromNode.call(this, e, t, r, i)
        E.prototype.initFromNode.call(this, e, t, r, i)
        _.prototype.initFromNode.call(this, e, t, r, i)
        m.prototype.initFromNode.call(this, e, t, r, i)
        T.prototype.initFromNode.call(this, e, t, r, i)
        this.space = n
      }
      function I() {
        v.call(this, 'span')
      }
      I.prototype.initFromText = function(e, t, r, n, i) {
        E.prototype.initFromNode.call(this, e, t, null, i)
        this.text = r
        this.space = n
      }
      function C() {
        v.call(this, 'br')
      }
      C.prototype.initFromNode = function(e, t, r, n) {
        m.prototype.initFromNode.call(this, e, t, r, n)
        E.prototype.initFromNode.call(this, e, t, r, n)
      }
      function R() {}
      R.prototype.createDefaultRegion = function() {
        var e = new R()
        g.call(e, '')
        y.call(e, {})
        _.call(e, [])
        E.call(e, 0, Number.POSITIVE_INFINITY, null)
        return e
      }
      R.prototype.initFromNode = function(e, t, r) {
        g.prototype.initFromNode.call(this, e, null, t, r)
        y.prototype.initFromNode.call(this, e, null, t, r)
        E.prototype.initFromNode.call(this, e, null, t, r)
        _.prototype.initFromNode.call(this, e, null, t, r)
        if (e.head !== null && e.head.styling !== null) {
          H(e.head.styling, P(t), this.styleAttrs, r)
        }
      }
      function D() {}
      D.prototype.initFromNode = function(e, t, r, n) {
        E.prototype.initFromNode.call(this, e, t, r, n)
        var i = N(r, n)
        this.qname = null
        this.value = null
        for (var a in i) {
          if (this.qname) {
            W(n, 'More than one style specified on set')
            break
          }
          this.qname = a
          this.value = i[a]
        }
      }
      function O(e) {
        return e && 'xml:id' in e.attributes ? e.attributes['xml:id'].value || null : null
      }
      function M(e) {
        return e && 'region' in e.attributes ? e.attributes.region.value : ''
      }
      function k(e, t) {
        var r = e && 'timeContainer' in e.attributes ? e.attributes.timeContainer.value : null
        if (!r || r === 'par') {
          return 'par'
        } else if (r === 'seq') {
          return 'seq'
        } else {
          W(t, "Illegal value of timeContainer (assuming 'par')")
          return 'par'
        }
      }
      function P(e) {
        return e && 'style' in e.attributes ? e.attributes.style.value.split(' ') : []
      }
      function N(e, t) {
        var r = {}
        if (e !== null) {
          for (var i in e.attributes) {
            var a = e.attributes[i].uri + ' ' + e.attributes[i].local
            var s = n.byQName[a]
            if (s !== undefined) {
              var o = s.parse(e.attributes[i].value)
              if (o !== null) {
                r[a] = o
                if (s === n.byName.zIndex) {
                  Y(
                    t,
                    'zIndex attribute present but not used by IMSC1 since regions do not overlap'
                  )
                }
              } else {
                W(t, 'Cannot parse styling attribute ' + a + ' --\x3e ' + e.attributes[i].value)
              }
            }
          }
        }
        return r
      }
      function L(e, t, r) {
        for (var n in e.attributes) {
          if (e.attributes[n].uri === t && e.attributes[n].local === r) {
            return e.attributes[n].value
          }
        }
        return null
      }
      function x(e, t) {
        var n = L(e, r.ns_ittp, 'aspectRatio')
        if (n === null) {
          n = L(e, r.ns_ttp, 'displayAspectRatio')
        }
        var i = null
        if (n !== null) {
          var a = /(\d+)\s+(\d+)/
          var s = a.exec(n)
          if (s !== null) {
            var o = parseInt(s[1])
            var u = parseInt(s[2])
            if (o !== 0 && u !== 0) {
              i = o / u
            } else {
              W(t, 'Illegal aspectRatio values (ignoring)')
            }
          } else {
            W(t, 'Malformed aspectRatio attribute (ignoring)')
          }
        }
        return i
      }
      function F(e, t) {
        var n = L(e, r.ns_ttp, 'cellResolution')
        var i = 15
        var a = 32
        if (n !== null) {
          var s = /(\d+) (\d+)/
          var o = s.exec(n)
          if (o !== null) {
            a = parseInt(o[1])
            i = parseInt(o[2])
          } else {
            Y(t, 'Malformed cellResolution value (using initial value instead)')
          }
        }
        return { w: a, h: i }
      }
      function U(e, t) {
        var n = L(e, r.ns_ttp, 'frameRate')
        var i = 30
        var a
        if (n !== null) {
          var s = /(\d+)/
          a = s.exec(n)
          if (a !== null) {
            i = parseInt(a[1])
          } else {
            Y(t, 'Malformed frame rate attribute (using initial value instead)')
          }
        }
        var o = L(e, r.ns_ttp, 'frameRateMultiplier')
        var u = 1
        if (o !== null) {
          var l = /(\d+) (\d+)/
          a = l.exec(o)
          if (a !== null) {
            u = parseInt(a[1]) / parseInt(a[2])
          } else {
            Y(t, 'Malformed frame rate multiplier attribute (using initial value instead)')
          }
        }
        var f = u * i
        var d = 1
        var c = L(e, r.ns_ttp, 'tickRate')
        if (c === null) {
          if (n !== null) d = f
        } else {
          var h = /(\d+)/
          a = h.exec(c)
          if (a !== null) {
            d = parseInt(a[1])
          } else {
            Y(t, 'Malformed tick rate attribute (using initial value instead)')
          }
        }
        return { effectiveFrameRate: f, tickRate: d }
      }
      function B(e, t) {
        var n = L(e, r.ns_tts, 'extent')
        if (n === null) return null
        var a = n.split(' ')
        if (a.length !== 2) {
          Y(t, 'Malformed extent (ignoring)')
          return null
        }
        var s = i.parseLength(a[0])
        var o = i.parseLength(a[1])
        if (!o || !s) {
          Y(t, 'Malformed extent values (ignoring)')
          return null
        }
        return { h: o, w: s }
      }
      function j(e, t, r) {
        var n = /^(\d{2,}):(\d\d):(\d\d(?:\.\d+)?)$/
        var i = /^(\d{2,}):(\d\d):(\d\d)\:(\d{2,})$/
        var a = /^(\d+(?:\.\d+)?)f$/
        var s = /^(\d+(?:\.\d+)?)t$/
        var o = /^(\d+(?:\.\d+)?)ms$/
        var u = /^(\d+(?:\.\d+)?)s$/
        var l = /^(\d+(?:\.\d+)?)h$/
        var f = /^(\d+(?:\.\d+)?)m$/
        var d
        var c = null
        if ((d = a.exec(r)) !== null) {
          if (t !== null) {
            c = parseFloat(d[1]) / t
          }
        } else if ((d = s.exec(r)) !== null) {
          if (e !== null) {
            c = parseFloat(d[1]) / e
          }
        } else if ((d = o.exec(r)) !== null) {
          c = parseFloat(d[1]) / 1e3
        } else if ((d = u.exec(r)) !== null) {
          c = parseFloat(d[1])
        } else if ((d = l.exec(r)) !== null) {
          c = parseFloat(d[1]) * 3600
        } else if ((d = f.exec(r)) !== null) {
          c = parseFloat(d[1]) * 60
        } else if ((d = n.exec(r)) !== null) {
          c = parseInt(d[1]) * 3600 + parseInt(d[2]) * 60 + parseFloat(d[3])
        } else if ((d = i.exec(r)) !== null) {
          if (t !== null) {
            c =
              parseInt(d[1]) * 3600 +
              parseInt(d[2]) * 60 +
              parseInt(d[3]) +
              (d[4] === null ? 0 : parseInt(d[4]) / t)
          }
        }
        return c
      }
      function G(e, t, r, n) {
        var i = null
        if (r && 'begin' in r.attributes) {
          i = j(e.tickRate, e.effectiveFrameRate, r.attributes.begin.value)
          if (i === null) {
            Y(n, 'Malformed begin value ' + r.attributes.begin.value + ' (using 0)')
          }
        }
        var a = null
        if (r && 'dur' in r.attributes) {
          a = j(e.tickRate, e.effectiveFrameRate, r.attributes.dur.value)
          if (a === null) {
            Y(n, 'Malformed dur value ' + r.attributes.dur.value + ' (ignoring)')
          }
        }
        var s = null
        if (r && 'end' in r.attributes) {
          s = j(e.tickRate, e.effectiveFrameRate, r.attributes.end.value)
          if (s === null) {
            Y(n, 'Malformed end value (ignoring)')
          }
        }
        return { explicit_begin: i, explicit_end: s, explicit_dur: a }
      }
      function q(e, t, r) {
        while (t.styleRefs.length > 0) {
          var n = t.styleRefs.pop()
          if (!(n in e.styles)) {
            W(r, 'Non-existant style id referenced')
            continue
          }
          q(e, e.styles[n], r)
          V(e.styles[n].styleAttrs, t.styleAttrs)
        }
      }
      function H(e, t, r, n) {
        for (var i = t.length - 1; i >= 0; i--) {
          var a = t[i]
          if (!(a in e.styles)) {
            W(n, 'Non-existant style id referenced')
            continue
          }
          V(e.styles[a].styleAttrs, r)
        }
      }
      function V(e, t) {
        for (var r in e) {
          if (r in t) continue
          t[r] = e[r]
        }
      }
      function K(e, t) {
        if (e && e.info && e.info(t)) throw t
      }
      function Y(e, t) {
        if (e && e.warn && e.warn(t)) throw t
      }
      function W(e, t) {
        if (e && e.error && e.error(t)) throw t
      }
      function z(e, t) {
        if (e && e.fatal) e.fatal(t)
        throw t
      }
      function X(e, t) {
        var r = 0
        var n = e.length - 1
        var i
        while (r <= n) {
          i = Math.floor((r + n) / 2)
          var a = e[i]
          if (a < t) {
            r = i + 1
          } else if (a > t) {
            n = i - 1
          } else {
            return { found: true, index: i }
          }
        }
        return { found: false, index: r }
      }
    })(
      false ? (this.imscDoc = {}) : t,
      typeof sax === 'undefined' ? r(321) : sax,
      typeof imscNames === 'undefined' ? r(49) : imscNames,
      typeof imscStyles === 'undefined' ? r(77) : imscStyles,
      typeof imscUtils === 'undefined' ? r(50) : imscUtils
    )
  },
  function(e, t, r) {
    ;(function(e, t, r) {
      e.render = function(e, t, r, i, a, s, o, u, l) {
        var f = i || t.clientHeight
        var d = a || t.clientWidth
        if (e.aspectRatio !== null) {
          var c = f * e.aspectRatio
          if (c > d) {
            f = Math.round(d / e.aspectRatio)
          } else {
            d = c
          }
        }
        var h = document.createElement('div')
        h.style.position = 'relative'
        h.style.width = d + 'px'
        h.style.height = f + 'px'
        h.style.margin = 'auto'
        h.style.top = 0
        h.style.bottom = 0
        h.style.left = 0
        h.style.right = 0
        h.style.zIndex = 0
        var p = {
          h: f,
          w: d,
          regionH: null,
          regionW: null,
          imgResolver: r,
          displayForcedOnlyMode: s || false,
          isd: e,
          errorHandler: o,
          previousISDState: u,
          enableRollUp: l || false,
          currentISDState: {},
          flg: null,
          lp: null,
          mra: null,
          ipd: null,
          bpd: null,
          ruby: null,
          textEmphasis: null,
          rubyReserve: null,
        }
        t.appendChild(h)
        for (var v in e.contents) {
          n(p, h, e.contents[v])
        }
        return p.currentISDState
      }
      function n(e, t, d) {
        var p
        if (d.kind === 'region') {
          p = document.createElement('div')
          p.style.position = 'absolute'
        } else if (d.kind === 'body') {
          p = document.createElement('div')
        } else if (d.kind === 'div') {
          p = document.createElement('div')
        } else if (d.kind === 'image') {
          p = document.createElement('img')
          if (e.imgResolver !== null && d.src !== null) {
            var v = e.imgResolver(d.src, p)
            if (v) p.src = v
            p.height = e.regionH
            p.width = e.regionW
          }
        } else if (d.kind === 'p') {
          p = document.createElement('p')
        } else if (d.kind === 'span') {
          if (d.styleAttrs[r.byName.ruby.qname] === 'container') {
            p = document.createElement('ruby')
            e.ruby = true
          } else if (d.styleAttrs[r.byName.ruby.qname] === 'base') {
            p = document.createElement('rb')
          } else if (d.styleAttrs[r.byName.ruby.qname] === 'text') {
            p = document.createElement('rt')
          } else if (d.styleAttrs[r.byName.ruby.qname] === 'baseContainer') {
            p = document.createElement('rbc')
          } else if (d.styleAttrs[r.byName.ruby.qname] === 'textContainer') {
            p = document.createElement('rtc')
          } else if (d.styleAttrs[r.byName.ruby.qname] === 'delimiter') {
            return
          } else {
            p = document.createElement('span')
          }
          var m = d.styleAttrs[r.byName.textEmphasis.qname]
          if (m && m.style !== 'none') {
            e.textEmphasis = true
          }
        } else if (d.kind === 'br') {
          p = document.createElement('br')
        }
        if (!p) {
          _(e.errorHandler, 'Error processing ISD element kind: ' + d.kind)
          return
        }
        t.appendChild(p)
        p.style.margin = '0'
        for (var y in g) {
          var T = g[y]
          var E = d.styleAttrs[T.qname]
          if (E !== undefined && T.map !== null) {
            T.map(e, p, d, E)
          }
        }
        var b = p
        if (d.kind === 'region') {
          var S = d.styleAttrs[r.byName.writingMode.qname]
          if (S === 'lrtb' || S === 'lr') {
            e.ipd = 'lr'
            e.bpd = 'tb'
          } else if (S === 'rltb' || S === 'rl') {
            e.ipd = 'rl'
            e.bpd = 'tb'
          } else if (S === 'tblr') {
            e.ipd = 'tb'
            e.bpd = 'lr'
          } else if (S === 'tbrl' || S === 'tb') {
            e.ipd = 'tb'
            e.bpd = 'rl'
          }
        }
        var w = d.styleAttrs[r.byName.linePadding.qname]
        if (w && !w.isZero()) {
          var A = w.toUsedLength(e.w, e.h)
          if (A > 0) {
            var I = Math.ceil(A) + 'px'
            if (e.bpd === 'tb') {
              b.style.paddingLeft = I
              b.style.paddingRight = I
            } else {
              b.style.paddingTop = I
              b.style.paddingBottom = I
            }
            e.lp = w
          }
        }
        var C = d.styleAttrs[r.byName.multiRowAlign.qname]
        if (C && C !== 'auto') {
          var R = document.createElement('span')
          R.style.display = 'inline-block'
          R.style.textAlign = C
          p.appendChild(R)
          b = R
          e.mra = C
        }
        var D = d.styleAttrs[r.byName.rubyReserve.qname]
        if (D && D[0] !== 'none') {
          e.rubyReserve = D
        }
        if (d.styleAttrs[r.byName.fillLineGap.qname]) {
          e.flg = true
        }
        if (d.kind === 'span' && d.text) {
          if (
            r.byName.textCombine.qname in d.styleAttrs &&
            d.styleAttrs[r.byName.textCombine.qname][0] === 'all'
          ) {
            p.textContent = d.text
          } else {
            var O = ''
            for (var M = 0; M < d.text.length; M++) {
              O += d.text.charAt(M)
              var k = d.text.charCodeAt(M)
              if (k < 55296 || k > 56319 || M === d.text.length) {
                var P = document.createElement('span')
                P.textContent = O
                p.appendChild(P)
                O = ''
              }
            }
          }
        }
        for (var N in d.contents) {
          n(e, b, d.contents[N])
        }
        var L = []
        if (
          (e.lp || e.mra || e.flg || e.ruby || e.textEmphasis || e.rubyReserve) &&
          d.kind === 'p'
        ) {
          h(e, b, L, null)
          if (e.rubyReserve) {
            u(L, e)
            e.rubyReserve = null
          }
          if (e.ruby || e.rubyReserve) {
            o(L, e)
            e.ruby = null
          }
          if (e.textEmphasis) {
            s(L, e)
            e.textEmphasis = null
          }
          if (e.mra) {
            a(L)
            e.mra = null
          }
          if (e.lp) {
            i(L, e.lp.toUsedLength(e.w, e.h), e)
            e.lp = null
          }
          if (e.flg) {
            var x = c(b.getBoundingClientRect(), e)
            l(L, x.before, x.after, e)
            e.flg = null
          }
        }
        if (d.kind === 'region') {
          h(e, b, L)
          if (
            e.bpd === 'tb' &&
            e.enableRollUp &&
            d.contents.length > 0 &&
            d.styleAttrs[r.byName.displayAlign.qname] === 'after'
          ) {
            var F = d.id === '' ? '_' : d.id
            var U = new f(F, L)
            e.currentISDState[U.id] = U
            if (
              e.previousISDState &&
              U.id in e.previousISDState &&
              e.previousISDState[U.id].plist.length > 0 &&
              U.plist.length > 1 &&
              U.plist[U.plist.length - 2].text ===
                e.previousISDState[U.id].plist[e.previousISDState[U.id].plist.length - 1].text
            ) {
              var B = p.firstElementChild
              var j = U.plist[U.plist.length - 1].after - U.plist[U.plist.length - 1].before
              B.style.bottom = '-' + j + 'px'
              B.style.transition = 'transform 0.4s'
              B.style.position = 'relative'
              B.style.transform = 'translateY(-' + j + 'px)'
            }
          }
        }
      }
      function i(e, t, r) {
        for (var n in e) {
          var i = e[n].elements.length
          var a = e[n].elements[e[n].start_elem]
          var s = e[n].elements[e[n].end_elem]
          var o = Math.ceil(t) + 'px'
          var u = '-' + Math.ceil(t) + 'px'
          if (i !== 0) {
            if (r.ipd === 'lr') {
              a.node.style.borderLeftColor = a.bgcolor || '#00000000'
              a.node.style.borderLeftStyle = 'solid'
              a.node.style.borderLeftWidth = o
              a.node.style.marginLeft = u
            } else if (r.ipd === 'rl') {
              a.node.style.borderRightColor = a.bgcolor || '#00000000'
              a.node.style.borderRightStyle = 'solid'
              a.node.style.borderRightWidth = o
              a.node.style.marginRight = u
            } else if (r.ipd === 'tb') {
              a.node.style.borderTopColor = a.bgcolor || '#00000000'
              a.node.style.borderTopStyle = 'solid'
              a.node.style.borderTopWidth = o
              a.node.style.marginTop = u
            }
            if (r.ipd === 'lr') {
              s.node.style.borderRightColor = s.bgcolor || '#00000000'
              s.node.style.borderRightStyle = 'solid'
              s.node.style.borderRightWidth = o
              s.node.style.marginRight = u
            } else if (r.ipd === 'rl') {
              s.node.style.borderLeftColor = s.bgcolor || '#00000000'
              s.node.style.borderLeftStyle = 'solid'
              s.node.style.borderLeftWidth = o
              s.node.style.marginLeft = u
            } else if (r.ipd === 'tb') {
              s.node.style.borderBottomColor = s.bgcolor || '#00000000'
              s.node.style.borderBottomStyle = 'solid'
              s.node.style.borderBottomWidth = o
              s.node.style.marginBottom = u
            }
          }
        }
      }
      function a(e) {
        for (var t = 0; t < e.length - 1; t++) {
          var r = e[t].elements.length
          if (r !== 0 && e[t].br === false) {
            var n = document.createElement('br')
            var i = e[t].elements[r - 1].node
            i.parentElement.insertBefore(n, i.nextSibling)
          }
        }
      }
      function s(e, t) {
        for (var r = 0; r < e.length; r++) {
          for (var n = 0; n < e[r].te.length; n++) {
            if (e[r].te[n].style.textEmphasisPosition !== '') continue
            var i
            if (t.bpd === 'tb') {
              i = r === 0 ? 'left over' : 'left under'
            } else {
              if (t.bpd === 'rl') {
                i = r === 0 ? 'right under' : 'left under'
              } else {
                i = r === 0 ? 'left under' : 'right under'
              }
            }
            e[r].te[n].style.textEmphasisPosition = i
          }
        }
      }
      function o(e, t) {
        for (var r = 0; r < e.length; r++) {
          for (var n = 0; n < e[r].rbc.length; n++) {
            if (e[r].rbc[n].style.rubyPosition !== '') continue
            var i
            if (t.bpd === 'tb') {
              i = r === 0 ? 'over' : 'under'
            } else {
              if (t.bpd === 'rl') {
                i = r === 0 ? 'over' : 'under'
              } else {
                i = r === 0 ? 'under' : 'over'
              }
            }
            e[r].rbc[n].style.rubyPosition = i
          }
        }
      }
      function u(e, t) {
        for (var r = 0; r < e.length; r++) {
          var n = document.createElement('ruby')
          var i = document.createElement('rb')
          i.textContent = 'â€‹'
          n.appendChild(i)
          var a
          var s
          var o = t.rubyReserve[1].toUsedLength(t.w, t.h) + 'px'
          if (t.rubyReserve[0] === 'both') {
            a = document.createElement('rtc')
            a.style.rubyPosition = 'under'
            a.textContent = 'â€‹'
            a.style.fontSize = o
            s = document.createElement('rtc')
            s.style.rubyPosition = 'over'
            s.textContent = 'â€‹'
            s.style.fontSize = o
            n.appendChild(a)
            n.appendChild(s)
          } else {
            a = document.createElement('rtc')
            a.textContent = 'â€‹'
            a.style.fontSize = o
            if (t.rubyReserve[0] === 'after' || (t.rubyReserve[0] === 'outside' && r > 0)) {
              a.style.rubyPosition = t.bpd === 'tb' || t.bpd === 'rl' ? 'under' : 'over'
            } else {
              a.style.rubyPosition = t.bpd === 'tb' || t.bpd === 'rl' ? 'over' : 'under'
            }
            n.appendChild(a)
          }
          var u = e[r].elements[0].node.parentElement.insertBefore(n, e[r].elements[0].node)
        }
      }
      function l(e, t, r, n) {
        var i = Math.sign(r - t)
        for (var a = 0; a <= e.length; a++) {
          var s
          if (a === 0) {
            s = t
          } else if (a === e.length) {
            s = r
          } else {
            s = (e[a].before + e[a - 1].after) / 2
          }
          var o
          var u
          if (a > 0) {
            for (var l = 0; l < e[a - 1].elements.length; l++) {
              if (e[a - 1].elements[l].bgcolor === null) continue
              u = e[a - 1].elements[l]
              if (i * (u.after - s) < 0) {
                o = Math.ceil(Math.abs(s - u.after)) + 'px'
                u.node.style.backgroundColor = u.bgcolor
                if (n.bpd === 'lr') {
                  u.node.style.paddingRight = o
                } else if (n.bpd === 'rl') {
                  u.node.style.paddingLeft = o
                } else if (n.bpd === 'tb') {
                  u.node.style.paddingBottom = o
                }
              }
            }
          }
          if (a < e.length) {
            for (var f = 0; f < e[a].elements.length; f++) {
              u = e[a].elements[f]
              if (u.bgcolor === null) continue
              if (i * (u.before - s) > 0) {
                o = Math.ceil(Math.abs(u.before - s)) + 'px'
                u.node.style.backgroundColor = u.bgcolor
                if (n.bpd === 'lr') {
                  u.node.style.paddingLeft = o
                } else if (n.bpd === 'rl') {
                  u.node.style.paddingRight = o
                } else if (n.bpd === 'tb') {
                  u.node.style.paddingTop = o
                }
              }
            }
          }
        }
      }
      function f(e, t) {
        this.id = e
        this.plist = t
      }
      function d(e) {
        var t = e.firstChild
        while (t) {
          var r = t.nextSibling
          if (t.nodeType === Node.ELEMENT_NODE && t.localName === 'span') {
            d(t)
            if (t.childElementCount === 0 && t.textContent.length === 0) {
              e.removeChild(t)
            }
          }
          t = r
        }
      }
      function c(e, t) {
        var r = { before: null, after: null, start: null, end: null }
        if (t.bpd === 'tb') {
          r.before = e.top
          r.after = e.bottom
          if (t.ipd === 'lr') {
            r.start = e.left
            r.end = e.right
          } else {
            r.start = e.right
            r.end = e.left
          }
        } else if (t.bpd === 'lr') {
          r.before = e.left
          r.after = e.right
          r.start = e.top
          r.end = e.bottom
        } else if (t.bpd === 'rl') {
          r.before = e.right
          r.after = e.left
          r.start = e.top
          r.end = e.bottom
        }
        return r
      }
      function h(e, t, r, n) {
        if (t.localName === 'rt' || t.localName === 'rtc') {
          return
        }
        var i = t.style.backgroundColor || n
        if (t.childElementCount === 0) {
          if (t.localName === 'span' || t.localName === 'rb') {
            var a = t.getBoundingClientRect()
            if (a.height === 0 || a.width === 0) return
            var s = c(a, e)
            if (
              r.length === 0 ||
              !p(s.before, s.after, r[r.length - 1].before, r[r.length - 1].after)
            ) {
              r.push({
                before: s.before,
                after: s.after,
                start: s.start,
                end: s.end,
                start_elem: 0,
                end_elem: 0,
                elements: [],
                rbc: [],
                te: [],
                text: '',
                br: false,
              })
            } else {
              var o = Math.sign(s.after - s.before)
              var u = Math.sign(s.end - s.start)
              if (o * (s.before - r[r.length - 1].before) < 0) {
                r[r.length - 1].before = s.before
              }
              if (o * (s.after - r[r.length - 1].after) > 0) {
                r[r.length - 1].after = s.after
              }
              if (u * (s.start - r[r.length - 1].start) < 0) {
                r[r.length - 1].start = s.start
                r[r.length - 1].start_elem = r[r.length - 1].elements.length
              }
              if (u * (s.end - r[r.length - 1].end) > 0) {
                r[r.length - 1].end = s.end
                r[r.length - 1].end_elem = r[r.length - 1].elements.length
              }
            }
            r[r.length - 1].text += t.textContent
            r[r.length - 1].elements.push({ node: t, bgcolor: i, before: s.before, after: s.after })
          } else if (t.localName === 'br' && r.length !== 0) {
            r[r.length - 1].br = true
          }
        } else {
          var l = t.firstChild
          while (l) {
            if (l.nodeType === Node.ELEMENT_NODE) {
              h(e, l, r, i)
              if (l.localName === 'ruby' || l.localName === 'rtc') {
                if (r.length > 0) {
                  r[r.length - 1].rbc.push(l)
                }
              } else if (l.localName === 'span' && l.style.textEmphasisStyle !== '') {
                r[r.length - 1].te.push(l)
              }
            }
            l = l.nextSibling
          }
        }
      }
      function p(e, t, r, n) {
        return (t < n && e > r) || (n <= t && r >= e)
      }
      function v(e, t) {
        this.qname = e
        this.map = t
      }
      var g = [
        new v('http://www.w3.org/ns/ttml#styling backgroundColor', function(e, t, r, n) {
          if (n[3] === 0) return
          t.style.backgroundColor =
            'rgba(' +
            n[0].toString() +
            ',' +
            n[1].toString() +
            ',' +
            n[2].toString() +
            ',' +
            (n[3] / 255).toString() +
            ')'
        }),
        new v('http://www.w3.org/ns/ttml#styling color', function(e, t, r, n) {
          t.style.color =
            'rgba(' +
            n[0].toString() +
            ',' +
            n[1].toString() +
            ',' +
            n[2].toString() +
            ',' +
            (n[3] / 255).toString() +
            ')'
        }),
        new v('http://www.w3.org/ns/ttml#styling direction', function(e, t, r, n) {
          t.style.direction = n
        }),
        new v('http://www.w3.org/ns/ttml#styling display', function(e, t, r, n) {}),
        new v('http://www.w3.org/ns/ttml#styling displayAlign', function(e, t, r, n) {
          t.style.display = 'flex'
          t.style.flexDirection = 'column'
          if (n === 'before') {
            t.style.justifyContent = 'flex-start'
          } else if (n === 'center') {
            t.style.justifyContent = 'center'
          } else if (n === 'after') {
            t.style.justifyContent = 'flex-end'
          }
        }),
        new v('http://www.w3.org/ns/ttml#styling extent', function(e, t, r, n) {
          e.regionH = n.h.toUsedLength(e.w, e.h)
          e.regionW = n.w.toUsedLength(e.w, e.h)
          var i = 0
          var a = 0
          var s = r.styleAttrs['http://www.w3.org/ns/ttml#styling padding']
          if (!s) {
          } else {
            i = s[0].toUsedLength(e.w, e.h) + s[2].toUsedLength(e.w, e.h)
            a = s[1].toUsedLength(e.w, e.h) + s[3].toUsedLength(e.w, e.h)
          }
          t.style.height = e.regionH - i + 'px'
          t.style.width = e.regionW - a + 'px'
        }),
        new v('http://www.w3.org/ns/ttml#styling fontFamily', function(e, t, r, n) {
          var i = []
          for (var a in n) {
            if (n[a] === 'monospaceSerif') {
              i.push('Courier New')
              i.push('"Liberation Mono"')
              i.push('Courier')
              i.push('monospace')
            } else if (n[a] === 'proportionalSansSerif') {
              i.push('Arial')
              i.push('Helvetica')
              i.push('"Liberation Sans"')
              i.push('sans-serif')
            } else if (n[a] === 'monospace') {
              i.push('monospace')
            } else if (n[a] === 'sansSerif') {
              i.push('sans-serif')
            } else if (n[a] === 'serif') {
              i.push('serif')
            } else if (n[a] === 'monospaceSansSerif') {
              i.push('Consolas')
              i.push('monospace')
            } else if (n[a] === 'proportionalSerif') {
              i.push('serif')
            } else {
              i.push(n[a])
            }
          }
          t.style.fontFamily = i.join(',')
        }),
        new v('http://www.w3.org/ns/ttml#styling shear', function(e, t, r, n) {
          if (n === 0) return
          var i = n * -0.9
          if (e.bpd === 'tb') {
            t.style.transform = 'skewX(' + i + 'deg)'
          } else {
            t.style.transform = 'skewY(' + i + 'deg)'
          }
        }),
        new v('http://www.w3.org/ns/ttml#styling fontSize', function(e, t, r, n) {
          t.style.fontSize = n.toUsedLength(e.w, e.h) + 'px'
        }),
        new v('http://www.w3.org/ns/ttml#styling fontStyle', function(e, t, r, n) {
          t.style.fontStyle = n
        }),
        new v('http://www.w3.org/ns/ttml#styling fontWeight', function(e, t, r, n) {
          t.style.fontWeight = n
        }),
        new v('http://www.w3.org/ns/ttml#styling lineHeight', function(e, t, r, n) {
          if (n === 'normal') {
            t.style.lineHeight = 'normal'
          } else {
            t.style.lineHeight = n.toUsedLength(e.w, e.h) + 'px'
          }
        }),
        new v('http://www.w3.org/ns/ttml#styling opacity', function(e, t, r, n) {
          t.style.opacity = n
        }),
        new v('http://www.w3.org/ns/ttml#styling origin', function(e, t, r, n) {
          t.style.top = n.h.toUsedLength(e.w, e.h) + 'px'
          t.style.left = n.w.toUsedLength(e.w, e.h) + 'px'
        }),
        new v('http://www.w3.org/ns/ttml#styling overflow', function(e, t, r, n) {
          t.style.overflow = n
        }),
        new v('http://www.w3.org/ns/ttml#styling padding', function(e, t, r, n) {
          var i = []
          i[0] = n[0].toUsedLength(e.w, e.h) + 'px'
          i[1] = n[3].toUsedLength(e.w, e.h) + 'px'
          i[2] = n[2].toUsedLength(e.w, e.h) + 'px'
          i[3] = n[1].toUsedLength(e.w, e.h) + 'px'
          t.style.padding = i.join(' ')
        }),
        new v('http://www.w3.org/ns/ttml#styling position', function(e, t, r, n) {
          t.style.top = n.h.toUsedLength(e.w, e.h) + 'px'
          t.style.left = n.w.toUsedLength(e.w, e.h) + 'px'
        }),
        new v('http://www.w3.org/ns/ttml#styling rubyAlign', function(e, t, r, n) {
          t.style.rubyAlign = n
        }),
        new v('http://www.w3.org/ns/ttml#styling rubyPosition', function(e, t, r, n) {
          if (n === 'before' || n === 'after') {
            var i
            if (e.bpd === 'tb') {
              i = n === 'before' ? 'over' : 'under'
            } else {
              if (e.bpd === 'rl') {
                i = n === 'before' ? 'over' : 'under'
              } else {
                i = n === 'before' ? 'under' : 'over'
              }
            }
            t.parentElement.style.rubyPosition = i
          }
        }),
        new v('http://www.w3.org/ns/ttml#styling showBackground', null),
        new v('http://www.w3.org/ns/ttml#styling textAlign', function(e, t, n, i) {
          var a
          var s = n.styleAttrs[r.byName.direction.qname]
          if (i === 'start') {
            a = s === 'rtl' ? 'right' : 'left'
          } else if (i === 'end') {
            a = s === 'rtl' ? 'left' : 'right'
          } else {
            a = i
          }
          t.style.textAlign = a
        }),
        new v('http://www.w3.org/ns/ttml#styling textDecoration', function(e, t, r, n) {
          t.style.textDecoration = n.join(' ').replace('lineThrough', 'line-through')
        }),
        new v('http://www.w3.org/ns/ttml#styling textOutline', function(e, t, r, n) {}),
        new v('http://www.w3.org/ns/ttml#styling textShadow', function(e, t, n, i) {
          var a = n.styleAttrs[r.byName.textOutline.qname]
          if (i === 'none' && a === 'none') {
            t.style.textShadow = ''
          } else {
            var s = []
            if (a !== 'none') {
              s.push(
                'rgba(' +
                  a.color[0].toString() +
                  ',' +
                  a.color[1].toString() +
                  ',' +
                  a.color[2].toString() +
                  ',' +
                  (a.color[3] / 255).toString() +
                  ')' +
                  ' 0px 0px ' +
                  a.thickness.toUsedLength(e.w, e.h) +
                  'px'
              )
            }
            if (i !== 'none') {
              for (var o in i) {
                s.push(
                  i[o].x_off.toUsedLength(e.w, e.h) +
                    'px ' +
                    i[o].y_off.toUsedLength(e.w, e.h) +
                    'px ' +
                    i[o].b_radius.toUsedLength(e.w, e.h) +
                    'px ' +
                    'rgba(' +
                    i[o].color[0].toString() +
                    ',' +
                    i[o].color[1].toString() +
                    ',' +
                    i[o].color[2].toString() +
                    ',' +
                    (i[o].color[3] / 255).toString() +
                    ')'
                )
              }
            }
            t.style.textShadow = s.join(',')
          }
        }),
        new v('http://www.w3.org/ns/ttml#styling textCombine', function(e, t, r, n) {
          t.style.textCombineUpright = n.join(' ')
        }),
        new v('http://www.w3.org/ns/ttml#styling textEmphasis', function(e, t, r, n) {
          if (n.style !== 'none') {
            t.style.textEmphasisStyle = n.style + ' ' + n.symbol
          }
          if (n.position === 'before' || n.position === 'after') {
            var i
            if (e.bpd === 'tb') {
              i = n.position === 'before' ? 'left over' : 'left under'
            } else {
              if (e.bpd === 'rl') {
                i = n.position === 'before' ? 'right under' : 'left under'
              } else {
                i = n.position === 'before' ? 'left under' : 'right under'
              }
            }
            t.style.textEmphasisPosition = i
          }
        }),
        new v('http://www.w3.org/ns/ttml#styling unicodeBidi', function(e, t, r, n) {
          var i
          if (n === 'bidiOverride') {
            i = 'bidi-override'
          } else {
            i = n
          }
          t.style.unicodeBidi = i
        }),
        new v('http://www.w3.org/ns/ttml#styling visibility', function(e, t, r, n) {
          t.style.visibility = n
        }),
        new v('http://www.w3.org/ns/ttml#styling wrapOption', function(e, t, r, n) {
          if (n === 'wrap') {
            if (r.space === 'preserve') {
              t.style.whiteSpace = 'pre-wrap'
            } else {
              t.style.whiteSpace = 'normal'
            }
          } else {
            if (r.space === 'preserve') {
              t.style.whiteSpace = 'pre'
            } else {
              t.style.whiteSpace = 'noWrap'
            }
          }
        }),
        new v('http://www.w3.org/ns/ttml#styling writingMode', function(e, t, r, n) {
          if (n === 'lrtb' || n === 'lr') {
            e.writingMode = 'horizontal-tb'
          } else if (n === 'rltb' || n === 'rl') {
            e.writingMode = 'horizontal-tb'
          } else if (n === 'tblr') {
            e.writingMode = 'vertical-lr'
          } else if (n === 'tbrl' || n === 'tb') {
            e.writingMode = 'vertical-rl'
          }
          t.style.writingMode = e.writingMode
        }),
        new v('http://www.w3.org/ns/ttml#styling zIndex', function(e, t, r, n) {
          t.style.zIndex = n
        }),
        new v('http://www.w3.org/ns/ttml/profile/imsc1#styling forcedDisplay', function(
          e,
          t,
          r,
          n
        ) {
          if (e.displayForcedOnlyMode && n === false) {
            t.style.visibility = 'hidden'
          }
        }),
      ]
      var m = {}
      for (var y in g) {
        m[g[y].qname] = g[y]
      }
      function _(e, t) {
        if (e && e.error && e.error(t)) throw t
      }
    })(
      false ? (this.imscHTML = {}) : t,
      typeof imscNames === 'undefined' ? r(49) : imscNames,
      typeof imscStyles === 'undefined' ? r(77) : imscStyles,
      typeof imscUtils === 'undefined' ? r(50) : imscUtils
    )
  },
  function(e, t, r) {
    ;(function(e, t, r, n) {
      e.generateISD = function(e, t, r) {
        var n = new u(e)
        var i = {}
        for (var s in e.head.layout.regions) {
          var o = a(
            e,
            t,
            e.head.layout.regions[s],
            e.body,
            null,
            '',
            e.head.layout.regions[s],
            r,
            i
          )
          if (o !== null) {
            n.contents.push(o.element)
          }
        }
        return n
      }
      var i = [
        r.byName.color.qname,
        r.byName.textCombine.qname,
        r.byName.textDecoration.qname,
        r.byName.textEmphasis.qname,
        r.byName.textOutline.qname,
        r.byName.textShadow.qname,
      ]
      function a(e, t, u, f, d, h, p, v, g) {
        if (t < p.begin || t >= p.end) {
          return null
        }
        var m = 'regionID' in p && p.regionID !== '' ? p.regionID : h
        if (
          d !== null &&
          m !== u.id &&
          (!('contents' in p) || ('contents' in p && p.contents.length === 0) || m !== '')
        )
          return null
        var y = new l(p)
        for (var _ in p.sets) {
          if (t < p.sets[_].begin || t >= p.sets[_].end) continue
          y.styleAttrs[p.sets[_].qname] = p.sets[_].value
        }
        var T = {}
        for (var E in y.styleAttrs) {
          T[E] = true
          if (E === r.byName.writingMode.qname && !(r.byName.direction.qname in y.styleAttrs)) {
            var b = y.styleAttrs[E]
            if (b === 'lrtb' || b === 'lr') {
              y.styleAttrs[r.byName.direction.qname] = 'ltr'
            } else if (b === 'rltb' || b === 'rl') {
              y.styleAttrs[r.byName.direction.qname] = 'rtl'
            }
          }
        }
        if (d !== null) {
          for (var S in r.all) {
            var w = r.all[S]
            if (w.qname === r.byName.textDecoration.qname) {
              var A = d.styleAttrs[w.qname]
              var I = y.styleAttrs[w.qname]
              var C = []
              if (I === undefined) {
                C = A
              } else if (I.indexOf('none') === -1) {
                if (
                  (I.indexOf('noUnderline') === -1 && A.indexOf('underline') !== -1) ||
                  I.indexOf('underline') !== -1
                ) {
                  C.push('underline')
                }
                if (
                  (I.indexOf('noLineThrough') === -1 && A.indexOf('lineThrough') !== -1) ||
                  I.indexOf('lineThrough') !== -1
                ) {
                  C.push('lineThrough')
                }
                if (
                  (I.indexOf('noOverline') === -1 && A.indexOf('overline') !== -1) ||
                  I.indexOf('overline') !== -1
                ) {
                  C.push('overline')
                }
              } else {
                C.push('none')
              }
              y.styleAttrs[w.qname] = C
            } else if (
              w.qname === r.byName.fontSize.qname &&
              !(w.qname in y.styleAttrs) &&
              y.kind === 'span' &&
              y.styleAttrs[r.byName.ruby.qname] === 'textContainer'
            ) {
              var R = d.styleAttrs[r.byName.fontSize.qname]
              y.styleAttrs[w.qname] = new n.ComputedLength(0.5 * R.rw, 0.5 * R.rh)
            } else if (
              w.qname === r.byName.fontSize.qname &&
              !(w.qname in y.styleAttrs) &&
              y.kind === 'span' &&
              y.styleAttrs[r.byName.ruby.qname] === 'text'
            ) {
              var D = d.styleAttrs[r.byName.fontSize.qname]
              if (d.styleAttrs[r.byName.ruby.qname] === 'textContainer') {
                y.styleAttrs[w.qname] = D
              } else {
                y.styleAttrs[w.qname] = new n.ComputedLength(0.5 * D.rw, 0.5 * D.rh)
              }
            } else if (w.inherit && w.qname in d.styleAttrs && !(w.qname in y.styleAttrs)) {
              y.styleAttrs[w.qname] = d.styleAttrs[w.qname]
            }
          }
        }
        for (var O in r.all) {
          var M = r.all[O]
          if (M.qname in y.styleAttrs) continue
          if (M.qname === r.byName.position.qname && r.byName.origin.qname in y.styleAttrs) continue
          if (M.qname === r.byName.origin.qname && r.byName.position.qname in y.styleAttrs) continue
          var k = e.head.styling.initials[M.qname] || M.initial
          if (y.kind === 'region' || (M.inherit === false && k !== null)) {
            y.styleAttrs[M.qname] = M.parse(k)
            T[M.qname] = true
          }
        }
        for (var P in r.all) {
          var N = r.all[P]
          if (!(N.qname in T)) continue
          if (N.compute !== null) {
            var L = N.compute(e, d, y, y.styleAttrs[N.qname], g)
            if (L !== null) {
              y.styleAttrs[N.qname] = L
            } else {
              c(v, "Style '" + N.qname + "' on element '" + y.kind + "' cannot be computed")
            }
          }
        }
        if (y.styleAttrs[r.byName.display.qname] === 'none') return null
        var x
        if (d === null) {
          if (f === null) {
            x = []
          } else {
            x = [f]
          }
        } else if ('contents' in p) {
          x = p.contents
        }
        for (var F in x) {
          var U = a(e, t, u, f, y, m, x[F], v, g)
          if (U !== null) {
            y.contents.push(U.element)
          }
        }
        for (var B in y.styleAttrs) {
          var j = false
          if (y.kind === 'span') {
            var G = y.styleAttrs[r.byName.ruby.qname]
            j =
              (G === 'container' || G === 'textContainer' || G === 'baseContainer') &&
              i.indexOf(B) !== -1
            if (!j) {
              j = G !== 'container' && B === r.byName.rubyAlign.qname
            }
            if (!j) {
              j = !(G === 'textContainer' || G === 'text') && B === r.byName.rubyPosition.qname
            }
          }
          if (!j) {
            var q = r.byQName[B]
            j = q.applies.indexOf(y.kind) === -1
          }
          if (j) {
            delete y.styleAttrs[B]
          }
        }
        if (y.kind === 'span' && y.text && y.space === 'default') {
          var H = y.text.replace(/[\t\r\n ]+/g, ' ')
          y.text = H
        }
        if (y.kind === 'p') {
          var V = []
          s(y, V)
          var K = 0
          var Y = 'after_br'
          var W = 0
          while (true) {
            if (Y === 'after_br') {
              if (K >= V.length || V[K].kind === 'br') {
                Y = 'before_br'
                W = K
                K--
              } else {
                if (V[K].space !== 'preserve') {
                  V[K].text = V[K].text.replace(/^[\t\r\n ]+/g, '')
                }
                if (V[K].text.length > 0) {
                  Y = 'looking_br'
                  K++
                } else {
                  V.splice(K, 1)
                }
              }
            } else if (Y === 'before_br') {
              if (K < 0 || V[K].kind === 'br') {
                Y = 'after_br'
                K = W + 1
                if (K >= V.length) break
              } else {
                if (V[K].space !== 'preserve') {
                  V[K].text = V[K].text.replace(/[\t\r\n ]+$/g, '')
                }
                if (V[K].text.length > 0) {
                  Y = 'after_br'
                  K = W + 1
                  if (K >= V.length) break
                } else {
                  V.splice(K, 1)
                  K--
                }
              }
            } else {
              if (K >= V.length || V[K].kind === 'br') {
                Y = 'before_br'
                W = K
                K--
              } else {
                K++
              }
            }
          }
          o(y)
        }
        if (
          (y.kind === 'div' && r.byName.backgroundImage.qname in y.styleAttrs) ||
          y.kind === 'br' ||
          y.kind === 'image' ||
          ('contents' in y && y.contents.length > 0) ||
          (y.kind === 'span' && y.text !== null) ||
          (y.kind === 'region' && y.styleAttrs[r.byName.showBackground.qname] === 'always')
        ) {
          return { region_id: m, element: y }
        }
        return null
      }
      function s(e, t) {
        if ('contents' in e) {
          for (var r in e.contents) {
            s(e.contents[r], t)
          }
        } else if (e.kind === 'span' || e.kind === 'br') {
          t.push(e)
        }
      }
      function o(e) {
        if (e.kind === 'br') {
          return false
        } else if ('text' in e) {
          return e.text.length === 0
        } else if ('contents' in e) {
          var t = e.contents.length
          while (t--) {
            if (o(e.contents[t])) {
              e.contents.splice(t, 1)
            }
          }
          return e.contents.length === 0
        }
      }
      function u(e) {
        this.contents = []
        this.aspectRatio = e.aspectRatio
      }
      function l(e) {
        this.kind = e.kind || 'region'
        if (e.id) {
          this.id = e.id
        }
        this.styleAttrs = {}
        for (var t in e.styleAttrs) {
          this.styleAttrs[t] = e.styleAttrs[t]
        }
        if ('src' in e) {
          this.src = e.src
        }
        if ('type' in e) {
          this.type = e.type
        }
        if ('text' in e) {
          this.text = e.text
        } else if (this.kind === 'region' || 'contents' in e) {
          this.contents = []
        }
        if ('space' in e) {
          this.space = e.space
        }
      }
      function f(e, t) {
        if (e && e.info && e.info(t)) throw t
      }
      function d(e, t) {
        if (e && e.warn && e.warn(t)) throw t
      }
      function c(e, t) {
        if (e && e.error && e.error(t)) throw t
      }
      function h(e, t) {
        if (e && e.fatal) e.fatal(t)
        throw t
      }
    })(
      false ? (this.imscISD = {}) : t,
      typeof imscNames === 'undefined' ? r(49) : imscNames,
      typeof imscStyles === 'undefined' ? r(77) : imscStyles,
      typeof imscUtils === 'undefined' ? r(50) : imscUtils
    )
  },
  function(e, t, r) {
    'use strict' /*
object-assign
(c) Sindre Sorhus
@license MIT
*/
    var n = Object.getOwnPropertySymbols
    var i = Object.prototype.hasOwnProperty
    var a = Object.prototype.propertyIsEnumerable
    function s(e) {
      if (e === null || e === undefined) {
        throw new TypeError('Object.assign cannot be called with null or undefined')
      }
      return Object(e)
    }
    function o() {
      try {
        if (!Object.assign) {
          return false
        }
        var e = new String('abc')
        e[5] = 'de'
        if (Object.getOwnPropertyNames(e)[0] === '5') {
          return false
        }
        var t = {}
        for (var r = 0; r < 10; r++) {
          t['_' + String.fromCharCode(r)] = r
        }
        var n = Object.getOwnPropertyNames(t).map(function(e) {
          return t[e]
        })
        if (n.join('') !== '0123456789') {
          return false
        }
        var i = {}
        'abcdefghijklmnopqrst'.split('').forEach(function(e) {
          i[e] = e
        })
        if (Object.keys(Object.assign({}, i)).join('') !== 'abcdefghijklmnopqrst') {
          return false
        }
        return true
      } catch (e) {
        return false
      }
    }
    e.exports = o()
      ? Object.assign
      : function(e, t) {
          var r
          var o = s(e)
          var u
          for (var l = 1; l < arguments.length; l++) {
            r = Object(arguments[l])
            for (var f in r) {
              if (i.call(r, f)) {
                o[f] = r[f]
              }
            }
            if (n) {
              u = n(r)
              for (var d = 0; d < u.length; d++) {
                if (a.call(r, u[d])) {
                  o[u[d]] = r[u[d]]
                }
              }
            }
          }
          return o
        }
  },
  function(e, t, r) {
    'use strict'
    var n = r(336)
    var i = r(325)
    function a(e) {
      switch (e.arrayFormat) {
        case 'index':
          return function(t, r, n) {
            return r === null
              ? [o(t, e), '[', n, ']'].join('')
              : [o(t, e), '[', o(n, e), ']=', o(r, e)].join('')
          }
        case 'bracket':
          return function(t, r) {
            return r === null ? o(t, e) : [o(t, e), '[]=', o(r, e)].join('')
          }
        default:
          return function(t, r) {
            return r === null ? o(t, e) : [o(t, e), '=', o(r, e)].join('')
          }
      }
    }
    function s(e) {
      var t
      switch (e.arrayFormat) {
        case 'index':
          return function(e, r, n) {
            t = /\[(\d*)\]$/.exec(e)
            e = e.replace(/\[\d*\]$/, '')
            if (!t) {
              n[e] = r
              return
            }
            if (n[e] === undefined) {
              n[e] = {}
            }
            n[e][t[1]] = r
          }
        case 'bracket':
          return function(e, r, n) {
            t = /(\[\])$/.exec(e)
            e = e.replace(/\[\]$/, '')
            if (!t) {
              n[e] = r
              return
            } else if (n[e] === undefined) {
              n[e] = [r]
              return
            }
            n[e] = [].concat(n[e], r)
          }
        default:
          return function(e, t, r) {
            if (r[e] === undefined) {
              r[e] = t
              return
            }
            r[e] = [].concat(r[e], t)
          }
      }
    }
    function o(e, t) {
      if (t.encode) {
        return t.strict ? n(e) : encodeURIComponent(e)
      }
      return e
    }
    function u(e) {
      if (Array.isArray(e)) {
        return e.sort()
      } else if (typeof e === 'object') {
        return u(Object.keys(e))
          .sort(function(e, t) {
            return Number(e) - Number(t)
          })
          .map(function(t) {
            return e[t]
          })
      }
      return e
    }
    t.extract = function(e) {
      return e.split('?')[1] || ''
    }
    t.parse = function(e, t) {
      t = i({ arrayFormat: 'none' }, t)
      var r = s(t)
      var n = Object.create(null)
      if (typeof e !== 'string') {
        return n
      }
      e = e.trim().replace(/^(\?|#|&)/, '')
      if (!e) {
        return n
      }
      e.split('&').forEach(function(e) {
        var t = e.replace(/\+/g, ' ').split('=')
        var i = t.shift()
        var a = t.length > 0 ? t.join('=') : undefined
        a = a === undefined ? null : decodeURIComponent(a)
        r(decodeURIComponent(i), a, n)
      })
      return Object.keys(n)
        .sort()
        .reduce(function(e, t) {
          var r = n[t]
          if (Boolean(r) && typeof r === 'object' && !Array.isArray(r)) {
            e[t] = u(r)
          } else {
            e[t] = r
          }
          return e
        }, Object.create(null))
    }
    t.stringify = function(e, t) {
      var r = { encode: true, strict: true, arrayFormat: 'none' }
      t = i(r, t)
      var n = a(t)
      return e
        ? Object.keys(e)
            .sort()
            .map(function(r) {
              var i = e[r]
              if (i === undefined) {
                return ''
              }
              if (i === null) {
                return o(r, t)
              }
              if (Array.isArray(i)) {
                var a = []
                i.slice().forEach(function(e) {
                  if (e === undefined) {
                    return
                  }
                  a.push(n(r, e, a.length))
                })
                return a.join('&')
              }
              return o(r, t) + '=' + o(i, t)
            })
            .filter(function(e) {
              return e.length > 0
            })
            .join('&')
        : ''
    }
  },
  function(e, t, r) {
    e.exports = r(22)
  },
  function(e, t, r) {
    'use strict'
    e.exports = a
    var n = r(126)
    var i = r(33)
    i.inherits = r(28)
    i.inherits(a, n)
    function a(e) {
      if (!(this instanceof a)) return new a(e)
      n.call(this, e)
    }
    a.prototype._transform = function(e, t, r) {
      r(null, e)
    }
  },
  function(e, t, r) {
    'use strict'
    function n(e, t) {
      if (!(e instanceof t)) {
        throw new TypeError('Cannot call a class as a function')
      }
    }
    var i = r(80).Buffer
    var a = r(346)
    function s(e, t, r) {
      e.copy(t, r)
    }
    e.exports = (function() {
      function e() {
        n(this, e)
        this.head = null
        this.tail = null
        this.length = 0
      }
      e.prototype.push = function e(t) {
        var r = { data: t, next: null }
        if (this.length > 0) this.tail.next = r
        else this.head = r
        this.tail = r
        ++this.length
      }
      e.prototype.unshift = function e(t) {
        var r = { data: t, next: this.head }
        if (this.length === 0) this.tail = r
        this.head = r
        ++this.length
      }
      e.prototype.shift = function e() {
        if (this.length === 0) return
        var t = this.head.data
        if (this.length === 1) this.head = this.tail = null
        else this.head = this.head.next
        --this.length
        return t
      }
      e.prototype.clear = function e() {
        this.head = this.tail = null
        this.length = 0
      }
      e.prototype.join = function e(t) {
        if (this.length === 0) return ''
        var r = this.head
        var n = '' + r.data
        while ((r = r.next)) {
          n += t + r.data
        }
        return n
      }
      e.prototype.concat = function e(t) {
        if (this.length === 0) return i.alloc(0)
        if (this.length === 1) return this.head.data
        var r = i.allocUnsafe(t >>> 0)
        var n = this.head
        var a = 0
        while (n) {
          s(n.data, r, a)
          a += n.data.length
          n = n.next
        }
        return r
      }
      return e
    })()
    if (a && a.inspect && a.inspect.custom) {
      e.exports.prototype[a.inspect.custom] = function() {
        var e = a.inspect({ length: this.length })
        return this.constructor.name + ' ' + e
      }
    }
  },
  function(e, t, r) {
    e.exports = r(81).PassThrough
  },
  function(e, t, r) {
    e.exports = r(81).Transform
  },
  function(e, t, r) {
    e.exports = r(79)
  },
  function(e, t, r) {
    var n = r(37)
    var i = n.Buffer
    function a(e, t) {
      for (var r in e) {
        t[r] = e[r]
      }
    }
    if (i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow) {
      e.exports = n
    } else {
      a(n, t)
      t.Buffer = s
    }
    function s(e, t, r) {
      return i(e, t, r)
    }
    s.prototype = Object.create(i.prototype)
    a(i, s)
    s.from = function(e, t, r) {
      if (typeof e === 'number') {
        throw new TypeError('Argument must not be a number')
      }
      return i(e, t, r)
    }
    s.alloc = function(e, t, r) {
      if (typeof e !== 'number') {
        throw new TypeError('Argument must be a number')
      }
      var n = i(e)
      if (t !== undefined) {
        if (typeof r === 'string') {
          n.fill(t, r)
        } else {
          n.fill(t)
        }
      } else {
        n.fill(0)
      }
      return n
    }
    s.allocUnsafe = function(e) {
      if (typeof e !== 'number') {
        throw new TypeError('Argument must be a number')
      }
      return i(e)
    }
    s.allocUnsafeSlow = function(e) {
      if (typeof e !== 'number') {
        throw new TypeError('Argument must be a number')
      }
      return n.SlowBuffer(e)
    }
  },
  function(e, t, r) {
    ;(function(e) {
      ;(function(t, r) {
        'use strict'
        if (t.setImmediate) {
          return
        }
        var n = 1
        var i = {}
        var a = false
        var s = t.document
        var o
        function u(e) {
          if (typeof e !== 'function') {
            e = new Function('' + e)
          }
          var t = new Array(arguments.length - 1)
          for (var r = 0; r < t.length; r++) {
            t[r] = arguments[r + 1]
          }
          var a = { callback: e, args: t }
          i[n] = a
          o(n)
          return n++
        }
        function l(e) {
          delete i[e]
        }
        function f(e) {
          var t = e.callback
          var n = e.args
          switch (n.length) {
            case 0:
              t()
              break
            case 1:
              t(n[0])
              break
            case 2:
              t(n[0], n[1])
              break
            case 3:
              t(n[0], n[1], n[2])
              break
            default:
              t.apply(r, n)
              break
          }
        }
        function d(e) {
          if (a) {
            setTimeout(d, 0, e)
          } else {
            var t = i[e]
            if (t) {
              a = true
              try {
                f(t)
              } finally {
                l(e)
                a = false
              }
            }
          }
        }
        function c() {
          o = function(t) {
            e.nextTick(function() {
              d(t)
            })
          }
        }
        function h() {
          if (t.postMessage && !t.importScripts) {
            var e = true
            var r = t.onmessage
            t.onmessage = function() {
              e = false
            }
            t.postMessage('', '*')
            t.onmessage = r
            return e
          }
        }
        function p() {
          var e = 'setImmediate$' + Math.random() + '$'
          var r = function(r) {
            if (r.source === t && typeof r.data === 'string' && r.data.indexOf(e) === 0) {
              d(+r.data.slice(e.length))
            }
          }
          if (t.addEventListener) {
            t.addEventListener('message', r, false)
          } else {
            t.attachEvent('onmessage', r)
          }
          o = function(r) {
            t.postMessage(e + r, '*')
          }
        }
        function v() {
          var e = new MessageChannel()
          e.port1.onmessage = function(e) {
            var t = e.data
            d(t)
          }
          o = function(t) {
            e.port2.postMessage(t)
          }
        }
        function g() {
          var e = s.documentElement
          o = function(t) {
            var r = s.createElement('script')
            r.onreadystatechange = function() {
              d(t)
              r.onreadystatechange = null
              e.removeChild(r)
              r = null
            }
            e.appendChild(r)
          }
        }
        function m() {
          o = function(e) {
            setTimeout(d, 0, e)
          }
        }
        var y = Object.getPrototypeOf && Object.getPrototypeOf(t)
        y = y && y.setTimeout ? y : t
        if ({}.toString.call(t.process) === '[object process]') {
          c()
        } else if (h()) {
          p()
        } else if (t.MessageChannel) {
          v()
        } else if (s && 'onreadystatechange' in s.createElement('script')) {
          g()
        } else {
          m()
        }
        y.setImmediate = u
        y.clearImmediate = l
      })(typeof self === 'undefined' ? (true ? this : global) : self)
    }.call(t, r(52)))
  },
  function(e, t, r) {
    e.exports = a
    var n = r(76).EventEmitter
    var i = r(28)
    i(a, n)
    a.Readable = r(81)
    a.Writable = r(332)
    a.Duplex = r(327)
    a.Transform = r(331)
    a.PassThrough = r(330)
    a.Stream = a
    function a() {
      n.call(this)
    }
    a.prototype.pipe = function(e, t) {
      var r = this
      function i(t) {
        if (e.writable) {
          if (false === e.write(t) && r.pause) {
            r.pause()
          }
        }
      }
      r.on('data', i)
      function a() {
        if (r.readable && r.resume) {
          r.resume()
        }
      }
      e.on('drain', a)
      if (!e._isStdio && (!t || t.end !== false)) {
        r.on('end', o)
        r.on('close', u)
      }
      var s = false
      function o() {
        if (s) return
        s = true
        e.end()
      }
      function u() {
        if (s) return
        s = true
        if (typeof e.destroy === 'function') e.destroy()
      }
      function l(e) {
        f()
        if (n.listenerCount(this, 'error') === 0) {
          throw e
        }
      }
      r.on('error', l)
      e.on('error', l)
      function f() {
        r.removeListener('data', i)
        e.removeListener('drain', a)
        r.removeListener('end', o)
        r.removeListener('close', u)
        r.removeListener('error', l)
        e.removeListener('error', l)
        r.removeListener('end', f)
        r.removeListener('close', f)
        e.removeListener('close', f)
      }
      r.on('end', f)
      r.on('close', f)
      e.on('close', f)
      e.emit('pipe', r)
      return e
    }
  },
  function(e, t, r) {
    'use strict'
    e.exports = function(e) {
      return encodeURIComponent(e).replace(/[!'()*]/g, function(e) {
        return (
          '%' +
          e
            .charCodeAt(0)
            .toString(16)
            .toUpperCase()
        )
      })
    }
  },
  function(e, t, r) {
    ;(function(e) {
      var n = ('undefined' !== 'undefined' && e) || (typeof self !== 'undefined' && self) || window
      var i = Function.prototype.apply
      t.setTimeout = function() {
        return new a(i.call(setTimeout, n, arguments), clearTimeout)
      }
      t.setInterval = function() {
        return new a(i.call(setInterval, n, arguments), clearInterval)
      }
      t.clearTimeout = t.clearInterval = function(e) {
        if (e) {
          e.close()
        }
      }
      function a(e, t) {
        this._id = e
        this._clearFn = t
      }
      a.prototype.unref = a.prototype.ref = function() {}
      a.prototype.close = function() {
        this._clearFn.call(n, this._id)
      }
      t.enroll = function(e, t) {
        clearTimeout(e._idleTimeoutId)
        e._idleTimeout = t
      }
      t.unenroll = function(e) {
        clearTimeout(e._idleTimeoutId)
        e._idleTimeout = -1
      }
      t._unrefActive = t.active = function(e) {
        clearTimeout(e._idleTimeoutId)
        var t = e._idleTimeout
        if (t >= 0) {
          e._idleTimeoutId = setTimeout(function t() {
            if (e._onTimeout) e._onTimeout()
          }, t)
        }
      }
      r(334)
      t.setImmediate =
        (typeof self !== 'undefined' && self.setImmediate) ||
        ('undefined' !== 'undefined' && e.setImmediate) ||
        (this && this.setImmediate)
      t.clearImmediate =
        (typeof self !== 'undefined' && self.clearImmediate) ||
        ('undefined' !== 'undefined' && e.clearImmediate) ||
        (this && this.clearImmediate)
    }.call(t, r(16)))
  },
  function(e, t, r) {
    ;(function(t) {
      e.exports = r
      function r(e, t) {
        if (n('noDeprecation')) {
          return e
        }
        var r = false
        function i() {
          if (!r) {
            if (n('throwDeprecation')) {
              throw new Error(t)
            } else if (n('traceDeprecation')) {
              console.trace(t)
            } else {
              console.warn(t)
            }
            r = true
          }
          return e.apply(this, arguments)
        }
        return i
      }
      function n(e) {
        try {
          if (!t.localStorage) return false
        } catch (e) {
          return false
        }
        var r = t.localStorage[e]
        if (null == r) return false
        return String(r).toLowerCase() === 'true'
      }
    }.call(t, r(16)))
  },
  function(e, t, r) {
    /**
     * @license
     * Video.js 7.6.5 <http://videojs.com/>
     * Copyright Brightcove, Inc. <https://www.brightcove.com/>
     * Available under Apache License Version 2.0
     * <https://github.com/videojs/video.js/blob/master/LICENSE>
     *
     * Includes vtt.js <https://github.com/mozilla/vtt.js>
     * Available under Apache License Version 2.0
     * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>
     */
    ;(function(t, n) {
      true
        ? (e.exports = n(r(341), r(340)))
        : typeof define === 'function' && define.amd
        ? define(['global/window', 'global/document'], n)
        : ((t = t || self), (t.videojs = n(t.window, t.document)))
    })(this, function(e, t) {
      e = e && e.hasOwnProperty('default') ? e['default'] : e
      t = t && t.hasOwnProperty('default') ? t['default'] : t
      var r = '7.6.5'
      var n = []
      var i = function t(r, i) {
        return function(t, a, s) {
          var o = i.levels[a]
          var u = new RegExp('^(' + o + ')$')
          if (t !== 'log') {
            s.unshift(t.toUpperCase() + ':')
          }
          s.unshift(r + ':')
          if (n) {
            n.push([].concat(s))
          }
          if (!e.console) {
            return
          }
          var l = e.console[t]
          if (!l && t === 'debug') {
            l = e.console.info || e.console.log
          }
          if (!l || !o || !u.test(t)) {
            return
          }
          l[Array.isArray(s) ? 'apply' : 'call'](e.console, s)
        }
      }
      function a(e) {
        var t = 'info'
        var r
        var s = function e() {
          for (var n = arguments.length, i = new Array(n), a = 0; a < n; a++) {
            i[a] = arguments[a]
          }
          r('log', t, i)
        }
        r = i(e, s)
        s.createLogger = function(t) {
          return a(e + ': ' + t)
        }
        s.levels = {
          all: 'debug|log|warn|error',
          off: '',
          debug: 'debug|log|warn|error',
          info: 'log|warn|error',
          warn: 'warn|error',
          error: 'error',
          DEFAULT: t,
        }
        s.level = function(e) {
          if (typeof e === 'string') {
            if (!s.levels.hasOwnProperty(e)) {
              throw new Error('"' + e + '" in not a valid log level')
            }
            t = e
          }
          return t
        }
        s.history = function() {
          return n ? [].concat(n) : []
        }
        s.history.filter = function(e) {
          return (n || []).filter(function(t) {
            return new RegExp('.*' + e + '.*').test(t[0])
          })
        }
        s.history.clear = function() {
          if (n) {
            n.length = 0
          }
        }
        s.history.disable = function() {
          if (n !== null) {
            n.length = 0
            n = null
          }
        }
        s.history.enable = function() {
          if (n === null) {
            n = []
          }
        }
        s.error = function() {
          for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) {
            n[i] = arguments[i]
          }
          return r('error', t, n)
        }
        s.warn = function() {
          for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) {
            n[i] = arguments[i]
          }
          return r('warn', t, n)
        }
        s.debug = function() {
          for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) {
            n[i] = arguments[i]
          }
          return r('debug', t, n)
        }
        return s
      }
      var s = a('VIDEOJS')
      var o = s.createLogger
      var u = Object.prototype.toString
      var l = function e(t) {
        return h(t) ? Object.keys(t) : []
      }
      function f(e, t) {
        l(e).forEach(function(r) {
          return t(e[r], r)
        })
      }
      function d(e, t, r) {
        if (r === void 0) {
          r = 0
        }
        return l(e).reduce(function(r, n) {
          return t(r, e[n], n)
        }, r)
      }
      function c(e) {
        for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) {
          r[n - 1] = arguments[n]
        }
        if (Object.assign) {
          return Object.assign.apply(Object, [e].concat(r))
        }
        r.forEach(function(t) {
          if (!t) {
            return
          }
          f(t, function(t, r) {
            e[r] = t
          })
        })
        return e
      }
      function h(e) {
        return !!e && typeof e === 'object'
      }
      function p(e) {
        return h(e) && u.call(e) === '[object Object]' && e.constructor === Object
      }
      function v(t, r) {
        if (!t || !r) {
          return ''
        }
        if (typeof e.getComputedStyle === 'function') {
          var n = e.getComputedStyle(t)
          return n ? n.getPropertyValue(r) || n[r] : ''
        }
        return ''
      }
      function g(e) {
        return typeof e === 'string' && /\S/.test(e)
      }
      function m(e) {
        if (/\s/.test(e)) {
          throw new Error('class has illegal whitespace characters')
        }
      }
      function y(e) {
        return new RegExp('(^|\\s)' + e + '($|\\s)')
      }
      function _() {
        return t === e.document
      }
      function T(e) {
        return h(e) && e.nodeType === 1
      }
      function E() {
        try {
          return e.parent !== e.self
        } catch (e) {
          return true
        }
      }
      function b(e) {
        return function(r, n) {
          if (!g(r)) {
            return t[e](null)
          }
          if (g(n)) {
            n = t.querySelector(n)
          }
          var i = T(n) ? n : t
          return i[e] && i[e](r)
        }
      }
      function S(e, r, n, i) {
        if (e === void 0) {
          e = 'div'
        }
        if (r === void 0) {
          r = {}
        }
        if (n === void 0) {
          n = {}
        }
        var a = t.createElement(e)
        Object.getOwnPropertyNames(r).forEach(function(e) {
          var t = r[e]
          if (e.indexOf('aria-') !== -1 || e === 'role' || e === 'type') {
            s.warn(
              'Setting attributes in the second argument of createEl()\n' +
                'has been deprecated. Use the third argument instead.\n' +
                ('createEl(type, properties, attributes). Attempting to set ' +
                  e +
                  ' to ' +
                  t +
                  '.')
            )
            a.setAttribute(e, t)
          } else if (e === 'textContent') {
            w(a, t)
          } else {
            a[e] = t
          }
        })
        Object.getOwnPropertyNames(n).forEach(function(e) {
          a.setAttribute(e, n[e])
        })
        if (i) {
          H(a, i)
        }
        return a
      }
      function w(e, t) {
        if (typeof e.textContent === 'undefined') {
          e.innerText = t
        } else {
          e.textContent = t
        }
        return e
      }
      function A(e, t) {
        if (t.firstChild) {
          t.insertBefore(e, t.firstChild)
        } else {
          t.appendChild(e)
        }
      }
      function I(e, t) {
        m(t)
        if (e.classList) {
          return e.classList.contains(t)
        }
        return y(t).test(e.className)
      }
      function C(e, t) {
        if (e.classList) {
          e.classList.add(t)
        } else if (!I(e, t)) {
          e.className = (e.className + ' ' + t).trim()
        }
        return e
      }
      function R(e, t) {
        if (e.classList) {
          e.classList.remove(t)
        } else {
          m(t)
          e.className = e.className
            .split(/\s+/)
            .filter(function(e) {
              return e !== t
            })
            .join(' ')
        }
        return e
      }
      function D(e, t, r) {
        var n = I(e, t)
        if (typeof r === 'function') {
          r = r(e, t)
        }
        if (typeof r !== 'boolean') {
          r = !n
        }
        if (r === n) {
          return
        }
        if (r) {
          C(e, t)
        } else {
          R(e, t)
        }
        return e
      }
      function O(e, t) {
        Object.getOwnPropertyNames(t).forEach(function(r) {
          var n = t[r]
          if (n === null || typeof n === 'undefined' || n === false) {
            e.removeAttribute(r)
          } else {
            e.setAttribute(r, n === true ? '' : n)
          }
        })
      }
      function M(e) {
        var t = {}
        var r = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ','
        if (e && e.attributes && e.attributes.length > 0) {
          var n = e.attributes
          for (var i = n.length - 1; i >= 0; i--) {
            var a = n[i].name
            var s = n[i].value
            if (typeof e[a] === 'boolean' || r.indexOf(',' + a + ',') !== -1) {
              s = s !== null ? true : false
            }
            t[a] = s
          }
        }
        return t
      }
      function k(e, t) {
        return e.getAttribute(t)
      }
      function P(e, t, r) {
        e.setAttribute(t, r)
      }
      function N(e, t) {
        e.removeAttribute(t)
      }
      function L() {
        t.body.focus()
        t.onselectstart = function() {
          return false
        }
      }
      function x() {
        t.onselectstart = function() {
          return true
        }
      }
      function F(e) {
        if (e && e.getBoundingClientRect && e.parentNode) {
          var t = e.getBoundingClientRect()
          var r = {}
          ;['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function(e) {
            if (t[e] !== undefined) {
              r[e] = t[e]
            }
          })
          if (!r.height) {
            r.height = parseFloat(v(e, 'height'))
          }
          if (!r.width) {
            r.width = parseFloat(v(e, 'width'))
          }
          return r
        }
      }
      function U(r) {
        var n
        if (r.getBoundingClientRect && r.parentNode) {
          n = r.getBoundingClientRect()
        }
        if (!n) {
          return { left: 0, top: 0 }
        }
        var i = t.documentElement
        var a = t.body
        var s = i.clientLeft || a.clientLeft || 0
        var o = e.pageXOffset || a.scrollLeft
        var u = n.left + o - s
        var l = i.clientTop || a.clientTop || 0
        var f = e.pageYOffset || a.scrollTop
        var d = n.top + f - l
        return { left: Math.round(u), top: Math.round(d) }
      }
      function B(e, t) {
        var r = {}
        var n = U(e)
        var i = e.offsetWidth
        var a = e.offsetHeight
        var s = n.top
        var o = n.left
        var u = t.pageY
        var l = t.pageX
        if (t.changedTouches) {
          l = t.changedTouches[0].pageX
          u = t.changedTouches[0].pageY
        }
        r.y = Math.max(0, Math.min(1, (s - u + a) / a))
        r.x = Math.max(0, Math.min(1, (l - o) / i))
        return r
      }
      function j(e) {
        return h(e) && e.nodeType === 3
      }
      function G(e) {
        while (e.firstChild) {
          e.removeChild(e.firstChild)
        }
        return e
      }
      function q(e) {
        if (typeof e === 'function') {
          e = e()
        }
        return (Array.isArray(e) ? e : [e])
          .map(function(e) {
            if (typeof e === 'function') {
              e = e()
            }
            if (T(e) || j(e)) {
              return e
            }
            if (typeof e === 'string' && /\S/.test(e)) {
              return t.createTextNode(e)
            }
          })
          .filter(function(e) {
            return e
          })
      }
      function H(e, t) {
        q(t).forEach(function(t) {
          return e.appendChild(t)
        })
        return e
      }
      function V(e, t) {
        return H(G(e), t)
      }
      function K(e) {
        if (e.button === undefined && e.buttons === undefined) {
          return true
        }
        if (e.button === 0 && e.buttons === undefined) {
          return true
        }
        if (e.type === 'mouseup' && e.button === 0 && e.buttons === 0) {
          return true
        }
        if (e.button !== 0 || e.buttons !== 1) {
          return false
        }
        return true
      }
      var Y = b('querySelector')
      var W = b('querySelectorAll')
      var z = Object.freeze({
        isReal: _,
        isEl: T,
        isInFrame: E,
        createEl: S,
        textContent: w,
        prependTo: A,
        hasClass: I,
        addClass: C,
        removeClass: R,
        toggleClass: D,
        setAttributes: O,
        getAttributes: M,
        getAttribute: k,
        setAttribute: P,
        removeAttribute: N,
        blockTextSelection: L,
        unblockTextSelection: x,
        getBoundingClientRect: F,
        findPosition: U,
        getPointerPosition: B,
        isTextNode: j,
        emptyEl: G,
        normalizeContent: q,
        appendContent: H,
        insertContent: V,
        isSingleLeftClick: K,
        $: Y,
        $$: W,
      })
      var X = false
      var $
      var Q = function e() {
        if (!_() || $.options.autoSetup === false) {
          return
        }
        var r = Array.prototype.slice.call(t.getElementsByTagName('video'))
        var n = Array.prototype.slice.call(t.getElementsByTagName('audio'))
        var i = Array.prototype.slice.call(t.getElementsByTagName('video-js'))
        var a = r.concat(n, i)
        if (a && a.length > 0) {
          for (var s = 0, o = a.length; s < o; s++) {
            var u = a[s]
            if (u && u.getAttribute) {
              if (u.player === undefined) {
                var l = u.getAttribute('data-setup')
                if (l !== null) {
                  $(u)
                }
              }
            } else {
              J(1)
              break
            }
          }
        } else if (!X) {
          J(1)
        }
      }
      function J(t, r) {
        if (r) {
          $ = r
        }
        e.setTimeout(Q, t)
      }
      function Z() {
        X = true
        e.removeEventListener('load', Z)
      }
      if (_()) {
        if (t.readyState === 'complete') {
          Z()
        } else {
          e.addEventListener('load', Z)
        }
      }
      var ee = function e(r) {
        var n = t.createElement('style')
        n.className = r
        return n
      }
      var te = function e(t, r) {
        if (t.styleSheet) {
          t.styleSheet.cssText = r
        } else {
          t.textContent = r
        }
      }
      var re = new WeakMap()
      var ne = 3
      var ie = ne
      function ae() {
        return ie++
      }
      function se(e, t) {
        if (!re.has(e)) {
          return
        }
        var r = re.get(e)
        if (r.handlers[t].length === 0) {
          delete r.handlers[t]
          if (e.removeEventListener) {
            e.removeEventListener(t, r.dispatcher, false)
          } else if (e.detachEvent) {
            e.detachEvent('on' + t, r.dispatcher)
          }
        }
        if (Object.getOwnPropertyNames(r.handlers).length <= 0) {
          delete r.handlers
          delete r.dispatcher
          delete r.disabled
        }
        if (Object.getOwnPropertyNames(r).length === 0) {
          re['delete'](e)
        }
      }
      function oe(e, t, r, n) {
        r.forEach(function(r) {
          e(t, r, n)
        })
      }
      function ue(r) {
        function n() {
          return true
        }
        function i() {
          return false
        }
        if (!r || !r.isPropagationStopped) {
          var a = r || e.event
          r = {}
          for (var s in a) {
            if (
              s !== 'layerX' &&
              s !== 'layerY' &&
              s !== 'keyLocation' &&
              s !== 'webkitMovementX' &&
              s !== 'webkitMovementY'
            ) {
              if (!(s === 'returnValue' && a.preventDefault)) {
                r[s] = a[s]
              }
            }
          }
          if (!r.target) {
            r.target = r.srcElement || t
          }
          if (!r.relatedTarget) {
            r.relatedTarget = r.fromElement === r.target ? r.toElement : r.fromElement
          }
          r.preventDefault = function() {
            if (a.preventDefault) {
              a.preventDefault()
            }
            r.returnValue = false
            a.returnValue = false
            r.defaultPrevented = true
          }
          r.defaultPrevented = false
          r.stopPropagation = function() {
            if (a.stopPropagation) {
              a.stopPropagation()
            }
            r.cancelBubble = true
            a.cancelBubble = true
            r.isPropagationStopped = n
          }
          r.isPropagationStopped = i
          r.stopImmediatePropagation = function() {
            if (a.stopImmediatePropagation) {
              a.stopImmediatePropagation()
            }
            r.isImmediatePropagationStopped = n
            r.stopPropagation()
          }
          r.isImmediatePropagationStopped = i
          if (r.clientX !== null && r.clientX !== undefined) {
            var o = t.documentElement
            var u = t.body
            r.pageX =
              r.clientX +
              ((o && o.scrollLeft) || (u && u.scrollLeft) || 0) -
              ((o && o.clientLeft) || (u && u.clientLeft) || 0)
            r.pageY =
              r.clientY +
              ((o && o.scrollTop) || (u && u.scrollTop) || 0) -
              ((o && o.clientTop) || (u && u.clientTop) || 0)
          }
          r.which = r.charCode || r.keyCode
          if (r.button !== null && r.button !== undefined) {
            r.button = r.button & 1 ? 0 : r.button & 4 ? 1 : r.button & 2 ? 2 : 0
          }
        }
        return r
      }
      var le = false
      ;(function() {
        try {
          var t = Object.defineProperty({}, 'passive', {
            get: function e() {
              le = true
            },
          })
          e.addEventListener('test', null, t)
          e.removeEventListener('test', null, t)
        } catch (e) {}
      })()
      var fe = ['touchstart', 'touchmove']
      function de(e, t, r) {
        if (Array.isArray(t)) {
          return oe(de, e, t, r)
        }
        if (!re.has(e)) {
          re.set(e, {})
        }
        var n = re.get(e)
        if (!n.handlers) {
          n.handlers = {}
        }
        if (!n.handlers[t]) {
          n.handlers[t] = []
        }
        if (!r.guid) {
          r.guid = ae()
        }
        n.handlers[t].push(r)
        if (!n.dispatcher) {
          n.disabled = false
          n.dispatcher = function(t, r) {
            if (n.disabled) {
              return
            }
            t = ue(t)
            var i = n.handlers[t.type]
            if (i) {
              var a = i.slice(0)
              for (var o = 0, u = a.length; o < u; o++) {
                if (t.isImmediatePropagationStopped()) {
                  break
                } else {
                  try {
                    a[o].call(e, t, r)
                  } catch (e) {
                    s.error(e)
                  }
                }
              }
            }
          }
        }
        if (n.handlers[t].length === 1) {
          if (e.addEventListener) {
            var i = false
            if (le && fe.indexOf(t) > -1) {
              i = { passive: true }
            }
            e.addEventListener(t, n.dispatcher, i)
          } else if (e.attachEvent) {
            e.attachEvent('on' + t, n.dispatcher)
          }
        }
      }
      function ce(e, t, r) {
        if (!re.has(e)) {
          return
        }
        var n = re.get(e)
        if (!n.handlers) {
          return
        }
        if (Array.isArray(t)) {
          return oe(ce, e, t, r)
        }
        var i = function e(t, r) {
          n.handlers[r] = []
          se(t, r)
        }
        if (t === undefined) {
          for (var a in n.handlers) {
            if (Object.prototype.hasOwnProperty.call(n.handlers || {}, a)) {
              i(e, a)
            }
          }
          return
        }
        var s = n.handlers[t]
        if (!s) {
          return
        }
        if (!r) {
          i(e, t)
          return
        }
        if (r.guid) {
          for (var o = 0; o < s.length; o++) {
            if (s[o].guid === r.guid) {
              s.splice(o--, 1)
            }
          }
        }
        se(e, t)
      }
      function he(e, t, r) {
        var n = re.has(e) ? re.get(e) : {}
        var i = e.parentNode || e.ownerDocument
        if (typeof t === 'string') {
          t = { type: t, target: e }
        } else if (!t.target) {
          t.target = e
        }
        t = ue(t)
        if (n.dispatcher) {
          n.dispatcher.call(e, t, r)
        }
        if (i && !t.isPropagationStopped() && t.bubbles === true) {
          he.call(null, i, t, r)
        } else if (!i && !t.defaultPrevented && t.target && t.target[t.type]) {
          if (!re.has(t.target)) {
            re.set(t.target, {})
          }
          var a = re.get(t.target)
          if (t.target[t.type]) {
            a.disabled = true
            if (typeof t.target[t.type] === 'function') {
              t.target[t.type]()
            }
            a.disabled = false
          }
        }
        return !t.defaultPrevented
      }
      function pe(e, t, r) {
        if (Array.isArray(t)) {
          return oe(pe, e, t, r)
        }
        var n = function n() {
          ce(e, t, n)
          r.apply(this, arguments)
        }
        n.guid = r.guid = r.guid || ae()
        de(e, t, n)
      }
      function ve(e, t, r) {
        var n = function n() {
          ce(e, t, n)
          r.apply(this, arguments)
        }
        n.guid = r.guid = r.guid || ae()
        de(e, t, n)
      }
      var ge = Object.freeze({ fixEvent: ue, on: de, off: ce, trigger: he, one: pe, any: ve })
      var me = 30
      var ye = function e(t, r, n) {
        if (!r.guid) {
          r.guid = ae()
        }
        var i = r.bind(t)
        i.guid = n ? n + '_' + r.guid : r.guid
        return i
      }
      var _e = function t(r, n) {
        var i = e.performance.now()
        var a = function t() {
          var a = e.performance.now()
          if (a - i >= n) {
            r.apply(void 0, arguments)
            i = a
          }
        }
        return a
      }
      var Te = function t(r, n, i, a) {
        if (a === void 0) {
          a = e
        }
        var s
        var o = function e() {
          a.clearTimeout(s)
          s = null
        }
        var u = function e() {
          var t = this
          var o = arguments
          var u = function e() {
            s = null
            u = null
            if (!i) {
              r.apply(t, o)
            }
          }
          if (!s && i) {
            r.apply(t, o)
          }
          a.clearTimeout(s)
          s = a.setTimeout(u, n)
        }
        u.cancel = o
        return u
      }
      var Ee = function e() {}
      Ee.prototype.allowedEvents_ = {}
      Ee.prototype.on = function(e, t) {
        var r = this.addEventListener
        this.addEventListener = function() {}
        de(this, e, t)
        this.addEventListener = r
      }
      Ee.prototype.addEventListener = Ee.prototype.on
      Ee.prototype.off = function(e, t) {
        ce(this, e, t)
      }
      Ee.prototype.removeEventListener = Ee.prototype.off
      Ee.prototype.one = function(e, t) {
        var r = this.addEventListener
        this.addEventListener = function() {}
        pe(this, e, t)
        this.addEventListener = r
      }
      Ee.prototype.any = function(e, t) {
        var r = this.addEventListener
        this.addEventListener = function() {}
        ve(this, e, t)
        this.addEventListener = r
      }
      Ee.prototype.trigger = function(e) {
        var t = e.type || e
        if (typeof e === 'string') {
          e = { type: t }
        }
        e = ue(e)
        if (this.allowedEvents_[t] && this['on' + t]) {
          this['on' + t](e)
        }
        he(this, e)
      }
      Ee.prototype.dispatchEvent = Ee.prototype.trigger
      var be
      Ee.prototype.queueTrigger = function(t) {
        var r = this
        if (!be) {
          be = new Map()
        }
        var n = t.type || t
        var i = be.get(this)
        if (!i) {
          i = new Map()
          be.set(this, i)
        }
        var a = i.get(n)
        i['delete'](n)
        e.clearTimeout(a)
        var s = e.setTimeout(function() {
          if (i.size === 0) {
            i = null
            be['delete'](r)
          }
          r.trigger(t)
        }, 0)
        i.set(n, s)
      }
      var Se = function e(t) {
        return (
          t instanceof Ee ||
          (!!t.eventBusEl_ &&
            ['on', 'one', 'off', 'trigger'].every(function(e) {
              return typeof t[e] === 'function'
            }))
        )
      }
      var we = function e(t, r) {
        if (Se(t)) {
          r()
        } else {
          if (!t.eventedCallbacks) {
            t.eventedCallbacks = []
          }
          t.eventedCallbacks.push(r)
        }
      }
      var Ae = function e(t) {
        return (typeof t === 'string' && /\S/.test(t)) || (Array.isArray(t) && !!t.length)
      }
      var Ie = function e(t) {
        if (!t.nodeName && !Se(t)) {
          throw new Error('Invalid target; must be a DOM node or evented object.')
        }
      }
      var Ce = function e(t) {
        if (!Ae(t)) {
          throw new Error('Invalid event type; must be a non-empty string or array.')
        }
      }
      var Re = function e(t) {
        if (typeof t !== 'function') {
          throw new Error('Invalid listener; must be a function.')
        }
      }
      var De = function e(t, r) {
        var n = r.length < 3 || r[0] === t || r[0] === t.eventBusEl_
        var i
        var a
        var s
        if (n) {
          i = t.eventBusEl_
          if (r.length >= 3) {
            r.shift()
          }
          a = r[0]
          s = r[1]
        } else {
          i = r[0]
          a = r[1]
          s = r[2]
        }
        Ie(i)
        Ce(a)
        Re(s)
        s = ye(t, s)
        return { isTargetingSelf: n, target: i, type: a, listener: s }
      }
      var Oe = function e(t, r, n, i) {
        Ie(t)
        if (t.nodeName) {
          ge[r](t, n, i)
        } else {
          t[r](n, i)
        }
      }
      var Me = {
        on: function e() {
          var t = this
          for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++) {
            n[i] = arguments[i]
          }
          var a = De(this, n),
            s = a.isTargetingSelf,
            o = a.target,
            u = a.type,
            l = a.listener
          Oe(o, 'on', u, l)
          if (!s) {
            var f = function e() {
              return t.off(o, u, l)
            }
            f.guid = l.guid
            var d = function e() {
              return t.off('dispose', f)
            }
            d.guid = l.guid
            Oe(this, 'on', 'dispose', f)
            Oe(o, 'on', 'dispose', d)
          }
        },
        one: function e() {
          var t = this
          for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++) {
            n[i] = arguments[i]
          }
          var a = De(this, n),
            s = a.isTargetingSelf,
            o = a.target,
            u = a.type,
            l = a.listener
          if (s) {
            Oe(o, 'one', u, l)
          } else {
            var f = function e() {
              t.off(o, u, e)
              for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++) {
                n[i] = arguments[i]
              }
              l.apply(null, n)
            }
            f.guid = l.guid
            Oe(o, 'one', u, f)
          }
        },
        any: function e() {
          var t = this
          for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++) {
            n[i] = arguments[i]
          }
          var a = De(this, n),
            s = a.isTargetingSelf,
            o = a.target,
            u = a.type,
            l = a.listener
          if (s) {
            Oe(o, 'any', u, l)
          } else {
            var f = function e() {
              t.off(o, u, e)
              for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++) {
                n[i] = arguments[i]
              }
              l.apply(null, n)
            }
            f.guid = l.guid
            Oe(o, 'any', u, f)
          }
        },
        off: function e(t, r, n) {
          if (!t || Ae(t)) {
            ce(this.eventBusEl_, t, r)
          } else {
            var i = t
            var a = r
            Ie(i)
            Ce(a)
            Re(n)
            n = ye(this, n)
            this.off('dispose', n)
            if (i.nodeName) {
              ce(i, a, n)
              ce(i, 'dispose', n)
            } else if (Se(i)) {
              i.off(a, n)
              i.off('dispose', n)
            }
          }
        },
        trigger: function e(t, r) {
          return he(this.eventBusEl_, t, r)
        },
      }
      function ke(t, r) {
        if (r === void 0) {
          r = {}
        }
        var n = r,
          i = n.eventBusKey
        if (i) {
          if (!t[i].nodeName) {
            throw new Error('The eventBusKey "' + i + '" does not refer to an element.')
          }
          t.eventBusEl_ = t[i]
        } else {
          t.eventBusEl_ = S('span', { className: 'vjs-event-bus' })
        }
        c(t, Me)
        if (t.eventedCallbacks) {
          t.eventedCallbacks.forEach(function(e) {
            e()
          })
        }
        t.on('dispose', function() {
          t.off()
          e.setTimeout(function() {
            t.eventBusEl_ = null
          }, 0)
        })
        return t
      }
      var Pe = {
        state: {},
        setState: function e(t) {
          var r = this
          if (typeof t === 'function') {
            t = t()
          }
          var n
          f(t, function(e, t) {
            if (r.state[t] !== e) {
              n = n || {}
              n[t] = { from: r.state[t], to: e }
            }
            r.state[t] = e
          })
          if (n && Se(this)) {
            this.trigger({ changes: n, type: 'statechanged' })
          }
          return n
        },
      }
      function Ne(e, t) {
        c(e, Pe)
        e.state = c({}, e.state, t)
        if (typeof e.handleStateChanged === 'function' && Se(e)) {
          e.on('statechanged', e.handleStateChanged)
        }
        return e
      }
      var Le = function e(t) {
        if (typeof t !== 'string') {
          return t
        }
        return t.replace(/./, function(e) {
          return e.toLowerCase()
        })
      }
      var xe = function e(t) {
        if (typeof t !== 'string') {
          return t
        }
        return t.replace(/./, function(e) {
          return e.toUpperCase()
        })
      }
      var Fe = function e(t, r) {
        return xe(t) === xe(r)
      }
      function Ue() {
        var e = {}
        for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
          r[n] = arguments[n]
        }
        r.forEach(function(t) {
          if (!t) {
            return
          }
          f(t, function(t, r) {
            if (!p(t)) {
              e[r] = t
              return
            }
            if (!p(e[r])) {
              e[r] = {}
            }
            e[r] = Ue(e[r], t)
          })
        })
        return e
      }
      var Be = (function() {
        function t(e, t, r) {
          if (!e && this.play) {
            this.player_ = e = this
          } else {
            this.player_ = e
          }
          this.parentComponent_ = null
          this.options_ = Ue({}, this.options_)
          t = this.options_ = Ue(this.options_, t)
          this.id_ = t.id || (t.el && t.el.id)
          if (!this.id_) {
            var n = (e && e.id && e.id()) || 'no_player'
            this.id_ = n + '_component_' + ae()
          }
          this.name_ = t.name || null
          if (t.el) {
            this.el_ = t.el
          } else if (t.createEl !== false) {
            this.el_ = this.createEl()
          }
          if (t.evented !== false) {
            ke(this, { eventBusKey: this.el_ ? 'el_' : null })
          }
          Ne(this, this.constructor.defaultState)
          this.children_ = []
          this.childIndex_ = {}
          this.childNameIndex_ = {}
          this.setTimeoutIds_ = new Set()
          this.setIntervalIds_ = new Set()
          this.rafIds_ = new Set()
          this.clearingTimersOnDispose_ = false
          if (t.initChildren !== false) {
            this.initChildren()
          }
          this.ready(r)
          if (t.reportTouchActivity !== false) {
            this.enableTouchActivity()
          }
        }
        var r = t.prototype
        r.dispose = function e() {
          this.trigger({ type: 'dispose', bubbles: false })
          if (this.children_) {
            for (var t = this.children_.length - 1; t >= 0; t--) {
              if (this.children_[t].dispose) {
                this.children_[t].dispose()
              }
            }
          }
          this.children_ = null
          this.childIndex_ = null
          this.childNameIndex_ = null
          this.parentComponent_ = null
          if (this.el_) {
            if (this.el_.parentNode) {
              this.el_.parentNode.removeChild(this.el_)
            }
            if (re.has(this.el_)) {
              re['delete'](this.el_)
            }
            this.el_ = null
          }
          this.player_ = null
        }
        r.player = function e() {
          return this.player_
        }
        r.options = function e(t) {
          if (!t) {
            return this.options_
          }
          this.options_ = Ue(this.options_, t)
          return this.options_
        }
        r.el = function e() {
          return this.el_
        }
        r.createEl = function e(t, r, n) {
          return S(t, r, n)
        }
        r.localize = function e(t, r, n) {
          if (n === void 0) {
            n = t
          }
          var i = this.player_.language && this.player_.language()
          var a = this.player_.languages && this.player_.languages()
          var s = a && a[i]
          var o = i && i.split('-')[0]
          var u = a && a[o]
          var l = n
          if (s && s[t]) {
            l = s[t]
          } else if (u && u[t]) {
            l = u[t]
          }
          if (r) {
            l = l.replace(/\{(\d+)\}/g, function(e, t) {
              var n = r[t - 1]
              var i = n
              if (typeof n === 'undefined') {
                i = e
              }
              return i
            })
          }
          return l
        }
        r.contentEl = function e() {
          return this.contentEl_ || this.el_
        }
        r.id = function e() {
          return this.id_
        }
        r.name = function e() {
          return this.name_
        }
        r.children = function e() {
          return this.children_
        }
        r.getChildById = function e(t) {
          return this.childIndex_[t]
        }
        r.getChild = function e(t) {
          if (!t) {
            return
          }
          return this.childNameIndex_[t]
        }
        r.addChild = function e(r, n, i) {
          if (n === void 0) {
            n = {}
          }
          if (i === void 0) {
            i = this.children_.length
          }
          var a
          var s
          if (typeof r === 'string') {
            s = xe(r)
            var o = n.componentClass || s
            n.name = s
            var u = t.getComponent(o)
            if (!u) {
              throw new Error('Component ' + o + ' does not exist')
            }
            if (typeof u !== 'function') {
              return null
            }
            a = new u(this.player_ || this, n)
          } else {
            a = r
          }
          if (a.parentComponent_) {
            a.parentComponent_.removeChild(a)
          }
          this.children_.splice(i, 0, a)
          a.parentComponent_ = this
          if (typeof a.id === 'function') {
            this.childIndex_[a.id()] = a
          }
          s = s || (a.name && xe(a.name()))
          if (s) {
            this.childNameIndex_[s] = a
            this.childNameIndex_[Le(s)] = a
          }
          if (typeof a.el === 'function' && a.el()) {
            var l = this.contentEl().children
            var f = l[i] || null
            this.contentEl().insertBefore(a.el(), f)
          }
          return a
        }
        r.removeChild = function e(t) {
          if (typeof t === 'string') {
            t = this.getChild(t)
          }
          if (!t || !this.children_) {
            return
          }
          var r = false
          for (var n = this.children_.length - 1; n >= 0; n--) {
            if (this.children_[n] === t) {
              r = true
              this.children_.splice(n, 1)
              break
            }
          }
          if (!r) {
            return
          }
          t.parentComponent_ = null
          this.childIndex_[t.id()] = null
          this.childNameIndex_[xe(t.name())] = null
          this.childNameIndex_[Le(t.name())] = null
          var i = t.el()
          if (i && i.parentNode === this.contentEl()) {
            this.contentEl().removeChild(t.el())
          }
        }
        r.initChildren = function e() {
          var r = this
          var n = this.options_.children
          if (n) {
            var i = this.options_
            var a = function e(t) {
              var n = t.name
              var a = t.opts
              if (i[n] !== undefined) {
                a = i[n]
              }
              if (a === false) {
                return
              }
              if (a === true) {
                a = {}
              }
              a.playerOptions = r.options_.playerOptions
              var s = r.addChild(n, a)
              if (s) {
                r[n] = s
              }
            }
            var s
            var o = t.getComponent('Tech')
            if (Array.isArray(n)) {
              s = n
            } else {
              s = Object.keys(n)
            }
            s.concat(
              Object.keys(this.options_).filter(function(e) {
                return !s.some(function(t) {
                  if (typeof t === 'string') {
                    return e === t
                  }
                  return e === t.name
                })
              })
            )
              .map(function(e) {
                var t
                var i
                if (typeof e === 'string') {
                  t = e
                  i = n[t] || r.options_[t] || {}
                } else {
                  t = e.name
                  i = e
                }
                return { name: t, opts: i }
              })
              .filter(function(e) {
                var r = t.getComponent(e.opts.componentClass || xe(e.name))
                return r && !o.isTech(r)
              })
              .forEach(a)
          }
        }
        r.buildCSSClass = function e() {
          return ''
        }
        r.ready = function e(t, r) {
          if (r === void 0) {
            r = false
          }
          if (!t) {
            return
          }
          if (!this.isReady_) {
            this.readyQueue_ = this.readyQueue_ || []
            this.readyQueue_.push(t)
            return
          }
          if (r) {
            t.call(this)
          } else {
            this.setTimeout(t, 1)
          }
        }
        r.triggerReady = function e() {
          this.isReady_ = true
          this.setTimeout(function() {
            var e = this.readyQueue_
            this.readyQueue_ = []
            if (e && e.length > 0) {
              e.forEach(function(e) {
                e.call(this)
              }, this)
            }
            this.trigger('ready')
          }, 1)
        }
        r.$ = function e(t, r) {
          return Y(t, r || this.contentEl())
        }
        r.$$ = function e(t, r) {
          return W(t, r || this.contentEl())
        }
        r.hasClass = function e(t) {
          return I(this.el_, t)
        }
        r.addClass = function e(t) {
          C(this.el_, t)
        }
        r.removeClass = function e(t) {
          R(this.el_, t)
        }
        r.toggleClass = function e(t, r) {
          D(this.el_, t, r)
        }
        r.show = function e() {
          this.removeClass('vjs-hidden')
        }
        r.hide = function e() {
          this.addClass('vjs-hidden')
        }
        r.lockShowing = function e() {
          this.addClass('vjs-lock-showing')
        }
        r.unlockShowing = function e() {
          this.removeClass('vjs-lock-showing')
        }
        r.getAttribute = function e(t) {
          return k(this.el_, t)
        }
        r.setAttribute = function e(t, r) {
          P(this.el_, t, r)
        }
        r.removeAttribute = function e(t) {
          N(this.el_, t)
        }
        r.width = function e(t, r) {
          return this.dimension('width', t, r)
        }
        r.height = function e(t, r) {
          return this.dimension('height', t, r)
        }
        r.dimensions = function e(t, r) {
          this.width(t, true)
          this.height(r)
        }
        r.dimension = function e(t, r, n) {
          if (r !== undefined) {
            if (r === null || r !== r) {
              r = 0
            }
            if (('' + r).indexOf('%') !== -1 || ('' + r).indexOf('px') !== -1) {
              this.el_.style[t] = r
            } else if (r === 'auto') {
              this.el_.style[t] = ''
            } else {
              this.el_.style[t] = r + 'px'
            }
            if (!n) {
              this.trigger('componentresize')
            }
            return
          }
          if (!this.el_) {
            return 0
          }
          var i = this.el_.style[t]
          var a = i.indexOf('px')
          if (a !== -1) {
            return parseInt(i.slice(0, a), 10)
          }
          return parseInt(this.el_['offset' + xe(t)], 10)
        }
        r.currentDimension = function e(t) {
          var r = 0
          if (t !== 'width' && t !== 'height') {
            throw new Error('currentDimension only accepts width or height value')
          }
          r = v(this.el_, t)
          r = parseFloat(r)
          if (r === 0 || isNaN(r)) {
            var n = 'offset' + xe(t)
            r = this.el_[n]
          }
          return r
        }
        r.currentDimensions = function e() {
          return { width: this.currentDimension('width'), height: this.currentDimension('height') }
        }
        r.currentWidth = function e() {
          return this.currentDimension('width')
        }
        r.currentHeight = function e() {
          return this.currentDimension('height')
        }
        r.focus = function e() {
          this.el_.focus()
        }
        r.blur = function e() {
          this.el_.blur()
        }
        r.handleKeyDown = function e(t) {
          if (this.player_) {
            t.stopPropagation()
            this.player_.handleKeyDown(t)
          }
        }
        r.handleKeyPress = function e(t) {
          this.handleKeyDown(t)
        }
        r.emitTapEvents = function t() {
          var r = 0
          var n = null
          var i = 10
          var a = 200
          var s
          this.on('touchstart', function(t) {
            if (t.touches.length === 1) {
              n = { pageX: t.touches[0].pageX, pageY: t.touches[0].pageY }
              r = e.performance.now()
              s = true
            }
          })
          this.on('touchmove', function(e) {
            if (e.touches.length > 1) {
              s = false
            } else if (n) {
              var t = e.touches[0].pageX - n.pageX
              var r = e.touches[0].pageY - n.pageY
              var a = Math.sqrt(t * t + r * r)
              if (a > i) {
                s = false
              }
            }
          })
          var o = function e() {
            s = false
          }
          this.on('touchleave', o)
          this.on('touchcancel', o)
          this.on('touchend', function(t) {
            n = null
            if (s === true) {
              var i = e.performance.now() - r
              if (i < a) {
                t.preventDefault()
                this.trigger('tap')
              }
            }
          })
        }
        r.enableTouchActivity = function e() {
          if (!this.player() || !this.player().reportUserActivity) {
            return
          }
          var t = ye(this.player(), this.player().reportUserActivity)
          var r
          this.on('touchstart', function() {
            t()
            this.clearInterval(r)
            r = this.setInterval(t, 250)
          })
          var n = function e(n) {
            t()
            this.clearInterval(r)
          }
          this.on('touchmove', t)
          this.on('touchend', n)
          this.on('touchcancel', n)
        }
        r.setTimeout = function t(r, n) {
          var i = this
          var a
          r = ye(this, r)
          this.clearTimersOnDispose_()
          a = e.setTimeout(function() {
            if (i.setTimeoutIds_.has(a)) {
              i.setTimeoutIds_['delete'](a)
            }
            r()
          }, n)
          this.setTimeoutIds_.add(a)
          return a
        }
        r.clearTimeout = function t(r) {
          if (this.setTimeoutIds_.has(r)) {
            this.setTimeoutIds_['delete'](r)
            e.clearTimeout(r)
          }
          return r
        }
        r.setInterval = function t(r, n) {
          r = ye(this, r)
          this.clearTimersOnDispose_()
          var i = e.setInterval(r, n)
          this.setIntervalIds_.add(i)
          return i
        }
        r.clearInterval = function t(r) {
          if (this.setIntervalIds_.has(r)) {
            this.setIntervalIds_['delete'](r)
            e.clearInterval(r)
          }
          return r
        }
        r.requestAnimationFrame = function t(r) {
          var n = this
          if (!this.supportsRaf_) {
            return this.setTimeout(r, 1e3 / 60)
          }
          this.clearTimersOnDispose_()
          var i
          r = ye(this, r)
          i = e.requestAnimationFrame(function() {
            if (n.rafIds_.has(i)) {
              n.rafIds_['delete'](i)
            }
            r()
          })
          this.rafIds_.add(i)
          return i
        }
        r.cancelAnimationFrame = function t(r) {
          if (!this.supportsRaf_) {
            return this.clearTimeout(r)
          }
          if (this.rafIds_.has(r)) {
            this.rafIds_['delete'](r)
            e.cancelAnimationFrame(r)
          }
          return r
        }
        r.clearTimersOnDispose_ = function e() {
          var t = this
          if (this.clearingTimersOnDispose_) {
            return
          }
          this.clearingTimersOnDispose_ = true
          this.one('dispose', function() {
            ;[
              ['rafIds_', 'cancelAnimationFrame'],
              ['setTimeoutIds_', 'clearTimeout'],
              ['setIntervalIds_', 'clearInterval'],
            ].forEach(function(e) {
              var r = e[0],
                n = e[1]
              t[r].forEach(t[n], t)
            })
            t.clearingTimersOnDispose_ = false
          })
        }
        t.registerComponent = function e(r, n) {
          if (typeof r !== 'string' || !r) {
            throw new Error('Illegal component name, "' + r + '"; must be a non-empty string.')
          }
          var i = t.getComponent('Tech')
          var a = i && i.isTech(n)
          var s = t === n || t.prototype.isPrototypeOf(n.prototype)
          if (a || !s) {
            var o
            if (a) {
              o = 'techs must be registered using Tech.registerTech()'
            } else {
              o = 'must be a Component subclass'
            }
            throw new Error('Illegal component, "' + r + '"; ' + o + '.')
          }
          r = xe(r)
          if (!t.components_) {
            t.components_ = {}
          }
          var u = t.getComponent('Player')
          if (r === 'Player' && u && u.players) {
            var l = u.players
            var f = Object.keys(l)
            if (
              l &&
              f.length > 0 &&
              f
                .map(function(e) {
                  return l[e]
                })
                .every(Boolean)
            ) {
              throw new Error('Can not register Player component after player has been created.')
            }
          }
          t.components_[r] = n
          t.components_[Le(r)] = n
          return n
        }
        t.getComponent = function e(r) {
          if (!r || !t.components_) {
            return
          }
          return t.components_[r]
        }
        return t
      })()
      Be.prototype.supportsRaf_ =
        typeof e.requestAnimationFrame === 'function' &&
        typeof e.cancelAnimationFrame === 'function'
      Be.registerComponent('Component', Be)
      function je(e, t) {
        e.prototype = Object.create(t.prototype)
        e.prototype.constructor = e
        e.__proto__ = t
      }
      function Ge(e, t) {
        Ge =
          Object.setPrototypeOf ||
          function e(t, r) {
            t.__proto__ = r
            return t
          }
        return Ge(e, t)
      }
      function qe() {
        if (typeof Reflect === 'undefined' || !Reflect.construct) return false
        if (Reflect.construct.sham) return false
        if (typeof Proxy === 'function') return true
        try {
          Date.prototype.toString.call(Reflect.construct(Date, [], function() {}))
          return true
        } catch (e) {
          return false
        }
      }
      function He(e, t, r) {
        if (qe()) {
          He = Reflect.construct
        } else {
          He = function e(t, r, n) {
            var i = [null]
            i.push.apply(i, r)
            var a = Function.bind.apply(t, i)
            var s = new a()
            if (n) Ge(s, n.prototype)
            return s
          }
        }
        return He.apply(null, arguments)
      }
      function Ve(e) {
        if (e === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
        }
        return e
      }
      var Ke = (e.navigator && e.navigator.userAgent) || ''
      var Ye = /AppleWebKit\/([\d.]+)/i.exec(Ke)
      var We = Ye ? parseFloat(Ye.pop()) : null
      var ze = /iPad/i.test(Ke)
      var Xe = /iPhone/i.test(Ke) && !ze
      var $e = /iPod/i.test(Ke)
      var Qe = Xe || ze || $e
      var Je = (function() {
        var e = Ke.match(/OS (\d+)_/i)
        if (e && e[1]) {
          return e[1]
        }
        return null
      })()
      var Ze = /Android/i.test(Ke)
      var et = (function() {
        var e = Ke.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i)
        if (!e) {
          return null
        }
        var t = e[1] && parseFloat(e[1])
        var r = e[2] && parseFloat(e[2])
        if (t && r) {
          return parseFloat(e[1] + '.' + e[2])
        } else if (t) {
          return t
        }
        return null
      })()
      var tt = Ze && et < 5 && We < 537
      var rt = /Firefox/i.test(Ke)
      var nt = /Edge/i.test(Ke)
      var it = !nt && (/Chrome/i.test(Ke) || /CriOS/i.test(Ke))
      var at = (function() {
        var e = Ke.match(/(Chrome|CriOS)\/(\d+)/)
        if (e && e[2]) {
          return parseFloat(e[2])
        }
        return null
      })()
      var st = (function() {
        var e = /MSIE\s(\d+)\.\d/.exec(Ke)
        var t = e && parseFloat(e[1])
        if (!t && /Trident\/7.0/i.test(Ke) && /rv:11.0/.test(Ke)) {
          t = 11
        }
        return t
      })()
      var ot = /Safari/i.test(Ke) && !it && !Ze && !nt
      var ut = (ot || Qe) && !it
      var lt = /Windows/i.test(Ke)
      var ft =
        _() &&
        ('ontouchstart' in e ||
          e.navigator.maxTouchPoints ||
          (e.DocumentTouch && e.document instanceof e.DocumentTouch))
      var dt = Object.freeze({
        IS_IPAD: ze,
        IS_IPHONE: Xe,
        IS_IPOD: $e,
        IS_IOS: Qe,
        IOS_VERSION: Je,
        IS_ANDROID: Ze,
        ANDROID_VERSION: et,
        IS_NATIVE_ANDROID: tt,
        IS_FIREFOX: rt,
        IS_EDGE: nt,
        IS_CHROME: it,
        CHROME_VERSION: at,
        IE_VERSION: st,
        IS_SAFARI: ot,
        IS_ANY_SAFARI: ut,
        IS_WINDOWS: lt,
        TOUCH_ENABLED: ft,
      })
      function ct(e, t, r) {
        if (typeof t !== 'number' || t < 0 || t > r) {
          throw new Error(
            "Failed to execute '" +
              e +
              "' on 'TimeRanges': The index provided (" +
              t +
              ') is non-numeric or out of bounds (0-' +
              r +
              ').'
          )
        }
      }
      function ht(e, t, r, n) {
        ct(e, n, r.length - 1)
        return r[n][t]
      }
      function pt(e) {
        if (e === undefined || e.length === 0) {
          return {
            length: 0,
            start: function e() {
              throw new Error('This TimeRanges object is empty')
            },
            end: function e() {
              throw new Error('This TimeRanges object is empty')
            },
          }
        }
        return {
          length: e.length,
          start: ht.bind(null, 'start', 0, e),
          end: ht.bind(null, 'end', 1, e),
        }
      }
      function vt(e, t) {
        if (Array.isArray(e)) {
          return pt(e)
        } else if (e === undefined || t === undefined) {
          return pt()
        }
        return pt([[e, t]])
      }
      function gt(e, t) {
        var r = 0
        var n
        var i
        if (!t) {
          return 0
        }
        if (!e || !e.length) {
          e = vt(0, 0)
        }
        for (var a = 0; a < e.length; a++) {
          n = e.start(a)
          i = e.end(a)
          if (i > t) {
            i = t
          }
          r += i - n
        }
        return r / t
      }
      var mt = { prefixed: true }
      var yt = [
        [
          'requestFullscreen',
          'exitFullscreen',
          'fullscreenElement',
          'fullscreenEnabled',
          'fullscreenchange',
          'fullscreenerror',
          'fullscreen',
        ],
        [
          'webkitRequestFullscreen',
          'webkitExitFullscreen',
          'webkitFullscreenElement',
          'webkitFullscreenEnabled',
          'webkitfullscreenchange',
          'webkitfullscreenerror',
          '-webkit-full-screen',
        ],
        [
          'mozRequestFullScreen',
          'mozCancelFullScreen',
          'mozFullScreenElement',
          'mozFullScreenEnabled',
          'mozfullscreenchange',
          'mozfullscreenerror',
          '-moz-full-screen',
        ],
        [
          'msRequestFullscreen',
          'msExitFullscreen',
          'msFullscreenElement',
          'msFullscreenEnabled',
          'MSFullscreenChange',
          'MSFullscreenError',
          '-ms-fullscreen',
        ],
      ]
      var _t = yt[0]
      var Tt
      for (var Et = 0; Et < yt.length; Et++) {
        if (yt[Et][1] in t) {
          Tt = yt[Et]
          break
        }
      }
      if (Tt) {
        for (var bt = 0; bt < Tt.length; bt++) {
          mt[_t[bt]] = Tt[bt]
        }
        mt.prefixed = Tt[0] !== _t[0]
      }
      function St(e) {
        if (e instanceof St) {
          return e
        }
        if (typeof e === 'number') {
          this.code = e
        } else if (typeof e === 'string') {
          this.message = e
        } else if (h(e)) {
          if (typeof e.code === 'number') {
            this.code = e.code
          }
          c(this, e)
        }
        if (!this.message) {
          this.message = St.defaultMessages[this.code] || ''
        }
      }
      St.prototype.code = 0
      St.prototype.message = ''
      St.prototype.status = null
      St.errorTypes = [
        'MEDIA_ERR_CUSTOM',
        'MEDIA_ERR_ABORTED',
        'MEDIA_ERR_NETWORK',
        'MEDIA_ERR_DECODE',
        'MEDIA_ERR_SRC_NOT_SUPPORTED',
        'MEDIA_ERR_ENCRYPTED',
      ]
      St.defaultMessages = {
        1: 'You aborted the media playback',
        2: 'A network error caused the media download to fail part-way.',
        3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',
        4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',
        5: 'The media is encrypted and we do not have the keys to decrypt it.',
      }
      for (var wt = 0; wt < St.errorTypes.length; wt++) {
        St[St.errorTypes[wt]] = wt
        St.prototype[St.errorTypes[wt]] = wt
      }
      var At = It
      function It(e, t) {
        var r
        var n = null
        try {
          r = JSON.parse(e, t)
        } catch (e) {
          n = e
        }
        return [n, r]
      }
      function Ct(e) {
        return e !== undefined && e !== null && typeof e.then === 'function'
      }
      function Rt(e) {
        if (Ct(e)) {
          e.then(null, function(e) {})
        }
      }
      var Dt = function e(t) {
        var r = [
          'kind',
          'label',
          'language',
          'id',
          'inBandMetadataTrackDispatchType',
          'mode',
          'src',
        ].reduce(
          function(e, r, n) {
            if (t[r]) {
              e[r] = t[r]
            }
            return e
          },
          {
            cues:
              t.cues &&
              Array.prototype.map.call(t.cues, function(e) {
                return { startTime: e.startTime, endTime: e.endTime, text: e.text, id: e.id }
              }),
          }
        )
        return r
      }
      var Ot = function e(t) {
        var r = t.$$('track')
        var n = Array.prototype.map.call(r, function(e) {
          return e.track
        })
        var i = Array.prototype.map.call(r, function(e) {
          var t = Dt(e.track)
          if (e.src) {
            t.src = e.src
          }
          return t
        })
        return i.concat(
          Array.prototype.filter
            .call(t.textTracks(), function(e) {
              return n.indexOf(e) === -1
            })
            .map(Dt)
        )
      }
      var Mt = function e(t, r) {
        t.forEach(function(e) {
          var t = r.addRemoteTextTrack(e).track
          if (!e.src && e.cues) {
            e.cues.forEach(function(e) {
              return t.addCue(e)
            })
          }
        })
        return r.textTracks()
      }
      var kt = { textTracksToJson: Ot, jsonToTextTracks: Mt, trackToJson_: Dt }
      function Pt(e, t) {
        return (t = { exports: {} }), e(t, t.exports), t.exports
      }
      var Nt = Pt(function(e, t) {
        function r(e) {
          if (e && 'object' === typeof e) {
            var t = e.which || e.keyCode || e.charCode
            if (t) e = t
          }
          if ('number' === typeof e) return s[e]
          var r = String(e)
          var a = n[r.toLowerCase()]
          if (a) return a
          var a = i[r.toLowerCase()]
          if (a) return a
          if (r.length === 1) return r.charCodeAt(0)
          return undefined
        }
        r.isEventKey = function e(t, r) {
          if (t && 'object' === typeof t) {
            var a = t.which || t.keyCode || t.charCode
            if (a === null || a === undefined) {
              return false
            }
            if (typeof r === 'string') {
              var s = n[r.toLowerCase()]
              if (s) {
                return s === a
              }
              var s = i[r.toLowerCase()]
              if (s) {
                return s === a
              }
            } else if (typeof r === 'number') {
              return r === a
            }
            return false
          }
        }
        t = e.exports = r
        var n = (t.code = t.codes = {
          backspace: 8,
          tab: 9,
          enter: 13,
          shift: 16,
          ctrl: 17,
          alt: 18,
          'pause/break': 19,
          'caps lock': 20,
          esc: 27,
          space: 32,
          'page up': 33,
          'page down': 34,
          end: 35,
          home: 36,
          left: 37,
          up: 38,
          right: 39,
          down: 40,
          insert: 45,
          delete: 46,
          command: 91,
          'left command': 91,
          'right command': 93,
          'numpad *': 106,
          'numpad +': 107,
          'numpad -': 109,
          'numpad .': 110,
          'numpad /': 111,
          'num lock': 144,
          'scroll lock': 145,
          'my computer': 182,
          'my calculator': 183,
          ';': 186,
          '=': 187,
          ',': 188,
          '-': 189,
          '.': 190,
          '/': 191,
          '`': 192,
          '[': 219,
          '\\': 220,
          ']': 221,
          "'": 222,
        })
        var i = (t.aliases = {
          windows: 91,
          'â‡§': 16,
          'âŒ¥': 18,
          âŒƒ: 17,
          'âŒ˜': 91,
          ctl: 17,
          control: 17,
          option: 18,
          pause: 19,
          break: 19,
          caps: 20,
          return: 13,
          escape: 27,
          spc: 32,
          spacebar: 32,
          pgup: 33,
          pgdn: 34,
          ins: 45,
          del: 46,
          cmd: 91,
        })
        for (a = 97; a < 123; a++) {
          n[String.fromCharCode(a)] = a - 32
        }
        for (var a = 48; a < 58; a++) {
          n[a - 48] = a
        }
        for (a = 1; a < 13; a++) {
          n['f' + a] = a + 111
        }
        for (a = 0; a < 10; a++) {
          n['numpad ' + a] = a + 96
        }
        var s = (t.names = t.title = {})
        for (a in n) {
          s[n[a]] = a
        }
        for (var o in i) {
          n[o] = i[o]
        }
      })
      var Lt = Nt.code
      var xt = Nt.codes
      var Ft = Nt.aliases
      var Ut = Nt.names
      var Bt = Nt.title
      var jt = 'vjs-modal-dialog'
      var Gt = (function(r) {
        je(n, r)
        function n(e, t) {
          var n
          n = r.call(this, e, t) || this
          n.opened_ = n.hasBeenOpened_ = n.hasBeenFilled_ = false
          n.closeable(!n.options_.uncloseable)
          n.content(n.options_.content)
          n.contentEl_ = S('div', { className: jt + '-content' }, { role: 'document' })
          n.descEl_ = S('p', {
            className: jt + '-description vjs-control-text',
            id: n.el().getAttribute('aria-describedby'),
          })
          w(n.descEl_, n.description())
          n.el_.appendChild(n.descEl_)
          n.el_.appendChild(n.contentEl_)
          return n
        }
        var i = n.prototype
        i.createEl = function e() {
          return r.prototype.createEl.call(
            this,
            'div',
            { className: this.buildCSSClass(), tabIndex: -1 },
            {
              'aria-describedby': this.id() + '_description',
              'aria-hidden': 'true',
              'aria-label': this.label(),
              role: 'dialog',
            }
          )
        }
        i.dispose = function e() {
          this.contentEl_ = null
          this.descEl_ = null
          this.previouslyActiveEl_ = null
          r.prototype.dispose.call(this)
        }
        i.buildCSSClass = function e() {
          return jt + ' vjs-hidden ' + r.prototype.buildCSSClass.call(this)
        }
        i.label = function e() {
          return this.localize(this.options_.label || 'Modal Window')
        }
        i.description = function e() {
          var t = this.options_.description || this.localize('This is a modal window.')
          if (this.closeable()) {
            t +=
              ' ' +
              this.localize(
                'This modal can be closed by pressing the Escape key or activating the close button.'
              )
          }
          return t
        }
        i.open = function e() {
          if (!this.opened_) {
            var t = this.player()
            this.trigger('beforemodalopen')
            this.opened_ = true
            if (this.options_.fillAlways || (!this.hasBeenOpened_ && !this.hasBeenFilled_)) {
              this.fill()
            }
            this.wasPlaying_ = !t.paused()
            if (this.options_.pauseOnOpen && this.wasPlaying_) {
              t.pause()
            }
            this.on('keydown', this.handleKeyDown)
            this.hadControls_ = t.controls()
            t.controls(false)
            this.show()
            this.conditionalFocus_()
            this.el().setAttribute('aria-hidden', 'false')
            this.trigger('modalopen')
            this.hasBeenOpened_ = true
          }
        }
        i.opened = function e(t) {
          if (typeof t === 'boolean') {
            this[t ? 'open' : 'close']()
          }
          return this.opened_
        }
        i.close = function e() {
          if (!this.opened_) {
            return
          }
          var t = this.player()
          this.trigger('beforemodalclose')
          this.opened_ = false
          if (this.wasPlaying_ && this.options_.pauseOnOpen) {
            t.play()
          }
          this.off('keydown', this.handleKeyDown)
          if (this.hadControls_) {
            t.controls(true)
          }
          this.hide()
          this.el().setAttribute('aria-hidden', 'true')
          this.trigger('modalclose')
          this.conditionalBlur_()
          if (this.options_.temporary) {
            this.dispose()
          }
        }
        i.closeable = function e(t) {
          if (typeof t === 'boolean') {
            var e = (this.closeable_ = !!t)
            var r = this.getChild('closeButton')
            if (e && !r) {
              var n = this.contentEl_
              this.contentEl_ = this.el_
              r = this.addChild('closeButton', { controlText: 'Close Modal Dialog' })
              this.contentEl_ = n
              this.on(r, 'close', this.close)
            }
            if (!e && r) {
              this.off(r, 'close', this.close)
              this.removeChild(r)
              r.dispose()
            }
          }
          return this.closeable_
        }
        i.fill = function e() {
          this.fillWith(this.content())
        }
        i.fillWith = function e(t) {
          var r = this.contentEl()
          var n = r.parentNode
          var i = r.nextSibling
          this.trigger('beforemodalfill')
          this.hasBeenFilled_ = true
          n.removeChild(r)
          this.empty()
          V(r, t)
          this.trigger('modalfill')
          if (i) {
            n.insertBefore(r, i)
          } else {
            n.appendChild(r)
          }
          var a = this.getChild('closeButton')
          if (a) {
            n.appendChild(a.el_)
          }
        }
        i.empty = function e() {
          this.trigger('beforemodalempty')
          G(this.contentEl())
          this.trigger('modalempty')
        }
        i.content = function e(t) {
          if (typeof t !== 'undefined') {
            this.content_ = t
          }
          return this.content_
        }
        i.conditionalFocus_ = function e() {
          var r = t.activeElement
          var n = this.player_.el_
          this.previouslyActiveEl_ = null
          if (n.contains(r) || n === r) {
            this.previouslyActiveEl_ = r
            this.focus()
          }
        }
        i.conditionalBlur_ = function e() {
          if (this.previouslyActiveEl_) {
            this.previouslyActiveEl_.focus()
            this.previouslyActiveEl_ = null
          }
        }
        i.handleKeyDown = function e(r) {
          r.stopPropagation()
          if (Nt.isEventKey(r, 'Escape') && this.closeable()) {
            r.preventDefault()
            this.close()
            return
          }
          if (!Nt.isEventKey(r, 'Tab')) {
            return
          }
          var n = this.focusableEls_()
          var i = this.el_.querySelector(':focus')
          var a
          for (var s = 0; s < n.length; s++) {
            if (i === n[s]) {
              a = s
              break
            }
          }
          if (t.activeElement === this.el_) {
            a = 0
          }
          if (r.shiftKey && a === 0) {
            n[n.length - 1].focus()
            r.preventDefault()
          } else if (!r.shiftKey && a === n.length - 1) {
            n[0].focus()
            r.preventDefault()
          }
        }
        i.focusableEls_ = function t() {
          var r = this.el_.querySelectorAll('*')
          return Array.prototype.filter.call(r, function(t) {
            return (
              ((t instanceof e.HTMLAnchorElement || t instanceof e.HTMLAreaElement) &&
                t.hasAttribute('href')) ||
              ((t instanceof e.HTMLInputElement ||
                t instanceof e.HTMLSelectElement ||
                t instanceof e.HTMLTextAreaElement ||
                t instanceof e.HTMLButtonElement) &&
                !t.hasAttribute('disabled')) ||
              t instanceof e.HTMLIFrameElement ||
              t instanceof e.HTMLObjectElement ||
              t instanceof e.HTMLEmbedElement ||
              (t.hasAttribute('tabindex') && t.getAttribute('tabindex') !== -1) ||
              t.hasAttribute('contenteditable')
            )
          })
        }
        return n
      })(Be)
      Gt.prototype.options_ = { pauseOnOpen: true, temporary: true }
      Be.registerComponent('ModalDialog', Gt)
      var qt = (function(e) {
        je(t, e)
        function t(t) {
          var r
          if (t === void 0) {
            t = []
          }
          r = e.call(this) || this
          r.tracks_ = []
          Object.defineProperty(Ve(r), 'length', {
            get: function e() {
              return this.tracks_.length
            },
          })
          for (var n = 0; n < t.length; n++) {
            r.addTrack(t[n])
          }
          return r
        }
        var r = t.prototype
        r.addTrack = function e(t) {
          var r = this.tracks_.length
          if (!('' + r in this)) {
            Object.defineProperty(this, r, {
              get: function e() {
                return this.tracks_[r]
              },
            })
          }
          if (this.tracks_.indexOf(t) === -1) {
            this.tracks_.push(t)
            this.trigger({ track: t, type: 'addtrack', target: this })
          }
        }
        r.removeTrack = function e(t) {
          var r
          for (var n = 0, i = this.length; n < i; n++) {
            if (this[n] === t) {
              r = this[n]
              if (r.off) {
                r.off()
              }
              this.tracks_.splice(n, 1)
              break
            }
          }
          if (!r) {
            return
          }
          this.trigger({ track: r, type: 'removetrack', target: this })
        }
        r.getTrackById = function e(t) {
          var r = null
          for (var n = 0, i = this.length; n < i; n++) {
            var a = this[n]
            if (a.id === t) {
              r = a
              break
            }
          }
          return r
        }
        return t
      })(Ee)
      qt.prototype.allowedEvents_ = {
        change: 'change',
        addtrack: 'addtrack',
        removetrack: 'removetrack',
      }
      for (var Ht in qt.prototype.allowedEvents_) {
        qt.prototype['on' + Ht] = null
      }
      var Vt = function e(t, r) {
        for (var n = 0; n < t.length; n++) {
          if (!Object.keys(t[n]).length || r.id === t[n].id) {
            continue
          }
          t[n].enabled = false
        }
      }
      var Kt = (function(e) {
        je(t, e)
        function t(t) {
          var r
          if (t === void 0) {
            t = []
          }
          for (var n = t.length - 1; n >= 0; n--) {
            if (t[n].enabled) {
              Vt(t, t[n])
              break
            }
          }
          r = e.call(this, t) || this
          r.changing_ = false
          return r
        }
        var r = t.prototype
        r.addTrack = function t(r) {
          var n = this
          if (r.enabled) {
            Vt(this, r)
          }
          e.prototype.addTrack.call(this, r)
          if (!r.addEventListener) {
            return
          }
          r.enabledChange_ = function() {
            if (n.changing_) {
              return
            }
            n.changing_ = true
            Vt(n, r)
            n.changing_ = false
            n.trigger('change')
          }
          r.addEventListener('enabledchange', r.enabledChange_)
        }
        r.removeTrack = function t(r) {
          e.prototype.removeTrack.call(this, r)
          if (r.removeEventListener && r.enabledChange_) {
            r.removeEventListener('enabledchange', r.enabledChange_)
            r.enabledChange_ = null
          }
        }
        return t
      })(qt)
      var Yt = function e(t, r) {
        for (var n = 0; n < t.length; n++) {
          if (!Object.keys(t[n]).length || r.id === t[n].id) {
            continue
          }
          t[n].selected = false
        }
      }
      var Wt = (function(e) {
        je(t, e)
        function t(t) {
          var r
          if (t === void 0) {
            t = []
          }
          for (var n = t.length - 1; n >= 0; n--) {
            if (t[n].selected) {
              Yt(t, t[n])
              break
            }
          }
          r = e.call(this, t) || this
          r.changing_ = false
          Object.defineProperty(Ve(r), 'selectedIndex', {
            get: function e() {
              for (var t = 0; t < this.length; t++) {
                if (this[t].selected) {
                  return t
                }
              }
              return -1
            },
            set: function e() {},
          })
          return r
        }
        var r = t.prototype
        r.addTrack = function t(r) {
          var n = this
          if (r.selected) {
            Yt(this, r)
          }
          e.prototype.addTrack.call(this, r)
          if (!r.addEventListener) {
            return
          }
          r.selectedChange_ = function() {
            if (n.changing_) {
              return
            }
            n.changing_ = true
            Yt(n, r)
            n.changing_ = false
            n.trigger('change')
          }
          r.addEventListener('selectedchange', r.selectedChange_)
        }
        r.removeTrack = function t(r) {
          e.prototype.removeTrack.call(this, r)
          if (r.removeEventListener && r.selectedChange_) {
            r.removeEventListener('selectedchange', r.selectedChange_)
            r.selectedChange_ = null
          }
        }
        return t
      })(qt)
      var zt = (function(e) {
        je(t, e)
        function t() {
          return e.apply(this, arguments) || this
        }
        var r = t.prototype
        r.addTrack = function t(r) {
          var n = this
          e.prototype.addTrack.call(this, r)
          if (!this.queueChange_) {
            this.queueChange_ = function() {
              return n.queueTrigger('change')
            }
          }
          if (!this.triggerSelectedlanguagechange) {
            this.triggerSelectedlanguagechange_ = function() {
              return n.trigger('selectedlanguagechange')
            }
          }
          r.addEventListener('modechange', this.queueChange_)
          var i = ['metadata', 'chapters']
          if (i.indexOf(r.kind) === -1) {
            r.addEventListener('modechange', this.triggerSelectedlanguagechange_)
          }
        }
        r.removeTrack = function t(r) {
          e.prototype.removeTrack.call(this, r)
          if (r.removeEventListener) {
            if (this.queueChange_) {
              r.removeEventListener('modechange', this.queueChange_)
            }
            if (this.selectedlanguagechange_) {
              r.removeEventListener('modechange', this.triggerSelectedlanguagechange_)
            }
          }
        }
        return t
      })(qt)
      var Xt = (function() {
        function e(e) {
          if (e === void 0) {
            e = []
          }
          this.trackElements_ = []
          Object.defineProperty(this, 'length', {
            get: function e() {
              return this.trackElements_.length
            },
          })
          for (var t = 0, r = e.length; t < r; t++) {
            this.addTrackElement_(e[t])
          }
        }
        var t = e.prototype
        t.addTrackElement_ = function e(t) {
          var r = this.trackElements_.length
          if (!('' + r in this)) {
            Object.defineProperty(this, r, {
              get: function e() {
                return this.trackElements_[r]
              },
            })
          }
          if (this.trackElements_.indexOf(t) === -1) {
            this.trackElements_.push(t)
          }
        }
        t.getTrackElementByTrack_ = function e(t) {
          var r
          for (var n = 0, i = this.trackElements_.length; n < i; n++) {
            if (t === this.trackElements_[n].track) {
              r = this.trackElements_[n]
              break
            }
          }
          return r
        }
        t.removeTrackElement_ = function e(t) {
          for (var r = 0, n = this.trackElements_.length; r < n; r++) {
            if (t === this.trackElements_[r]) {
              if (
                this.trackElements_[r].track &&
                typeof this.trackElements_[r].track.off === 'function'
              ) {
                this.trackElements_[r].track.off()
              }
              if (typeof this.trackElements_[r].off === 'function') {
                this.trackElements_[r].off()
              }
              this.trackElements_.splice(r, 1)
              break
            }
          }
        }
        return e
      })()
      var $t = (function() {
        function e(t) {
          e.prototype.setCues_.call(this, t)
          Object.defineProperty(this, 'length', {
            get: function e() {
              return this.length_
            },
          })
        }
        var t = e.prototype
        t.setCues_ = function e(t) {
          var r = this.length || 0
          var n = 0
          var i = t.length
          this.cues_ = t
          this.length_ = t.length
          var a = function e(t) {
            if (!('' + t in this)) {
              Object.defineProperty(this, '' + t, {
                get: function e() {
                  return this.cues_[t]
                },
              })
            }
          }
          if (r < i) {
            n = r
            for (; n < i; n++) {
              a.call(this, n)
            }
          }
        }
        t.getCueById = function e(t) {
          var r = null
          for (var n = 0, i = this.length; n < i; n++) {
            var a = this[n]
            if (a.id === t) {
              r = a
              break
            }
          }
          return r
        }
        return e
      })()
      var Qt = {
        alternative: 'alternative',
        captions: 'captions',
        main: 'main',
        sign: 'sign',
        subtitles: 'subtitles',
        commentary: 'commentary',
      }
      var Jt = {
        alternative: 'alternative',
        descriptions: 'descriptions',
        main: 'main',
        'main-desc': 'main-desc',
        translation: 'translation',
        commentary: 'commentary',
      }
      var Zt = {
        subtitles: 'subtitles',
        captions: 'captions',
        descriptions: 'descriptions',
        chapters: 'chapters',
        metadata: 'metadata',
      }
      var er = { disabled: 'disabled', hidden: 'hidden', showing: 'showing' }
      var tr = (function(e) {
        je(t, e)
        function t(t) {
          var r
          if (t === void 0) {
            t = {}
          }
          r = e.call(this) || this
          var n = {
            id: t.id || 'vjs_track_' + ae(),
            kind: t.kind || '',
            label: t.label || '',
            language: t.language || '',
          }
          var i = function e(t) {
            Object.defineProperty(Ve(r), t, {
              get: function e() {
                return n[t]
              },
              set: function e() {},
            })
          }
          for (var a in n) {
            i(a)
          }
          return r
        }
        return t
      })(Ee)
      var rr = function r(n) {
        var i = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']
        var a = t.createElement('a')
        a.href = n
        var s = a.host === '' && a.protocol !== 'file:'
        var o
        if (s) {
          o = t.createElement('div')
          o.innerHTML = '<a href="' + n + '"></a>'
          a = o.firstChild
          o.setAttribute('style', 'display:none; position:absolute;')
          t.body.appendChild(o)
        }
        var u = {}
        for (var l = 0; l < i.length; l++) {
          u[i[l]] = a[i[l]]
        }
        if (u.protocol === 'http:') {
          u.host = u.host.replace(/:80$/, '')
        }
        if (u.protocol === 'https:') {
          u.host = u.host.replace(/:443$/, '')
        }
        if (!u.protocol) {
          u.protocol = e.location.protocol
        }
        if (s) {
          t.body.removeChild(o)
        }
        return u
      }
      var nr = function e(r) {
        if (!r.match(/^https?:\/\//)) {
          var n = t.createElement('div')
          n.innerHTML = '<a href="' + r + '">x</a>'
          r = n.firstChild.href
        }
        return r
      }
      var ir = function e(t) {
        if (typeof t === 'string') {
          var r = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/
          var n = r.exec(t)
          if (n) {
            return n.pop().toLowerCase()
          }
        }
        return ''
      }
      var ar = function t(r) {
        var n = e.location
        var i = rr(r)
        var a = i.protocol === ':' ? n.protocol : i.protocol
        var s = a + i.host !== n.protocol + n.host
        return s
      }
      var sr = Object.freeze({
        parseUrl: rr,
        getAbsoluteURL: nr,
        getFileExtension: ir,
        isCrossOrigin: ar,
      })
      var or = lr
      var ur = Object.prototype.toString
      function lr(e) {
        var t = ur.call(e)
        return (
          t === '[object Function]' ||
          (typeof e === 'function' && t !== '[object RegExp]') ||
          (typeof window !== 'undefined' &&
            (e === window.setTimeout ||
              e === window.alert ||
              e === window.confirm ||
              e === window.prompt))
        )
      }
      var fr = 'Function.prototype.bind called on incompatible '
      var dr = Array.prototype.slice
      var cr = Object.prototype.toString
      var hr = '[object Function]'
      var pr = function e(t) {
        var r = this
        if (typeof r !== 'function' || cr.call(r) !== hr) {
          throw new TypeError(fr + r)
        }
        var n = dr.call(arguments, 1)
        var i
        var a = function e() {
          if (this instanceof i) {
            var a = r.apply(this, n.concat(dr.call(arguments)))
            if (Object(a) === a) {
              return a
            }
            return this
          } else {
            return r.apply(t, n.concat(dr.call(arguments)))
          }
        }
        var s = Math.max(0, r.length - n.length)
        var o = []
        for (var u = 0; u < s; u++) {
          o.push('$' + u)
        }
        i = Function(
          'binder',
          'return function (' + o.join(',') + '){ return binder.apply(this,arguments); }'
        )(a)
        if (r.prototype) {
          var l = function e() {}
          l.prototype = r.prototype
          i.prototype = new l()
          l.prototype = null
        }
        return i
      }
      var vr = Function.prototype.bind || pr
      var gr = Object.prototype.toString
      var mr = function e(t) {
        var r = gr.call(t)
        var n = r === '[object Arguments]'
        if (!n) {
          n =
            r !== '[object Array]' &&
            t !== null &&
            typeof t === 'object' &&
            typeof t.length === 'number' &&
            t.length >= 0 &&
            gr.call(t.callee) === '[object Function]'
        }
        return n
      }
      var yr
      if (!Object.keys) {
        var _r = Object.prototype.hasOwnProperty
        var Tr = Object.prototype.toString
        var Er = mr
        var br = Object.prototype.propertyIsEnumerable
        var Sr = !br.call({ toString: null }, 'toString')
        var wr = br.call(function() {}, 'prototype')
        var Ar = [
          'toString',
          'toLocaleString',
          'valueOf',
          'hasOwnProperty',
          'isPrototypeOf',
          'propertyIsEnumerable',
          'constructor',
        ]
        var Ir = function e(t) {
          var r = t.constructor
          return r && r.prototype === t
        }
        var Cr = {
          $applicationCache: true,
          $console: true,
          $external: true,
          $frame: true,
          $frameElement: true,
          $frames: true,
          $innerHeight: true,
          $innerWidth: true,
          $onmozfullscreenchange: true,
          $onmozfullscreenerror: true,
          $outerHeight: true,
          $outerWidth: true,
          $pageXOffset: true,
          $pageYOffset: true,
          $parent: true,
          $scrollLeft: true,
          $scrollTop: true,
          $scrollX: true,
          $scrollY: true,
          $self: true,
          $webkitIndexedDB: true,
          $webkitStorageInfo: true,
          $window: true,
        }
        var Rr = (function() {
          if (typeof window === 'undefined') {
            return false
          }
          for (var e in window) {
            try {
              if (
                !Cr['$' + e] &&
                _r.call(window, e) &&
                window[e] !== null &&
                typeof window[e] === 'object'
              ) {
                try {
                  Ir(window[e])
                } catch (e) {
                  return true
                }
              }
            } catch (e) {
              return true
            }
          }
          return false
        })()
        var Dr = function e(t) {
          if (typeof window === 'undefined' || !Rr) {
            return Ir(t)
          }
          try {
            return Ir(t)
          } catch (e) {
            return false
          }
        }
        yr = function e(t) {
          var r = t !== null && typeof t === 'object'
          var n = Tr.call(t) === '[object Function]'
          var i = Er(t)
          var a = r && Tr.call(t) === '[object String]'
          var s = []
          if (!r && !n && !i) {
            throw new TypeError('Object.keys called on a non-object')
          }
          var o = wr && n
          if (a && t.length > 0 && !_r.call(t, 0)) {
            for (var u = 0; u < t.length; ++u) {
              s.push(String(u))
            }
          }
          if (i && t.length > 0) {
            for (var l = 0; l < t.length; ++l) {
              s.push(String(l))
            }
          } else {
            for (var f in t) {
              if (!(o && f === 'prototype') && _r.call(t, f)) {
                s.push(String(f))
              }
            }
          }
          if (Sr) {
            var d = Dr(t)
            for (var c = 0; c < Ar.length; ++c) {
              if (!(d && Ar[c] === 'constructor') && _r.call(t, Ar[c])) {
                s.push(Ar[c])
              }
            }
          }
          return s
        }
      }
      var Or = yr
      var Mr = Array.prototype.slice
      var kr = Object.keys
      var Pr = kr
        ? function e(t) {
            return kr(t)
          }
        : Or
      var Nr = Object.keys
      Pr.shim = function e() {
        if (Object.keys) {
          var t = (function() {
            var e = Object.keys(arguments)
            return e && e.length === arguments.length
          })(1, 2)
          if (!t) {
            Object.keys = function e(t) {
              if (mr(t)) {
                return Nr(Mr.call(t))
              }
              return Nr(t)
            }
          }
        } else {
          Object.keys = Pr
        }
        return Object.keys || Pr
      }
      var Lr = Pr
      var xr = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol'
      var Fr = Object.prototype.toString
      var Ur = Array.prototype.concat
      var Br = Object.defineProperty
      var jr = function e(t) {
        return typeof t === 'function' && Fr.call(t) === '[object Function]'
      }
      var Gr = function e() {
        var t = {}
        try {
          Br(t, 'x', { enumerable: false, value: t })
          for (var r in t) {
            return false
          }
          return t.x === t
        } catch (e) {
          return false
        }
      }
      var qr = Br && Gr()
      var Hr = function e(t, r, n, i) {
        if (r in t && (!jr(i) || !i())) {
          return
        }
        if (qr) {
          Br(t, r, { configurable: true, enumerable: false, value: n, writable: true })
        } else {
          t[r] = n
        }
      }
      var Vr = function e(t, r) {
        var n = arguments.length > 2 ? arguments[2] : {}
        var i = Lr(r)
        if (xr) {
          i = Ur.call(i, Object.getOwnPropertySymbols(r))
        }
        for (var a = 0; a < i.length; a += 1) {
          Hr(t, i[a], r[i[a]], n[i[a]])
        }
      }
      Vr.supportsDescriptors = !!qr
      var Kr = Vr
      var Yr
      var Wr = Object.getOwnPropertyDescriptor
        ? (function() {
            return Object.getOwnPropertyDescriptor(arguments, 'callee').get
          })()
        : function() {
            throw new TypeError()
          }
      var zr = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
      var Xr =
        Object.getPrototypeOf ||
        function(e) {
          return e.__proto__
        }
      var $r = Yr
      var Qr = Yr
      var Jr = Yr
      var Zr = typeof Uint8Array === 'undefined' ? Yr : Xr(Uint8Array)
      var en = {
        '$ %Array%': Array,
        '$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? Yr : ArrayBuffer,
        '$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? Yr : ArrayBuffer.prototype,
        '$ %ArrayIteratorPrototype%': zr ? Xr([][Symbol.iterator]()) : Yr,
        '$ %ArrayPrototype%': Array.prototype,
        '$ %ArrayProto_entries%': Array.prototype.entries,
        '$ %ArrayProto_forEach%': Array.prototype.forEach,
        '$ %ArrayProto_keys%': Array.prototype.keys,
        '$ %ArrayProto_values%': Array.prototype.values,
        '$ %AsyncFromSyncIteratorPrototype%': Yr,
        '$ %AsyncFunction%': Qr,
        '$ %AsyncFunctionPrototype%': Yr,
        '$ %AsyncGenerator%': Yr,
        '$ %AsyncGeneratorFunction%': Jr,
        '$ %AsyncGeneratorPrototype%': Yr,
        '$ %AsyncIteratorPrototype%': Yr,
        '$ %Atomics%': typeof Atomics === 'undefined' ? Yr : Atomics,
        '$ %Boolean%': Boolean,
        '$ %BooleanPrototype%': Boolean.prototype,
        '$ %DataView%': typeof DataView === 'undefined' ? Yr : DataView,
        '$ %DataViewPrototype%': typeof DataView === 'undefined' ? Yr : DataView.prototype,
        '$ %Date%': Date,
        '$ %DatePrototype%': Date.prototype,
        '$ %decodeURI%': decodeURI,
        '$ %decodeURIComponent%': decodeURIComponent,
        '$ %encodeURI%': encodeURI,
        '$ %encodeURIComponent%': encodeURIComponent,
        '$ %Error%': Error,
        '$ %ErrorPrototype%': Error.prototype,
        '$ %eval%': eval,
        '$ %EvalError%': EvalError,
        '$ %EvalErrorPrototype%': EvalError.prototype,
        '$ %Float32Array%': typeof Float32Array === 'undefined' ? Yr : Float32Array,
        '$ %Float32ArrayPrototype%':
          typeof Float32Array === 'undefined' ? Yr : Float32Array.prototype,
        '$ %Float64Array%': typeof Float64Array === 'undefined' ? Yr : Float64Array,
        '$ %Float64ArrayPrototype%':
          typeof Float64Array === 'undefined' ? Yr : Float64Array.prototype,
        '$ %Function%': Function,
        '$ %FunctionPrototype%': Function.prototype,
        '$ %Generator%': Yr,
        '$ %GeneratorFunction%': $r,
        '$ %GeneratorPrototype%': Yr,
        '$ %Int8Array%': typeof Int8Array === 'undefined' ? Yr : Int8Array,
        '$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? Yr : Int8Array.prototype,
        '$ %Int16Array%': typeof Int16Array === 'undefined' ? Yr : Int16Array,
        '$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? Yr : Int8Array.prototype,
        '$ %Int32Array%': typeof Int32Array === 'undefined' ? Yr : Int32Array,
        '$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? Yr : Int32Array.prototype,
        '$ %isFinite%': isFinite,
        '$ %isNaN%': isNaN,
        '$ %IteratorPrototype%': zr ? Xr(Xr([][Symbol.iterator]())) : Yr,
        '$ %JSON%': JSON,
        '$ %JSONParse%': JSON.parse,
        '$ %Map%': typeof Map === 'undefined' ? Yr : Map,
        '$ %MapIteratorPrototype%':
          typeof Map === 'undefined' || !zr ? Yr : Xr(new Map()[Symbol.iterator]()),
        '$ %MapPrototype%': typeof Map === 'undefined' ? Yr : Map.prototype,
        '$ %Math%': Math,
        '$ %Number%': Number,
        '$ %NumberPrototype%': Number.prototype,
        '$ %Object%': Object,
        '$ %ObjectPrototype%': Object.prototype,
        '$ %ObjProto_toString%': Object.prototype.toString,
        '$ %ObjProto_valueOf%': Object.prototype.valueOf,
        '$ %parseFloat%': parseFloat,
        '$ %parseInt%': parseInt,
        '$ %Promise%': typeof Promise === 'undefined' ? Yr : Promise,
        '$ %PromisePrototype%': typeof Promise === 'undefined' ? Yr : Promise.prototype,
        '$ %PromiseProto_then%': typeof Promise === 'undefined' ? Yr : Promise.prototype.then,
        '$ %Promise_all%': typeof Promise === 'undefined' ? Yr : Promise.all,
        '$ %Promise_reject%': typeof Promise === 'undefined' ? Yr : Promise.reject,
        '$ %Promise_resolve%': typeof Promise === 'undefined' ? Yr : Promise.resolve,
        '$ %Proxy%': typeof Proxy === 'undefined' ? Yr : Proxy,
        '$ %RangeError%': RangeError,
        '$ %RangeErrorPrototype%': RangeError.prototype,
        '$ %ReferenceError%': ReferenceError,
        '$ %ReferenceErrorPrototype%': ReferenceError.prototype,
        '$ %Reflect%': typeof Reflect === 'undefined' ? Yr : Reflect,
        '$ %RegExp%': RegExp,
        '$ %RegExpPrototype%': RegExp.prototype,
        '$ %Set%': typeof Set === 'undefined' ? Yr : Set,
        '$ %SetIteratorPrototype%':
          typeof Set === 'undefined' || !zr ? Yr : Xr(new Set()[Symbol.iterator]()),
        '$ %SetPrototype%': typeof Set === 'undefined' ? Yr : Set.prototype,
        '$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? Yr : SharedArrayBuffer,
        '$ %SharedArrayBufferPrototype%':
          typeof SharedArrayBuffer === 'undefined' ? Yr : SharedArrayBuffer.prototype,
        '$ %String%': String,
        '$ %StringIteratorPrototype%': zr ? Xr(''[Symbol.iterator]()) : Yr,
        '$ %StringPrototype%': String.prototype,
        '$ %Symbol%': zr ? Symbol : Yr,
        '$ %SymbolPrototype%': zr ? Symbol.prototype : Yr,
        '$ %SyntaxError%': SyntaxError,
        '$ %SyntaxErrorPrototype%': SyntaxError.prototype,
        '$ %ThrowTypeError%': Wr,
        '$ %TypedArray%': Zr,
        '$ %TypedArrayPrototype%': Zr ? Zr.prototype : Yr,
        '$ %TypeError%': TypeError,
        '$ %TypeErrorPrototype%': TypeError.prototype,
        '$ %Uint8Array%': typeof Uint8Array === 'undefined' ? Yr : Uint8Array,
        '$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? Yr : Uint8Array.prototype,
        '$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? Yr : Uint8ClampedArray,
        '$ %Uint8ClampedArrayPrototype%':
          typeof Uint8ClampedArray === 'undefined' ? Yr : Uint8ClampedArray.prototype,
        '$ %Uint16Array%': typeof Uint16Array === 'undefined' ? Yr : Uint16Array,
        '$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? Yr : Uint16Array.prototype,
        '$ %Uint32Array%': typeof Uint32Array === 'undefined' ? Yr : Uint32Array,
        '$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? Yr : Uint32Array.prototype,
        '$ %URIError%': URIError,
        '$ %URIErrorPrototype%': URIError.prototype,
        '$ %WeakMap%': typeof WeakMap === 'undefined' ? Yr : WeakMap,
        '$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? Yr : WeakMap.prototype,
        '$ %WeakSet%': typeof WeakSet === 'undefined' ? Yr : WeakSet,
        '$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? Yr : WeakSet.prototype,
      }
      var tn = function e(t, r) {
        if (arguments.length > 1 && typeof r !== 'boolean') {
          throw new TypeError('"allowMissing" argument must be a boolean')
        }
        var n = '$ ' + t
        if (!(n in en)) {
          throw new SyntaxError('intrinsic ' + t + ' does not exist!')
        }
        if (typeof en[n] === 'undefined' && !r) {
          throw new TypeError(
            'intrinsic ' + t + ' exists, but is not available. Please file an issue!'
          )
        }
        return en[n]
      }
      var rn = vr.call(Function.call, Object.prototype.hasOwnProperty)
      var nn = tn('%TypeError%')
      var an = tn('%SyntaxError%')
      var sn = {
        'Property Descriptor': function e(t, r) {
          if (t.Type(r) !== 'Object') {
            return false
          }
          var n = {
            '[[Configurable]]': true,
            '[[Enumerable]]': true,
            '[[Get]]': true,
            '[[Set]]': true,
            '[[Value]]': true,
            '[[Writable]]': true,
          }
          for (var i in r) {
            if (rn(r, i) && !n[i]) {
              return false
            }
          }
          var a = rn(r, '[[Value]]')
          var s = rn(r, '[[Get]]') || rn(r, '[[Set]]')
          if (a && s) {
            throw new nn('Property Descriptors may not be both accessor and data descriptors')
          }
          return true
        },
      }
      var on = function e(t, r, n, i) {
        var a = sn[r]
        if (typeof a !== 'function') {
          throw new an('unknown record type: ' + r)
        }
        if (!a(t, i)) {
          throw new nn(n + ' must be a ' + r)
        }
        console.log(a(t, i), i)
      }
      var un =
        Number.isNaN ||
        function e(t) {
          return t !== t
        }
      var ln =
        Number.isNaN ||
        function(e) {
          return e !== e
        }
      var fn =
        Number.isFinite ||
        function(e) {
          return typeof e === 'number' && !ln(e) && e !== Infinity && e !== -Infinity
        }
      var dn = function e(t) {
        return t >= 0 ? 1 : -1
      }
      var cn = function e(t, r) {
        var n = t % r
        return Math.floor(n >= 0 ? n : n + r)
      }
      var hn = Function.prototype.toString
      var pn = /^\s*class\b/
      var vn = function e(t) {
        try {
          var r = hn.call(t)
          return pn.test(r)
        } catch (e) {
          return false
        }
      }
      var gn = function e(t) {
        try {
          if (vn(t)) {
            return false
          }
          hn.call(t)
          return true
        } catch (e) {
          return false
        }
      }
      var mn = Object.prototype.toString
      var yn = '[object Function]'
      var _n = '[object GeneratorFunction]'
      var Tn = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol'
      var En = function e(t) {
        if (!t) {
          return false
        }
        if (typeof t !== 'function' && typeof t !== 'object') {
          return false
        }
        if (typeof t === 'function' && !t.prototype) {
          return true
        }
        if (Tn) {
          return gn(t)
        }
        if (vn(t)) {
          return false
        }
        var r = mn.call(t)
        return r === yn || r === _n
      }
      var bn = function e(t) {
        return t === null || (typeof t !== 'function' && typeof t !== 'object')
      }
      var Sn = Object.prototype.toString
      var wn = {
        '[[DefaultValue]]': function e(t) {
          var r
          if (arguments.length > 1) {
            r = arguments[1]
          } else {
            r = Sn.call(t) === '[object Date]' ? String : Number
          }
          if (r === String || r === Number) {
            var n = r === String ? ['toString', 'valueOf'] : ['valueOf', 'toString']
            var i, a
            for (a = 0; a < n.length; ++a) {
              if (En(t[n[a]])) {
                i = t[n[a]]()
                if (bn(i)) {
                  return i
                }
              }
            }
            throw new TypeError('No default value')
          }
          throw new TypeError('invalid [[DefaultValue]] hint supplied')
        },
      }
      var An = function e(t) {
        if (bn(t)) {
          return t
        }
        if (arguments.length > 1) {
          return wn['[[DefaultValue]]'](t, arguments[1])
        }
        return wn['[[DefaultValue]]'](t)
      }
      var In = tn('%Object%')
      var Cn = tn('%TypeError%')
      var Rn = tn('%String%')
      var Dn = {
        ToPrimitive: An,
        ToBoolean: function e(t) {
          return !!t
        },
        ToNumber: function e(t) {
          return +t
        },
        ToInteger: function e(t) {
          var r = this.ToNumber(t)
          if (un(r)) {
            return 0
          }
          if (r === 0 || !fn(r)) {
            return r
          }
          return dn(r) * Math.floor(Math.abs(r))
        },
        ToInt32: function e(t) {
          return this.ToNumber(t) >> 0
        },
        ToUint32: function e(t) {
          return this.ToNumber(t) >>> 0
        },
        ToUint16: function e(t) {
          var r = this.ToNumber(t)
          if (un(r) || r === 0 || !fn(r)) {
            return 0
          }
          var n = dn(r) * Math.floor(Math.abs(r))
          return cn(n, 65536)
        },
        ToString: function e(t) {
          return Rn(t)
        },
        ToObject: function e(t) {
          this.CheckObjectCoercible(t)
          return In(t)
        },
        CheckObjectCoercible: function e(t, r) {
          if (t == null) {
            throw new Cn(r || 'Cannot call method on ' + t)
          }
          return t
        },
        IsCallable: En,
        SameValue: function e(t, r) {
          if (t === r) {
            if (t === 0) {
              return 1 / t === 1 / r
            }
            return true
          }
          return un(t) && un(r)
        },
        Type: function e(t) {
          if (t === null) {
            return 'Null'
          }
          if (typeof t === 'undefined') {
            return 'Undefined'
          }
          if (typeof t === 'function' || typeof t === 'object') {
            return 'Object'
          }
          if (typeof t === 'number') {
            return 'Number'
          }
          if (typeof t === 'boolean') {
            return 'Boolean'
          }
          if (typeof t === 'string') {
            return 'String'
          }
        },
        IsPropertyDescriptor: function e(t) {
          if (this.Type(t) !== 'Object') {
            return false
          }
          var r = {
            '[[Configurable]]': true,
            '[[Enumerable]]': true,
            '[[Get]]': true,
            '[[Set]]': true,
            '[[Value]]': true,
            '[[Writable]]': true,
          }
          for (var n in t) {
            if (rn(t, n) && !r[n]) {
              return false
            }
          }
          var i = rn(t, '[[Value]]')
          var a = rn(t, '[[Get]]') || rn(t, '[[Set]]')
          if (i && a) {
            throw new Cn('Property Descriptors may not be both accessor and data descriptors')
          }
          return true
        },
        IsAccessorDescriptor: function e(t) {
          if (typeof t === 'undefined') {
            return false
          }
          on(this, 'Property Descriptor', 'Desc', t)
          if (!rn(t, '[[Get]]') && !rn(t, '[[Set]]')) {
            return false
          }
          return true
        },
        IsDataDescriptor: function e(t) {
          if (typeof t === 'undefined') {
            return false
          }
          on(this, 'Property Descriptor', 'Desc', t)
          if (!rn(t, '[[Value]]') && !rn(t, '[[Writable]]')) {
            return false
          }
          return true
        },
        IsGenericDescriptor: function e(t) {
          if (typeof t === 'undefined') {
            return false
          }
          on(this, 'Property Descriptor', 'Desc', t)
          if (!this.IsAccessorDescriptor(t) && !this.IsDataDescriptor(t)) {
            return true
          }
          return false
        },
        FromPropertyDescriptor: function e(t) {
          if (typeof t === 'undefined') {
            return t
          }
          on(this, 'Property Descriptor', 'Desc', t)
          if (this.IsDataDescriptor(t)) {
            return {
              value: t['[[Value]]'],
              writable: !!t['[[Writable]]'],
              enumerable: !!t['[[Enumerable]]'],
              configurable: !!t['[[Configurable]]'],
            }
          } else if (this.IsAccessorDescriptor(t)) {
            return {
              get: t['[[Get]]'],
              set: t['[[Set]]'],
              enumerable: !!t['[[Enumerable]]'],
              configurable: !!t['[[Configurable]]'],
            }
          } else {
            throw new Cn(
              'FromPropertyDescriptor must be called with a fully populated Property Descriptor'
            )
          }
        },
        ToPropertyDescriptor: function e(t) {
          if (this.Type(t) !== 'Object') {
            throw new Cn('ToPropertyDescriptor requires an object')
          }
          var r = {}
          if (rn(t, 'enumerable')) {
            r['[[Enumerable]]'] = this.ToBoolean(t.enumerable)
          }
          if (rn(t, 'configurable')) {
            r['[[Configurable]]'] = this.ToBoolean(t.configurable)
          }
          if (rn(t, 'value')) {
            r['[[Value]]'] = t.value
          }
          if (rn(t, 'writable')) {
            r['[[Writable]]'] = this.ToBoolean(t.writable)
          }
          if (rn(t, 'get')) {
            var n = t.get
            if (typeof n !== 'undefined' && !this.IsCallable(n)) {
              throw new TypeError('getter must be a function')
            }
            r['[[Get]]'] = n
          }
          if (rn(t, 'set')) {
            var i = t.set
            if (typeof i !== 'undefined' && !this.IsCallable(i)) {
              throw new Cn('setter must be a function')
            }
            r['[[Set]]'] = i
          }
          if (
            (rn(r, '[[Get]]') || rn(r, '[[Set]]')) &&
            (rn(r, '[[Value]]') || rn(r, '[[Writable]]'))
          ) {
            throw new Cn(
              'Invalid property descriptor. Cannot both specify accessors and a value or writable attribute'
            )
          }
          return r
        },
      }
      var On = Dn
      var Mn = vr.call(Function.call, String.prototype.replace)
      var kn = /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/
      var Pn = /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/
      var Nn = function e() {
        var t = On.ToString(On.CheckObjectCoercible(this))
        return Mn(Mn(t, kn, ''), Pn, '')
      }
      var Ln = 'â€‹'
      var xn = function e() {
        if (String.prototype.trim && Ln.trim() === Ln) {
          return String.prototype.trim
        }
        return Nn
      }
      var Fn = function e() {
        var t = xn()
        Kr(
          String.prototype,
          { trim: t },
          {
            trim: function e() {
              return String.prototype.trim !== t
            },
          }
        )
        return t
      }
      var Un = vr.call(Function.call, xn())
      Kr(Un, { getPolyfill: xn, implementation: Nn, shim: Fn })
      var Bn = Un
      var jn = Object.prototype.toString
      var Gn = Object.prototype.hasOwnProperty
      var qn = function e(t, r, n) {
        for (var i = 0, a = t.length; i < a; i++) {
          if (Gn.call(t, i)) {
            if (n == null) {
              r(t[i], i, t)
            } else {
              r.call(n, t[i], i, t)
            }
          }
        }
      }
      var Hn = function e(t, r, n) {
        for (var i = 0, a = t.length; i < a; i++) {
          if (n == null) {
            r(t.charAt(i), i, t)
          } else {
            r.call(n, t.charAt(i), i, t)
          }
        }
      }
      var Vn = function e(t, r, n) {
        for (var i in t) {
          if (Gn.call(t, i)) {
            if (n == null) {
              r(t[i], i, t)
            } else {
              r.call(n, t[i], i, t)
            }
          }
        }
      }
      var Kn = function e(t, r, n) {
        if (!En(r)) {
          throw new TypeError('iterator must be a function')
        }
        var i
        if (arguments.length >= 3) {
          i = n
        }
        if (jn.call(t) === '[object Array]') {
          qn(t, r, i)
        } else if (typeof t === 'string') {
          Hn(t, r, i)
        } else {
          Vn(t, r, i)
        }
      }
      var Yn = Kn
      var Wn = function e(t) {
        return Object.prototype.toString.call(t) === '[object Array]'
      }
      var zn = function e(t) {
        if (!t) return {}
        var r = {}
        Yn(Bn(t).split('\n'), function(e) {
          var t = e.indexOf(':'),
            n = Bn(e.slice(0, t)).toLowerCase(),
            i = Bn(e.slice(t + 1))
          if (typeof r[n] === 'undefined') {
            r[n] = i
          } else if (Wn(r[n])) {
            r[n].push(i)
          } else {
            r[n] = [r[n], i]
          }
        })
        return r
      }
      var Xn = Qn
      var $n = Object.prototype.hasOwnProperty
      function Qn() {
        var e = {}
        for (var t = 0; t < arguments.length; t++) {
          var r = arguments[t]
          for (var n in r) {
            if ($n.call(r, n)) {
              e[n] = r[n]
            }
          }
        }
        return e
      }
      var Jn = ri
      ri.XMLHttpRequest = e.XMLHttpRequest || ai
      ri.XDomainRequest =
        'withCredentials' in new ri.XMLHttpRequest() ? ri.XMLHttpRequest : e.XDomainRequest
      Zn(['get', 'put', 'post', 'patch', 'head', 'delete'], function(e) {
        ri[e === 'delete' ? 'del' : e] = function(t, r, n) {
          r = ti(t, r, n)
          r.method = e.toUpperCase()
          return ni(r)
        }
      })
      function Zn(e, t) {
        for (var r = 0; r < e.length; r++) {
          t(e[r])
        }
      }
      function ei(e) {
        for (var t in e) {
          if (e.hasOwnProperty(t)) return false
        }
        return true
      }
      function ti(e, t, r) {
        var n = e
        if (or(t)) {
          r = t
          if (typeof e === 'string') {
            n = { uri: e }
          }
        } else {
          n = Xn(t, { uri: e })
        }
        n.callback = r
        return n
      }
      function ri(e, t, r) {
        t = ti(e, t, r)
        return ni(t)
      }
      function ni(e) {
        if (typeof e.callback === 'undefined') {
          throw new Error('callback argument missing')
        }
        var t = false
        var r = function r(n, i, a) {
          if (!t) {
            t = true
            e.callback(n, i, a)
          }
        }
        function n() {
          if (o.readyState === 4) {
            setTimeout(s, 0)
          }
        }
        function i() {
          var e = undefined
          if (o.response) {
            e = o.response
          } else {
            e = o.responseText || ii(o)
          }
          if (v) {
            try {
              e = JSON.parse(e)
            } catch (e) {}
          }
          return e
        }
        function a(e) {
          clearTimeout(g)
          if (!(e instanceof Error)) {
            e = new Error('' + (e || 'Unknown XMLHttpRequest Error'))
          }
          e.statusCode = 0
          return r(e, m)
        }
        function s() {
          if (l) return
          var t
          clearTimeout(g)
          if (e.useXDR && o.status === undefined) {
            t = 200
          } else {
            t = o.status === 1223 ? 204 : o.status
          }
          var n = m
          var a = null
          if (t !== 0) {
            n = { body: i(), statusCode: t, method: d, headers: {}, url: f, rawRequest: o }
            if (o.getAllResponseHeaders) {
              n.headers = zn(o.getAllResponseHeaders())
            }
          } else {
            a = new Error('Internal XMLHttpRequest Error')
          }
          return r(a, n, n.body)
        }
        var o = e.xhr || null
        if (!o) {
          if (e.cors || e.useXDR) {
            o = new ri.XDomainRequest()
          } else {
            o = new ri.XMLHttpRequest()
          }
        }
        var u
        var l
        var f = (o.url = e.uri || e.url)
        var d = (o.method = e.method || 'GET')
        var c = e.body || e.data
        var h = (o.headers = e.headers || {})
        var p = !!e.sync
        var v = false
        var g
        var m = { body: undefined, headers: {}, statusCode: 0, method: d, url: f, rawRequest: o }
        if ('json' in e && e.json !== false) {
          v = true
          h['accept'] || h['Accept'] || (h['Accept'] = 'application/json')
          if (d !== 'GET' && d !== 'HEAD') {
            h['content-type'] || h['Content-Type'] || (h['Content-Type'] = 'application/json')
            c = JSON.stringify(e.json === true ? c : e.json)
          }
        }
        o.onreadystatechange = n
        o.onload = s
        o.onerror = a
        o.onprogress = function() {}
        o.onabort = function() {
          l = true
        }
        o.ontimeout = a
        o.open(d, f, !p, e.username, e.password)
        if (!p) {
          o.withCredentials = !!e.withCredentials
        }
        if (!p && e.timeout > 0) {
          g = setTimeout(function() {
            if (l) return
            l = true
            o.abort('timeout')
            var e = new Error('XMLHttpRequest timeout')
            e.code = 'ETIMEDOUT'
            a(e)
          }, e.timeout)
        }
        if (o.setRequestHeader) {
          for (u in h) {
            if (h.hasOwnProperty(u)) {
              o.setRequestHeader(u, h[u])
            }
          }
        } else if (e.headers && !ei(e.headers)) {
          throw new Error('Headers cannot be set on an XDomainRequest object')
        }
        if ('responseType' in e) {
          o.responseType = e.responseType
        }
        if ('beforeSend' in e && typeof e.beforeSend === 'function') {
          e.beforeSend(o)
        }
        o.send(c || null)
        return o
      }
      function ii(e) {
        if (e.responseType === 'document') {
          return e.responseXML
        }
        var t = e.responseXML && e.responseXML.documentElement.nodeName === 'parsererror'
        if (e.responseType === '' && !t) {
          return e.responseXML
        }
        return null
      }
      function ai() {}
      var si = function t(r, n) {
        var i = new e.WebVTT.Parser(e, e.vttjs, e.WebVTT.StringDecoder())
        var a = []
        i.oncue = function(e) {
          n.addCue(e)
        }
        i.onparsingerror = function(e) {
          a.push(e)
        }
        i.onflush = function() {
          n.trigger({ type: 'loadeddata', target: n })
        }
        i.parse(r)
        if (a.length > 0) {
          if (e.console && e.console.groupCollapsed) {
            e.console.groupCollapsed('Text Track parsing errors for ' + n.src)
          }
          a.forEach(function(e) {
            return s.error(e)
          })
          if (e.console && e.console.groupEnd) {
            e.console.groupEnd()
          }
        }
        i.flush()
      }
      var oi = function t(r, n) {
        var i = { uri: r }
        var a = ar(r)
        if (a) {
          i.cors = a
        }
        Jn(
          i,
          ye(this, function(t, r, i) {
            if (t) {
              return s.error(t, r)
            }
            n.loaded_ = true
            if (typeof e.WebVTT !== 'function') {
              if (n.tech_) {
                n.tech_.any(['vttjsloaded', 'vttjserror'], function(e) {
                  if (e.type === 'vttjserror') {
                    s.error('vttjs failed to load, stopping trying to process ' + n.src)
                    return
                  }
                  return si(i, n)
                })
              }
            } else {
              si(i, n)
            }
          })
        )
      }
      var ui = (function(t) {
        je(r, t)
        function r(e) {
          var r
          if (e === void 0) {
            e = {}
          }
          if (!e.tech) {
            throw new Error('A tech was not provided.')
          }
          var n = Ue(e, {
            kind: Zt[e.kind] || 'subtitles',
            language: e.language || e.srclang || '',
          })
          var i = er[n.mode] || 'disabled'
          var a = n['default']
          if (n.kind === 'metadata' || n.kind === 'chapters') {
            i = 'hidden'
          }
          r = t.call(this, n) || this
          r.tech_ = n.tech
          r.cues_ = []
          r.activeCues_ = []
          var s = new $t(r.cues_)
          var o = new $t(r.activeCues_)
          var u = false
          var l = ye(Ve(r), function() {
            this.activeCues = this.activeCues
            if (u) {
              this.trigger('cuechange')
              u = false
            }
          })
          if (i !== 'disabled') {
            r.tech_.ready(function() {
              r.tech_.on('timeupdate', l)
            }, true)
          }
          Object.defineProperties(Ve(r), {
            default: {
              get: function e() {
                return a
              },
              set: function e() {},
            },
            mode: {
              get: function e() {
                return i
              },
              set: function e(t) {
                var r = this
                if (!er[t]) {
                  return
                }
                i = t
                if (i !== 'disabled') {
                  this.tech_.ready(function() {
                    r.tech_.on('timeupdate', l)
                  }, true)
                } else {
                  this.tech_.off('timeupdate', l)
                }
                this.trigger('modechange')
              },
            },
            cues: {
              get: function e() {
                if (!this.loaded_) {
                  return null
                }
                return s
              },
              set: function e() {},
            },
            activeCues: {
              get: function e() {
                if (!this.loaded_) {
                  return null
                }
                if (this.cues.length === 0) {
                  return o
                }
                var t = this.tech_.currentTime()
                var r = []
                for (var n = 0, i = this.cues.length; n < i; n++) {
                  var a = this.cues[n]
                  if (a.startTime <= t && a.endTime >= t) {
                    r.push(a)
                  } else if (
                    a.startTime === a.endTime &&
                    a.startTime <= t &&
                    a.startTime + 0.5 >= t
                  ) {
                    r.push(a)
                  }
                }
                u = false
                if (r.length !== this.activeCues_.length) {
                  u = true
                } else {
                  for (var s = 0; s < r.length; s++) {
                    if (this.activeCues_.indexOf(r[s]) === -1) {
                      u = true
                    }
                  }
                }
                this.activeCues_ = r
                o.setCues_(this.activeCues_)
                return o
              },
              set: function e() {},
            },
          })
          if (n.src) {
            r.src = n.src
            oi(n.src, Ve(r))
          } else {
            r.loaded_ = true
          }
          return r
        }
        var n = r.prototype
        n.addCue = function t(r) {
          var n = r
          if (e.vttjs && !(r instanceof e.vttjs.VTTCue)) {
            n = new e.vttjs.VTTCue(r.startTime, r.endTime, r.text)
            for (var i in r) {
              if (!(i in n)) {
                n[i] = r[i]
              }
            }
            n.id = r.id
            n.originalCue_ = r
          }
          var a = this.tech_.textTracks()
          for (var s = 0; s < a.length; s++) {
            if (a[s] !== this) {
              a[s].removeCue(n)
            }
          }
          this.cues_.push(n)
          this.cues.setCues_(this.cues_)
        }
        n.removeCue = function e(t) {
          var r = this.cues_.length
          while (r--) {
            var n = this.cues_[r]
            if (n === t || (n.originalCue_ && n.originalCue_ === t)) {
              this.cues_.splice(r, 1)
              this.cues.setCues_(this.cues_)
              break
            }
          }
        }
        return r
      })(tr)
      ui.prototype.allowedEvents_ = { cuechange: 'cuechange' }
      var li = (function(e) {
        je(t, e)
        function t(t) {
          var r
          if (t === void 0) {
            t = {}
          }
          var n = Ue(t, { kind: Jt[t.kind] || '' })
          r = e.call(this, n) || this
          var i = false
          Object.defineProperty(Ve(r), 'enabled', {
            get: function e() {
              return i
            },
            set: function e(t) {
              if (typeof t !== 'boolean' || t === i) {
                return
              }
              i = t
              this.trigger('enabledchange')
            },
          })
          if (n.enabled) {
            r.enabled = n.enabled
          }
          r.loaded_ = true
          return r
        }
        return t
      })(tr)
      var fi = (function(e) {
        je(t, e)
        function t(t) {
          var r
          if (t === void 0) {
            t = {}
          }
          var n = Ue(t, { kind: Qt[t.kind] || '' })
          r = e.call(this, n) || this
          var i = false
          Object.defineProperty(Ve(r), 'selected', {
            get: function e() {
              return i
            },
            set: function e(t) {
              if (typeof t !== 'boolean' || t === i) {
                return
              }
              i = t
              this.trigger('selectedchange')
            },
          })
          if (n.selected) {
            r.selected = n.selected
          }
          return r
        }
        return t
      })(tr)
      var di = 0
      var ci = 1
      var hi = 2
      var pi = 3
      var vi = (function(e) {
        je(t, e)
        function t(t) {
          var r
          if (t === void 0) {
            t = {}
          }
          r = e.call(this) || this
          var n
          var i = new ui(t)
          r.kind = i.kind
          r.src = i.src
          r.srclang = i.language
          r.label = i.label
          r['default'] = i['default']
          Object.defineProperties(Ve(r), {
            readyState: {
              get: function e() {
                return n
              },
            },
            track: {
              get: function e() {
                return i
              },
            },
          })
          n = di
          i.addEventListener('loadeddata', function() {
            n = hi
            r.trigger({ type: 'load', target: Ve(r) })
          })
          return r
        }
        return t
      })(Ee)
      vi.prototype.allowedEvents_ = { load: 'load' }
      vi.NONE = di
      vi.LOADING = ci
      vi.LOADED = hi
      vi.ERROR = pi
      var gi = {
        audio: { ListClass: Kt, TrackClass: li, capitalName: 'Audio' },
        video: { ListClass: Wt, TrackClass: fi, capitalName: 'Video' },
        text: { ListClass: zt, TrackClass: ui, capitalName: 'Text' },
      }
      Object.keys(gi).forEach(function(e) {
        gi[e].getterName = e + 'Tracks'
        gi[e].privateName = e + 'Tracks_'
      })
      var mi = {
        remoteText: {
          ListClass: zt,
          TrackClass: ui,
          capitalName: 'RemoteText',
          getterName: 'remoteTextTracks',
          privateName: 'remoteTextTracks_',
        },
        remoteTextEl: {
          ListClass: Xt,
          TrackClass: vi,
          capitalName: 'RemoteTextTrackEls',
          getterName: 'remoteTextTrackEls',
          privateName: 'remoteTextTrackEls_',
        },
      }
      var yi = Ue(gi, mi)
      mi.names = Object.keys(mi)
      gi.names = Object.keys(gi)
      yi.names = [].concat(mi.names).concat(gi.names)
      var _i =
        Object.create ||
        (function() {
          function e() {}
          return function(t) {
            if (arguments.length !== 1) {
              throw new Error('Object.create shim only accepts one parameter.')
            }
            e.prototype = t
            return new e()
          }
        })()
      function Ti(e, t) {
        this.name = 'ParsingError'
        this.code = e.code
        this.message = t || e.message
      }
      Ti.prototype = _i(Error.prototype)
      Ti.prototype.constructor = Ti
      Ti.Errors = {
        BadSignature: { code: 0, message: 'Malformed WebVTT signature.' },
        BadTimeStamp: { code: 1, message: 'Malformed time stamp.' },
      }
      function Ei(e) {
        function t(e, t, r, n) {
          return (e | 0) * 3600 + (t | 0) * 60 + (r | 0) + (n | 0) / 1e3
        }
        var r = e.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/)
        if (!r) {
          return null
        }
        if (r[3]) {
          return t(r[1], r[2], r[3].replace(':', ''), r[4])
        } else if (r[1] > 59) {
          return t(r[1], r[2], 0, r[4])
        } else {
          return t(0, r[1], r[2], r[4])
        }
      }
      function bi() {
        this.values = _i(null)
      }
      bi.prototype = {
        set: function e(t, r) {
          if (!this.get(t) && r !== '') {
            this.values[t] = r
          }
        },
        get: function e(t, r, n) {
          if (n) {
            return this.has(t) ? this.values[t] : r[n]
          }
          return this.has(t) ? this.values[t] : r
        },
        has: function e(t) {
          return t in this.values
        },
        alt: function e(t, r, n) {
          for (var i = 0; i < n.length; ++i) {
            if (r === n[i]) {
              this.set(t, r)
              break
            }
          }
        },
        integer: function e(t, r) {
          if (/^-?\d+$/.test(r)) {
            this.set(t, parseInt(r, 10))
          }
        },
        percent: function e(t, r) {
          var n
          if ((n = r.match(/^([\d]{1,3})(\.[\d]*)?%$/))) {
            r = parseFloat(r)
            if (r >= 0 && r <= 100) {
              this.set(t, r)
              return true
            }
          }
          return false
        },
      }
      function Si(e, t, r, n) {
        var i = n ? e.split(n) : [e]
        for (var a in i) {
          if (typeof i[a] !== 'string') {
            continue
          }
          var s = i[a].split(r)
          if (s.length !== 2) {
            continue
          }
          var o = s[0]
          var u = s[1]
          t(o, u)
        }
      }
      function wi(e, t, r) {
        var n = e
        function i() {
          var t = Ei(e)
          if (t === null) {
            throw new Ti(Ti.Errors.BadTimeStamp, 'Malformed timestamp: ' + n)
          }
          e = e.replace(/^[^\sa-zA-Z-]+/, '')
          return t
        }
        function a(e, t) {
          var n = new bi()
          Si(
            e,
            function(e, t) {
              switch (e) {
                case 'region':
                  for (var i = r.length - 1; i >= 0; i--) {
                    if (r[i].id === t) {
                      n.set(e, r[i].region)
                      break
                    }
                  }
                  break
                case 'vertical':
                  n.alt(e, t, ['rl', 'lr'])
                  break
                case 'line':
                  var a = t.split(','),
                    s = a[0]
                  n.integer(e, s)
                  n.percent(e, s) ? n.set('snapToLines', false) : null
                  n.alt(e, s, ['auto'])
                  if (a.length === 2) {
                    n.alt('lineAlign', a[1], ['start', 'middle', 'end'])
                  }
                  break
                case 'position':
                  a = t.split(',')
                  n.percent(e, a[0])
                  if (a.length === 2) {
                    n.alt('positionAlign', a[1], ['start', 'middle', 'end'])
                  }
                  break
                case 'size':
                  n.percent(e, t)
                  break
                case 'align':
                  n.alt(e, t, ['start', 'middle', 'end', 'left', 'right'])
                  break
              }
            },
            /:/,
            /\s/
          )
          t.region = n.get('region', null)
          t.vertical = n.get('vertical', '')
          t.line = n.get('line', 'auto')
          t.lineAlign = n.get('lineAlign', 'start')
          t.snapToLines = n.get('snapToLines', true)
          t.size = n.get('size', 100)
          t.align = n.get('align', 'middle')
          t.position = n.get(
            'position',
            { start: 0, left: 0, middle: 50, end: 100, right: 100 },
            t.align
          )
          t.positionAlign = n.get(
            'positionAlign',
            { start: 'start', left: 'start', middle: 'middle', end: 'end', right: 'end' },
            t.align
          )
        }
        function s() {
          e = e.replace(/^\s+/, '')
        }
        s()
        t.startTime = i()
        s()
        if (e.substr(0, 3) !== '--\x3e') {
          throw new Ti(
            Ti.Errors.BadTimeStamp,
            "Malformed time stamp (time stamps must be separated by '--\x3e'): " + n
          )
        }
        e = e.substr(3)
        s()
        t.endTime = i()
        s()
        a(e, t)
      }
      var Ai = {
        '&amp;': '&',
        '&lt;': '<',
        '&gt;': '>',
        '&lrm;': 'â€Ž',
        '&rlm;': 'â€',
        '&nbsp;': 'Â ',
      }
      var Ii = {
        c: 'span',
        i: 'i',
        b: 'b',
        u: 'u',
        ruby: 'ruby',
        rt: 'rt',
        v: 'span',
        lang: 'span',
      }
      var Ci = { v: 'title', lang: 'lang' }
      var Ri = { rt: 'ruby' }
      function Di(e, t) {
        function r() {
          if (!t) {
            return null
          }
          function e(e) {
            t = t.substr(e.length)
            return e
          }
          var r = t.match(/^([^<]*)(<[^>]*>?)?/)
          return e(r[1] ? r[1] : r[2])
        }
        function n(e) {
          return Ai[e]
        }
        function i(e) {
          while ((h = e.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {
            e = e.replace(h[0], n)
          }
          return e
        }
        function a(e, t) {
          return !Ri[t.localName] || Ri[t.localName] === e.localName
        }
        function s(t, r) {
          var n = Ii[t]
          if (!n) {
            return null
          }
          var i = e.document.createElement(n)
          i.localName = n
          var a = Ci[t]
          if (a && r) {
            i[a] = r.trim()
          }
          return i
        }
        var o = e.document.createElement('div'),
          u = o,
          l,
          f = []
        while ((l = r()) !== null) {
          if (l[0] === '<') {
            if (l[1] === '/') {
              if (f.length && f[f.length - 1] === l.substr(2).replace('>', '')) {
                f.pop()
                u = u.parentNode
              }
              continue
            }
            var d = Ei(l.substr(1, l.length - 2))
            var c
            if (d) {
              c = e.document.createProcessingInstruction('timestamp', d)
              u.appendChild(c)
              continue
            }
            var h = l.match(/^<([^.\s\/0-9>]+)(\.[^\s\\>]+)?([^>\\]+)?(\\?)>?$/)
            if (!h) {
              continue
            }
            c = s(h[1], h[3])
            if (!c) {
              continue
            }
            if (!a(u, c)) {
              continue
            }
            if (h[2]) {
              c.className = h[2].substr(1).replace('.', ' ')
            }
            f.push(h[1])
            u.appendChild(c)
            u = c
            continue
          }
          u.appendChild(e.document.createTextNode(i(l)))
        }
        return o
      }
      var Oi = [
        [1470, 1470],
        [1472, 1472],
        [1475, 1475],
        [1478, 1478],
        [1488, 1514],
        [1520, 1524],
        [1544, 1544],
        [1547, 1547],
        [1549, 1549],
        [1563, 1563],
        [1566, 1610],
        [1645, 1647],
        [1649, 1749],
        [1765, 1766],
        [1774, 1775],
        [1786, 1805],
        [1807, 1808],
        [1810, 1839],
        [1869, 1957],
        [1969, 1969],
        [1984, 2026],
        [2036, 2037],
        [2042, 2042],
        [2048, 2069],
        [2074, 2074],
        [2084, 2084],
        [2088, 2088],
        [2096, 2110],
        [2112, 2136],
        [2142, 2142],
        [2208, 2208],
        [2210, 2220],
        [8207, 8207],
        [64285, 64285],
        [64287, 64296],
        [64298, 64310],
        [64312, 64316],
        [64318, 64318],
        [64320, 64321],
        [64323, 64324],
        [64326, 64449],
        [64467, 64829],
        [64848, 64911],
        [64914, 64967],
        [65008, 65020],
        [65136, 65140],
        [65142, 65276],
        [67584, 67589],
        [67592, 67592],
        [67594, 67637],
        [67639, 67640],
        [67644, 67644],
        [67647, 67669],
        [67671, 67679],
        [67840, 67867],
        [67872, 67897],
        [67903, 67903],
        [67968, 68023],
        [68030, 68031],
        [68096, 68096],
        [68112, 68115],
        [68117, 68119],
        [68121, 68147],
        [68160, 68167],
        [68176, 68184],
        [68192, 68223],
        [68352, 68405],
        [68416, 68437],
        [68440, 68466],
        [68472, 68479],
        [68608, 68680],
        [126464, 126467],
        [126469, 126495],
        [126497, 126498],
        [126500, 126500],
        [126503, 126503],
        [126505, 126514],
        [126516, 126519],
        [126521, 126521],
        [126523, 126523],
        [126530, 126530],
        [126535, 126535],
        [126537, 126537],
        [126539, 126539],
        [126541, 126543],
        [126545, 126546],
        [126548, 126548],
        [126551, 126551],
        [126553, 126553],
        [126555, 126555],
        [126557, 126557],
        [126559, 126559],
        [126561, 126562],
        [126564, 126564],
        [126567, 126570],
        [126572, 126578],
        [126580, 126583],
        [126585, 126588],
        [126590, 126590],
        [126592, 126601],
        [126603, 126619],
        [126625, 126627],
        [126629, 126633],
        [126635, 126651],
        [1114109, 1114109],
      ]
      function Mi(e) {
        for (var t = 0; t < Oi.length; t++) {
          var r = Oi[t]
          if (e >= r[0] && e <= r[1]) {
            return true
          }
        }
        return false
      }
      function ki(e) {
        var t = [],
          r = '',
          n
        if (!e || !e.childNodes) {
          return 'ltr'
        }
        function i(e, t) {
          for (var r = t.childNodes.length - 1; r >= 0; r--) {
            e.push(t.childNodes[r])
          }
        }
        function a(e) {
          if (!e || !e.length) {
            return null
          }
          var t = e.pop(),
            r = t.textContent || t.innerText
          if (r) {
            var n = r.match(/^.*(\n|\r)/)
            if (n) {
              e.length = 0
              return n[0]
            }
            return r
          }
          if (t.tagName === 'ruby') {
            return a(e)
          }
          if (t.childNodes) {
            i(e, t)
            return a(e)
          }
        }
        i(t, e)
        while ((r = a(t))) {
          for (var s = 0; s < r.length; s++) {
            n = r.charCodeAt(s)
            if (Mi(n)) {
              return 'rtl'
            }
          }
        }
        return 'ltr'
      }
      function Pi(e) {
        if (typeof e.line === 'number' && (e.snapToLines || (e.line >= 0 && e.line <= 100))) {
          return e.line
        }
        if (!e.track || !e.track.textTrackList || !e.track.textTrackList.mediaElement) {
          return -1
        }
        var t = e.track,
          r = t.textTrackList,
          n = 0
        for (var i = 0; i < r.length && r[i] !== t; i++) {
          if (r[i].mode === 'showing') {
            n++
          }
        }
        return ++n * -1
      }
      function Ni() {}
      Ni.prototype.applyStyles = function(e, t) {
        t = t || this.div
        for (var r in e) {
          if (e.hasOwnProperty(r)) {
            t.style[r] = e[r]
          }
        }
      }
      Ni.prototype.formatStyle = function(e, t) {
        return e === 0 ? 0 : e + t
      }
      function Li(e, t, r) {
        Ni.call(this)
        this.cue = t
        this.cueDiv = Di(e, t.text)
        var n = {
          color: 'rgba(255, 255, 255, 1)',
          backgroundColor: 'rgba(0, 0, 0, 0.8)',
          position: 'relative',
          left: 0,
          right: 0,
          top: 0,
          bottom: 0,
          display: 'inline',
          writingMode:
            t.vertical === ''
              ? 'horizontal-tb'
              : t.vertical === 'lr'
              ? 'vertical-lr'
              : 'vertical-rl',
          unicodeBidi: 'plaintext',
        }
        this.applyStyles(n, this.cueDiv)
        this.div = e.document.createElement('div')
        n = {
          direction: ki(this.cueDiv),
          writingMode:
            t.vertical === ''
              ? 'horizontal-tb'
              : t.vertical === 'lr'
              ? 'vertical-lr'
              : 'vertical-rl',
          unicodeBidi: 'plaintext',
          textAlign: t.align === 'middle' ? 'center' : t.align,
          font: r.font,
          whiteSpace: 'pre-line',
          position: 'absolute',
        }
        this.applyStyles(n)
        this.div.appendChild(this.cueDiv)
        var i = 0
        switch (t.positionAlign) {
          case 'start':
            i = t.position
            break
          case 'middle':
            i = t.position - t.size / 2
            break
          case 'end':
            i = t.position - t.size
            break
        }
        if (t.vertical === '') {
          this.applyStyles({ left: this.formatStyle(i, '%'), width: this.formatStyle(t.size, '%') })
        } else {
          this.applyStyles({ top: this.formatStyle(i, '%'), height: this.formatStyle(t.size, '%') })
        }
        this.move = function(e) {
          this.applyStyles({
            top: this.formatStyle(e.top, 'px'),
            bottom: this.formatStyle(e.bottom, 'px'),
            left: this.formatStyle(e.left, 'px'),
            right: this.formatStyle(e.right, 'px'),
            height: this.formatStyle(e.height, 'px'),
            width: this.formatStyle(e.width, 'px'),
          })
        }
      }
      Li.prototype = _i(Ni.prototype)
      Li.prototype.constructor = Li
      function xi(e) {
        var t, r, n, i
        if (e.div) {
          r = e.div.offsetHeight
          n = e.div.offsetWidth
          i = e.div.offsetTop
          var a = (a = e.div.childNodes) && (a = a[0]) && a.getClientRects && a.getClientRects()
          e = e.div.getBoundingClientRect()
          t = a ? Math.max((a[0] && a[0].height) || 0, e.height / a.length) : 0
        }
        this.left = e.left
        this.right = e.right
        this.top = e.top || i
        this.height = e.height || r
        this.bottom = e.bottom || i + (e.height || r)
        this.width = e.width || n
        this.lineHeight = t !== undefined ? t : e.lineHeight
      }
      xi.prototype.move = function(e, t) {
        t = t !== undefined ? t : this.lineHeight
        switch (e) {
          case '+x':
            this.left += t
            this.right += t
            break
          case '-x':
            this.left -= t
            this.right -= t
            break
          case '+y':
            this.top += t
            this.bottom += t
            break
          case '-y':
            this.top -= t
            this.bottom -= t
            break
        }
      }
      xi.prototype.overlaps = function(e) {
        return (
          this.left < e.right && this.right > e.left && this.top < e.bottom && this.bottom > e.top
        )
      }
      xi.prototype.overlapsAny = function(e) {
        for (var t = 0; t < e.length; t++) {
          if (this.overlaps(e[t])) {
            return true
          }
        }
        return false
      }
      xi.prototype.within = function(e) {
        return (
          this.top >= e.top &&
          this.bottom <= e.bottom &&
          this.left >= e.left &&
          this.right <= e.right
        )
      }
      xi.prototype.overlapsOppositeAxis = function(e, t) {
        switch (t) {
          case '+x':
            return this.left < e.left
          case '-x':
            return this.right > e.right
          case '+y':
            return this.top < e.top
          case '-y':
            return this.bottom > e.bottom
        }
      }
      xi.prototype.intersectPercentage = function(e) {
        var t = Math.max(0, Math.min(this.right, e.right) - Math.max(this.left, e.left)),
          r = Math.max(0, Math.min(this.bottom, e.bottom) - Math.max(this.top, e.top)),
          n = t * r
        return n / (this.height * this.width)
      }
      xi.prototype.toCSSCompatValues = function(e) {
        return {
          top: this.top - e.top,
          bottom: e.bottom - this.bottom,
          left: this.left - e.left,
          right: e.right - this.right,
          height: this.height,
          width: this.width,
        }
      }
      xi.getSimpleBoxPosition = function(e) {
        var t = e.div ? e.div.offsetHeight : e.tagName ? e.offsetHeight : 0
        var r = e.div ? e.div.offsetWidth : e.tagName ? e.offsetWidth : 0
        var n = e.div ? e.div.offsetTop : e.tagName ? e.offsetTop : 0
        e = e.div ? e.div.getBoundingClientRect() : e.tagName ? e.getBoundingClientRect() : e
        var i = {
          left: e.left,
          right: e.right,
          top: e.top || n,
          height: e.height || t,
          bottom: e.bottom || n + (e.height || t),
          width: e.width || r,
        }
        return i
      }
      function Fi(e, t, r, n) {
        function i(e, t) {
          var i,
            a = new xi(e),
            s = 1
          for (var o = 0; o < t.length; o++) {
            while (e.overlapsOppositeAxis(r, t[o]) || (e.within(r) && e.overlapsAny(n))) {
              e.move(t[o])
            }
            if (e.within(r)) {
              return e
            }
            var u = e.intersectPercentage(r)
            if (s > u) {
              i = new xi(e)
              s = u
            }
            e = new xi(a)
          }
          return i || a
        }
        var a = new xi(t),
          s = t.cue,
          o = Pi(s),
          u = []
        if (s.snapToLines) {
          var l
          switch (s.vertical) {
            case '':
              u = ['+y', '-y']
              l = 'height'
              break
            case 'rl':
              u = ['+x', '-x']
              l = 'width'
              break
            case 'lr':
              u = ['-x', '+x']
              l = 'width'
              break
          }
          var f = a.lineHeight,
            d = f * Math.round(o),
            c = r[l] + f,
            h = u[0]
          if (Math.abs(d) > c) {
            d = d < 0 ? -1 : 1
            d *= Math.ceil(c / f) * f
          }
          if (o < 0) {
            d += s.vertical === '' ? r.height : r.width
            u = u.reverse()
          }
          a.move(h, d)
        } else {
          var p = (a.lineHeight / r.height) * 100
          switch (s.lineAlign) {
            case 'middle':
              o -= p / 2
              break
            case 'end':
              o -= p
              break
          }
          switch (s.vertical) {
            case '':
              t.applyStyles({ top: t.formatStyle(o, '%') })
              break
            case 'rl':
              t.applyStyles({ left: t.formatStyle(o, '%') })
              break
            case 'lr':
              t.applyStyles({ right: t.formatStyle(o, '%') })
              break
          }
          u = ['+y', '-x', '+x', '-y']
          a = new xi(t)
        }
        var v = i(a, u)
        t.move(v.toCSSCompatValues(r))
      }
      function Ui() {}
      Ui.StringDecoder = function() {
        return {
          decode: function e(t) {
            if (!t) {
              return ''
            }
            if (typeof t !== 'string') {
              throw new Error('Error - expected string data.')
            }
            return decodeURIComponent(encodeURIComponent(t))
          },
        }
      }
      Ui.convertCueToDOMTree = function(e, t) {
        if (!e || !t) {
          return null
        }
        return Di(e, t)
      }
      var Bi = 0.05
      var ji = 'sans-serif'
      var Gi = '1.5%'
      Ui.processCues = function(e, t, r) {
        if (!e || !t || !r) {
          return null
        }
        while (r.firstChild) {
          r.removeChild(r.firstChild)
        }
        var n = e.document.createElement('div')
        n.style.position = 'absolute'
        n.style.left = '0'
        n.style.right = '0'
        n.style.top = '0'
        n.style.bottom = '0'
        n.style.margin = Gi
        r.appendChild(n)
        function i(e) {
          for (var t = 0; t < e.length; t++) {
            if (e[t].hasBeenReset || !e[t].displayState) {
              return true
            }
          }
          return false
        }
        if (!i(t)) {
          for (var a = 0; a < t.length; a++) {
            n.appendChild(t[a].displayState)
          }
          return
        }
        var s = [],
          o = xi.getSimpleBoxPosition(n),
          u = Math.round(o.height * Bi * 100) / 100
        var l = { font: u + 'px ' + ji }
        ;(function() {
          var r, i
          for (var a = 0; a < t.length; a++) {
            i = t[a]
            r = new Li(e, i, l)
            n.appendChild(r.div)
            Fi(e, r, o, s)
            i.displayState = r.div
            s.push(xi.getSimpleBoxPosition(r))
          }
        })()
      }
      Ui.Parser = function(e, t, r) {
        if (!r) {
          r = t
          t = {}
        }
        if (!t) {
          t = {}
        }
        this.window = e
        this.vttjs = t
        this.state = 'INITIAL'
        this.buffer = ''
        this.decoder = r || new TextDecoder('utf8')
        this.regionList = []
      }
      Ui.Parser.prototype = {
        reportOrThrowError: function e(t) {
          if (t instanceof Ti) {
            this.onparsingerror && this.onparsingerror(t)
          } else {
            throw t
          }
        },
        parse: function e(t) {
          var r = this
          if (t) {
            r.buffer += r.decoder.decode(t, { stream: true })
          }
          function n() {
            var e = r.buffer
            var t = 0
            while (t < e.length && e[t] !== '\r' && e[t] !== '\n') {
              ++t
            }
            var n = e.substr(0, t)
            if (e[t] === '\r') {
              ++t
            }
            if (e[t] === '\n') {
              ++t
            }
            r.buffer = e.substr(t)
            return n
          }
          function i(e) {
            var t = new bi()
            Si(
              e,
              function(e, r) {
                switch (e) {
                  case 'id':
                    t.set(e, r)
                    break
                  case 'width':
                    t.percent(e, r)
                    break
                  case 'lines':
                    t.integer(e, r)
                    break
                  case 'regionanchor':
                  case 'viewportanchor':
                    var n = r.split(',')
                    if (n.length !== 2) {
                      break
                    }
                    var i = new bi()
                    i.percent('x', n[0])
                    i.percent('y', n[1])
                    if (!i.has('x') || !i.has('y')) {
                      break
                    }
                    t.set(e + 'X', i.get('x'))
                    t.set(e + 'Y', i.get('y'))
                    break
                  case 'scroll':
                    t.alt(e, r, ['up'])
                    break
                }
              },
              /=/,
              /\s/
            )
            if (t.has('id')) {
              var n = new (r.vttjs.VTTRegion || r.window.VTTRegion)()
              n.width = t.get('width', 100)
              n.lines = t.get('lines', 3)
              n.regionAnchorX = t.get('regionanchorX', 0)
              n.regionAnchorY = t.get('regionanchorY', 100)
              n.viewportAnchorX = t.get('viewportanchorX', 0)
              n.viewportAnchorY = t.get('viewportanchorY', 100)
              n.scroll = t.get('scroll', '')
              r.onregion && r.onregion(n)
              r.regionList.push({ id: t.get('id'), region: n })
            }
          }
          function a(e) {
            var t = new bi()
            Si(
              e,
              function(e, r) {
                switch (e) {
                  case 'MPEGT':
                    t.integer(e + 'S', r)
                    break
                  case 'LOCA':
                    t.set(e + 'L', Ei(r))
                    break
                }
              },
              /[^\d]:/,
              /,/
            )
            r.ontimestampmap && r.ontimestampmap({ MPEGTS: t.get('MPEGTS'), LOCAL: t.get('LOCAL') })
          }
          function s(e) {
            if (e.match(/X-TIMESTAMP-MAP/)) {
              Si(
                e,
                function(e, t) {
                  switch (e) {
                    case 'X-TIMESTAMP-MAP':
                      a(t)
                      break
                  }
                },
                /=/
              )
            } else {
              Si(
                e,
                function(e, t) {
                  switch (e) {
                    case 'Region':
                      i(t)
                      break
                  }
                },
                /:/
              )
            }
          }
          try {
            var o
            if (r.state === 'INITIAL') {
              if (!/\r\n|\n/.test(r.buffer)) {
                return this
              }
              o = n()
              var u = o.match(/^WEBVTT([ \t].*)?$/)
              if (!u || !u[0]) {
                throw new Ti(Ti.Errors.BadSignature)
              }
              r.state = 'HEADER'
            }
            var l = false
            while (r.buffer) {
              if (!/\r\n|\n/.test(r.buffer)) {
                return this
              }
              if (!l) {
                o = n()
              } else {
                l = false
              }
              switch (r.state) {
                case 'HEADER':
                  if (/:/.test(o)) {
                    s(o)
                  } else if (!o) {
                    r.state = 'ID'
                  }
                  continue
                case 'NOTE':
                  if (!o) {
                    r.state = 'ID'
                  }
                  continue
                case 'ID':
                  if (/^NOTE($|[ \t])/.test(o)) {
                    r.state = 'NOTE'
                    break
                  }
                  if (!o) {
                    continue
                  }
                  r.cue = new (r.vttjs.VTTCue || r.window.VTTCue)(0, 0, '')
                  r.state = 'CUE'
                  if (o.indexOf('--\x3e') === -1) {
                    r.cue.id = o
                    continue
                  }
                case 'CUE':
                  try {
                    wi(o, r.cue, r.regionList)
                  } catch (e) {
                    r.reportOrThrowError(e)
                    r.cue = null
                    r.state = 'BADCUE'
                    continue
                  }
                  r.state = 'CUETEXT'
                  continue
                case 'CUETEXT':
                  var f = o.indexOf('--\x3e') !== -1
                  if (!o || (f && (l = true))) {
                    r.oncue && r.oncue(r.cue)
                    r.cue = null
                    r.state = 'ID'
                    continue
                  }
                  if (r.cue.text) {
                    r.cue.text += '\n'
                  }
                  r.cue.text += o
                  continue
                case 'BADCUE':
                  if (!o) {
                    r.state = 'ID'
                  }
                  continue
              }
            }
          } catch (e) {
            r.reportOrThrowError(e)
            if (r.state === 'CUETEXT' && r.cue && r.oncue) {
              r.oncue(r.cue)
            }
            r.cue = null
            r.state = r.state === 'INITIAL' ? 'BADWEBVTT' : 'BADCUE'
          }
          return this
        },
        flush: function e() {
          var t = this
          try {
            t.buffer += t.decoder.decode()
            if (t.cue || t.state === 'HEADER') {
              t.buffer += '\n\n'
              t.parse()
            }
            if (t.state === 'INITIAL') {
              throw new Ti(Ti.Errors.BadSignature)
            }
          } catch (e) {
            t.reportOrThrowError(e)
          }
          t.onflush && t.onflush()
          return this
        },
      }
      var qi = Ui
      var Hi = 'auto'
      var Vi = { '': 1, lr: 1, rl: 1 }
      var Ki = { start: 1, middle: 1, end: 1, left: 1, right: 1 }
      function Yi(e) {
        if (typeof e !== 'string') {
          return false
        }
        var t = Vi[e.toLowerCase()]
        return t ? e.toLowerCase() : false
      }
      function Wi(e) {
        if (typeof e !== 'string') {
          return false
        }
        var t = Ki[e.toLowerCase()]
        return t ? e.toLowerCase() : false
      }
      function zi(e, t, r) {
        this.hasBeenReset = false
        var n = ''
        var i = false
        var a = e
        var s = t
        var o = r
        var u = null
        var l = ''
        var f = true
        var d = 'auto'
        var c = 'start'
        var h = 50
        var p = 'middle'
        var v = 50
        var g = 'middle'
        Object.defineProperties(this, {
          id: {
            enumerable: true,
            get: function e() {
              return n
            },
            set: function e(t) {
              n = '' + t
            },
          },
          pauseOnExit: {
            enumerable: true,
            get: function e() {
              return i
            },
            set: function e(t) {
              i = !!t
            },
          },
          startTime: {
            enumerable: true,
            get: function e() {
              return a
            },
            set: function e(t) {
              if (typeof t !== 'number') {
                throw new TypeError('Start time must be set to a number.')
              }
              a = t
              this.hasBeenReset = true
            },
          },
          endTime: {
            enumerable: true,
            get: function e() {
              return s
            },
            set: function e(t) {
              if (typeof t !== 'number') {
                throw new TypeError('End time must be set to a number.')
              }
              s = t
              this.hasBeenReset = true
            },
          },
          text: {
            enumerable: true,
            get: function e() {
              return o
            },
            set: function e(t) {
              o = '' + t
              this.hasBeenReset = true
            },
          },
          region: {
            enumerable: true,
            get: function e() {
              return u
            },
            set: function e(t) {
              u = t
              this.hasBeenReset = true
            },
          },
          vertical: {
            enumerable: true,
            get: function e() {
              return l
            },
            set: function e(t) {
              var r = Yi(t)
              if (r === false) {
                throw new SyntaxError('An invalid or illegal string was specified.')
              }
              l = r
              this.hasBeenReset = true
            },
          },
          snapToLines: {
            enumerable: true,
            get: function e() {
              return f
            },
            set: function e(t) {
              f = !!t
              this.hasBeenReset = true
            },
          },
          line: {
            enumerable: true,
            get: function e() {
              return d
            },
            set: function e(t) {
              if (typeof t !== 'number' && t !== Hi) {
                throw new SyntaxError('An invalid number or illegal string was specified.')
              }
              d = t
              this.hasBeenReset = true
            },
          },
          lineAlign: {
            enumerable: true,
            get: function e() {
              return c
            },
            set: function e(t) {
              var r = Wi(t)
              if (!r) {
                throw new SyntaxError('An invalid or illegal string was specified.')
              }
              c = r
              this.hasBeenReset = true
            },
          },
          position: {
            enumerable: true,
            get: function e() {
              return h
            },
            set: function e(t) {
              if (t < 0 || t > 100) {
                throw new Error('Position must be between 0 and 100.')
              }
              h = t
              this.hasBeenReset = true
            },
          },
          positionAlign: {
            enumerable: true,
            get: function e() {
              return p
            },
            set: function e(t) {
              var r = Wi(t)
              if (!r) {
                throw new SyntaxError('An invalid or illegal string was specified.')
              }
              p = r
              this.hasBeenReset = true
            },
          },
          size: {
            enumerable: true,
            get: function e() {
              return v
            },
            set: function e(t) {
              if (t < 0 || t > 100) {
                throw new Error('Size must be between 0 and 100.')
              }
              v = t
              this.hasBeenReset = true
            },
          },
          align: {
            enumerable: true,
            get: function e() {
              return g
            },
            set: function e(t) {
              var r = Wi(t)
              if (!r) {
                throw new SyntaxError('An invalid or illegal string was specified.')
              }
              g = r
              this.hasBeenReset = true
            },
          },
        })
        this.displayState = undefined
      }
      zi.prototype.getCueAsHTML = function() {
        return WebVTT.convertCueToDOMTree(window, this.text)
      }
      var Xi = zi
      var $i = { '': true, up: true }
      function Qi(e) {
        if (typeof e !== 'string') {
          return false
        }
        var t = $i[e.toLowerCase()]
        return t ? e.toLowerCase() : false
      }
      function Ji(e) {
        return typeof e === 'number' && e >= 0 && e <= 100
      }
      function Zi() {
        var e = 100
        var t = 3
        var r = 0
        var n = 100
        var i = 0
        var a = 100
        var s = ''
        Object.defineProperties(this, {
          width: {
            enumerable: true,
            get: function t() {
              return e
            },
            set: function t(r) {
              if (!Ji(r)) {
                throw new Error('Width must be between 0 and 100.')
              }
              e = r
            },
          },
          lines: {
            enumerable: true,
            get: function e() {
              return t
            },
            set: function e(r) {
              if (typeof r !== 'number') {
                throw new TypeError('Lines must be set to a number.')
              }
              t = r
            },
          },
          regionAnchorY: {
            enumerable: true,
            get: function e() {
              return n
            },
            set: function e(t) {
              if (!Ji(t)) {
                throw new Error('RegionAnchorX must be between 0 and 100.')
              }
              n = t
            },
          },
          regionAnchorX: {
            enumerable: true,
            get: function e() {
              return r
            },
            set: function e(t) {
              if (!Ji(t)) {
                throw new Error('RegionAnchorY must be between 0 and 100.')
              }
              r = t
            },
          },
          viewportAnchorY: {
            enumerable: true,
            get: function e() {
              return a
            },
            set: function e(t) {
              if (!Ji(t)) {
                throw new Error('ViewportAnchorY must be between 0 and 100.')
              }
              a = t
            },
          },
          viewportAnchorX: {
            enumerable: true,
            get: function e() {
              return i
            },
            set: function e(t) {
              if (!Ji(t)) {
                throw new Error('ViewportAnchorX must be between 0 and 100.')
              }
              i = t
            },
          },
          scroll: {
            enumerable: true,
            get: function e() {
              return s
            },
            set: function e(t) {
              var r = Qi(t)
              if (r === false) {
                throw new SyntaxError('An invalid or illegal string was specified.')
              }
              s = r
            },
          },
        })
      }
      var ea = Zi
      var ta = Pt(function(t) {
        var r = (t.exports = { WebVTT: qi, VTTCue: Xi, VTTRegion: ea })
        e.vttjs = r
        e.WebVTT = r.WebVTT
        var n = r.VTTCue
        var i = r.VTTRegion
        var a = e.VTTCue
        var s = e.VTTRegion
        r.shim = function() {
          e.VTTCue = n
          e.VTTRegion = i
        }
        r.restore = function() {
          e.VTTCue = a
          e.VTTRegion = s
        }
        if (!e.VTTCue) {
          r.shim()
        }
      })
      var ra = ta.WebVTT
      var na = ta.VTTCue
      var ia = ta.VTTRegion
      function aa(e, t, r, n, i) {
        if (i === void 0) {
          i = {}
        }
        var a = e.textTracks()
        i.kind = t
        if (r) {
          i.label = r
        }
        if (n) {
          i.language = n
        }
        i.tech = e
        var s = new yi.text.TrackClass(i)
        a.addTrack(s)
        return s
      }
      var sa = (function(r) {
        je(n, r)
        function n(e, t) {
          var n
          if (e === void 0) {
            e = {}
          }
          if (t === void 0) {
            t = function e() {}
          }
          e.reportTouchActivity = false
          n = r.call(this, null, e, t) || this
          n.hasStarted_ = false
          n.on('playing', function() {
            this.hasStarted_ = true
          })
          n.on('loadstart', function() {
            this.hasStarted_ = false
          })
          yi.names.forEach(function(t) {
            var r = yi[t]
            if (e && e[r.getterName]) {
              n[r.privateName] = e[r.getterName]
            }
          })
          if (!n.featuresProgressEvents) {
            n.manualProgressOn()
          }
          if (!n.featuresTimeupdateEvents) {
            n.manualTimeUpdatesOn()
          }
          ;['Text', 'Audio', 'Video'].forEach(function(t) {
            if (e['native' + t + 'Tracks'] === false) {
              n['featuresNative' + t + 'Tracks'] = false
            }
          })
          if (e.nativeCaptions === false || e.nativeTextTracks === false) {
            n.featuresNativeTextTracks = false
          } else if (e.nativeCaptions === true || e.nativeTextTracks === true) {
            n.featuresNativeTextTracks = true
          }
          if (!n.featuresNativeTextTracks) {
            n.emulateTextTracks()
          }
          n.autoRemoteTextTracks_ = new yi.text.ListClass()
          n.initTrackListeners()
          if (!e.nativeControlsForTouch) {
            n.emitTapEvents()
          }
          if (n.constructor) {
            n.name_ = n.constructor.name || 'Unknown Tech'
          }
          return n
        }
        var i = n.prototype
        i.triggerSourceset = function e(t) {
          var r = this
          if (!this.isReady_) {
            this.one('ready', function() {
              return r.setTimeout(function() {
                return r.triggerSourceset(t)
              }, 1)
            })
          }
          this.trigger({ src: t, type: 'sourceset' })
        }
        i.manualProgressOn = function e() {
          this.on('durationchange', this.onDurationChange)
          this.manualProgress = true
          this.one('ready', this.trackProgress)
        }
        i.manualProgressOff = function e() {
          this.manualProgress = false
          this.stopTrackingProgress()
          this.off('durationchange', this.onDurationChange)
        }
        i.trackProgress = function e(t) {
          this.stopTrackingProgress()
          this.progressInterval = this.setInterval(
            ye(this, function() {
              var e = this.bufferedPercent()
              if (this.bufferedPercent_ !== e) {
                this.trigger('progress')
              }
              this.bufferedPercent_ = e
              if (e === 1) {
                this.stopTrackingProgress()
              }
            }),
            500
          )
        }
        i.onDurationChange = function e(t) {
          this.duration_ = this.duration()
        }
        i.buffered = function e() {
          return vt(0, 0)
        }
        i.bufferedPercent = function e() {
          return gt(this.buffered(), this.duration_)
        }
        i.stopTrackingProgress = function e() {
          this.clearInterval(this.progressInterval)
        }
        i.manualTimeUpdatesOn = function e() {
          this.manualTimeUpdates = true
          this.on('play', this.trackCurrentTime)
          this.on('pause', this.stopTrackingCurrentTime)
        }
        i.manualTimeUpdatesOff = function e() {
          this.manualTimeUpdates = false
          this.stopTrackingCurrentTime()
          this.off('play', this.trackCurrentTime)
          this.off('pause', this.stopTrackingCurrentTime)
        }
        i.trackCurrentTime = function e() {
          if (this.currentTimeInterval) {
            this.stopTrackingCurrentTime()
          }
          this.currentTimeInterval = this.setInterval(function() {
            this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true })
          }, 250)
        }
        i.stopTrackingCurrentTime = function e() {
          this.clearInterval(this.currentTimeInterval)
          this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true })
        }
        i.dispose = function e() {
          this.clearTracks(gi.names)
          if (this.manualProgress) {
            this.manualProgressOff()
          }
          if (this.manualTimeUpdates) {
            this.manualTimeUpdatesOff()
          }
          r.prototype.dispose.call(this)
        }
        i.clearTracks = function e(t) {
          var r = this
          t = [].concat(t)
          t.forEach(function(e) {
            var t = r[e + 'Tracks']() || []
            var n = t.length
            while (n--) {
              var i = t[n]
              if (e === 'text') {
                r.removeRemoteTextTrack(i)
              }
              t.removeTrack(i)
            }
          })
        }
        i.cleanupAutoTextTracks = function e() {
          var t = this.autoRemoteTextTracks_ || []
          var r = t.length
          while (r--) {
            var n = t[r]
            this.removeRemoteTextTrack(n)
          }
        }
        i.reset = function e() {}
        i.error = function e(t) {
          if (t !== undefined) {
            this.error_ = new St(t)
            this.trigger('error')
          }
          return this.error_
        }
        i.played = function e() {
          if (this.hasStarted_) {
            return vt(0, 0)
          }
          return vt()
        }
        i.setCurrentTime = function e() {
          if (this.manualTimeUpdates) {
            this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true })
          }
        }
        i.initTrackListeners = function e() {
          var t = this
          gi.names.forEach(function(e) {
            var r = gi[e]
            var n = function r() {
              t.trigger(e + 'trackchange')
            }
            var i = t[r.getterName]()
            i.addEventListener('removetrack', n)
            i.addEventListener('addtrack', n)
            t.on('dispose', function() {
              i.removeEventListener('removetrack', n)
              i.removeEventListener('addtrack', n)
            })
          })
        }
        i.addWebVttScript_ = function r() {
          var n = this
          if (e.WebVTT) {
            return
          }
          if (t.body.contains(this.el())) {
            if (!this.options_['vtt.js'] && p(ta) && Object.keys(ta).length > 0) {
              this.trigger('vttjsloaded')
              return
            }
            var i = t.createElement('script')
            i.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js'
            i.onload = function() {
              n.trigger('vttjsloaded')
            }
            i.onerror = function() {
              n.trigger('vttjserror')
            }
            this.on('dispose', function() {
              i.onload = null
              i.onerror = null
            })
            e.WebVTT = true
            this.el().parentNode.appendChild(i)
          } else {
            this.ready(this.addWebVttScript_)
          }
        }
        i.emulateTextTracks = function e() {
          var t = this
          var r = this.textTracks()
          var n = this.remoteTextTracks()
          var i = function e(t) {
            return r.addTrack(t.track)
          }
          var a = function e(t) {
            return r.removeTrack(t.track)
          }
          n.on('addtrack', i)
          n.on('removetrack', a)
          this.addWebVttScript_()
          var s = function e() {
            return t.trigger('texttrackchange')
          }
          var o = function e() {
            s()
            for (var t = 0; t < r.length; t++) {
              var n = r[t]
              n.removeEventListener('cuechange', s)
              if (n.mode === 'showing') {
                n.addEventListener('cuechange', s)
              }
            }
          }
          o()
          r.addEventListener('change', o)
          r.addEventListener('addtrack', o)
          r.addEventListener('removetrack', o)
          this.on('dispose', function() {
            n.off('addtrack', i)
            n.off('removetrack', a)
            r.removeEventListener('change', o)
            r.removeEventListener('addtrack', o)
            r.removeEventListener('removetrack', o)
            for (var e = 0; e < r.length; e++) {
              var t = r[e]
              t.removeEventListener('cuechange', s)
            }
          })
        }
        i.addTextTrack = function e(t, r, n) {
          if (!t) {
            throw new Error('TextTrack kind is required but was not provided')
          }
          return aa(this, t, r, n)
        }
        i.createRemoteTextTrack = function e(t) {
          var r = Ue(t, { tech: this })
          return new mi.remoteTextEl.TrackClass(r)
        }
        i.addRemoteTextTrack = function e(t, r) {
          var n = this
          if (t === void 0) {
            t = {}
          }
          var i = this.createRemoteTextTrack(t)
          if (r !== true && r !== false) {
            s.warn(
              'Calling addRemoteTextTrack without explicitly setting the "manualCleanup" parameter to `true` is deprecated and default to `false` in future version of video.js'
            )
            r = true
          }
          this.remoteTextTrackEls().addTrackElement_(i)
          this.remoteTextTracks().addTrack(i.track)
          if (r !== true) {
            this.ready(function() {
              return n.autoRemoteTextTracks_.addTrack(i.track)
            })
          }
          return i
        }
        i.removeRemoteTextTrack = function e(t) {
          var r = this.remoteTextTrackEls().getTrackElementByTrack_(t)
          this.remoteTextTrackEls().removeTrackElement_(r)
          this.remoteTextTracks().removeTrack(t)
          this.autoRemoteTextTracks_.removeTrack(t)
        }
        i.getVideoPlaybackQuality = function e() {
          return {}
        }
        i.requestPictureInPicture = function t() {
          var r = this.options_.Promise || e.Promise
          if (r) {
            return r.reject()
          }
        }
        i.setPoster = function e() {}
        i.playsinline = function e() {}
        i.setPlaysinline = function e() {}
        i.overrideNativeAudioTracks = function e() {}
        i.overrideNativeVideoTracks = function e() {}
        i.canPlayType = function e() {
          return ''
        }
        n.canPlayType = function e() {
          return ''
        }
        n.canPlaySource = function e(t, r) {
          return n.canPlayType(t.type)
        }
        n.isTech = function e(t) {
          return t.prototype instanceof n || t instanceof n || t === n
        }
        n.registerTech = function e(t, r) {
          if (!n.techs_) {
            n.techs_ = {}
          }
          if (!n.isTech(r)) {
            throw new Error('Tech ' + t + ' must be a Tech')
          }
          if (!n.canPlayType) {
            throw new Error('Techs must have a static canPlayType method on them')
          }
          if (!n.canPlaySource) {
            throw new Error('Techs must have a static canPlaySource method on them')
          }
          t = xe(t)
          n.techs_[t] = r
          n.techs_[Le(t)] = r
          if (t !== 'Tech') {
            n.defaultTechOrder_.push(t)
          }
          return r
        }
        n.getTech = function t(r) {
          if (!r) {
            return
          }
          if (n.techs_ && n.techs_[r]) {
            return n.techs_[r]
          }
          r = xe(r)
          if (e && e.videojs && e.videojs[r]) {
            s.warn(
              'The ' +
                r +
                ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)'
            )
            return e.videojs[r]
          }
        }
        return n
      })(Be)
      yi.names.forEach(function(e) {
        var t = yi[e]
        sa.prototype[t.getterName] = function() {
          this[t.privateName] = this[t.privateName] || new t.ListClass()
          return this[t.privateName]
        }
      })
      sa.prototype.featuresVolumeControl = true
      sa.prototype.featuresMuteControl = true
      sa.prototype.featuresFullscreenResize = false
      sa.prototype.featuresPlaybackRate = false
      sa.prototype.featuresProgressEvents = false
      sa.prototype.featuresSourceset = false
      sa.prototype.featuresTimeupdateEvents = false
      sa.prototype.featuresNativeTextTracks = false
      sa.withSourceHandlers = function(e) {
        e.registerSourceHandler = function(t, r) {
          var n = e.sourceHandlers
          if (!n) {
            n = e.sourceHandlers = []
          }
          if (r === undefined) {
            r = n.length
          }
          n.splice(r, 0, t)
        }
        e.canPlayType = function(t) {
          var r = e.sourceHandlers || []
          var n
          for (var i = 0; i < r.length; i++) {
            n = r[i].canPlayType(t)
            if (n) {
              return n
            }
          }
          return ''
        }
        e.selectSourceHandler = function(t, r) {
          var n = e.sourceHandlers || []
          var i
          for (var a = 0; a < n.length; a++) {
            i = n[a].canHandleSource(t, r)
            if (i) {
              return n[a]
            }
          }
          return null
        }
        e.canPlaySource = function(t, r) {
          var n = e.selectSourceHandler(t, r)
          if (n) {
            return n.canHandleSource(t, r)
          }
          return ''
        }
        var t = ['seekable', 'seeking', 'duration']
        t.forEach(function(e) {
          var t = this[e]
          if (typeof t !== 'function') {
            return
          }
          this[e] = function() {
            if (this.sourceHandler_ && this.sourceHandler_[e]) {
              return this.sourceHandler_[e].apply(this.sourceHandler_, arguments)
            }
            return t.apply(this, arguments)
          }
        }, e.prototype)
        e.prototype.setSource = function(t) {
          var r = e.selectSourceHandler(t, this.options_)
          if (!r) {
            if (e.nativeSourceHandler) {
              r = e.nativeSourceHandler
            } else {
              s.error('No source handler found for the current source.')
            }
          }
          this.disposeSourceHandler()
          this.off('dispose', this.disposeSourceHandler)
          if (r !== e.nativeSourceHandler) {
            this.currentSource_ = t
          }
          this.sourceHandler_ = r.handleSource(t, this, this.options_)
          this.one('dispose', this.disposeSourceHandler)
        }
        e.prototype.disposeSourceHandler = function() {
          if (this.currentSource_) {
            this.clearTracks(['audio', 'video'])
            this.currentSource_ = null
          }
          this.cleanupAutoTextTracks()
          if (this.sourceHandler_) {
            if (this.sourceHandler_.dispose) {
              this.sourceHandler_.dispose()
            }
            this.sourceHandler_ = null
          }
        }
      }
      Be.registerComponent('Tech', sa)
      sa.registerTech('Tech', sa)
      sa.defaultTechOrder_ = []
      var oa = {}
      var ua = {}
      var la = {}
      function fa(e, t) {
        oa[e] = oa[e] || []
        oa[e].push(t)
      }
      function da(e, t, r) {
        e.setTimeout(function() {
          return Sa(t, oa[t.type], r, e)
        }, 1)
      }
      function ca(e, t) {
        e.forEach(function(e) {
          return e.setTech && e.setTech(t)
        })
      }
      function ha(e, t, r) {
        return e.reduceRight(_a(r), t[r]())
      }
      function pa(e, t, r, n) {
        return t[r](e.reduce(_a(r), n))
      }
      function va(e, t, r, n) {
        if (n === void 0) {
          n = null
        }
        var i = 'call' + xe(r)
        var a = e.reduce(_a(i), n)
        var s = a === la
        var o = s ? null : t[r](a)
        Ta(e, r, o, s)
        return o
      }
      var ga = {
        buffered: 1,
        currentTime: 1,
        duration: 1,
        seekable: 1,
        played: 1,
        paused: 1,
        volume: 1,
      }
      var ma = { setCurrentTime: 1, setVolume: 1 }
      var ya = { play: 1, pause: 1 }
      function _a(e) {
        return function(t, r) {
          if (t === la) {
            return la
          }
          if (r[e]) {
            return r[e](t)
          }
          return t
        }
      }
      function Ta(e, t, r, n) {
        for (var i = e.length - 1; i >= 0; i--) {
          var a = e[i]
          if (a[t]) {
            a[t](n, r)
          }
        }
      }
      function Ea(e) {
        ua[e.id()] = null
      }
      function ba(e, t) {
        var r = ua[e.id()]
        var n = null
        if (r === undefined || r === null) {
          n = t(e)
          ua[e.id()] = [[t, n]]
          return n
        }
        for (var i = 0; i < r.length; i++) {
          var a = r[i],
            s = a[0],
            o = a[1]
          if (s !== t) {
            continue
          }
          n = o
        }
        if (n === null) {
          n = t(e)
          r.push([t, n])
        }
        return n
      }
      function Sa(e, t, r, n, i, a) {
        if (e === void 0) {
          e = {}
        }
        if (t === void 0) {
          t = []
        }
        if (i === void 0) {
          i = []
        }
        if (a === void 0) {
          a = false
        }
        var s = t,
          o = s[0],
          u = s.slice(1)
        if (typeof o === 'string') {
          Sa(e, oa[o], r, n, i, a)
        } else if (o) {
          var l = ba(n, o)
          if (!l.setSource) {
            i.push(l)
            return Sa(e, u, r, n, i, a)
          }
          l.setSource(c({}, e), function(t, s) {
            if (t) {
              return Sa(e, u, r, n, i, a)
            }
            i.push(l)
            Sa(s, e.type === s.type ? u : oa[s.type], r, n, i, a)
          })
        } else if (u.length) {
          Sa(e, u, r, n, i, a)
        } else if (a) {
          r(e, i)
        } else {
          Sa(e, oa['*'], r, n, i, true)
        }
      }
      var wa = {
        opus: 'video/ogg',
        ogv: 'video/ogg',
        mp4: 'video/mp4',
        mov: 'video/mp4',
        m4v: 'video/mp4',
        mkv: 'video/x-matroska',
        m4a: 'audio/mp4',
        mp3: 'audio/mpeg',
        aac: 'audio/aac',
        oga: 'audio/ogg',
        m3u8: 'application/x-mpegURL',
        jpg: 'image/jpeg',
        jpeg: 'image/jpeg',
        gif: 'image/gif',
        png: 'image/png',
        svg: 'image/svg+xml',
        webp: 'image/webp',
      }
      var Aa = function e(t) {
        if (t === void 0) {
          t = ''
        }
        var r = ir(t)
        var n = wa[r.toLowerCase()]
        return n || ''
      }
      var Ia = function e(t, r) {
        if (!r) {
          return ''
        }
        if (t.cache_.source.src === r && t.cache_.source.type) {
          return t.cache_.source.type
        }
        var n = t.cache_.sources.filter(function(e) {
          return e.src === r
        })
        if (n.length) {
          return n[0].type
        }
        var i = t.$$('source')
        for (var a = 0; a < i.length; a++) {
          var s = i[a]
          if (s.type && s.src && s.src === r) {
            return s.type
          }
        }
        return Aa(r)
      }
      var Ca = function e(t) {
        if (Array.isArray(t)) {
          var r = []
          t.forEach(function(t) {
            t = e(t)
            if (Array.isArray(t)) {
              r = r.concat(t)
            } else if (h(t)) {
              r.push(t)
            }
          })
          t = r
        } else if (typeof t === 'string' && t.trim()) {
          t = [Ra({ src: t })]
        } else if (h(t) && typeof t.src === 'string' && t.src && t.src.trim()) {
          t = [Ra(t)]
        } else {
          t = []
        }
        return t
      }
      function Ra(e) {
        if (!e.type) {
          var t = Aa(e.src)
          if (t) {
            e.type = t
          }
        }
        return e
      }
      var Da = (function(e) {
        je(t, e)
        function t(t, r, n) {
          var i
          var a = Ue({ createEl: false }, r)
          i = e.call(this, t, a, n) || this
          if (!r.playerOptions.sources || r.playerOptions.sources.length === 0) {
            for (var s = 0, o = r.playerOptions.techOrder; s < o.length; s++) {
              var u = xe(o[s])
              var l = sa.getTech(u)
              if (!u) {
                l = Be.getComponent(u)
              }
              if (l && l.isSupported()) {
                t.loadTech_(u)
                break
              }
            }
          } else {
            t.src(r.playerOptions.sources)
          }
          return i
        }
        return t
      })(Be)
      Be.registerComponent('MediaLoader', Da)
      var Oa = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.emitTapEvents()
          n.enable()
          return n
        }
        var r = t.prototype
        r.createEl = function t(r, n, i) {
          if (r === void 0) {
            r = 'div'
          }
          if (n === void 0) {
            n = {}
          }
          if (i === void 0) {
            i = {}
          }
          n = c(
            {
              innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
              className: this.buildCSSClass(),
              tabIndex: 0,
            },
            n
          )
          if (r === 'button') {
            s.error(
              'Creating a ClickableComponent with an HTML element of ' +
                r +
                ' is not supported; use a Button instead.'
            )
          }
          i = c({ role: 'button' }, i)
          this.tabIndex_ = n.tabIndex
          var a = e.prototype.createEl.call(this, r, n, i)
          this.createControlTextEl(a)
          return a
        }
        r.dispose = function t() {
          this.controlTextEl_ = null
          e.prototype.dispose.call(this)
        }
        r.createControlTextEl = function e(t) {
          this.controlTextEl_ = S(
            'span',
            { className: 'vjs-control-text' },
            { 'aria-live': 'polite' }
          )
          if (t) {
            t.appendChild(this.controlTextEl_)
          }
          this.controlText(this.controlText_, t)
          return this.controlTextEl_
        }
        r.controlText = function e(t, r) {
          if (r === void 0) {
            r = this.el()
          }
          if (t === undefined) {
            return this.controlText_ || 'Need Text'
          }
          var n = this.localize(t)
          this.controlText_ = t
          w(this.controlTextEl_, n)
          if (!this.nonIconControl) {
            r.setAttribute('title', n)
          }
        }
        r.buildCSSClass = function t() {
          return 'vjs-control vjs-button ' + e.prototype.buildCSSClass.call(this)
        }
        r.enable = function e() {
          if (!this.enabled_) {
            this.enabled_ = true
            this.removeClass('vjs-disabled')
            this.el_.setAttribute('aria-disabled', 'false')
            if (typeof this.tabIndex_ !== 'undefined') {
              this.el_.setAttribute('tabIndex', this.tabIndex_)
            }
            this.on(['tap', 'click'], this.handleClick)
            this.on('keydown', this.handleKeyDown)
          }
        }
        r.disable = function e() {
          this.enabled_ = false
          this.addClass('vjs-disabled')
          this.el_.setAttribute('aria-disabled', 'true')
          if (typeof this.tabIndex_ !== 'undefined') {
            this.el_.removeAttribute('tabIndex')
          }
          this.off('mouseover', this.handleMouseOver)
          this.off('mouseout', this.handleMouseOut)
          this.off(['tap', 'click'], this.handleClick)
          this.off('keydown', this.handleKeyDown)
        }
        r.handleClick = function e(t) {}
        r.handleKeyDown = function t(r) {
          if (Nt.isEventKey(r, 'Space') || Nt.isEventKey(r, 'Enter')) {
            r.preventDefault()
            r.stopPropagation()
            this.trigger('click')
          } else {
            e.prototype.handleKeyDown.call(this, r)
          }
        }
        return t
      })(Be)
      Be.registerComponent('ClickableComponent', Oa)
      var Ma = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.update()
          t.on('posterchange', ye(Ve(n), n.update))
          return n
        }
        var r = t.prototype
        r.dispose = function t() {
          this.player().off('posterchange', this.update)
          e.prototype.dispose.call(this)
        }
        r.createEl = function e() {
          var t = S('div', { className: 'vjs-poster', tabIndex: -1 })
          return t
        }
        r.update = function e(t) {
          var r = this.player().poster()
          this.setSrc(r)
          if (r) {
            this.show()
          } else {
            this.hide()
          }
        }
        r.setSrc = function e(t) {
          var r = ''
          if (t) {
            r = 'url("' + t + '")'
          }
          this.el_.style.backgroundImage = r
        }
        r.handleClick = function e(t) {
          if (!this.player_.controls()) {
            return
          }
          if (this.player_.tech(true)) {
            this.player_.tech(true).focus()
          }
          if (this.player_.paused()) {
            Rt(this.player_.play())
          } else {
            this.player_.pause()
          }
        }
        return t
      })(Oa)
      Be.registerComponent('PosterImage', Ma)
      var ka = '#222'
      var Pa = '#ccc'
      var Na = {
        monospace: 'monospace',
        sansSerif: 'sans-serif',
        serif: 'serif',
        monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace',
        monospaceSerif: '"Courier New", monospace',
        proportionalSansSerif: 'sans-serif',
        proportionalSerif: 'serif',
        casual: '"Comic Sans MS", Impact, fantasy',
        script: '"Monotype Corsiva", cursive',
        smallcaps: '"Andale Mono", "Lucida Console", monospace, sans-serif',
      }
      function La(e, t) {
        var r
        if (e.length === 4) {
          r = e[1] + e[1] + e[2] + e[2] + e[3] + e[3]
        } else if (e.length === 7) {
          r = e.slice(1)
        } else {
          throw new Error(
            'Invalid color code provided, ' + e + '; must be formatted as e.g. #f0e or #f604e2.'
          )
        }
        return (
          'rgba(' +
          parseInt(r.slice(0, 2), 16) +
          ',' +
          parseInt(r.slice(2, 4), 16) +
          ',' +
          parseInt(r.slice(4, 6), 16) +
          ',' +
          t +
          ')'
        )
      }
      function xa(e, t, r) {
        try {
          e.style[t] = r
        } catch (e) {
          return
        }
      }
      var Fa = (function(t) {
        je(r, t)
        function r(r, n, i) {
          var a
          a = t.call(this, r, n, i) || this
          var s = ye(Ve(a), a.updateDisplay)
          r.on('loadstart', ye(Ve(a), a.toggleDisplay))
          r.on('texttrackchange', s)
          r.on('loadedmetadata', ye(Ve(a), a.preselectTrack))
          r.ready(
            ye(Ve(a), function() {
              if (r.tech_ && r.tech_.featuresNativeTextTracks) {
                this.hide()
                return
              }
              r.on('fullscreenchange', s)
              r.on('playerresize', s)
              e.addEventListener('orientationchange', s)
              r.on('dispose', function() {
                return e.removeEventListener('orientationchange', s)
              })
              var t = this.options_.playerOptions.tracks || []
              for (var n = 0; n < t.length; n++) {
                this.player_.addRemoteTextTrack(t[n], true)
              }
              this.preselectTrack()
            })
          )
          return a
        }
        var n = r.prototype
        n.preselectTrack = function e() {
          var t = { captions: 1, subtitles: 1 }
          var r = this.player_.textTracks()
          var n = this.player_.cache_.selectedLanguage
          var i
          var a
          var s
          for (var o = 0; o < r.length; o++) {
            var u = r[o]
            if (n && n.enabled && n.language && n.language === u.language && u.kind in t) {
              if (u.kind === n.kind) {
                s = u
              } else if (!s) {
                s = u
              }
            } else if (n && !n.enabled) {
              s = null
              i = null
              a = null
            } else if (u['default']) {
              if (u.kind === 'descriptions' && !i) {
                i = u
              } else if (u.kind in t && !a) {
                a = u
              }
            }
          }
          if (s) {
            s.mode = 'showing'
          } else if (a) {
            a.mode = 'showing'
          } else if (i) {
            i.mode = 'showing'
          }
        }
        n.toggleDisplay = function e() {
          if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {
            this.hide()
          } else {
            this.show()
          }
        }
        n.createEl = function e() {
          return t.prototype.createEl.call(
            this,
            'div',
            { className: 'vjs-text-track-display' },
            { 'aria-live': 'off', 'aria-atomic': 'true' }
          )
        }
        n.clearDisplay = function t() {
          if (typeof e.WebVTT === 'function') {
            e.WebVTT.processCues(e, [], this.el_)
          }
        }
        n.updateDisplay = function e() {
          var t = this.player_.textTracks()
          var r = this.options_.allowMultipleShowingTracks
          this.clearDisplay()
          if (r) {
            var n = []
            for (var i = 0; i < t.length; ++i) {
              var a = t[i]
              if (a.mode !== 'showing') {
                continue
              }
              n.push(a)
            }
            this.updateForTrack(n)
            return
          }
          var s = null
          var o = null
          var u = t.length
          while (u--) {
            var l = t[u]
            if (l.mode === 'showing') {
              if (l.kind === 'descriptions') {
                s = l
              } else {
                o = l
              }
            }
          }
          if (o) {
            if (this.getAttribute('aria-live') !== 'off') {
              this.setAttribute('aria-live', 'off')
            }
            this.updateForTrack(o)
          } else if (s) {
            if (this.getAttribute('aria-live') !== 'assertive') {
              this.setAttribute('aria-live', 'assertive')
            }
            this.updateForTrack(s)
          }
        }
        n.updateDisplayState = function t(r) {
          var n = this.player_.textTrackSettings.getValues()
          var i = r.activeCues
          var a = i.length
          while (a--) {
            var s = i[a]
            if (!s) {
              continue
            }
            var o = s.displayState
            if (n.color) {
              o.firstChild.style.color = n.color
            }
            if (n.textOpacity) {
              xa(o.firstChild, 'color', La(n.color || '#fff', n.textOpacity))
            }
            if (n.backgroundColor) {
              o.firstChild.style.backgroundColor = n.backgroundColor
            }
            if (n.backgroundOpacity) {
              xa(
                o.firstChild,
                'backgroundColor',
                La(n.backgroundColor || '#000', n.backgroundOpacity)
              )
            }
            if (n.windowColor) {
              if (n.windowOpacity) {
                xa(o, 'backgroundColor', La(n.windowColor, n.windowOpacity))
              } else {
                o.style.backgroundColor = n.windowColor
              }
            }
            if (n.edgeStyle) {
              if (n.edgeStyle === 'dropshadow') {
                o.firstChild.style.textShadow =
                  '2px 2px 3px ' + ka + ', 2px 2px 4px ' + ka + ', 2px 2px 5px ' + ka
              } else if (n.edgeStyle === 'raised') {
                o.firstChild.style.textShadow =
                  '1px 1px ' + ka + ', 2px 2px ' + ka + ', 3px 3px ' + ka
              } else if (n.edgeStyle === 'depressed') {
                o.firstChild.style.textShadow =
                  '1px 1px ' + Pa + ', 0 1px ' + Pa + ', -1px -1px ' + ka + ', 0 -1px ' + ka
              } else if (n.edgeStyle === 'uniform') {
                o.firstChild.style.textShadow =
                  '0 0 4px ' + ka + ', 0 0 4px ' + ka + ', 0 0 4px ' + ka + ', 0 0 4px ' + ka
              }
            }
            if (n.fontPercent && n.fontPercent !== 1) {
              var u = e.parseFloat(o.style.fontSize)
              o.style.fontSize = u * n.fontPercent + 'px'
              o.style.height = 'auto'
              o.style.top = 'auto'
              o.style.bottom = '2px'
            }
            if (n.fontFamily && n.fontFamily !== 'default') {
              if (n.fontFamily === 'small-caps') {
                o.firstChild.style.fontVariant = 'small-caps'
              } else {
                o.firstChild.style.fontFamily = Na[n.fontFamily]
              }
            }
          }
        }
        n.updateForTrack = function t(r) {
          if (!Array.isArray(r)) {
            r = [r]
          }
          if (
            typeof e.WebVTT !== 'function' ||
            r.every(function(e) {
              return !e.activeCues
            })
          ) {
            return
          }
          var n = []
          for (var i = 0; i < r.length; ++i) {
            var a = r[i]
            for (var s = 0; s < a.activeCues.length; ++s) {
              n.push(a.activeCues[s])
            }
          }
          e.WebVTT.processCues(e, n, this.el_)
          for (var o = 0; o < r.length; ++o) {
            var u = r[o]
            for (var l = 0; l < u.activeCues.length; ++l) {
              var f = u.activeCues[l].displayState
              C(f, 'vjs-text-track-cue')
              C(f, 'vjs-text-track-cue-' + (u.language ? u.language : o))
            }
            if (this.player_.textTrackSettings) {
              this.updateDisplayState(u)
            }
          }
        }
        return r
      })(Be)
      Be.registerComponent('TextTrackDisplay', Fa)
      var Ua = (function(e) {
        je(t, e)
        function t() {
          return e.apply(this, arguments) || this
        }
        var r = t.prototype
        r.createEl = function t() {
          var r = this.player_.isAudio()
          var n = this.localize(r ? 'Audio Player' : 'Video Player')
          var i = S('span', {
            className: 'vjs-control-text',
            innerHTML: this.localize('{1} is loading.', [n]),
          })
          var a = e.prototype.createEl.call(this, 'div', {
            className: 'vjs-loading-spinner',
            dir: 'ltr',
          })
          a.appendChild(i)
          return a
        }
        return t
      })(Be)
      Be.registerComponent('LoadingSpinner', Ua)
      var Ba = (function(e) {
        je(t, e)
        function t() {
          return e.apply(this, arguments) || this
        }
        var r = t.prototype
        r.createEl = function e(t, r, n) {
          if (r === void 0) {
            r = {}
          }
          if (n === void 0) {
            n = {}
          }
          t = 'button'
          r = c(
            {
              innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
              className: this.buildCSSClass(),
            },
            r
          )
          n = c({ type: 'button' }, n)
          var i = Be.prototype.createEl.call(this, t, r, n)
          this.createControlTextEl(i)
          return i
        }
        r.addChild = function e(t, r) {
          if (r === void 0) {
            r = {}
          }
          var n = this.constructor.name
          s.warn(
            'Adding an actionable (user controllable) child to a Button (' +
              n +
              ') is not supported; use a ClickableComponent instead.'
          )
          return Be.prototype.addChild.call(this, t, r)
        }
        r.enable = function t() {
          e.prototype.enable.call(this)
          this.el_.removeAttribute('disabled')
        }
        r.disable = function t() {
          e.prototype.disable.call(this)
          this.el_.setAttribute('disabled', 'disabled')
        }
        r.handleKeyDown = function t(r) {
          if (Nt.isEventKey(r, 'Space') || Nt.isEventKey(r, 'Enter')) {
            r.stopPropagation()
            return
          }
          e.prototype.handleKeyDown.call(this, r)
        }
        return t
      })(Oa)
      Be.registerComponent('Button', Ba)
      var ja = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.mouseused_ = false
          n.on('mousedown', n.handleMouseDown)
          return n
        }
        var r = t.prototype
        r.buildCSSClass = function e() {
          return 'vjs-big-play-button'
        }
        r.handleClick = function e(t) {
          var r = this.player_.play()
          if (this.mouseused_ && t.clientX && t.clientY) {
            Rt(r)
            if (this.player_.tech(true)) {
              this.player_.tech(true).focus()
            }
            return
          }
          var n = this.player_.getChild('controlBar')
          var i = n && n.getChild('playToggle')
          if (!i) {
            this.player_.tech(true).focus()
            return
          }
          var a = function e() {
            return i.focus()
          }
          if (Ct(r)) {
            r.then(a, function() {})
          } else {
            this.setTimeout(a, 1)
          }
        }
        r.handleKeyDown = function t(r) {
          this.mouseused_ = false
          e.prototype.handleKeyDown.call(this, r)
        }
        r.handleMouseDown = function e(t) {
          this.mouseused_ = true
        }
        return t
      })(Ba)
      ja.prototype.controlText_ = 'Play Video'
      Be.registerComponent('BigPlayButton', ja)
      var Ga = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.controlText((r && r.controlText) || n.localize('Close'))
          return n
        }
        var r = t.prototype
        r.buildCSSClass = function t() {
          return 'vjs-close-button ' + e.prototype.buildCSSClass.call(this)
        }
        r.handleClick = function e(t) {
          this.trigger({ type: 'close', bubbles: false })
        }
        r.handleKeyDown = function t(r) {
          if (Nt.isEventKey(r, 'Esc')) {
            r.preventDefault()
            r.stopPropagation()
            this.trigger('click')
          } else {
            e.prototype.handleKeyDown.call(this, r)
          }
        }
        return t
      })(Ba)
      Be.registerComponent('CloseButton', Ga)
      var qa = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          if (r === void 0) {
            r = {}
          }
          n = e.call(this, t, r) || this
          r.replay = r.replay === undefined || r.replay
          n.on(t, 'play', n.handlePlay)
          n.on(t, 'pause', n.handlePause)
          if (r.replay) {
            n.on(t, 'ended', n.handleEnded)
          }
          return n
        }
        var r = t.prototype
        r.buildCSSClass = function t() {
          return 'vjs-play-control ' + e.prototype.buildCSSClass.call(this)
        }
        r.handleClick = function e(t) {
          if (this.player_.paused()) {
            this.player_.play()
          } else {
            this.player_.pause()
          }
        }
        r.handleSeeked = function e(t) {
          this.removeClass('vjs-ended')
          if (this.player_.paused()) {
            this.handlePause(t)
          } else {
            this.handlePlay(t)
          }
        }
        r.handlePlay = function e(t) {
          this.removeClass('vjs-ended')
          this.removeClass('vjs-paused')
          this.addClass('vjs-playing')
          this.controlText('Pause')
        }
        r.handlePause = function e(t) {
          this.removeClass('vjs-playing')
          this.addClass('vjs-paused')
          this.controlText('Play')
        }
        r.handleEnded = function e(t) {
          this.removeClass('vjs-playing')
          this.addClass('vjs-ended')
          this.controlText('Replay')
          this.one(this.player_, 'seeked', this.handleSeeked)
        }
        return t
      })(Ba)
      qa.prototype.controlText_ = 'Play'
      Be.registerComponent('PlayToggle', qa)
      var Ha = function e(t, r) {
        t = t < 0 ? 0 : t
        var n = Math.floor(t % 60)
        var i = Math.floor((t / 60) % 60)
        var a = Math.floor(t / 3600)
        var s = Math.floor((r / 60) % 60)
        var o = Math.floor(r / 3600)
        if (isNaN(t) || t === Infinity) {
          a = i = n = '-'
        }
        a = a > 0 || o > 0 ? a + ':' : ''
        i = ((a || s >= 10) && i < 10 ? '0' + i : i) + ':'
        n = n < 10 ? '0' + n : n
        return a + i + n
      }
      var Va = Ha
      function Ka(e) {
        Va = e
      }
      function Ya() {
        Va = Ha
      }
      function Wa(e, t) {
        if (t === void 0) {
          t = e
        }
        return Va(e, t)
      }
      var za = (function(e) {
        je(r, e)
        function r(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.throttledUpdateContent = _e(ye(Ve(n), n.updateContent), me)
          n.on(t, 'timeupdate', n.throttledUpdateContent)
          return n
        }
        var n = r.prototype
        n.createEl = function t() {
          var r = this.buildCSSClass()
          var n = e.prototype.createEl.call(this, 'div', {
            className: r + ' vjs-time-control vjs-control',
            innerHTML:
              '<span class="vjs-control-text" role="presentation">' +
              this.localize(this.labelText_) +
              'Â </span>',
          })
          this.contentEl_ = S(
            'span',
            { className: r + '-display' },
            { 'aria-live': 'off', role: 'presentation' }
          )
          this.updateTextNode_()
          n.appendChild(this.contentEl_)
          return n
        }
        n.dispose = function t() {
          this.contentEl_ = null
          this.textNode_ = null
          e.prototype.dispose.call(this)
        }
        n.updateTextNode_ = function e() {
          if (!this.contentEl_) {
            return
          }
          while (this.contentEl_.firstChild) {
            this.contentEl_.removeChild(this.contentEl_.firstChild)
          }
          this.textNode_ = t.createTextNode(this.formattedTime_ || this.formatTime_(0))
          this.contentEl_.appendChild(this.textNode_)
        }
        n.formatTime_ = function e(t) {
          return Wa(t)
        }
        n.updateFormattedTime_ = function e(t) {
          var r = this.formatTime_(t)
          if (r === this.formattedTime_) {
            return
          }
          this.formattedTime_ = r
          this.requestAnimationFrame(this.updateTextNode_)
        }
        n.updateContent = function e(t) {}
        return r
      })(Be)
      za.prototype.labelText_ = 'Time'
      za.prototype.controlText_ = 'Time'
      Be.registerComponent('TimeDisplay', za)
      var Xa = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.on(t, 'ended', n.handleEnded)
          return n
        }
        var r = t.prototype
        r.buildCSSClass = function e() {
          return 'vjs-current-time'
        }
        r.updateContent = function e(t) {
          var r = this.player_.scrubbing()
            ? this.player_.getCache().currentTime
            : this.player_.currentTime()
          this.updateFormattedTime_(r)
        }
        r.handleEnded = function e(t) {
          if (!this.player_.duration()) {
            return
          }
          this.updateFormattedTime_(this.player_.duration())
        }
        return t
      })(za)
      Xa.prototype.labelText_ = 'Current Time'
      Xa.prototype.controlText_ = 'Current Time'
      Be.registerComponent('CurrentTimeDisplay', Xa)
      var $a = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.on(t, 'durationchange', n.updateContent)
          n.on(t, 'loadstart', n.updateContent)
          n.on(t, 'loadedmetadata', n.throttledUpdateContent)
          return n
        }
        var r = t.prototype
        r.buildCSSClass = function e() {
          return 'vjs-duration'
        }
        r.updateContent = function e(t) {
          var r = this.player_.duration()
          if (this.duration_ !== r) {
            this.duration_ = r
            this.updateFormattedTime_(r)
          }
        }
        return t
      })(za)
      $a.prototype.labelText_ = 'Duration'
      $a.prototype.controlText_ = 'Duration'
      Be.registerComponent('DurationDisplay', $a)
      var Qa = (function(e) {
        je(t, e)
        function t() {
          return e.apply(this, arguments) || this
        }
        var r = t.prototype
        r.createEl = function t() {
          return e.prototype.createEl.call(
            this,
            'div',
            {
              className: 'vjs-time-control vjs-time-divider',
              innerHTML: '<div><span>/</span></div>',
            },
            { 'aria-hidden': true }
          )
        }
        return t
      })(Be)
      Be.registerComponent('TimeDivider', Qa)
      var Ja = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.on(t, 'durationchange', n.throttledUpdateContent)
          n.on(t, 'ended', n.handleEnded)
          return n
        }
        var r = t.prototype
        r.buildCSSClass = function e() {
          return 'vjs-remaining-time'
        }
        r.createEl = function t() {
          var r = e.prototype.createEl.call(this)
          r.insertBefore(S('span', {}, { 'aria-hidden': true }, '-'), this.contentEl_)
          return r
        }
        r.updateContent = function e(t) {
          if (typeof this.player_.duration() !== 'number') {
            return
          }
          if (this.player_.remainingTimeDisplay) {
            this.updateFormattedTime_(this.player_.remainingTimeDisplay())
          } else {
            this.updateFormattedTime_(this.player_.remainingTime())
          }
        }
        r.handleEnded = function e(t) {
          if (!this.player_.duration()) {
            return
          }
          this.updateFormattedTime_(0)
        }
        return t
      })(za)
      Ja.prototype.labelText_ = 'Remaining Time'
      Ja.prototype.controlText_ = 'Remaining Time'
      Be.registerComponent('RemainingTimeDisplay', Ja)
      var Za = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.updateShowing()
          n.on(n.player(), 'durationchange', n.updateShowing)
          return n
        }
        var r = t.prototype
        r.createEl = function t() {
          var r = e.prototype.createEl.call(this, 'div', {
            className: 'vjs-live-control vjs-control',
          })
          this.contentEl_ = S(
            'div',
            {
              className: 'vjs-live-display',
              innerHTML:
                '<span class="vjs-control-text">' +
                this.localize('Stream Type') +
                'Â </span>' +
                this.localize('LIVE'),
            },
            { 'aria-live': 'off' }
          )
          r.appendChild(this.contentEl_)
          return r
        }
        r.dispose = function t() {
          this.contentEl_ = null
          e.prototype.dispose.call(this)
        }
        r.updateShowing = function e(t) {
          if (this.player().duration() === Infinity) {
            this.show()
          } else {
            this.hide()
          }
        }
        return t
      })(Be)
      Be.registerComponent('LiveDisplay', Za)
      var es = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.updateLiveEdgeStatus()
          if (n.player_.liveTracker) {
            n.on(n.player_.liveTracker, 'liveedgechange', n.updateLiveEdgeStatus)
          }
          return n
        }
        var r = t.prototype
        r.createEl = function t() {
          var r = e.prototype.createEl.call(this, 'button', {
            className: 'vjs-seek-to-live-control vjs-control',
          })
          this.textEl_ = S(
            'span',
            { className: 'vjs-seek-to-live-text', innerHTML: this.localize('LIVE') },
            { 'aria-hidden': 'true' }
          )
          r.appendChild(this.textEl_)
          return r
        }
        r.updateLiveEdgeStatus = function e(t) {
          if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {
            this.setAttribute('aria-disabled', true)
            this.addClass('vjs-at-live-edge')
            this.controlText('Seek to live, currently playing live')
          } else {
            this.setAttribute('aria-disabled', false)
            this.removeClass('vjs-at-live-edge')
            this.controlText('Seek to live, currently behind live')
          }
        }
        r.handleClick = function e() {
          this.player_.liveTracker.seekToLiveEdge()
        }
        r.dispose = function t() {
          if (this.player_.liveTracker) {
            this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus)
          }
          this.textEl_ = null
          e.prototype.dispose.call(this)
        }
        return t
      })(Ba)
      es.prototype.controlText_ = 'Seek to live, currently playing live'
      Be.registerComponent('SeekToLive', es)
      var ts = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.bar = n.getChild(n.options_.barName)
          n.vertical(!!n.options_.vertical)
          n.enable()
          return n
        }
        var r = t.prototype
        r.enabled = function e() {
          return this.enabled_
        }
        r.enable = function e() {
          if (this.enabled()) {
            return
          }
          this.on('mousedown', this.handleMouseDown)
          this.on('touchstart', this.handleMouseDown)
          this.on('keydown', this.handleKeyDown)
          this.on('click', this.handleClick)
          this.on(this.player_, 'controlsvisible', this.update)
          if (this.playerEvent) {
            this.on(this.player_, this.playerEvent, this.update)
          }
          this.removeClass('disabled')
          this.setAttribute('tabindex', 0)
          this.enabled_ = true
        }
        r.disable = function e() {
          if (!this.enabled()) {
            return
          }
          var t = this.bar.el_.ownerDocument
          this.off('mousedown', this.handleMouseDown)
          this.off('touchstart', this.handleMouseDown)
          this.off('keydown', this.handleKeyDown)
          this.off('click', this.handleClick)
          this.off(this.player_, 'controlsvisible', this.update)
          this.off(t, 'mousemove', this.handleMouseMove)
          this.off(t, 'mouseup', this.handleMouseUp)
          this.off(t, 'touchmove', this.handleMouseMove)
          this.off(t, 'touchend', this.handleMouseUp)
          this.removeAttribute('tabindex')
          this.addClass('disabled')
          if (this.playerEvent) {
            this.off(this.player_, this.playerEvent, this.update)
          }
          this.enabled_ = false
        }
        r.createEl = function t(r, n, i) {
          if (n === void 0) {
            n = {}
          }
          if (i === void 0) {
            i = {}
          }
          n.className = n.className + ' vjs-slider'
          n = c({ tabIndex: 0 }, n)
          i = c(
            {
              role: 'slider',
              'aria-valuenow': 0,
              'aria-valuemin': 0,
              'aria-valuemax': 100,
              tabIndex: 0,
            },
            i
          )
          return e.prototype.createEl.call(this, r, n, i)
        }
        r.handleMouseDown = function e(t) {
          var r = this.bar.el_.ownerDocument
          if (t.type === 'mousedown') {
            t.preventDefault()
          }
          if (t.type === 'touchstart' && !it) {
            t.preventDefault()
          }
          L()
          this.addClass('vjs-sliding')
          this.trigger('slideractive')
          this.on(r, 'mousemove', this.handleMouseMove)
          this.on(r, 'mouseup', this.handleMouseUp)
          this.on(r, 'touchmove', this.handleMouseMove)
          this.on(r, 'touchend', this.handleMouseUp)
          this.handleMouseMove(t)
        }
        r.handleMouseMove = function e(t) {}
        r.handleMouseUp = function e() {
          var t = this.bar.el_.ownerDocument
          x()
          this.removeClass('vjs-sliding')
          this.trigger('sliderinactive')
          this.off(t, 'mousemove', this.handleMouseMove)
          this.off(t, 'mouseup', this.handleMouseUp)
          this.off(t, 'touchmove', this.handleMouseMove)
          this.off(t, 'touchend', this.handleMouseUp)
          this.update()
        }
        r.update = function e() {
          if (!this.el_) {
            return
          }
          var t = this.getPercent()
          var r = this.bar
          if (!r) {
            return
          }
          if (typeof t !== 'number' || t !== t || t < 0 || t === Infinity) {
            t = 0
          }
          var n = (t * 100).toFixed(2) + '%'
          var i = r.el().style
          var a = this.vertical() ? 'height' : 'width'
          if (i[a] !== n) {
            i[a] = n
          }
          return t
        }
        r.calculateDistance = function e(t) {
          var r = B(this.el_, t)
          if (this.vertical()) {
            return r.y
          }
          return r.x
        }
        r.handleKeyDown = function t(r) {
          if (Nt.isEventKey(r, 'Left') || Nt.isEventKey(r, 'Down')) {
            r.preventDefault()
            r.stopPropagation()
            this.stepBack()
          } else if (Nt.isEventKey(r, 'Right') || Nt.isEventKey(r, 'Up')) {
            r.preventDefault()
            r.stopPropagation()
            this.stepForward()
          } else {
            e.prototype.handleKeyDown.call(this, r)
          }
        }
        r.handleClick = function e(t) {
          t.stopPropagation()
          t.preventDefault()
        }
        r.vertical = function e(t) {
          if (t === undefined) {
            return this.vertical_ || false
          }
          this.vertical_ = !!t
          if (this.vertical_) {
            this.addClass('vjs-slider-vertical')
          } else {
            this.addClass('vjs-slider-horizontal')
          }
        }
        return t
      })(Be)
      Be.registerComponent('Slider', ts)
      var rs = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.partEls_ = []
          n.on(t, 'progress', n.update)
          return n
        }
        var r = t.prototype
        r.createEl = function t() {
          return e.prototype.createEl.call(this, 'div', {
            className: 'vjs-load-progress',
            innerHTML:
              '<span class="vjs-control-text"><span>' +
              this.localize('Loaded') +
              '</span>: <span class="vjs-control-text-loaded-percentage">0%</span></span>',
          })
        }
        r.dispose = function t() {
          this.partEls_ = null
          e.prototype.dispose.call(this)
        }
        r.update = function e(t) {
          var r = this.player_.liveTracker
          var n = this.player_.buffered()
          var i = r && r.isLive() ? r.seekableEnd() : this.player_.duration()
          var a = this.player_.bufferedEnd()
          var s = this.partEls_
          var o = this.$('.vjs-control-text-loaded-percentage')
          var u = function e(t, r, n) {
            var i = t / r || 0
            i = (i >= 1 ? 1 : i) * 100
            if (n) {
              i = i.toFixed(2)
            }
            return i + '%'
          }
          this.el_.style.width = u(a, i)
          w(o, u(a, i, true))
          for (var l = 0; l < n.length; l++) {
            var f = n.start(l)
            var d = n.end(l)
            var c = s[l]
            if (!c) {
              c = this.el_.appendChild(S())
              s[l] = c
            }
            c.style.left = u(f, a)
            c.style.width = u(d - f, a)
          }
          for (var h = s.length; h > n.length; h--) {
            this.el_.removeChild(s[h - 1])
          }
          s.length = n.length
        }
        return t
      })(Be)
      Be.registerComponent('LoadProgressBar', rs)
      var ns = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.update = _e(ye(Ve(n), n.update), me)
          return n
        }
        var r = t.prototype
        r.createEl = function t() {
          return e.prototype.createEl.call(
            this,
            'div',
            { className: 'vjs-time-tooltip' },
            { 'aria-hidden': 'true' }
          )
        }
        r.update = function e(t, r, n) {
          var i = F(this.el_)
          var a = F(this.player_.el())
          var s = t.width * r
          if (!a || !i) {
            return
          }
          var o = t.left - a.left + s
          var u = t.width - s + (a.right - t.right)
          var l = i.width / 2
          if (o < l) {
            l += l - o
          } else if (u < l) {
            l = u
          }
          if (l < 0) {
            l = 0
          } else if (l > i.width) {
            l = i.width
          }
          this.el_.style.right = '-' + l + 'px'
          this.write(n)
        }
        r.write = function e(t) {
          w(this.el_, t)
        }
        r.updateTime = function e(t, r, n, i) {
          var a = this
          if (this.rafId_) {
            this.cancelAnimationFrame(this.rafId_)
          }
          this.rafId_ = this.requestAnimationFrame(function() {
            var e
            var s = a.player_.duration()
            if (a.player_.liveTracker && a.player_.liveTracker.isLive()) {
              var o = a.player_.liveTracker.liveWindow()
              var u = o - r * o
              e = (u < 1 ? '' : '-') + Wa(u, o)
            } else {
              e = Wa(n, s)
            }
            a.update(t, r, e)
            if (i) {
              i()
            }
          })
        }
        return t
      })(Be)
      Be.registerComponent('TimeTooltip', ns)
      var is = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.update = _e(ye(Ve(n), n.update), me)
          return n
        }
        var r = t.prototype
        r.createEl = function t() {
          return e.prototype.createEl.call(
            this,
            'div',
            { className: 'vjs-play-progress vjs-slider-bar' },
            { 'aria-hidden': 'true' }
          )
        }
        r.update = function e(t, r) {
          var n = this.getChild('timeTooltip')
          if (!n) {
            return
          }
          var i = this.player_.scrubbing()
            ? this.player_.getCache().currentTime
            : this.player_.currentTime()
          n.updateTime(t, r, i)
        }
        return t
      })(Be)
      is.prototype.options_ = { children: [] }
      if (!Qe && !Ze) {
        is.prototype.options_.children.push('timeTooltip')
      }
      Be.registerComponent('PlayProgressBar', is)
      var as = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.update = _e(ye(Ve(n), n.update), me)
          return n
        }
        var r = t.prototype
        r.createEl = function t() {
          return e.prototype.createEl.call(this, 'div', { className: 'vjs-mouse-display' })
        }
        r.update = function e(t, r) {
          var n = this
          var i = r * this.player_.duration()
          this.getChild('timeTooltip').updateTime(t, r, i, function() {
            n.el_.style.left = t.width * r + 'px'
          })
        }
        return t
      })(Be)
      as.prototype.options_ = { children: ['timeTooltip'] }
      Be.registerComponent('MouseTimeDisplay', as)
      var ss = 5
      var os = 12
      var us = 30
      var ls = (function(e) {
        je(r, e)
        function r(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.setEventHandlers_()
          return n
        }
        var n = r.prototype
        n.setEventHandlers_ = function e() {
          this.update = _e(ye(this, this.update), us)
          this.on(this.player_, 'timeupdate', this.update)
          this.on(this.player_, 'ended', this.handleEnded)
          this.on(this.player_, 'durationchange', this.update)
          if (this.player_.liveTracker) {
            this.on(this.player_.liveTracker, 'liveedgechange', this.update)
          }
          this.updateInterval = null
          this.on(this.player_, ['playing'], this.enableInterval_)
          this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_)
          if ('hidden' in t && 'visibilityState' in t) {
            this.on(t, 'visibilitychange', this.toggleVisibility_)
          }
        }
        n.toggleVisibility_ = function e(r) {
          if (t.hidden) {
            this.disableInterval_(r)
          } else {
            this.enableInterval_()
            this.requestAnimationFrame(this.update)
          }
        }
        n.enableInterval_ = function e() {
          var t = this
          this.clearInterval(this.updateInterval)
          this.updateInterval = this.setInterval(function() {
            t.requestAnimationFrame(t.update)
          }, us)
        }
        n.disableInterval_ = function e(t) {
          if (this.player_.liveTracker && this.player_.liveTracker.isLive() && t.type !== 'ended') {
            return
          }
          this.clearInterval(this.updateInterval)
        }
        n.createEl = function t() {
          return e.prototype.createEl.call(
            this,
            'div',
            { className: 'vjs-progress-holder' },
            { 'aria-label': this.localize('Progress Bar') }
          )
        }
        n.update_ = function e(t, r) {
          var n = this.player_.liveTracker
          var i = this.player_.duration()
          if (n && n.isLive()) {
            i = this.player_.liveTracker.liveCurrentTime()
          }
          this.el_.setAttribute('aria-valuenow', (r * 100).toFixed(2))
          this.el_.setAttribute(
            'aria-valuetext',
            this.localize(
              'progress bar timing: currentTime={1} duration={2}',
              [Wa(t, i), Wa(i, i)],
              '{1} of {2}'
            )
          )
          if (this.bar) {
            this.bar.update(F(this.el_), r)
          }
        }
        n.update = function t(r) {
          if (this.el().offsetParent === null) {
            return
          }
          var n = e.prototype.update.call(this)
          this.update_(this.getCurrentTime_(), n)
          return n
        }
        n.getCurrentTime_ = function e() {
          return this.player_.scrubbing()
            ? this.player_.getCache().currentTime
            : this.player_.currentTime()
        }
        n.handleEnded = function e(t) {
          this.update_(this.player_.duration(), 1)
        }
        n.getPercent = function e() {
          var t = this.getCurrentTime_()
          var r
          var n = this.player_.liveTracker
          if (n && n.isLive()) {
            r = (t - n.seekableStart()) / n.liveWindow()
            if (n.atLiveEdge()) {
              r = 1
            }
          } else {
            r = t / this.player_.duration()
          }
          return r >= 1 ? 1 : r || 0
        }
        n.handleMouseDown = function t(r) {
          if (!K(r)) {
            return
          }
          r.stopPropagation()
          this.player_.scrubbing(true)
          this.videoWasPlaying = !this.player_.paused()
          this.player_.pause()
          e.prototype.handleMouseDown.call(this, r)
        }
        n.handleMouseMove = function e(t) {
          if (!K(t)) {
            return
          }
          var r
          var n = this.calculateDistance(t)
          var i = this.player_.liveTracker
          if (!i || !i.isLive()) {
            r = n * this.player_.duration()
            if (r === this.player_.duration()) {
              r = r - 0.1
            }
          } else {
            var a = i.seekableStart()
            var s = i.liveCurrentTime()
            r = a + n * i.liveWindow()
            if (r >= s) {
              r = s
            }
            if (r <= a) {
              r = a + 0.1
            }
            if (r === Infinity) {
              return
            }
          }
          this.player_.currentTime(r)
        }
        n.enable = function t() {
          e.prototype.enable.call(this)
          var r = this.getChild('mouseTimeDisplay')
          if (!r) {
            return
          }
          r.show()
        }
        n.disable = function t() {
          e.prototype.disable.call(this)
          var r = this.getChild('mouseTimeDisplay')
          if (!r) {
            return
          }
          r.hide()
        }
        n.handleMouseUp = function t(r) {
          e.prototype.handleMouseUp.call(this, r)
          if (r) {
            r.stopPropagation()
          }
          this.player_.scrubbing(false)
          this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true })
          if (this.videoWasPlaying) {
            Rt(this.player_.play())
          }
        }
        n.stepForward = function e() {
          this.player_.currentTime(this.player_.currentTime() + ss)
        }
        n.stepBack = function e() {
          this.player_.currentTime(this.player_.currentTime() - ss)
        }
        n.handleAction = function e(t) {
          if (this.player_.paused()) {
            this.player_.play()
          } else {
            this.player_.pause()
          }
        }
        n.handleKeyDown = function t(r) {
          if (Nt.isEventKey(r, 'Space') || Nt.isEventKey(r, 'Enter')) {
            r.preventDefault()
            r.stopPropagation()
            this.handleAction(r)
          } else if (Nt.isEventKey(r, 'Home')) {
            r.preventDefault()
            r.stopPropagation()
            this.player_.currentTime(0)
          } else if (Nt.isEventKey(r, 'End')) {
            r.preventDefault()
            r.stopPropagation()
            this.player_.currentTime(this.player_.duration())
          } else if (/^[0-9]$/.test(Nt(r))) {
            r.preventDefault()
            r.stopPropagation()
            var n = ((Nt.codes[Nt(r)] - Nt.codes['0']) * 10) / 100
            this.player_.currentTime(this.player_.duration() * n)
          } else if (Nt.isEventKey(r, 'PgDn')) {
            r.preventDefault()
            r.stopPropagation()
            this.player_.currentTime(this.player_.currentTime() - ss * os)
          } else if (Nt.isEventKey(r, 'PgUp')) {
            r.preventDefault()
            r.stopPropagation()
            this.player_.currentTime(this.player_.currentTime() + ss * os)
          } else {
            e.prototype.handleKeyDown.call(this, r)
          }
        }
        return r
      })(ts)
      ls.prototype.options_ = {
        children: ['loadProgressBar', 'playProgressBar'],
        barName: 'playProgressBar',
      }
      if (!Qe && !Ze) {
        ls.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay')
      }
      Be.registerComponent('SeekBar', ls)
      var fs = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.handleMouseMove = _e(ye(Ve(n), n.handleMouseMove), me)
          n.throttledHandleMouseSeek = _e(ye(Ve(n), n.handleMouseSeek), me)
          n.enable()
          return n
        }
        var r = t.prototype
        r.createEl = function t() {
          return e.prototype.createEl.call(this, 'div', {
            className: 'vjs-progress-control vjs-control',
          })
        }
        r.handleMouseMove = function e(t) {
          var r = this.getChild('seekBar')
          if (r) {
            var n = r.getChild('mouseTimeDisplay')
            var i = r.el()
            var a = F(i)
            var s = B(i, t).x
            if (s > 1) {
              s = 1
            } else if (s < 0) {
              s = 0
            }
            if (n) {
              n.update(a, s)
            }
          }
        }
        r.handleMouseSeek = function e(t) {
          var r = this.getChild('seekBar')
          if (r) {
            r.handleMouseMove(t)
          }
        }
        r.enabled = function e() {
          return this.enabled_
        }
        r.disable = function e() {
          this.children().forEach(function(e) {
            return e.disable && e.disable()
          })
          if (!this.enabled()) {
            return
          }
          this.off(['mousedown', 'touchstart'], this.handleMouseDown)
          this.off(this.el_, 'mousemove', this.handleMouseMove)
          this.handleMouseUp()
          this.addClass('disabled')
          this.enabled_ = false
        }
        r.enable = function e() {
          this.children().forEach(function(e) {
            return e.enable && e.enable()
          })
          if (this.enabled()) {
            return
          }
          this.on(['mousedown', 'touchstart'], this.handleMouseDown)
          this.on(this.el_, 'mousemove', this.handleMouseMove)
          this.removeClass('disabled')
          this.enabled_ = true
        }
        r.handleMouseDown = function e(t) {
          var r = this.el_.ownerDocument
          var n = this.getChild('seekBar')
          if (n) {
            n.handleMouseDown(t)
          }
          this.on(r, 'mousemove', this.throttledHandleMouseSeek)
          this.on(r, 'touchmove', this.throttledHandleMouseSeek)
          this.on(r, 'mouseup', this.handleMouseUp)
          this.on(r, 'touchend', this.handleMouseUp)
        }
        r.handleMouseUp = function e(t) {
          var r = this.el_.ownerDocument
          var n = this.getChild('seekBar')
          if (n) {
            n.handleMouseUp(t)
          }
          this.off(r, 'mousemove', this.throttledHandleMouseSeek)
          this.off(r, 'touchmove', this.throttledHandleMouseSeek)
          this.off(r, 'mouseup', this.handleMouseUp)
          this.off(r, 'touchend', this.handleMouseUp)
        }
        return t
      })(Be)
      fs.prototype.options_ = { children: ['seekBar'] }
      Be.registerComponent('ProgressControl', fs)
      var ds = (function(e) {
        je(r, e)
        function r(r, n) {
          var i
          i = e.call(this, r, n) || this
          i.on(
            r,
            ['enterpictureinpicture', 'leavepictureinpicture'],
            i.handlePictureInPictureChange
          )
          if (!t.pictureInPictureEnabled) {
            i.disable()
          }
          return i
        }
        var n = r.prototype
        n.buildCSSClass = function t() {
          return 'vjs-picture-in-picture-control ' + e.prototype.buildCSSClass.call(this)
        }
        n.handlePictureInPictureChange = function e(t) {
          if (this.player_.isInPictureInPicture()) {
            this.controlText('Exit Picture-in-Picture')
          } else {
            this.controlText('Picture-in-Picture')
          }
        }
        n.handleClick = function e(t) {
          if (!this.player_.isInPictureInPicture()) {
            this.player_.requestPictureInPicture()
          } else {
            this.player_.exitPictureInPicture()
          }
        }
        return r
      })(Ba)
      ds.prototype.controlText_ = 'Picture-in-Picture'
      Be.registerComponent('PictureInPictureToggle', ds)
      var cs = (function(e) {
        je(r, e)
        function r(r, n) {
          var i
          i = e.call(this, r, n) || this
          i.on(r, 'fullscreenchange', i.handleFullscreenChange)
          if (t[r.fsApi_.fullscreenEnabled] === false) {
            i.disable()
          }
          return i
        }
        var n = r.prototype
        n.buildCSSClass = function t() {
          return 'vjs-fullscreen-control ' + e.prototype.buildCSSClass.call(this)
        }
        n.handleFullscreenChange = function e(t) {
          if (this.player_.isFullscreen()) {
            this.controlText('Non-Fullscreen')
          } else {
            this.controlText('Fullscreen')
          }
        }
        n.handleClick = function e(t) {
          if (!this.player_.isFullscreen()) {
            this.player_.requestFullscreen()
          } else {
            this.player_.exitFullscreen()
          }
        }
        return r
      })(Ba)
      cs.prototype.controlText_ = 'Fullscreen'
      Be.registerComponent('FullscreenToggle', cs)
      var hs = function e(t, r) {
        if (r.tech_ && !r.tech_.featuresVolumeControl) {
          t.addClass('vjs-hidden')
        }
        t.on(r, 'loadstart', function() {
          if (!r.tech_.featuresVolumeControl) {
            t.addClass('vjs-hidden')
          } else {
            t.removeClass('vjs-hidden')
          }
        })
      }
      var ps = (function(e) {
        je(t, e)
        function t() {
          return e.apply(this, arguments) || this
        }
        var r = t.prototype
        r.createEl = function t() {
          return e.prototype.createEl.call(this, 'div', {
            className: 'vjs-volume-level',
            innerHTML: '<span class="vjs-control-text"></span>',
          })
        }
        return t
      })(Be)
      Be.registerComponent('VolumeLevel', ps)
      var vs = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.on('slideractive', n.updateLastVolume_)
          n.on(t, 'volumechange', n.updateARIAAttributes)
          t.ready(function() {
            return n.updateARIAAttributes()
          })
          return n
        }
        var r = t.prototype
        r.createEl = function t() {
          return e.prototype.createEl.call(
            this,
            'div',
            { className: 'vjs-volume-bar vjs-slider-bar' },
            { 'aria-label': this.localize('Volume Level'), 'aria-live': 'polite' }
          )
        }
        r.handleMouseDown = function t(r) {
          if (!K(r)) {
            return
          }
          e.prototype.handleMouseDown.call(this, r)
        }
        r.handleMouseMove = function e(t) {
          if (!K(t)) {
            return
          }
          this.checkMuted()
          this.player_.volume(this.calculateDistance(t))
        }
        r.checkMuted = function e() {
          if (this.player_.muted()) {
            this.player_.muted(false)
          }
        }
        r.getPercent = function e() {
          if (this.player_.muted()) {
            return 0
          }
          return this.player_.volume()
        }
        r.stepForward = function e() {
          this.checkMuted()
          this.player_.volume(this.player_.volume() + 0.1)
        }
        r.stepBack = function e() {
          this.checkMuted()
          this.player_.volume(this.player_.volume() - 0.1)
        }
        r.updateARIAAttributes = function e(t) {
          var r = this.player_.muted() ? 0 : this.volumeAsPercentage_()
          this.el_.setAttribute('aria-valuenow', r)
          this.el_.setAttribute('aria-valuetext', r + '%')
        }
        r.volumeAsPercentage_ = function e() {
          return Math.round(this.player_.volume() * 100)
        }
        r.updateLastVolume_ = function e() {
          var t = this
          var r = this.player_.volume()
          this.one('sliderinactive', function() {
            if (t.player_.volume() === 0) {
              t.player_.lastVolume_(r)
            }
          })
        }
        return t
      })(ts)
      vs.prototype.options_ = { children: ['volumeLevel'], barName: 'volumeLevel' }
      vs.prototype.playerEvent = 'volumechange'
      Be.registerComponent('VolumeBar', vs)
      var gs = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          if (r === void 0) {
            r = {}
          }
          r.vertical = r.vertical || false
          if (typeof r.volumeBar === 'undefined' || p(r.volumeBar)) {
            r.volumeBar = r.volumeBar || {}
            r.volumeBar.vertical = r.vertical
          }
          n = e.call(this, t, r) || this
          hs(Ve(n), t)
          n.throttledHandleMouseMove = _e(ye(Ve(n), n.handleMouseMove), me)
          n.on('mousedown', n.handleMouseDown)
          n.on('touchstart', n.handleMouseDown)
          n.on(n.volumeBar, ['focus', 'slideractive'], function() {
            n.volumeBar.addClass('vjs-slider-active')
            n.addClass('vjs-slider-active')
            n.trigger('slideractive')
          })
          n.on(n.volumeBar, ['blur', 'sliderinactive'], function() {
            n.volumeBar.removeClass('vjs-slider-active')
            n.removeClass('vjs-slider-active')
            n.trigger('sliderinactive')
          })
          return n
        }
        var r = t.prototype
        r.createEl = function t() {
          var r = 'vjs-volume-horizontal'
          if (this.options_.vertical) {
            r = 'vjs-volume-vertical'
          }
          return e.prototype.createEl.call(this, 'div', {
            className: 'vjs-volume-control vjs-control ' + r,
          })
        }
        r.handleMouseDown = function e(t) {
          var r = this.el_.ownerDocument
          this.on(r, 'mousemove', this.throttledHandleMouseMove)
          this.on(r, 'touchmove', this.throttledHandleMouseMove)
          this.on(r, 'mouseup', this.handleMouseUp)
          this.on(r, 'touchend', this.handleMouseUp)
        }
        r.handleMouseUp = function e(t) {
          var r = this.el_.ownerDocument
          this.off(r, 'mousemove', this.throttledHandleMouseMove)
          this.off(r, 'touchmove', this.throttledHandleMouseMove)
          this.off(r, 'mouseup', this.handleMouseUp)
          this.off(r, 'touchend', this.handleMouseUp)
        }
        r.handleMouseMove = function e(t) {
          this.volumeBar.handleMouseMove(t)
        }
        return t
      })(Be)
      gs.prototype.options_ = { children: ['volumeBar'] }
      Be.registerComponent('VolumeControl', gs)
      var ms = function e(t, r) {
        if (r.tech_ && !r.tech_.featuresMuteControl) {
          t.addClass('vjs-hidden')
        }
        t.on(r, 'loadstart', function() {
          if (!r.tech_.featuresMuteControl) {
            t.addClass('vjs-hidden')
          } else {
            t.removeClass('vjs-hidden')
          }
        })
      }
      var ys = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          ms(Ve(n), t)
          n.on(t, ['loadstart', 'volumechange'], n.update)
          return n
        }
        var r = t.prototype
        r.buildCSSClass = function t() {
          return 'vjs-mute-control ' + e.prototype.buildCSSClass.call(this)
        }
        r.handleClick = function e(t) {
          var r = this.player_.volume()
          var n = this.player_.lastVolume_()
          if (r === 0) {
            var i = n < 0.1 ? 0.1 : n
            this.player_.volume(i)
            this.player_.muted(false)
          } else {
            this.player_.muted(this.player_.muted() ? false : true)
          }
        }
        r.update = function e(t) {
          this.updateIcon_()
          this.updateControlText_()
        }
        r.updateIcon_ = function e() {
          var t = this.player_.volume()
          var r = 3
          if (Qe && this.player_.tech_ && this.player_.tech_.el_) {
            this.player_.muted(this.player_.tech_.el_.muted)
          }
          if (t === 0 || this.player_.muted()) {
            r = 0
          } else if (t < 0.33) {
            r = 1
          } else if (t < 0.67) {
            r = 2
          }
          for (var n = 0; n < 4; n++) {
            R(this.el_, 'vjs-vol-' + n)
          }
          C(this.el_, 'vjs-vol-' + r)
        }
        r.updateControlText_ = function e() {
          var t = this.player_.muted() || this.player_.volume() === 0
          var r = t ? 'Unmute' : 'Mute'
          if (this.controlText() !== r) {
            this.controlText(r)
          }
        }
        return t
      })(Ba)
      ys.prototype.controlText_ = 'Mute'
      Be.registerComponent('MuteToggle', ys)
      var _s = (function(e) {
        je(r, e)
        function r(t, r) {
          var n
          if (r === void 0) {
            r = {}
          }
          if (typeof r.inline !== 'undefined') {
            r.inline = r.inline
          } else {
            r.inline = true
          }
          if (typeof r.volumeControl === 'undefined' || p(r.volumeControl)) {
            r.volumeControl = r.volumeControl || {}
            r.volumeControl.vertical = !r.inline
          }
          n = e.call(this, t, r) || this
          n.on(t, ['loadstart'], n.volumePanelState_)
          n.on(n.muteToggle, 'keyup', n.handleKeyPress)
          n.on(n.volumeControl, 'keyup', n.handleVolumeControlKeyUp)
          n.on('keydown', n.handleKeyPress)
          n.on('mouseover', n.handleMouseOver)
          n.on('mouseout', n.handleMouseOut)
          n.on(n.volumeControl, ['slideractive'], n.sliderActive_)
          n.on(n.volumeControl, ['sliderinactive'], n.sliderInactive_)
          return n
        }
        var n = r.prototype
        n.sliderActive_ = function e() {
          this.addClass('vjs-slider-active')
        }
        n.sliderInactive_ = function e() {
          this.removeClass('vjs-slider-active')
        }
        n.volumePanelState_ = function e() {
          if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {
            this.addClass('vjs-hidden')
          }
          if (
            this.volumeControl.hasClass('vjs-hidden') &&
            !this.muteToggle.hasClass('vjs-hidden')
          ) {
            this.addClass('vjs-mute-toggle-only')
          }
        }
        n.createEl = function t() {
          var r = 'vjs-volume-panel-horizontal'
          if (!this.options_.inline) {
            r = 'vjs-volume-panel-vertical'
          }
          return e.prototype.createEl.call(this, 'div', {
            className: 'vjs-volume-panel vjs-control ' + r,
          })
        }
        n.dispose = function t() {
          this.handleMouseOut()
          e.prototype.dispose.call(this)
        }
        n.handleVolumeControlKeyUp = function e(t) {
          if (Nt.isEventKey(t, 'Esc')) {
            this.muteToggle.focus()
          }
        }
        n.handleMouseOver = function e(r) {
          this.addClass('vjs-hover')
          de(t, 'keyup', ye(this, this.handleKeyPress))
        }
        n.handleMouseOut = function e(r) {
          this.removeClass('vjs-hover')
          ce(t, 'keyup', ye(this, this.handleKeyPress))
        }
        n.handleKeyPress = function e(t) {
          if (Nt.isEventKey(t, 'Esc')) {
            this.handleMouseOut()
          }
        }
        return r
      })(Be)
      _s.prototype.options_ = { children: ['muteToggle', 'volumeControl'] }
      Be.registerComponent('VolumePanel', _s)
      var Ts = (function(e) {
        je(r, e)
        function r(t, r) {
          var n
          n = e.call(this, t, r) || this
          if (r) {
            n.menuButton_ = r.menuButton
          }
          n.focusedChild_ = -1
          n.on('keydown', n.handleKeyDown)
          n.boundHandleBlur_ = ye(Ve(n), n.handleBlur)
          n.boundHandleTapClick_ = ye(Ve(n), n.handleTapClick)
          return n
        }
        var n = r.prototype
        n.addEventListenerForItem = function e(t) {
          if (!(t instanceof Be)) {
            return
          }
          this.on(t, 'blur', this.boundHandleBlur_)
          this.on(t, ['tap', 'click'], this.boundHandleTapClick_)
        }
        n.removeEventListenerForItem = function e(t) {
          if (!(t instanceof Be)) {
            return
          }
          this.off(t, 'blur', this.boundHandleBlur_)
          this.off(t, ['tap', 'click'], this.boundHandleTapClick_)
        }
        n.removeChild = function t(r) {
          if (typeof r === 'string') {
            r = this.getChild(r)
          }
          this.removeEventListenerForItem(r)
          e.prototype.removeChild.call(this, r)
        }
        n.addItem = function e(t) {
          var r = this.addChild(t)
          if (r) {
            this.addEventListenerForItem(r)
          }
        }
        n.createEl = function t() {
          var r = this.options_.contentElType || 'ul'
          this.contentEl_ = S(r, { className: 'vjs-menu-content' })
          this.contentEl_.setAttribute('role', 'menu')
          var n = e.prototype.createEl.call(this, 'div', {
            append: this.contentEl_,
            className: 'vjs-menu',
          })
          n.appendChild(this.contentEl_)
          de(n, 'click', function(e) {
            e.preventDefault()
            e.stopImmediatePropagation()
          })
          return n
        }
        n.dispose = function t() {
          this.contentEl_ = null
          this.boundHandleBlur_ = null
          this.boundHandleTapClick_ = null
          e.prototype.dispose.call(this)
        }
        n.handleBlur = function e(r) {
          var n = r.relatedTarget || t.activeElement
          if (
            !this.children().some(function(e) {
              return e.el() === n
            })
          ) {
            var i = this.menuButton_
            if (i && i.buttonPressed_ && n !== i.el().firstChild) {
              i.unpressButton()
            }
          }
        }
        n.handleTapClick = function e(t) {
          if (this.menuButton_) {
            this.menuButton_.unpressButton()
            var r = this.children()
            if (!Array.isArray(r)) {
              return
            }
            var n = r.filter(function(e) {
              return e.el() === t.target
            })[0]
            if (!n) {
              return
            }
            if (n.name() !== 'CaptionSettingsMenuItem') {
              this.menuButton_.focus()
            }
          }
        }
        n.handleKeyDown = function e(t) {
          if (Nt.isEventKey(t, 'Left') || Nt.isEventKey(t, 'Down')) {
            t.preventDefault()
            t.stopPropagation()
            this.stepForward()
          } else if (Nt.isEventKey(t, 'Right') || Nt.isEventKey(t, 'Up')) {
            t.preventDefault()
            t.stopPropagation()
            this.stepBack()
          }
        }
        n.stepForward = function e() {
          var t = 0
          if (this.focusedChild_ !== undefined) {
            t = this.focusedChild_ + 1
          }
          this.focus(t)
        }
        n.stepBack = function e() {
          var t = 0
          if (this.focusedChild_ !== undefined) {
            t = this.focusedChild_ - 1
          }
          this.focus(t)
        }
        n.focus = function e(t) {
          if (t === void 0) {
            t = 0
          }
          var r = this.children().slice()
          var n = r.length && r[0].className && /vjs-menu-title/.test(r[0].className)
          if (n) {
            r.shift()
          }
          if (r.length > 0) {
            if (t < 0) {
              t = 0
            } else if (t >= r.length) {
              t = r.length - 1
            }
            this.focusedChild_ = t
            r[t].el_.focus()
          }
        }
        return r
      })(Be)
      Be.registerComponent('Menu', Ts)
      var Es = (function(e) {
        je(r, e)
        function r(r, n) {
          var i
          if (n === void 0) {
            n = {}
          }
          i = e.call(this, r, n) || this
          i.menuButton_ = new Ba(r, n)
          i.menuButton_.controlText(i.controlText_)
          i.menuButton_.el_.setAttribute('aria-haspopup', 'true')
          var a = Ba.prototype.buildCSSClass()
          i.menuButton_.el_.className = i.buildCSSClass() + ' ' + a
          i.menuButton_.removeClass('vjs-control')
          i.addChild(i.menuButton_)
          i.update()
          i.enabled_ = true
          i.on(i.menuButton_, 'tap', i.handleClick)
          i.on(i.menuButton_, 'click', i.handleClick)
          i.on(i.menuButton_, 'keydown', i.handleKeyDown)
          i.on(i.menuButton_, 'mouseenter', function() {
            i.addClass('vjs-hover')
            i.menu.show()
            de(t, 'keyup', ye(Ve(i), i.handleMenuKeyUp))
          })
          i.on('mouseleave', i.handleMouseLeave)
          i.on('keydown', i.handleSubmenuKeyDown)
          return i
        }
        var n = r.prototype
        n.update = function e() {
          var t = this.createMenu()
          if (this.menu) {
            this.menu.dispose()
            this.removeChild(this.menu)
          }
          this.menu = t
          this.addChild(t)
          this.buttonPressed_ = false
          this.menuButton_.el_.setAttribute('aria-expanded', 'false')
          if (this.items && this.items.length <= this.hideThreshold_) {
            this.hide()
          } else {
            this.show()
          }
        }
        n.createMenu = function e() {
          var t = new Ts(this.player_, { menuButton: this })
          this.hideThreshold_ = 0
          if (this.options_.title) {
            var r = S('li', {
              className: 'vjs-menu-title',
              innerHTML: xe(this.options_.title),
              tabIndex: -1,
            })
            this.hideThreshold_ += 1
            var n = new Be(this.player_, { el: r })
            t.addItem(n)
          }
          this.items = this.createItems()
          if (this.items) {
            for (var i = 0; i < this.items.length; i++) {
              t.addItem(this.items[i])
            }
          }
          return t
        }
        n.createItems = function e() {}
        n.createEl = function t() {
          return e.prototype.createEl.call(
            this,
            'div',
            { className: this.buildWrapperCSSClass() },
            {}
          )
        }
        n.buildWrapperCSSClass = function t() {
          var r = 'vjs-menu-button'
          if (this.options_.inline === true) {
            r += '-inline'
          } else {
            r += '-popup'
          }
          var n = Ba.prototype.buildCSSClass()
          return 'vjs-menu-button ' + r + ' ' + n + ' ' + e.prototype.buildCSSClass.call(this)
        }
        n.buildCSSClass = function t() {
          var r = 'vjs-menu-button'
          if (this.options_.inline === true) {
            r += '-inline'
          } else {
            r += '-popup'
          }
          return 'vjs-menu-button ' + r + ' ' + e.prototype.buildCSSClass.call(this)
        }
        n.controlText = function e(t, r) {
          if (r === void 0) {
            r = this.menuButton_.el()
          }
          return this.menuButton_.controlText(t, r)
        }
        n.dispose = function t() {
          this.handleMouseLeave()
          e.prototype.dispose.call(this)
        }
        n.handleClick = function e(t) {
          if (this.buttonPressed_) {
            this.unpressButton()
          } else {
            this.pressButton()
          }
        }
        n.handleMouseLeave = function e(r) {
          this.removeClass('vjs-hover')
          ce(t, 'keyup', ye(this, this.handleMenuKeyUp))
        }
        n.focus = function e() {
          this.menuButton_.focus()
        }
        n.blur = function e() {
          this.menuButton_.blur()
        }
        n.handleKeyDown = function e(t) {
          if (Nt.isEventKey(t, 'Esc') || Nt.isEventKey(t, 'Tab')) {
            if (this.buttonPressed_) {
              this.unpressButton()
            }
            if (!Nt.isEventKey(t, 'Tab')) {
              t.preventDefault()
              this.menuButton_.focus()
            }
          } else if (Nt.isEventKey(t, 'Up') || Nt.isEventKey(t, 'Down')) {
            if (!this.buttonPressed_) {
              t.preventDefault()
              this.pressButton()
            }
          }
        }
        n.handleMenuKeyUp = function e(t) {
          if (Nt.isEventKey(t, 'Esc') || Nt.isEventKey(t, 'Tab')) {
            this.removeClass('vjs-hover')
          }
        }
        n.handleSubmenuKeyPress = function e(t) {
          this.handleSubmenuKeyDown(t)
        }
        n.handleSubmenuKeyDown = function e(t) {
          if (Nt.isEventKey(t, 'Esc') || Nt.isEventKey(t, 'Tab')) {
            if (this.buttonPressed_) {
              this.unpressButton()
            }
            if (!Nt.isEventKey(t, 'Tab')) {
              t.preventDefault()
              this.menuButton_.focus()
            }
          }
        }
        n.pressButton = function e() {
          if (this.enabled_) {
            this.buttonPressed_ = true
            this.menu.show()
            this.menu.lockShowing()
            this.menuButton_.el_.setAttribute('aria-expanded', 'true')
            if (Qe && E()) {
              return
            }
            this.menu.focus()
          }
        }
        n.unpressButton = function e() {
          if (this.enabled_) {
            this.buttonPressed_ = false
            this.menu.unlockShowing()
            this.menu.hide()
            this.menuButton_.el_.setAttribute('aria-expanded', 'false')
          }
        }
        n.disable = function e() {
          this.unpressButton()
          this.enabled_ = false
          this.addClass('vjs-disabled')
          this.menuButton_.disable()
        }
        n.enable = function e() {
          this.enabled_ = true
          this.removeClass('vjs-disabled')
          this.menuButton_.enable()
        }
        return r
      })(Be)
      Be.registerComponent('MenuButton', Es)
      var bs = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          var i = r.tracks
          n = e.call(this, t, r) || this
          if (n.items.length <= 1) {
            n.hide()
          }
          if (!i) {
            return Ve(n)
          }
          var a = ye(Ve(n), n.update)
          i.addEventListener('removetrack', a)
          i.addEventListener('addtrack', a)
          n.player_.on('ready', a)
          n.player_.on('dispose', function() {
            i.removeEventListener('removetrack', a)
            i.removeEventListener('addtrack', a)
          })
          return n
        }
        return t
      })(Es)
      Be.registerComponent('TrackButton', bs)
      var Ss = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left']
      var ws = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.selectable = r.selectable
          n.isSelected_ = r.selected || false
          n.multiSelectable = r.multiSelectable
          n.selected(n.isSelected_)
          if (n.selectable) {
            if (n.multiSelectable) {
              n.el_.setAttribute('role', 'menuitemcheckbox')
            } else {
              n.el_.setAttribute('role', 'menuitemradio')
            }
          } else {
            n.el_.setAttribute('role', 'menuitem')
          }
          return n
        }
        var r = t.prototype
        r.createEl = function t(r, n, i) {
          this.nonIconControl = true
          return e.prototype.createEl.call(
            this,
            'li',
            c(
              {
                className: 'vjs-menu-item',
                innerHTML:
                  '<span class="vjs-menu-item-text">' +
                  this.localize(this.options_.label) +
                  '</span>',
                tabIndex: -1,
              },
              n
            ),
            i
          )
        }
        r.handleKeyDown = function t(r) {
          if (
            !Ss.some(function(e) {
              return Nt.isEventKey(r, e)
            })
          ) {
            e.prototype.handleKeyDown.call(this, r)
          }
        }
        r.handleClick = function e(t) {
          this.selected(true)
        }
        r.selected = function e(t) {
          if (this.selectable) {
            if (t) {
              this.addClass('vjs-selected')
              this.el_.setAttribute('aria-checked', 'true')
              this.controlText(', selected')
              this.isSelected_ = true
            } else {
              this.removeClass('vjs-selected')
              this.el_.setAttribute('aria-checked', 'false')
              this.controlText('')
              this.isSelected_ = false
            }
          }
        }
        return t
      })(Oa)
      Be.registerComponent('MenuItem', ws)
      var As = (function(r) {
        je(n, r)
        function n(n, i) {
          var a
          var s = i.track
          var o = n.textTracks()
          i.label = s.label || s.language || 'Unknown'
          i.selected = s.mode === 'showing'
          a = r.call(this, n, i) || this
          a.track = s
          a.kinds = (i.kinds || [i.kind || a.track.kind]).filter(Boolean)
          var u = function e() {
            for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
              r[n] = arguments[n]
            }
            a.handleTracksChange.apply(Ve(a), r)
          }
          var l = function e() {
            for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
              r[n] = arguments[n]
            }
            a.handleSelectedLanguageChange.apply(Ve(a), r)
          }
          n.on(['loadstart', 'texttrackchange'], u)
          o.addEventListener('change', u)
          o.addEventListener('selectedlanguagechange', l)
          a.on('dispose', function() {
            n.off(['loadstart', 'texttrackchange'], u)
            o.removeEventListener('change', u)
            o.removeEventListener('selectedlanguagechange', l)
          })
          if (o.onchange === undefined) {
            var f
            a.on(['tap', 'click'], function() {
              if (typeof e.Event !== 'object') {
                try {
                  f = new e.Event('change')
                } catch (e) {}
              }
              if (!f) {
                f = t.createEvent('Event')
                f.initEvent('change', true, true)
              }
              o.dispatchEvent(f)
            })
          }
          a.handleTracksChange()
          return a
        }
        var i = n.prototype
        i.handleClick = function e(t) {
          var n = this.track
          var i = this.player_.textTracks()
          r.prototype.handleClick.call(this, t)
          if (!i) {
            return
          }
          for (var a = 0; a < i.length; a++) {
            var s = i[a]
            if (this.kinds.indexOf(s.kind) === -1) {
              continue
            }
            if (s === n) {
              if (s.mode !== 'showing') {
                s.mode = 'showing'
              }
            } else if (s.mode !== 'disabled') {
              s.mode = 'disabled'
            }
          }
        }
        i.handleTracksChange = function e(t) {
          var r = this.track.mode === 'showing'
          if (r !== this.isSelected_) {
            this.selected(r)
          }
        }
        i.handleSelectedLanguageChange = function e(t) {
          if (this.track.mode === 'showing') {
            var r = this.player_.cache_.selectedLanguage
            if (
              r &&
              r.enabled &&
              r.language === this.track.language &&
              r.kind !== this.track.kind
            ) {
              return
            }
            this.player_.cache_.selectedLanguage = {
              enabled: true,
              language: this.track.language,
              kind: this.track.kind,
            }
          }
        }
        i.dispose = function e() {
          this.track = null
          r.prototype.dispose.call(this)
        }
        return n
      })(ws)
      Be.registerComponent('TextTrackMenuItem', As)
      var Is = (function(e) {
        je(t, e)
        function t(t, r) {
          r.track = { player: t, kind: r.kind, kinds: r.kinds, default: false, mode: 'disabled' }
          if (!r.kinds) {
            r.kinds = [r.kind]
          }
          if (r.label) {
            r.track.label = r.label
          } else {
            r.track.label = r.kinds.join(' and ') + ' off'
          }
          r.selectable = true
          r.multiSelectable = false
          return e.call(this, t, r) || this
        }
        var r = t.prototype
        r.handleTracksChange = function e(t) {
          var r = this.player().textTracks()
          var n = true
          for (var i = 0, a = r.length; i < a; i++) {
            var s = r[i]
            if (this.options_.kinds.indexOf(s.kind) > -1 && s.mode === 'showing') {
              n = false
              break
            }
          }
          if (n !== this.isSelected_) {
            this.selected(n)
          }
        }
        r.handleSelectedLanguageChange = function e(t) {
          var r = this.player().textTracks()
          var n = true
          for (var i = 0, a = r.length; i < a; i++) {
            var s = r[i]
            if (
              ['captions', 'descriptions', 'subtitles'].indexOf(s.kind) > -1 &&
              s.mode === 'showing'
            ) {
              n = false
              break
            }
          }
          if (n) {
            this.player_.cache_.selectedLanguage = { enabled: false }
          }
        }
        return t
      })(As)
      Be.registerComponent('OffTextTrackMenuItem', Is)
      var Cs = (function(e) {
        je(t, e)
        function t(t, r) {
          if (r === void 0) {
            r = {}
          }
          r.tracks = t.textTracks()
          return e.call(this, t, r) || this
        }
        var r = t.prototype
        r.createItems = function e(t, r) {
          if (t === void 0) {
            t = []
          }
          if (r === void 0) {
            r = As
          }
          var n
          if (this.label_) {
            n = this.label_ + ' off'
          }
          t.push(new Is(this.player_, { kinds: this.kinds_, kind: this.kind_, label: n }))
          this.hideThreshold_ += 1
          var i = this.player_.textTracks()
          if (!Array.isArray(this.kinds_)) {
            this.kinds_ = [this.kind_]
          }
          for (var a = 0; a < i.length; a++) {
            var s = i[a]
            if (this.kinds_.indexOf(s.kind) > -1) {
              var o = new r(this.player_, {
                track: s,
                kinds: this.kinds_,
                kind: this.kind_,
                selectable: true,
                multiSelectable: false,
              })
              o.addClass('vjs-' + s.kind + '-menu-item')
              t.push(o)
            }
          }
          return t
        }
        return t
      })(bs)
      Be.registerComponent('TextTrackButton', Cs)
      var Rs = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          var i = r.track
          var a = r.cue
          var s = t.currentTime()
          r.selectable = true
          r.multiSelectable = false
          r.label = a.text
          r.selected = a.startTime <= s && s < a.endTime
          n = e.call(this, t, r) || this
          n.track = i
          n.cue = a
          i.addEventListener('cuechange', ye(Ve(n), n.update))
          return n
        }
        var r = t.prototype
        r.handleClick = function t(r) {
          e.prototype.handleClick.call(this)
          this.player_.currentTime(this.cue.startTime)
          this.update(this.cue.startTime)
        }
        r.update = function e(t) {
          var r = this.cue
          var n = this.player_.currentTime()
          this.selected(r.startTime <= n && n < r.endTime)
        }
        return t
      })(ws)
      Be.registerComponent('ChaptersTrackMenuItem', Rs)
      var Ds = (function(e) {
        je(t, e)
        function t(t, r, n) {
          return e.call(this, t, r, n) || this
        }
        var r = t.prototype
        r.buildCSSClass = function t() {
          return 'vjs-chapters-button ' + e.prototype.buildCSSClass.call(this)
        }
        r.buildWrapperCSSClass = function t() {
          return 'vjs-chapters-button ' + e.prototype.buildWrapperCSSClass.call(this)
        }
        r.update = function t(r) {
          if (!this.track_ || (r && (r.type === 'addtrack' || r.type === 'removetrack'))) {
            this.setTrack(this.findChaptersTrack())
          }
          e.prototype.update.call(this)
        }
        r.setTrack = function e(t) {
          if (this.track_ === t) {
            return
          }
          if (!this.updateHandler_) {
            this.updateHandler_ = this.update.bind(this)
          }
          if (this.track_) {
            var r = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_)
            if (r) {
              r.removeEventListener('load', this.updateHandler_)
            }
            this.track_ = null
          }
          this.track_ = t
          if (this.track_) {
            this.track_.mode = 'hidden'
            var n = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_)
            if (n) {
              n.addEventListener('load', this.updateHandler_)
            }
          }
        }
        r.findChaptersTrack = function e() {
          var t = this.player_.textTracks() || []
          for (var r = t.length - 1; r >= 0; r--) {
            var n = t[r]
            if (n.kind === this.kind_) {
              return n
            }
          }
        }
        r.getMenuCaption = function e() {
          if (this.track_ && this.track_.label) {
            return this.track_.label
          }
          return this.localize(xe(this.kind_))
        }
        r.createMenu = function t() {
          this.options_.title = this.getMenuCaption()
          return e.prototype.createMenu.call(this)
        }
        r.createItems = function e() {
          var t = []
          if (!this.track_) {
            return t
          }
          var r = this.track_.cues
          if (!r) {
            return t
          }
          for (var n = 0, i = r.length; n < i; n++) {
            var a = r[n]
            var s = new Rs(this.player_, { track: this.track_, cue: a })
            t.push(s)
          }
          return t
        }
        return t
      })(Cs)
      Ds.prototype.kind_ = 'chapters'
      Ds.prototype.controlText_ = 'Chapters'
      Be.registerComponent('ChaptersButton', Ds)
      var Os = (function(e) {
        je(t, e)
        function t(t, r, n) {
          var i
          i = e.call(this, t, r, n) || this
          var a = t.textTracks()
          var s = ye(Ve(i), i.handleTracksChange)
          a.addEventListener('change', s)
          i.on('dispose', function() {
            a.removeEventListener('change', s)
          })
          return i
        }
        var r = t.prototype
        r.handleTracksChange = function e(t) {
          var r = this.player().textTracks()
          var n = false
          for (var i = 0, a = r.length; i < a; i++) {
            var s = r[i]
            if (s.kind !== this.kind_ && s.mode === 'showing') {
              n = true
              break
            }
          }
          if (n) {
            this.disable()
          } else {
            this.enable()
          }
        }
        r.buildCSSClass = function t() {
          return 'vjs-descriptions-button ' + e.prototype.buildCSSClass.call(this)
        }
        r.buildWrapperCSSClass = function t() {
          return 'vjs-descriptions-button ' + e.prototype.buildWrapperCSSClass.call(this)
        }
        return t
      })(Cs)
      Os.prototype.kind_ = 'descriptions'
      Os.prototype.controlText_ = 'Descriptions'
      Be.registerComponent('DescriptionsButton', Os)
      var Ms = (function(e) {
        je(t, e)
        function t(t, r, n) {
          return e.call(this, t, r, n) || this
        }
        var r = t.prototype
        r.buildCSSClass = function t() {
          return 'vjs-subtitles-button ' + e.prototype.buildCSSClass.call(this)
        }
        r.buildWrapperCSSClass = function t() {
          return 'vjs-subtitles-button ' + e.prototype.buildWrapperCSSClass.call(this)
        }
        return t
      })(Cs)
      Ms.prototype.kind_ = 'subtitles'
      Ms.prototype.controlText_ = 'Subtitles'
      Be.registerComponent('SubtitlesButton', Ms)
      var ks = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          r.track = {
            player: t,
            kind: r.kind,
            label: r.kind + ' settings',
            selectable: false,
            default: false,
            mode: 'disabled',
          }
          r.selectable = false
          r.name = 'CaptionSettingsMenuItem'
          n = e.call(this, t, r) || this
          n.addClass('vjs-texttrack-settings')
          n.controlText(', opens ' + r.kind + ' settings dialog')
          return n
        }
        var r = t.prototype
        r.handleClick = function e(t) {
          this.player()
            .getChild('textTrackSettings')
            .open()
        }
        return t
      })(As)
      Be.registerComponent('CaptionSettingsMenuItem', ks)
      var Ps = (function(e) {
        je(t, e)
        function t(t, r, n) {
          return e.call(this, t, r, n) || this
        }
        var r = t.prototype
        r.buildCSSClass = function t() {
          return 'vjs-captions-button ' + e.prototype.buildCSSClass.call(this)
        }
        r.buildWrapperCSSClass = function t() {
          return 'vjs-captions-button ' + e.prototype.buildWrapperCSSClass.call(this)
        }
        r.createItems = function t() {
          var r = []
          if (
            !(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) &&
            this.player().getChild('textTrackSettings')
          ) {
            r.push(new ks(this.player_, { kind: this.kind_ }))
            this.hideThreshold_ += 1
          }
          return e.prototype.createItems.call(this, r)
        }
        return t
      })(Cs)
      Ps.prototype.kind_ = 'captions'
      Ps.prototype.controlText_ = 'Captions'
      Be.registerComponent('CaptionsButton', Ps)
      var Ns = (function(e) {
        je(t, e)
        function t() {
          return e.apply(this, arguments) || this
        }
        var r = t.prototype
        r.createEl = function t(r, n, i) {
          var a = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label)
          if (this.options_.track.kind === 'captions') {
            a +=
              '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' +
              this.localize('Captions') +
              '</span>\n      '
          }
          a += '</span>'
          var s = e.prototype.createEl.call(this, r, c({ innerHTML: a }, n), i)
          return s
        }
        return t
      })(As)
      Be.registerComponent('SubsCapsMenuItem', Ns)
      var Ls = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          if (r === void 0) {
            r = {}
          }
          n = e.call(this, t, r) || this
          n.label_ = 'subtitles'
          if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(n.player_.language_) > -1) {
            n.label_ = 'captions'
          }
          n.menuButton_.controlText(xe(n.label_))
          return n
        }
        var r = t.prototype
        r.buildCSSClass = function t() {
          return 'vjs-subs-caps-button ' + e.prototype.buildCSSClass.call(this)
        }
        r.buildWrapperCSSClass = function t() {
          return 'vjs-subs-caps-button ' + e.prototype.buildWrapperCSSClass.call(this)
        }
        r.createItems = function t() {
          var r = []
          if (
            !(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) &&
            this.player().getChild('textTrackSettings')
          ) {
            r.push(new ks(this.player_, { kind: this.label_ }))
            this.hideThreshold_ += 1
          }
          r = e.prototype.createItems.call(this, r, Ns)
          return r
        }
        return t
      })(Cs)
      Ls.prototype.kinds_ = ['captions', 'subtitles']
      Ls.prototype.controlText_ = 'Subtitles'
      Be.registerComponent('SubsCapsButton', Ls)
      var xs = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          var i = r.track
          var a = t.audioTracks()
          r.label = i.label || i.language || 'Unknown'
          r.selected = i.enabled
          n = e.call(this, t, r) || this
          n.track = i
          n.addClass('vjs-' + i.kind + '-menu-item')
          var s = function e() {
            for (var t = arguments.length, r = new Array(t), i = 0; i < t; i++) {
              r[i] = arguments[i]
            }
            n.handleTracksChange.apply(Ve(n), r)
          }
          a.addEventListener('change', s)
          n.on('dispose', function() {
            a.removeEventListener('change', s)
          })
          return n
        }
        var r = t.prototype
        r.createEl = function t(r, n, i) {
          var a = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label)
          if (this.options_.track.kind === 'main-desc') {
            a +=
              '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' +
              this.localize('Descriptions') +
              '</span>\n      '
          }
          a += '</span>'
          var s = e.prototype.createEl.call(this, r, c({ innerHTML: a }, n), i)
          return s
        }
        r.handleClick = function t(r) {
          var n = this.player_.audioTracks()
          e.prototype.handleClick.call(this, r)
          for (var i = 0; i < n.length; i++) {
            var a = n[i]
            a.enabled = a === this.track
          }
        }
        r.handleTracksChange = function e(t) {
          this.selected(this.track.enabled)
        }
        return t
      })(ws)
      Be.registerComponent('AudioTrackMenuItem', xs)
      var Fs = (function(e) {
        je(t, e)
        function t(t, r) {
          if (r === void 0) {
            r = {}
          }
          r.tracks = t.audioTracks()
          return e.call(this, t, r) || this
        }
        var r = t.prototype
        r.buildCSSClass = function t() {
          return 'vjs-audio-button ' + e.prototype.buildCSSClass.call(this)
        }
        r.buildWrapperCSSClass = function t() {
          return 'vjs-audio-button ' + e.prototype.buildWrapperCSSClass.call(this)
        }
        r.createItems = function e(t) {
          if (t === void 0) {
            t = []
          }
          this.hideThreshold_ = 1
          var r = this.player_.audioTracks()
          for (var n = 0; n < r.length; n++) {
            var i = r[n]
            t.push(new xs(this.player_, { track: i, selectable: true, multiSelectable: false }))
          }
          return t
        }
        return t
      })(bs)
      Fs.prototype.controlText_ = 'Audio Track'
      Be.registerComponent('AudioTrackButton', Fs)
      var Us = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          var i = r.rate
          var a = parseFloat(i, 10)
          r.label = i
          r.selected = a === 1
          r.selectable = true
          r.multiSelectable = false
          n = e.call(this, t, r) || this
          n.label = i
          n.rate = a
          n.on(t, 'ratechange', n.update)
          return n
        }
        var r = t.prototype
        r.handleClick = function t(r) {
          e.prototype.handleClick.call(this)
          this.player().playbackRate(this.rate)
        }
        r.update = function e(t) {
          this.selected(this.player().playbackRate() === this.rate)
        }
        return t
      })(ws)
      Us.prototype.contentElType = 'button'
      Be.registerComponent('PlaybackRateMenuItem', Us)
      var Bs = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.updateVisibility()
          n.updateLabel()
          n.on(t, 'loadstart', n.updateVisibility)
          n.on(t, 'ratechange', n.updateLabel)
          return n
        }
        var r = t.prototype
        r.createEl = function t() {
          var r = e.prototype.createEl.call(this)
          this.labelEl_ = S('div', { className: 'vjs-playback-rate-value', innerHTML: '1x' })
          r.appendChild(this.labelEl_)
          return r
        }
        r.dispose = function t() {
          this.labelEl_ = null
          e.prototype.dispose.call(this)
        }
        r.buildCSSClass = function t() {
          return 'vjs-playback-rate ' + e.prototype.buildCSSClass.call(this)
        }
        r.buildWrapperCSSClass = function t() {
          return 'vjs-playback-rate ' + e.prototype.buildWrapperCSSClass.call(this)
        }
        r.createMenu = function e() {
          var t = new Ts(this.player())
          var r = this.playbackRates()
          if (r) {
            for (var n = r.length - 1; n >= 0; n--) {
              t.addChild(new Us(this.player(), { rate: r[n] + 'x' }))
            }
          }
          return t
        }
        r.updateARIAAttributes = function e() {
          this.el().setAttribute('aria-valuenow', this.player().playbackRate())
        }
        r.handleClick = function e(t) {
          var r = this.player().playbackRate()
          var n = this.playbackRates()
          var i = n[0]
          for (var a = 0; a < n.length; a++) {
            if (n[a] > r) {
              i = n[a]
              break
            }
          }
          this.player().playbackRate(i)
        }
        r.playbackRates = function e() {
          return (
            this.options_.playbackRates ||
            (this.options_.playerOptions && this.options_.playerOptions.playbackRates)
          )
        }
        r.playbackRateSupported = function e() {
          return (
            this.player().tech_ &&
            this.player().tech_.featuresPlaybackRate &&
            this.playbackRates() &&
            this.playbackRates().length > 0
          )
        }
        r.updateVisibility = function e(t) {
          if (this.playbackRateSupported()) {
            this.removeClass('vjs-hidden')
          } else {
            this.addClass('vjs-hidden')
          }
        }
        r.updateLabel = function e(t) {
          if (this.playbackRateSupported()) {
            this.labelEl_.innerHTML = this.player().playbackRate() + 'x'
          }
        }
        return t
      })(Es)
      Bs.prototype.controlText_ = 'Playback Rate'
      Be.registerComponent('PlaybackRateMenuButton', Bs)
      var js = (function(e) {
        je(t, e)
        function t() {
          return e.apply(this, arguments) || this
        }
        var r = t.prototype
        r.buildCSSClass = function t() {
          return 'vjs-spacer ' + e.prototype.buildCSSClass.call(this)
        }
        r.createEl = function t() {
          return e.prototype.createEl.call(this, 'div', { className: this.buildCSSClass() })
        }
        return t
      })(Be)
      Be.registerComponent('Spacer', js)
      var Gs = (function(e) {
        je(t, e)
        function t() {
          return e.apply(this, arguments) || this
        }
        var r = t.prototype
        r.buildCSSClass = function t() {
          return 'vjs-custom-control-spacer ' + e.prototype.buildCSSClass.call(this)
        }
        r.createEl = function t() {
          var r = e.prototype.createEl.call(this, { className: this.buildCSSClass() })
          r.innerHTML = 'Â '
          return r
        }
        return t
      })(js)
      Be.registerComponent('CustomControlSpacer', Gs)
      var qs = (function(e) {
        je(t, e)
        function t() {
          return e.apply(this, arguments) || this
        }
        var r = t.prototype
        r.createEl = function t() {
          return e.prototype.createEl.call(this, 'div', {
            className: 'vjs-control-bar',
            dir: 'ltr',
          })
        }
        return t
      })(Be)
      qs.prototype.options_ = {
        children: [
          'playToggle',
          'volumePanel',
          'currentTimeDisplay',
          'timeDivider',
          'durationDisplay',
          'progressControl',
          'liveDisplay',
          'seekToLive',
          'remainingTimeDisplay',
          'customControlSpacer',
          'playbackRateMenuButton',
          'chaptersButton',
          'descriptionsButton',
          'subsCapsButton',
          'audioTrackButton',
          'fullscreenToggle',
        ],
      }
      if ('exitPictureInPicture' in t) {
        qs.prototype.options_.children.splice(
          qs.prototype.options_.children.length - 1,
          0,
          'pictureInPictureToggle'
        )
      }
      Be.registerComponent('ControlBar', qs)
      var Hs = (function(e) {
        je(t, e)
        function t(t, r) {
          var n
          n = e.call(this, t, r) || this
          n.on(t, 'error', n.open)
          return n
        }
        var r = t.prototype
        r.buildCSSClass = function t() {
          return 'vjs-error-display ' + e.prototype.buildCSSClass.call(this)
        }
        r.content = function e() {
          var t = this.player().error()
          return t ? this.localize(t.message) : ''
        }
        return t
      })(Gt)
      Hs.prototype.options_ = Ue(Gt.prototype.options_, {
        pauseOnOpen: false,
        fillAlways: true,
        temporary: false,
        uncloseable: true,
      })
      Be.registerComponent('ErrorDisplay', Hs)
      var Vs = 'vjs-text-track-settings'
      var Ks = ['#000', 'Black']
      var Ys = ['#00F', 'Blue']
      var Ws = ['#0FF', 'Cyan']
      var zs = ['#0F0', 'Green']
      var Xs = ['#F0F', 'Magenta']
      var $s = ['#F00', 'Red']
      var Qs = ['#FFF', 'White']
      var Js = ['#FF0', 'Yellow']
      var Zs = ['1', 'Opaque']
      var eo = ['0.5', 'Semi-Transparent']
      var to = ['0', 'Transparent']
      var ro = {
        backgroundColor: {
          selector: '.vjs-bg-color > select',
          id: 'captions-background-color-%s',
          label: 'Color',
          options: [Ks, Qs, $s, zs, Ys, Js, Xs, Ws],
        },
        backgroundOpacity: {
          selector: '.vjs-bg-opacity > select',
          id: 'captions-background-opacity-%s',
          label: 'Transparency',
          options: [Zs, eo, to],
        },
        color: {
          selector: '.vjs-fg-color > select',
          id: 'captions-foreground-color-%s',
          label: 'Color',
          options: [Qs, Ks, $s, zs, Ys, Js, Xs, Ws],
        },
        edgeStyle: {
          selector: '.vjs-edge-style > select',
          id: '%s',
          label: 'Text Edge Style',
          options: [
            ['none', 'None'],
            ['raised', 'Raised'],
            ['depressed', 'Depressed'],
            ['uniform', 'Uniform'],
            ['dropshadow', 'Dropshadow'],
          ],
        },
        fontFamily: {
          selector: '.vjs-font-family > select',
          id: 'captions-font-family-%s',
          label: 'Font Family',
          options: [
            ['proportionalSansSerif', 'Proportional Sans-Serif'],
            ['monospaceSansSerif', 'Monospace Sans-Serif'],
            ['proportionalSerif', 'Proportional Serif'],
            ['monospaceSerif', 'Monospace Serif'],
            ['casual', 'Casual'],
            ['script', 'Script'],
            ['small-caps', 'Small Caps'],
          ],
        },
        fontPercent: {
          selector: '.vjs-font-percent > select',
          id: 'captions-font-size-%s',
          label: 'Font Size',
          options: [
            ['0.50', '50%'],
            ['0.75', '75%'],
            ['1.00', '100%'],
            ['1.25', '125%'],
            ['1.50', '150%'],
            ['1.75', '175%'],
            ['2.00', '200%'],
            ['3.00', '300%'],
            ['4.00', '400%'],
          ],
          default: 2,
          parser: function e(t) {
            return t === '1.00' ? null : Number(t)
          },
        },
        textOpacity: {
          selector: '.vjs-text-opacity > select',
          id: 'captions-foreground-opacity-%s',
          label: 'Transparency',
          options: [Zs, eo],
        },
        windowColor: {
          selector: '.vjs-window-color > select',
          id: 'captions-window-color-%s',
          label: 'Color',
        },
        windowOpacity: {
          selector: '.vjs-window-opacity > select',
          id: 'captions-window-opacity-%s',
          label: 'Transparency',
          options: [to, eo, Zs],
        },
      }
      ro.windowColor.options = ro.backgroundColor.options
      function no(e, t) {
        if (t) {
          e = t(e)
        }
        if (e && e !== 'none') {
          return e
        }
      }
      function io(e, t) {
        var r = e.options[e.options.selectedIndex].value
        return no(r, t)
      }
      function ao(e, t, r) {
        if (!t) {
          return
        }
        for (var n = 0; n < e.options.length; n++) {
          if (no(e.options[n].value, r) === t) {
            e.selectedIndex = n
            break
          }
        }
      }
      var so = (function(t) {
        je(r, t)
        function r(e, r) {
          var n
          r.temporary = false
          n = t.call(this, e, r) || this
          n.updateDisplay = ye(Ve(n), n.updateDisplay)
          n.fill()
          n.hasBeenOpened_ = n.hasBeenFilled_ = true
          n.endDialog = S('p', {
            className: 'vjs-control-text',
            textContent: n.localize('End of dialog window.'),
          })
          n.el().appendChild(n.endDialog)
          n.setDefaults()
          if (r.persistTextTrackSettings === undefined) {
            n.options_.persistTextTrackSettings = n.options_.playerOptions.persistTextTrackSettings
          }
          n.on(n.$('.vjs-done-button'), 'click', function() {
            n.saveSettings()
            n.close()
          })
          n.on(n.$('.vjs-default-button'), 'click', function() {
            n.setDefaults()
            n.updateDisplay()
          })
          f(ro, function(e) {
            n.on(n.$(e.selector), 'change', n.updateDisplay)
          })
          if (n.options_.persistTextTrackSettings) {
            n.restoreSettings()
          }
          return n
        }
        var n = r.prototype
        n.dispose = function e() {
          this.endDialog = null
          t.prototype.dispose.call(this)
        }
        n.createElSelect_ = function e(t, r, n) {
          var i = this
          if (r === void 0) {
            r = ''
          }
          if (n === void 0) {
            n = 'label'
          }
          var a = ro[t]
          var s = a.id.replace('%s', this.id_)
          var o = [r, s].join(' ').trim()
          return [
            '<' + n + ' id="' + s + '" class="' + (n === 'label' ? 'vjs-label' : '') + '">',
            this.localize(a.label),
            '</' + n + '>',
            '<select aria-labelledby="' + o + '">',
          ]
            .concat(
              a.options.map(function(e) {
                var t = s + '-' + e[1].replace(/\W+/g, '')
                return [
                  '<option id="' + t + '" value="' + e[0] + '" ',
                  'aria-labelledby="' + o + ' ' + t + '">',
                  i.localize(e[1]),
                  '</option>',
                ].join('')
              })
            )
            .concat('</select>')
            .join('')
        }
        n.createElFgColor_ = function e() {
          var t = 'captions-text-legend-' + this.id_
          return [
            '<fieldset class="vjs-fg-color vjs-track-setting">',
            '<legend id="' + t + '">',
            this.localize('Text'),
            '</legend>',
            this.createElSelect_('color', t),
            '<span class="vjs-text-opacity vjs-opacity">',
            this.createElSelect_('textOpacity', t),
            '</span>',
            '</fieldset>',
          ].join('')
        }
        n.createElBgColor_ = function e() {
          var t = 'captions-background-' + this.id_
          return [
            '<fieldset class="vjs-bg-color vjs-track-setting">',
            '<legend id="' + t + '">',
            this.localize('Background'),
            '</legend>',
            this.createElSelect_('backgroundColor', t),
            '<span class="vjs-bg-opacity vjs-opacity">',
            this.createElSelect_('backgroundOpacity', t),
            '</span>',
            '</fieldset>',
          ].join('')
        }
        n.createElWinColor_ = function e() {
          var t = 'captions-window-' + this.id_
          return [
            '<fieldset class="vjs-window-color vjs-track-setting">',
            '<legend id="' + t + '">',
            this.localize('Window'),
            '</legend>',
            this.createElSelect_('windowColor', t),
            '<span class="vjs-window-opacity vjs-opacity">',
            this.createElSelect_('windowOpacity', t),
            '</span>',
            '</fieldset>',
          ].join('')
        }
        n.createElColors_ = function e() {
          return S('div', {
            className: 'vjs-track-settings-colors',
            innerHTML: [
              this.createElFgColor_(),
              this.createElBgColor_(),
              this.createElWinColor_(),
            ].join(''),
          })
        }
        n.createElFont_ = function e() {
          return S('div', {
            className: 'vjs-track-settings-font',
            innerHTML: [
              '<fieldset class="vjs-font-percent vjs-track-setting">',
              this.createElSelect_('fontPercent', '', 'legend'),
              '</fieldset>',
              '<fieldset class="vjs-edge-style vjs-track-setting">',
              this.createElSelect_('edgeStyle', '', 'legend'),
              '</fieldset>',
              '<fieldset class="vjs-font-family vjs-track-setting">',
              this.createElSelect_('fontFamily', '', 'legend'),
              '</fieldset>',
            ].join(''),
          })
        }
        n.createElControls_ = function e() {
          var t = this.localize('restore all settings to the default values')
          return S('div', {
            className: 'vjs-track-settings-controls',
            innerHTML: [
              '<button type="button" class="vjs-default-button" title="' + t + '">',
              this.localize('Reset'),
              '<span class="vjs-control-text"> ' + t + '</span>',
              '</button>',
              '<button type="button" class="vjs-done-button">' +
                this.localize('Done') +
                '</button>',
            ].join(''),
          })
        }
        n.content = function e() {
          return [this.createElColors_(), this.createElFont_(), this.createElControls_()]
        }
        n.label = function e() {
          return this.localize('Caption Settings Dialog')
        }
        n.description = function e() {
          return this.localize(
            'Beginning of dialog window. Escape will cancel and close the window.'
          )
        }
        n.buildCSSClass = function e() {
          return t.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings'
        }
        n.getValues = function e() {
          var t = this
          return d(
            ro,
            function(e, r, n) {
              var i = io(t.$(r.selector), r.parser)
              if (i !== undefined) {
                e[n] = i
              }
              return e
            },
            {}
          )
        }
        n.setValues = function e(t) {
          var r = this
          f(ro, function(e, n) {
            ao(r.$(e.selector), t[n], e.parser)
          })
        }
        n.setDefaults = function e() {
          var t = this
          f(ro, function(e) {
            var r = e.hasOwnProperty('default') ? e['default'] : 0
            t.$(e.selector).selectedIndex = r
          })
        }
        n.restoreSettings = function t() {
          var r
          try {
            r = JSON.parse(e.localStorage.getItem(Vs))
          } catch (e) {
            s.warn(e)
          }
          if (r) {
            this.setValues(r)
          }
        }
        n.saveSettings = function t() {
          if (!this.options_.persistTextTrackSettings) {
            return
          }
          var r = this.getValues()
          try {
            if (Object.keys(r).length) {
              e.localStorage.setItem(Vs, JSON.stringify(r))
            } else {
              e.localStorage.removeItem(Vs)
            }
          } catch (e) {
            s.warn(e)
          }
        }
        n.updateDisplay = function e() {
          var t = this.player_.getChild('textTrackDisplay')
          if (t) {
            t.updateDisplay()
          }
        }
        n.conditionalBlur_ = function e() {
          this.previouslyActiveEl_ = null
          var t = this.player_.controlBar
          var r = t && t.subsCapsButton
          var n = t && t.captionsButton
          if (r) {
            r.focus()
          } else if (n) {
            n.focus()
          }
        }
        return r
      })(Gt)
      Be.registerComponent('TextTrackSettings', so)
      var oo = (function(t) {
        je(r, t)
        function r(r, n) {
          var i
          var a = n.ResizeObserver || e.ResizeObserver
          if (n.ResizeObserver === null) {
            a = false
          }
          var s = Ue({ createEl: !a, reportTouchActivity: false }, n)
          i = t.call(this, r, s) || this
          i.ResizeObserver = n.ResizeObserver || e.ResizeObserver
          i.loadListener_ = null
          i.resizeObserver_ = null
          i.debouncedHandler_ = Te(
            function() {
              i.resizeHandler()
            },
            100,
            false,
            Ve(i)
          )
          if (a) {
            i.resizeObserver_ = new i.ResizeObserver(i.debouncedHandler_)
            i.resizeObserver_.observe(r.el())
          } else {
            i.loadListener_ = function() {
              if (!i.el_ || !i.el_.contentWindow) {
                return
              }
              var e = i.debouncedHandler_
              var t = (i.unloadListener_ = function() {
                ce(this, 'resize', e)
                ce(this, 'unload', t)
                t = null
              })
              de(i.el_.contentWindow, 'unload', t)
              de(i.el_.contentWindow, 'resize', e)
            }
            i.one('load', i.loadListener_)
          }
          return i
        }
        var n = r.prototype
        n.createEl = function e() {
          return t.prototype.createEl.call(
            this,
            'iframe',
            { className: 'vjs-resize-manager', tabIndex: -1 },
            { 'aria-hidden': 'true' }
          )
        }
        n.resizeHandler = function e() {
          if (!this.player_ || !this.player_.trigger) {
            return
          }
          this.player_.trigger('playerresize')
        }
        n.dispose = function e() {
          if (this.debouncedHandler_) {
            this.debouncedHandler_.cancel()
          }
          if (this.resizeObserver_) {
            if (this.player_.el()) {
              this.resizeObserver_.unobserve(this.player_.el())
            }
            this.resizeObserver_.disconnect()
          }
          if (this.loadListener_) {
            this.off('load', this.loadListener_)
          }
          if (this.el_ && this.el_.contentWindow && this.unloadListener_) {
            this.unloadListener_.call(this.el_.contentWindow)
          }
          this.ResizeObserver = null
          this.resizeObserver = null
          this.debouncedHandler_ = null
          this.loadListener_ = null
          t.prototype.dispose.call(this)
        }
        return r
      })(Be)
      Be.registerComponent('ResizeManager', oo)
      var uo = function e(t) {
        var r = Math.floor(t.length / 2)
        var n = [].concat(t).sort(function(e, t) {
          return e - t
        })
        return t.length % 2 !== 0 ? n[r] : (n[r - 1] + n[r]) / 2
      }
      var lo = (function(e) {
        je(r, e)
        function r(r, n) {
          var i
          var a = Ue({ createEl: false }, n)
          i = e.call(this, r, a) || this
          i.reset_()
          i.on(i.player_, 'durationchange', i.handleDurationchange)
          if (st && 'hidden' in t && 'visibilityState' in t) {
            i.on(t, 'visibilitychange', i.handleVisibilityChange)
          }
          return i
        }
        var n = r.prototype
        n.handleVisibilityChange = function e() {
          if (this.player_.duration() !== Infinity) {
            return
          }
          if (t.hidden) {
            this.stopTracking()
          } else {
            this.startTracking()
          }
        }
        n.isBehind_ = function e() {
          if (!this.timeupdateSeen_) {
            return false
          }
          var t = this.liveCurrentTime()
          var r = this.player_.currentTime()
          var n = this.seekableIncrement_ * 2 + 0.07
          return t !== Infinity && t - n >= r
        }
        n.trackLive_ = function e() {
          this.pastSeekEnd_ = this.pastSeekEnd_
          var t = this.player_.seekable()
          if (!t || !t.length) {
            return
          }
          var r = this.seekableEnd()
          if (r !== this.lastSeekEnd_) {
            if (this.lastSeekEnd_) {
              this.seekableIncrementList_ = this.seekableIncrementList_.slice(-11)
              this.seekableIncrementList_.push(Math.abs(r - this.lastSeekEnd_))
              if (this.seekableIncrementList_.length > 3) {
                this.seekableIncrement_ = uo(this.seekableIncrementList_)
              }
            }
            this.pastSeekEnd_ = 0
            this.lastSeekEnd_ = r
            this.trigger('seekableendchange')
          }
          this.pastSeekEnd_ = this.pastSeekEnd() + 0.03
          if (this.isBehind_() !== this.behindLiveEdge()) {
            this.behindLiveEdge_ = this.isBehind_()
            this.trigger('liveedgechange')
          }
        }
        n.handleDurationchange = function e() {
          if (this.player_.duration() === Infinity) {
            this.startTracking()
          } else {
            this.stopTracking()
          }
        }
        n.startTracking = function e() {
          var t = this
          if (this.isTracking()) {
            return
          }
          if (!this.timeupdateSeen_) {
            this.timeupdateSeen_ = this.player_.hasStarted()
          }
          this.trackingInterval_ = this.setInterval(this.trackLive_, 30)
          this.trackLive_()
          this.on(this.player_, 'play', this.trackLive_)
          this.on(this.player_, 'pause', this.trackLive_)
          if (!this.timeupdateSeen_) {
            this.one(this.player_, 'play', this.handlePlay)
            this.handleTimeupdate = function() {
              t.timeupdateSeen_ = true
              t.handleTimeupdate = null
            }
            this.one(this.player_, 'timeupdate', this.handleTimeupdate)
          }
        }
        n.handlePlay = function e() {
          this.one(this.player_, 'timeupdate', this.seekToLiveEdge)
        }
        n.reset_ = function e() {
          this.pastSeekEnd_ = 0
          this.lastSeekEnd_ = null
          this.behindLiveEdge_ = null
          this.timeupdateSeen_ = false
          this.clearInterval(this.trackingInterval_)
          this.trackingInterval_ = null
          this.seekableIncrement_ = 12
          this.seekableIncrementList_ = []
          this.off(this.player_, 'play', this.trackLive_)
          this.off(this.player_, 'pause', this.trackLive_)
          this.off(this.player_, 'play', this.handlePlay)
          this.off(this.player_, 'timeupdate', this.seekToLiveEdge)
          if (this.handleTimeupdate) {
            this.off(this.player_, 'timeupdate', this.handleTimeupdate)
            this.handleTimeupdate = null
          }
        }
        n.stopTracking = function e() {
          if (!this.isTracking()) {
            return
          }
          this.reset_()
        }
        n.seekableEnd = function e() {
          var t = this.player_.seekable()
          var r = []
          var n = t ? t.length : 0
          while (n--) {
            r.push(t.end(n))
          }
          return r.length ? r.sort()[r.length - 1] : Infinity
        }
        n.seekableStart = function e() {
          var t = this.player_.seekable()
          var r = []
          var n = t ? t.length : 0
          while (n--) {
            r.push(t.start(n))
          }
          return r.length ? r.sort()[0] : 0
        }
        n.liveWindow = function e() {
          var t = this.liveCurrentTime()
          if (t === Infinity) {
            return Infinity
          }
          return t - this.seekableStart()
        }
        n.isLive = function e() {
          return this.isTracking()
        }
        n.atLiveEdge = function e() {
          return !this.behindLiveEdge()
        }
        n.liveCurrentTime = function e() {
          return this.pastSeekEnd() + this.seekableEnd()
        }
        n.pastSeekEnd = function e() {
          return this.pastSeekEnd_
        }
        n.behindLiveEdge = function e() {
          return this.behindLiveEdge_
        }
        n.isTracking = function e() {
          return typeof this.trackingInterval_ === 'number'
        }
        n.seekToLiveEdge = function e() {
          if (this.atLiveEdge()) {
            return
          }
          this.player_.currentTime(this.liveCurrentTime())
          if (this.player_.paused()) {
            this.player_.play()
          }
        }
        n.dispose = function t() {
          this.stopTracking()
          e.prototype.dispose.call(this)
        }
        return r
      })(Be)
      Be.registerComponent('LiveTracker', lo)
      var fo = function e(t) {
        var r = t.el()
        if (r.hasAttribute('src')) {
          t.triggerSourceset(r.src)
          return true
        }
        var n = t.$$('source')
        var i = []
        var a = ''
        if (!n.length) {
          return false
        }
        for (var s = 0; s < n.length; s++) {
          var o = n[s].src
          if (o && i.indexOf(o) === -1) {
            i.push(o)
          }
        }
        if (!i.length) {
          return false
        }
        if (i.length === 1) {
          a = i[0]
        }
        t.triggerSourceset(a)
        return true
      }
      var co = Object.defineProperty({}, 'innerHTML', {
        get: function e() {
          return this.cloneNode(true).innerHTML
        },
        set: function r(n) {
          var i = t.createElement(this.nodeName.toLowerCase())
          i.innerHTML = n
          var a = t.createDocumentFragment()
          while (i.childNodes.length) {
            a.appendChild(i.childNodes[0])
          }
          this.innerText = ''
          e.Element.prototype.appendChild.call(this, a)
          return this.innerHTML
        },
      })
      var ho = function e(t, r) {
        var n = {}
        for (var i = 0; i < t.length; i++) {
          n = Object.getOwnPropertyDescriptor(t[i], r)
          if (n && n.set && n.get) {
            break
          }
        }
        n.enumerable = true
        n.configurable = true
        return n
      }
      var po = function t(r) {
        return ho([r.el(), e.HTMLMediaElement.prototype, e.Element.prototype, co], 'innerHTML')
      }
      var vo = function e(t) {
        var r = t.el()
        if (r.resetSourceWatch_) {
          return
        }
        var n = {}
        var i = po(t)
        var a = function e(n) {
          return function() {
            for (var e = arguments.length, i = new Array(e), a = 0; a < e; a++) {
              i[a] = arguments[a]
            }
            var s = n.apply(r, i)
            fo(t)
            return s
          }
        }
        ;['append', 'appendChild', 'insertAdjacentHTML'].forEach(function(e) {
          if (!r[e]) {
            return
          }
          n[e] = r[e]
          r[e] = a(n[e])
        })
        Object.defineProperty(r, 'innerHTML', Ue(i, { set: a(i.set) }))
        r.resetSourceWatch_ = function() {
          r.resetSourceWatch_ = null
          Object.keys(n).forEach(function(e) {
            r[e] = n[e]
          })
          Object.defineProperty(r, 'innerHTML', i)
        }
        t.one('sourceset', r.resetSourceWatch_)
      }
      var go = Object.defineProperty({}, 'src', {
        get: function t() {
          if (this.hasAttribute('src')) {
            return nr(e.Element.prototype.getAttribute.call(this, 'src'))
          }
          return ''
        },
        set: function t(r) {
          e.Element.prototype.setAttribute.call(this, 'src', r)
          return r
        },
      })
      var mo = function t(r) {
        return ho([r.el(), e.HTMLMediaElement.prototype, go], 'src')
      }
      var yo = function e(t) {
        if (!t.featuresSourceset) {
          return
        }
        var r = t.el()
        if (r.resetSourceset_) {
          return
        }
        var n = mo(t)
        var i = r.setAttribute
        var a = r.load
        Object.defineProperty(
          r,
          'src',
          Ue(n, {
            set: function e(i) {
              var a = n.set.call(r, i)
              t.triggerSourceset(r.src)
              return a
            },
          })
        )
        r.setAttribute = function(e, n) {
          var a = i.call(r, e, n)
          if (/src/i.test(e)) {
            t.triggerSourceset(r.src)
          }
          return a
        }
        r.load = function() {
          var e = a.call(r)
          if (!fo(t)) {
            t.triggerSourceset('')
            vo(t)
          }
          return e
        }
        if (r.currentSrc) {
          t.triggerSourceset(r.currentSrc)
        } else if (!fo(t)) {
          vo(t)
        }
        r.resetSourceset_ = function() {
          r.resetSourceset_ = null
          r.load = a
          r.setAttribute = i
          Object.defineProperty(r, 'src', n)
          if (r.resetSourceWatch_) {
            r.resetSourceWatch_()
          }
        }
      }
      var _o = (function(r) {
        je(n, r)
        function n(e, t) {
          var n
          n = r.call(this, e, t) || this
          var i = e.source
          var a = false
          if (i && (n.el_.currentSrc !== i.src || (e.tag && e.tag.initNetworkState_ === 3))) {
            n.setSource(i)
          } else {
            n.handleLateInit_(n.el_)
          }
          if (e.enableSourceset) {
            n.setupSourcesetHandling_()
          }
          if (n.el_.hasChildNodes()) {
            var o = n.el_.childNodes
            var u = o.length
            var l = []
            while (u--) {
              var f = o[u]
              var d = f.nodeName.toLowerCase()
              if (d === 'track') {
                if (!n.featuresNativeTextTracks) {
                  l.push(f)
                } else {
                  n.remoteTextTrackEls().addTrackElement_(f)
                  n.remoteTextTracks().addTrack(f.track)
                  n.textTracks().addTrack(f.track)
                  if (!a && !n.el_.hasAttribute('crossorigin') && ar(f.src)) {
                    a = true
                  }
                }
              }
            }
            for (var c = 0; c < l.length; c++) {
              n.el_.removeChild(l[c])
            }
          }
          n.proxyNativeTracks_()
          if (n.featuresNativeTextTracks && a) {
            s.warn(
              "Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\n" +
                'This may prevent text tracks from loading.'
            )
          }
          n.restoreMetadataTracksInIOSNativePlayer_()
          if ((ft || Xe || tt) && e.nativeControlsForTouch === true) {
            n.setControls(true)
          }
          n.proxyWebkitFullscreen_()
          n.triggerReady()
          return n
        }
        var i = n.prototype
        i.dispose = function e() {
          if (this.el_ && this.el_.resetSourceset_) {
            this.el_.resetSourceset_()
          }
          n.disposeMediaElement(this.el_)
          this.options_ = null
          r.prototype.dispose.call(this)
        }
        i.setupSourcesetHandling_ = function e() {
          yo(this)
        }
        i.restoreMetadataTracksInIOSNativePlayer_ = function e() {
          var t = this.textTracks()
          var r
          var n = function e() {
            r = []
            for (var n = 0; n < t.length; n++) {
              var i = t[n]
              if (i.kind === 'metadata') {
                r.push({ track: i, storedMode: i.mode })
              }
            }
          }
          n()
          t.addEventListener('change', n)
          this.on('dispose', function() {
            return t.removeEventListener('change', n)
          })
          var i = function e() {
            for (var n = 0; n < r.length; n++) {
              var i = r[n]
              if (i.track.mode === 'disabled' && i.track.mode !== i.storedMode) {
                i.track.mode = i.storedMode
              }
            }
            t.removeEventListener('change', e)
          }
          this.on('webkitbeginfullscreen', function() {
            t.removeEventListener('change', n)
            t.removeEventListener('change', i)
            t.addEventListener('change', i)
          })
          this.on('webkitendfullscreen', function() {
            t.removeEventListener('change', n)
            t.addEventListener('change', n)
            t.removeEventListener('change', i)
          })
        }
        i.overrideNative_ = function e(t, r) {
          var n = this
          if (r !== this['featuresNative' + t + 'Tracks']) {
            return
          }
          var i = t.toLowerCase()
          if (this[i + 'TracksListeners_']) {
            Object.keys(this[i + 'TracksListeners_']).forEach(function(e) {
              var t = n.el()[i + 'Tracks']
              t.removeEventListener(e, n[i + 'TracksListeners_'][e])
            })
          }
          this['featuresNative' + t + 'Tracks'] = !r
          this[i + 'TracksListeners_'] = null
          this.proxyNativeTracksForType_(i)
        }
        i.overrideNativeAudioTracks = function e(t) {
          this.overrideNative_('Audio', t)
        }
        i.overrideNativeVideoTracks = function e(t) {
          this.overrideNative_('Video', t)
        }
        i.proxyNativeTracksForType_ = function e(t) {
          var r = this
          var n = gi[t]
          var i = this.el()[n.getterName]
          var a = this[n.getterName]()
          if (!this['featuresNative' + n.capitalName + 'Tracks'] || !i || !i.addEventListener) {
            return
          }
          var s = {
            change: function e(t) {
              a.trigger({ type: 'change', target: a, currentTarget: a, srcElement: a })
            },
            addtrack: function e(t) {
              a.addTrack(t.track)
            },
            removetrack: function e(t) {
              a.removeTrack(t.track)
            },
          }
          var o = function e() {
            var t = []
            for (var r = 0; r < a.length; r++) {
              var n = false
              for (var s = 0; s < i.length; s++) {
                if (i[s] === a[r]) {
                  n = true
                  break
                }
              }
              if (!n) {
                t.push(a[r])
              }
            }
            while (t.length) {
              a.removeTrack(t.shift())
            }
          }
          this[n.getterName + 'Listeners_'] = s
          Object.keys(s).forEach(function(e) {
            var t = s[e]
            i.addEventListener(e, t)
            r.on('dispose', function(r) {
              return i.removeEventListener(e, t)
            })
          })
          this.on('loadstart', o)
          this.on('dispose', function(e) {
            return r.off('loadstart', o)
          })
        }
        i.proxyNativeTracks_ = function e() {
          var t = this
          gi.names.forEach(function(e) {
            t.proxyNativeTracksForType_(e)
          })
        }
        i.createEl = function e() {
          var r = this.options_.tag
          if (!r || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {
            if (r) {
              var i = r.cloneNode(true)
              if (r.parentNode) {
                r.parentNode.insertBefore(i, r)
              }
              n.disposeMediaElement(r)
              r = i
            } else {
              r = t.createElement('video')
              var a = this.options_.tag && M(this.options_.tag)
              var s = Ue({}, a)
              if (!ft || this.options_.nativeControlsForTouch !== true) {
                delete s.controls
              }
              O(r, c(s, { id: this.options_.techId, class: 'vjs-tech' }))
            }
            r.playerId = this.options_.playerId
          }
          if (typeof this.options_.preload !== 'undefined') {
            P(r, 'preload', this.options_.preload)
          }
          var o = ['loop', 'muted', 'playsinline', 'autoplay']
          for (var u = 0; u < o.length; u++) {
            var l = o[u]
            var f = this.options_[l]
            if (typeof f !== 'undefined') {
              if (f) {
                P(r, l, l)
              } else {
                N(r, l)
              }
              r[l] = f
            }
          }
          return r
        }
        i.handleLateInit_ = function e(t) {
          if (t.networkState === 0 || t.networkState === 3) {
            return
          }
          if (t.readyState === 0) {
            var r = false
            var n = function e() {
              r = true
            }
            this.on('loadstart', n)
            var i = function e() {
              if (!r) {
                this.trigger('loadstart')
              }
            }
            this.on('loadedmetadata', i)
            this.ready(function() {
              this.off('loadstart', n)
              this.off('loadedmetadata', i)
              if (!r) {
                this.trigger('loadstart')
              }
            })
            return
          }
          var a = ['loadstart']
          a.push('loadedmetadata')
          if (t.readyState >= 2) {
            a.push('loadeddata')
          }
          if (t.readyState >= 3) {
            a.push('canplay')
          }
          if (t.readyState >= 4) {
            a.push('canplaythrough')
          }
          this.ready(function() {
            a.forEach(function(e) {
              this.trigger(e)
            }, this)
          })
        }
        i.setCurrentTime = function e(t) {
          try {
            this.el_.currentTime = t
          } catch (e) {
            s(e, 'Video is not ready. (Video.js)')
          }
        }
        i.duration = function e() {
          var t = this
          if (this.el_.duration === Infinity && Ze && it && this.el_.currentTime === 0) {
            var r = function e() {
              if (t.el_.currentTime > 0) {
                if (t.el_.duration === Infinity) {
                  t.trigger('durationchange')
                }
                t.off('timeupdate', e)
              }
            }
            this.on('timeupdate', r)
            return NaN
          }
          return this.el_.duration || NaN
        }
        i.width = function e() {
          return this.el_.offsetWidth
        }
        i.height = function e() {
          return this.el_.offsetHeight
        }
        i.proxyWebkitFullscreen_ = function e() {
          var t = this
          if (!('webkitDisplayingFullscreen' in this.el_)) {
            return
          }
          var r = function e() {
            this.trigger('fullscreenchange', { isFullscreen: false })
          }
          var n = function e() {
            if (
              'webkitPresentationMode' in this.el_ &&
              this.el_.webkitPresentationMode !== 'picture-in-picture'
            ) {
              this.one('webkitendfullscreen', r)
              this.trigger('fullscreenchange', { isFullscreen: true })
            }
          }
          this.on('webkitbeginfullscreen', n)
          this.on('dispose', function() {
            t.off('webkitbeginfullscreen', n)
            t.off('webkitendfullscreen', r)
          })
        }
        i.supportsFullScreen = function t() {
          if (typeof this.el_.webkitEnterFullScreen === 'function') {
            var r = (e.navigator && e.navigator.userAgent) || ''
            if (/Android/.test(r) || !/Chrome|Mac OS X 10.5/.test(r)) {
              return true
            }
          }
          return false
        }
        i.enterFullScreen = function e() {
          var t = this.el_
          if (t.paused && t.networkState <= t.HAVE_METADATA) {
            this.el_.play()
            this.setTimeout(function() {
              t.pause()
              t.webkitEnterFullScreen()
            }, 0)
          } else {
            t.webkitEnterFullScreen()
          }
        }
        i.exitFullScreen = function e() {
          this.el_.webkitExitFullScreen()
        }
        i.requestPictureInPicture = function e() {
          return this.el_.requestPictureInPicture()
        }
        i.src = function e(t) {
          if (t === undefined) {
            return this.el_.src
          }
          this.setSrc(t)
        }
        i.reset = function e() {
          n.resetMediaElement(this.el_)
        }
        i.currentSrc = function e() {
          if (this.currentSource_) {
            return this.currentSource_.src
          }
          return this.el_.currentSrc
        }
        i.setControls = function e(t) {
          this.el_.controls = !!t
        }
        i.addTextTrack = function e(t, n, i) {
          if (!this.featuresNativeTextTracks) {
            return r.prototype.addTextTrack.call(this, t, n, i)
          }
          return this.el_.addTextTrack(t, n, i)
        }
        i.createRemoteTextTrack = function e(n) {
          if (!this.featuresNativeTextTracks) {
            return r.prototype.createRemoteTextTrack.call(this, n)
          }
          var i = t.createElement('track')
          if (n.kind) {
            i.kind = n.kind
          }
          if (n.label) {
            i.label = n.label
          }
          if (n.language || n.srclang) {
            i.srclang = n.language || n.srclang
          }
          if (n['default']) {
            i['default'] = n['default']
          }
          if (n.id) {
            i.id = n.id
          }
          if (n.src) {
            i.src = n.src
          }
          return i
        }
        i.addRemoteTextTrack = function e(t, n) {
          var i = r.prototype.addRemoteTextTrack.call(this, t, n)
          if (this.featuresNativeTextTracks) {
            this.el().appendChild(i)
          }
          return i
        }
        i.removeRemoteTextTrack = function e(t) {
          r.prototype.removeRemoteTextTrack.call(this, t)
          if (this.featuresNativeTextTracks) {
            var n = this.$$('track')
            var i = n.length
            while (i--) {
              if (t === n[i] || t === n[i].track) {
                this.el().removeChild(n[i])
              }
            }
          }
        }
        i.getVideoPlaybackQuality = function t() {
          if (typeof this.el().getVideoPlaybackQuality === 'function') {
            return this.el().getVideoPlaybackQuality()
          }
          var r = {}
          if (
            typeof this.el().webkitDroppedFrameCount !== 'undefined' &&
            typeof this.el().webkitDecodedFrameCount !== 'undefined'
          ) {
            r.droppedVideoFrames = this.el().webkitDroppedFrameCount
            r.totalVideoFrames = this.el().webkitDecodedFrameCount
          }
          if (e.performance && typeof e.performance.now === 'function') {
            r.creationTime = e.performance.now()
          } else if (
            e.performance &&
            e.performance.timing &&
            typeof e.performance.timing.navigationStart === 'number'
          ) {
            r.creationTime = e.Date.now() - e.performance.timing.navigationStart
          }
          return r
        }
        return n
      })(sa)
      if (_()) {
        _o.TEST_VID = t.createElement('video')
        var To = t.createElement('track')
        To.kind = 'captions'
        To.srclang = 'en'
        To.label = 'English'
        _o.TEST_VID.appendChild(To)
      }
      _o.isSupported = function() {
        try {
          _o.TEST_VID.volume = 0.5
        } catch (e) {
          return false
        }
        return !!(_o.TEST_VID && _o.TEST_VID.canPlayType)
      }
      _o.canPlayType = function(e) {
        return _o.TEST_VID.canPlayType(e)
      }
      _o.canPlaySource = function(e, t) {
        return _o.canPlayType(e.type)
      }
      _o.canControlVolume = function() {
        try {
          var e = _o.TEST_VID.volume
          _o.TEST_VID.volume = e / 2 + 0.1
          return e !== _o.TEST_VID.volume
        } catch (e) {
          return false
        }
      }
      _o.canMuteVolume = function() {
        try {
          var e = _o.TEST_VID.muted
          _o.TEST_VID.muted = !e
          if (_o.TEST_VID.muted) {
            P(_o.TEST_VID, 'muted', 'muted')
          } else {
            N(_o.TEST_VID, 'muted', 'muted')
          }
          return e !== _o.TEST_VID.muted
        } catch (e) {
          return false
        }
      }
      _o.canControlPlaybackRate = function() {
        if (Ze && it && at < 58) {
          return false
        }
        try {
          var e = _o.TEST_VID.playbackRate
          _o.TEST_VID.playbackRate = e / 2 + 0.1
          return e !== _o.TEST_VID.playbackRate
        } catch (e) {
          return false
        }
      }
      _o.canOverrideAttributes = function() {
        try {
          var e = function e() {}
          Object.defineProperty(t.createElement('video'), 'src', { get: e, set: e })
          Object.defineProperty(t.createElement('audio'), 'src', { get: e, set: e })
          Object.defineProperty(t.createElement('video'), 'innerHTML', { get: e, set: e })
          Object.defineProperty(t.createElement('audio'), 'innerHTML', { get: e, set: e })
        } catch (e) {
          return false
        }
        return true
      }
      _o.supportsNativeTextTracks = function() {
        return ut || (Qe && it)
      }
      _o.supportsNativeVideoTracks = function() {
        return !!(_o.TEST_VID && _o.TEST_VID.videoTracks)
      }
      _o.supportsNativeAudioTracks = function() {
        return !!(_o.TEST_VID && _o.TEST_VID.audioTracks)
      }
      _o.Events = [
        'loadstart',
        'suspend',
        'abort',
        'error',
        'emptied',
        'stalled',
        'loadedmetadata',
        'loadeddata',
        'canplay',
        'canplaythrough',
        'playing',
        'waiting',
        'seeking',
        'seeked',
        'ended',
        'durationchange',
        'timeupdate',
        'progress',
        'play',
        'pause',
        'ratechange',
        'resize',
        'volumechange',
      ]
      _o.prototype.featuresVolumeControl = _o.canControlVolume()
      _o.prototype.featuresMuteControl = _o.canMuteVolume()
      _o.prototype.featuresPlaybackRate = _o.canControlPlaybackRate()
      _o.prototype.featuresSourceset = _o.canOverrideAttributes()
      _o.prototype.movingMediaElementInDOM = !Qe
      _o.prototype.featuresFullscreenResize = true
      _o.prototype.featuresProgressEvents = true
      _o.prototype.featuresTimeupdateEvents = true
      _o.prototype.featuresNativeTextTracks = _o.supportsNativeTextTracks()
      _o.prototype.featuresNativeVideoTracks = _o.supportsNativeVideoTracks()
      _o.prototype.featuresNativeAudioTracks = _o.supportsNativeAudioTracks()
      var Eo = _o.TEST_VID && _o.TEST_VID.constructor.prototype.canPlayType
      var bo = /^application\/(?:x-|vnd\.apple\.)mpegurl/i
      _o.patchCanPlayType = function() {
        if (et >= 4 && !rt && !it) {
          _o.TEST_VID.constructor.prototype.canPlayType = function(e) {
            if (e && bo.test(e)) {
              return 'maybe'
            }
            return Eo.call(this, e)
          }
        }
      }
      _o.unpatchCanPlayType = function() {
        var e = _o.TEST_VID.constructor.prototype.canPlayType
        _o.TEST_VID.constructor.prototype.canPlayType = Eo
        return e
      }
      _o.patchCanPlayType()
      _o.disposeMediaElement = function(e) {
        if (!e) {
          return
        }
        if (e.parentNode) {
          e.parentNode.removeChild(e)
        }
        while (e.hasChildNodes()) {
          e.removeChild(e.firstChild)
        }
        e.removeAttribute('src')
        if (typeof e.load === 'function') {
          ;(function() {
            try {
              e.load()
            } catch (e) {}
          })()
        }
      }
      _o.resetMediaElement = function(e) {
        if (!e) {
          return
        }
        var t = e.querySelectorAll('source')
        var r = t.length
        while (r--) {
          e.removeChild(t[r])
        }
        e.removeAttribute('src')
        if (typeof e.load === 'function') {
          ;(function() {
            try {
              e.load()
            } catch (e) {}
          })()
        }
      }
      ;['muted', 'defaultMuted', 'autoplay', 'controls', 'loop', 'playsinline'].forEach(function(
        e
      ) {
        _o.prototype[e] = function() {
          return this.el_[e] || this.el_.hasAttribute(e)
        }
      })
      ;['muted', 'defaultMuted', 'autoplay', 'loop', 'playsinline'].forEach(function(e) {
        _o.prototype['set' + xe(e)] = function(t) {
          this.el_[e] = t
          if (t) {
            this.el_.setAttribute(e, e)
          } else {
            this.el_.removeAttribute(e)
          }
        }
      })
      ;[
        'paused',
        'currentTime',
        'buffered',
        'volume',
        'poster',
        'preload',
        'error',
        'seeking',
        'seekable',
        'ended',
        'playbackRate',
        'defaultPlaybackRate',
        'played',
        'networkState',
        'readyState',
        'videoWidth',
        'videoHeight',
      ].forEach(function(e) {
        _o.prototype[e] = function() {
          return this.el_[e]
        }
      })
      ;['volume', 'src', 'poster', 'preload', 'playbackRate', 'defaultPlaybackRate'].forEach(
        function(e) {
          _o.prototype['set' + xe(e)] = function(t) {
            this.el_[e] = t
          }
        }
      )
      ;['pause', 'load', 'play'].forEach(function(e) {
        _o.prototype[e] = function() {
          return this.el_[e]()
        }
      })
      sa.withSourceHandlers(_o)
      _o.nativeSourceHandler = {}
      _o.nativeSourceHandler.canPlayType = function(e) {
        try {
          return _o.TEST_VID.canPlayType(e)
        } catch (e) {
          return ''
        }
      }
      _o.nativeSourceHandler.canHandleSource = function(e, t) {
        if (e.type) {
          return _o.nativeSourceHandler.canPlayType(e.type)
        } else if (e.src) {
          var r = ir(e.src)
          return _o.nativeSourceHandler.canPlayType('video/' + r)
        }
        return ''
      }
      _o.nativeSourceHandler.handleSource = function(e, t, r) {
        t.setSrc(e.src)
      }
      _o.nativeSourceHandler.dispose = function() {}
      _o.registerSourceHandler(_o.nativeSourceHandler)
      sa.registerTech('Html5', _o)
      var So = [
        'progress',
        'abort',
        'suspend',
        'emptied',
        'stalled',
        'loadedmetadata',
        'loadeddata',
        'timeupdate',
        'resize',
        'volumechange',
        'texttrackchange',
      ]
      var wo = {
        canplay: 'CanPlay',
        canplaythrough: 'CanPlayThrough',
        playing: 'Playing',
        seeked: 'Seeked',
      }
      var Ao = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge']
      var Io = {}
      Ao.forEach(function(e) {
        var t = e.charAt(0) === 'x' ? 'x-' + e.substring(1) : e
        Io[e] = 'vjs-layout-' + t
      })
      var Co = {
        tiny: 210,
        xsmall: 320,
        small: 425,
        medium: 768,
        large: 1440,
        xlarge: 2560,
        huge: Infinity,
      }
      var Ro = (function(n) {
        je(i, n)
        function i(e, t, a) {
          var s
          e.id = e.id || t.id || 'vjs_video_' + ae()
          t = c(i.getTagSettings(e), t)
          t.initChildren = false
          t.createEl = false
          t.evented = false
          t.reportTouchActivity = false
          if (!t.language) {
            if (typeof e.closest === 'function') {
              var u = e.closest('[lang]')
              if (u && u.getAttribute) {
                t.language = u.getAttribute('lang')
              }
            } else {
              var l = e
              while (l && l.nodeType === 1) {
                if (M(l).hasOwnProperty('lang')) {
                  t.language = l.getAttribute('lang')
                  break
                }
                l = l.parentNode
              }
            }
          }
          s = n.call(this, null, t, a) || this
          s.boundDocumentFullscreenChange_ = ye(Ve(s), s.documentFullscreenChange_)
          s.boundFullWindowOnEscKey_ = ye(Ve(s), s.fullWindowOnEscKey)
          s.log = o(s.id_)
          s.fsApi_ = mt
          s.isPosterFromTech_ = false
          s.queuedCallbacks_ = []
          s.isReady_ = false
          s.hasStarted_ = false
          s.userActive_ = false
          if (!s.options_ || !s.options_.techOrder || !s.options_.techOrder.length) {
            throw new Error(
              'No techOrder specified. Did you overwrite ' +
                'videojs.options instead of just changing the ' +
                'properties you want to override?'
            )
          }
          s.tag = e
          s.tagAttributes = e && M(e)
          s.language(s.options_.language)
          if (t.languages) {
            var f = {}
            Object.getOwnPropertyNames(t.languages).forEach(function(e) {
              f[e.toLowerCase()] = t.languages[e]
            })
            s.languages_ = f
          } else {
            s.languages_ = i.prototype.options_.languages
          }
          s.resetCache_()
          s.poster_ = t.poster || ''
          s.controls_ = !!t.controls
          e.controls = false
          e.removeAttribute('controls')
          s.changingSrc_ = false
          s.playCallbacks_ = []
          s.playTerminatedQueue_ = []
          if (e.hasAttribute('autoplay')) {
            s.autoplay(true)
          } else {
            s.autoplay(s.options_.autoplay)
          }
          if (t.plugins) {
            Object.keys(t.plugins).forEach(function(e) {
              if (typeof s[e] !== 'function') {
                throw new Error('plugin "' + e + '" does not exist')
              }
            })
          }
          s.scrubbing_ = false
          s.el_ = s.createEl()
          ke(Ve(s), { eventBusKey: 'el_' })
          if (s.fluid_) {
            s.on('playerreset', s.updateStyleEl_)
          }
          var d = Ue(s.options_)
          if (t.plugins) {
            Object.keys(t.plugins).forEach(function(e) {
              s[e](t.plugins[e])
            })
          }
          s.options_.playerOptions = d
          s.middleware_ = []
          s.initChildren()
          s.isAudio(e.nodeName.toLowerCase() === 'audio')
          if (s.controls()) {
            s.addClass('vjs-controls-enabled')
          } else {
            s.addClass('vjs-controls-disabled')
          }
          s.el_.setAttribute('role', 'region')
          if (s.isAudio()) {
            s.el_.setAttribute('aria-label', s.localize('Audio Player'))
          } else {
            s.el_.setAttribute('aria-label', s.localize('Video Player'))
          }
          if (s.isAudio()) {
            s.addClass('vjs-audio')
          }
          if (s.flexNotSupported_()) {
            s.addClass('vjs-no-flex')
          }
          if (ft) {
            s.addClass('vjs-touch-enabled')
          }
          if (!Qe) {
            s.addClass('vjs-workinghover')
          }
          i.players[s.id_] = Ve(s)
          var h = r.split('.')[0]
          s.addClass('vjs-v' + h)
          s.userActive(true)
          s.reportUserActivity()
          s.one('play', s.listenForUserActivity_)
          s.on('stageclick', s.handleStageClick_)
          s.on('keydown', s.handleKeyDown)
          s.breakpoints(s.options_.breakpoints)
          s.responsive(s.options_.responsive)
          return s
        }
        var a = i.prototype
        a.dispose = function e() {
          var r = this
          this.trigger('dispose')
          this.off('dispose')
          ce(t, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_)
          ce(t, 'keydown', this.boundFullWindowOnEscKey_)
          if (this.styleEl_ && this.styleEl_.parentNode) {
            this.styleEl_.parentNode.removeChild(this.styleEl_)
            this.styleEl_ = null
          }
          i.players[this.id_] = null
          if (this.tag && this.tag.player) {
            this.tag.player = null
          }
          if (this.el_ && this.el_.player) {
            this.el_.player = null
          }
          if (this.tech_) {
            this.tech_.dispose()
            this.isPosterFromTech_ = false
            this.poster_ = ''
          }
          if (this.playerElIngest_) {
            this.playerElIngest_ = null
          }
          if (this.tag) {
            this.tag = null
          }
          Ea(this)
          yi.names.forEach(function(e) {
            var t = yi[e]
            var n = r[t.getterName]()
            if (n && n.off) {
              n.off()
            }
          })
          n.prototype.dispose.call(this)
        }
        a.createEl = function r() {
          var i = this.tag
          var a
          var s = (this.playerElIngest_ =
            i.parentNode &&
            i.parentNode.hasAttribute &&
            i.parentNode.hasAttribute('data-vjs-player'))
          var o = this.tag.tagName.toLowerCase() === 'video-js'
          if (s) {
            a = this.el_ = i.parentNode
          } else if (!o) {
            a = this.el_ = n.prototype.createEl.call(this, 'div')
          }
          var u = M(i)
          if (o) {
            a = this.el_ = i
            i = this.tag = t.createElement('video')
            while (a.children.length) {
              i.appendChild(a.firstChild)
            }
            if (!I(a, 'video-js')) {
              C(a, 'video-js')
            }
            a.appendChild(i)
            s = this.playerElIngest_ = a
            Object.keys(a).forEach(function(e) {
              i[e] = a[e]
            })
          }
          i.setAttribute('tabindex', '-1')
          u.tabindex = '-1'
          if (st || (it && lt)) {
            i.setAttribute('role', 'application')
            u.role = 'application'
          }
          i.removeAttribute('width')
          i.removeAttribute('height')
          if ('width' in u) {
            delete u.width
          }
          if ('height' in u) {
            delete u.height
          }
          Object.getOwnPropertyNames(u).forEach(function(e) {
            if (!(o && e === 'class')) {
              a.setAttribute(e, u[e])
            }
            if (o) {
              i.setAttribute(e, u[e])
            }
          })
          i.playerId = i.id
          i.id += '_html5_api'
          i.className = 'vjs-tech'
          i.player = a.player = this
          this.addClass('vjs-paused')
          if (e.VIDEOJS_NO_DYNAMIC_STYLE !== true) {
            this.styleEl_ = ee('vjs-styles-dimensions')
            var l = Y('.vjs-styles-defaults')
            var f = Y('head')
            f.insertBefore(this.styleEl_, l ? l.nextSibling : f.firstChild)
          }
          this.fill_ = false
          this.fluid_ = false
          this.width(this.options_.width)
          this.height(this.options_.height)
          this.fill(this.options_.fill)
          this.fluid(this.options_.fluid)
          this.aspectRatio(this.options_.aspectRatio)
          var d = i.getElementsByTagName('a')
          for (var c = 0; c < d.length; c++) {
            var h = d.item(c)
            C(h, 'vjs-hidden')
            h.setAttribute('hidden', 'hidden')
          }
          i.initNetworkState_ = i.networkState
          if (i.parentNode && !s) {
            i.parentNode.insertBefore(a, i)
          }
          A(i, a)
          this.children_.unshift(i)
          this.el_.setAttribute('lang', this.language_)
          this.el_ = a
          return a
        }
        a.width = function e(t) {
          return this.dimension('width', t)
        }
        a.height = function e(t) {
          return this.dimension('height', t)
        }
        a.dimension = function e(t, r) {
          var n = t + '_'
          if (r === undefined) {
            return this[n] || 0
          }
          if (r === '') {
            this[n] = undefined
            this.updateStyleEl_()
            return
          }
          var i = parseFloat(r)
          if (isNaN(i)) {
            s.error('Improper value "' + r + '" supplied for for ' + t)
            return
          }
          this[n] = i
          this.updateStyleEl_()
        }
        a.fluid = function e(t) {
          if (t === undefined) {
            return !!this.fluid_
          }
          this.fluid_ = !!t
          if (Se(this)) {
            this.off('playerreset', this.updateStyleEl_)
          }
          if (t) {
            this.addClass('vjs-fluid')
            this.fill(false)
            we(function() {
              this.on('playerreset', this.updateStyleEl_)
            })
          } else {
            this.removeClass('vjs-fluid')
          }
          this.updateStyleEl_()
        }
        a.fill = function e(t) {
          if (t === undefined) {
            return !!this.fill_
          }
          this.fill_ = !!t
          if (t) {
            this.addClass('vjs-fill')
            this.fluid(false)
          } else {
            this.removeClass('vjs-fill')
          }
        }
        a.aspectRatio = function e(t) {
          if (t === undefined) {
            return this.aspectRatio_
          }
          if (!/^\d+\:\d+$/.test(t)) {
            throw new Error(
              'Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.'
            )
          }
          this.aspectRatio_ = t
          this.fluid(true)
          this.updateStyleEl_()
        }
        a.updateStyleEl_ = function t() {
          if (e.VIDEOJS_NO_DYNAMIC_STYLE === true) {
            var r = typeof this.width_ === 'number' ? this.width_ : this.options_.width
            var n = typeof this.height_ === 'number' ? this.height_ : this.options_.height
            var i = this.tech_ && this.tech_.el()
            if (i) {
              if (r >= 0) {
                i.width = r
              }
              if (n >= 0) {
                i.height = n
              }
            }
            return
          }
          var a
          var s
          var o
          var u
          if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {
            o = this.aspectRatio_
          } else if (this.videoWidth() > 0) {
            o = this.videoWidth() + ':' + this.videoHeight()
          } else {
            o = '16:9'
          }
          var l = o.split(':')
          var f = l[1] / l[0]
          if (this.width_ !== undefined) {
            a = this.width_
          } else if (this.height_ !== undefined) {
            a = this.height_ / f
          } else {
            a = this.videoWidth() || 300
          }
          if (this.height_ !== undefined) {
            s = this.height_
          } else {
            s = a * f
          }
          if (/^[^a-zA-Z]/.test(this.id())) {
            u = 'dimensions-' + this.id()
          } else {
            u = this.id() + '-dimensions'
          }
          this.addClass(u)
          te(
            this.styleEl_,
            '\n      .' +
              u +
              ' {\n        width: ' +
              a +
              'px;\n        height: ' +
              s +
              'px;\n      }\n\n      .' +
              u +
              '.vjs-fluid {\n        padding-top: ' +
              f * 100 +
              '%;\n      }\n    '
          )
        }
        a.loadTech_ = function e(t, r) {
          var n = this
          if (this.tech_) {
            this.unloadTech_()
          }
          var i = xe(t)
          var a = t.charAt(0).toLowerCase() + t.slice(1)
          if (i !== 'Html5' && this.tag) {
            sa.getTech('Html5').disposeMediaElement(this.tag)
            this.tag.player = null
            this.tag = null
          }
          this.techName_ = i
          this.isReady_ = false
          var s = typeof this.autoplay() === 'string' ? false : this.autoplay()
          var o = {
            source: r,
            autoplay: s,
            nativeControlsForTouch: this.options_.nativeControlsForTouch,
            playerId: this.id(),
            techId: this.id() + '_' + a + '_api',
            playsinline: this.options_.playsinline,
            preload: this.options_.preload,
            loop: this.options_.loop,
            muted: this.options_.muted,
            poster: this.poster(),
            language: this.language(),
            playerElIngest: this.playerElIngest_ || false,
            'vtt.js': this.options_['vtt.js'],
            canOverridePoster: !!this.options_.techCanOverridePoster,
            enableSourceset: this.options_.enableSourceset,
            Promise: this.options_.Promise,
          }
          yi.names.forEach(function(e) {
            var t = yi[e]
            o[t.getterName] = n[t.privateName]
          })
          c(o, this.options_[i])
          c(o, this.options_[a])
          c(o, this.options_[t.toLowerCase()])
          if (this.tag) {
            o.tag = this.tag
          }
          if (r && r.src === this.cache_.src && this.cache_.currentTime > 0) {
            o.startTime = this.cache_.currentTime
          }
          var u = sa.getTech(t)
          if (!u) {
            throw new Error(
              "No Tech named '" +
                i +
                "' exists! '" +
                i +
                "' should be registered using videojs.registerTech()'"
            )
          }
          this.tech_ = new u(o)
          this.tech_.ready(ye(this, this.handleTechReady_), true)
          kt.jsonToTextTracks(this.textTracksJson_ || [], this.tech_)
          So.forEach(function(e) {
            n.on(n.tech_, e, n['handleTech' + xe(e) + '_'])
          })
          Object.keys(wo).forEach(function(e) {
            n.on(n.tech_, e, function(t) {
              if (n.tech_.playbackRate() === 0 && n.tech_.seeking()) {
                n.queuedCallbacks_.push({
                  callback: n['handleTech' + wo[e] + '_'].bind(n),
                  event: t,
                })
                return
              }
              n['handleTech' + wo[e] + '_'](t)
            })
          })
          this.on(this.tech_, 'loadstart', this.handleTechLoadStart_)
          this.on(this.tech_, 'sourceset', this.handleTechSourceset_)
          this.on(this.tech_, 'waiting', this.handleTechWaiting_)
          this.on(this.tech_, 'ended', this.handleTechEnded_)
          this.on(this.tech_, 'seeking', this.handleTechSeeking_)
          this.on(this.tech_, 'play', this.handleTechPlay_)
          this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_)
          this.on(this.tech_, 'pause', this.handleTechPause_)
          this.on(this.tech_, 'durationchange', this.handleTechDurationChange_)
          this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_)
          this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_)
          this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_)
          this.on(this.tech_, 'error', this.handleTechError_)
          this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_)
          this.on(this.tech_, 'posterchange', this.handleTechPosterChange_)
          this.on(this.tech_, 'textdata', this.handleTechTextData_)
          this.on(this.tech_, 'ratechange', this.handleTechRateChange_)
          this.usingNativeControls(this.techGet_('controls'))
          if (this.controls() && !this.usingNativeControls()) {
            this.addTechControlsListeners_()
          }
          if (this.tech_.el().parentNode !== this.el() && (i !== 'Html5' || !this.tag)) {
            A(this.tech_.el(), this.el())
          }
          if (this.tag) {
            this.tag.player = null
            this.tag = null
          }
        }
        a.unloadTech_ = function e() {
          var t = this
          yi.names.forEach(function(e) {
            var r = yi[e]
            t[r.privateName] = t[r.getterName]()
          })
          this.textTracksJson_ = kt.textTracksToJson(this.tech_)
          this.isReady_ = false
          this.tech_.dispose()
          this.tech_ = false
          if (this.isPosterFromTech_) {
            this.poster_ = ''
            this.trigger('posterchange')
          }
          this.isPosterFromTech_ = false
        }
        a.tech = function e(t) {
          if (t === undefined) {
            s.warn(
              "Using the tech directly can be dangerous. I hope you know what you're doing.\n" +
                'See https://github.com/videojs/video.js/issues/2617 for more info.\n'
            )
          }
          return this.tech_
        }
        a.addTechControlsListeners_ = function e() {
          this.removeTechControlsListeners_()
          this.on(this.tech_, 'mouseup', this.handleTechClick_)
          this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_)
          this.on(this.tech_, 'touchstart', this.handleTechTouchStart_)
          this.on(this.tech_, 'touchmove', this.handleTechTouchMove_)
          this.on(this.tech_, 'touchend', this.handleTechTouchEnd_)
          this.on(this.tech_, 'tap', this.handleTechTap_)
        }
        a.removeTechControlsListeners_ = function e() {
          this.off(this.tech_, 'tap', this.handleTechTap_)
          this.off(this.tech_, 'touchstart', this.handleTechTouchStart_)
          this.off(this.tech_, 'touchmove', this.handleTechTouchMove_)
          this.off(this.tech_, 'touchend', this.handleTechTouchEnd_)
          this.off(this.tech_, 'mouseup', this.handleTechClick_)
          this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_)
        }
        a.handleTechReady_ = function e() {
          this.triggerReady()
          if (this.cache_.volume) {
            this.techCall_('setVolume', this.cache_.volume)
          }
          this.handleTechPosterChange_()
          this.handleTechDurationChange_()
        }
        a.handleTechLoadStart_ = function e() {
          this.removeClass('vjs-ended')
          this.removeClass('vjs-seeking')
          this.error(null)
          this.handleTechDurationChange_()
          if (!this.paused()) {
            this.trigger('loadstart')
            this.trigger('firstplay')
          } else {
            this.hasStarted(false)
            this.trigger('loadstart')
          }
          this.manualAutoplay_(this.autoplay())
        }
        a.manualAutoplay_ = function e(t) {
          var r = this
          if (!this.tech_ || typeof t !== 'string') {
            return
          }
          var n = function e() {
            var t = r.muted()
            r.muted(true)
            var n = function e() {
              r.muted(t)
            }
            r.playTerminatedQueue_.push(n)
            var i = r.play()
            if (!Ct(i)) {
              return
            }
            return i['catch'](n)
          }
          var i
          if (t === 'any' && this.muted() !== true) {
            i = this.play()
            if (Ct(i)) {
              i = i['catch'](n)
            }
          } else if (t === 'muted' && this.muted() !== true) {
            i = n()
          } else {
            i = this.play()
          }
          if (!Ct(i)) {
            return
          }
          return i
            .then(function() {
              r.trigger({ type: 'autoplay-success', autoplay: t })
            })
            ['catch'](function(e) {
              r.trigger({ type: 'autoplay-failure', autoplay: t })
            })
        }
        a.updateSourceCaches_ = function e(t) {
          if (t === void 0) {
            t = ''
          }
          var r = t
          var n = ''
          if (typeof r !== 'string') {
            r = t.src
            n = t.type
          }
          this.cache_.source = this.cache_.source || {}
          this.cache_.sources = this.cache_.sources || []
          if (r && !n) {
            n = Ia(this, r)
          }
          this.cache_.source = Ue({}, t, { src: r, type: n })
          var i = this.cache_.sources.filter(function(e) {
            return e.src && e.src === r
          })
          var a = []
          var s = this.$$('source')
          var o = []
          for (var u = 0; u < s.length; u++) {
            var l = M(s[u])
            a.push(l)
            if (l.src && l.src === r) {
              o.push(l.src)
            }
          }
          if (o.length && !i.length) {
            this.cache_.sources = a
          } else if (!i.length) {
            this.cache_.sources = [this.cache_.source]
          }
          this.cache_.src = r
        }
        a.handleTechSourceset_ = function e(t) {
          var r = this
          if (!this.changingSrc_) {
            var n = function e(t) {
              return r.updateSourceCaches_(t)
            }
            var i = this.currentSource().src
            var a = t.src
            if (i && !/^blob:/.test(i) && /^blob:/.test(a)) {
              if (
                !this.lastSource_ ||
                (this.lastSource_.tech !== a && this.lastSource_.player !== i)
              ) {
                n = function e() {}
              }
            }
            n(a)
            if (!t.src) {
              this.tech_.any(['sourceset', 'loadstart'], function(e) {
                if (e.type === 'sourceset') {
                  return
                }
                var t = r.techGet('currentSrc')
                r.lastSource_.tech = t
                r.updateSourceCaches_(t)
              })
            }
          }
          this.lastSource_ = { player: this.currentSource().src, tech: t.src }
          this.trigger({ src: t.src, type: 'sourceset' })
        }
        a.hasStarted = function e(t) {
          if (t === undefined) {
            return this.hasStarted_
          }
          if (t === this.hasStarted_) {
            return
          }
          this.hasStarted_ = t
          if (this.hasStarted_) {
            this.addClass('vjs-has-started')
            this.trigger('firstplay')
          } else {
            this.removeClass('vjs-has-started')
          }
        }
        a.handleTechPlay_ = function e() {
          this.removeClass('vjs-ended')
          this.removeClass('vjs-paused')
          this.addClass('vjs-playing')
          this.hasStarted(true)
          this.trigger('play')
        }
        a.handleTechRateChange_ = function e() {
          if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {
            this.queuedCallbacks_.forEach(function(e) {
              return e.callback(e.event)
            })
            this.queuedCallbacks_ = []
          }
          this.cache_.lastPlaybackRate = this.tech_.playbackRate()
          this.trigger('ratechange')
        }
        a.handleTechWaiting_ = function e() {
          var t = this
          this.addClass('vjs-waiting')
          this.trigger('waiting')
          var r = this.currentTime()
          var n = function e() {
            if (r !== t.currentTime()) {
              t.removeClass('vjs-waiting')
              t.off('timeupdate', e)
            }
          }
          this.on('timeupdate', n)
        }
        a.handleTechCanPlay_ = function e() {
          this.removeClass('vjs-waiting')
          this.trigger('canplay')
        }
        a.handleTechCanPlayThrough_ = function e() {
          this.removeClass('vjs-waiting')
          this.trigger('canplaythrough')
        }
        a.handleTechPlaying_ = function e() {
          this.removeClass('vjs-waiting')
          this.trigger('playing')
        }
        a.handleTechSeeking_ = function e() {
          this.addClass('vjs-seeking')
          this.trigger('seeking')
        }
        a.handleTechSeeked_ = function e() {
          this.removeClass('vjs-seeking')
          this.removeClass('vjs-ended')
          this.trigger('seeked')
        }
        a.handleTechFirstPlay_ = function e() {
          if (this.options_.starttime) {
            s.warn('Passing the `starttime` option to the player will be deprecated in 6.0')
            this.currentTime(this.options_.starttime)
          }
          this.addClass('vjs-has-started')
          this.trigger('firstplay')
        }
        a.handleTechPause_ = function e() {
          this.removeClass('vjs-playing')
          this.addClass('vjs-paused')
          this.trigger('pause')
        }
        a.handleTechEnded_ = function e() {
          this.addClass('vjs-ended')
          if (this.options_.loop) {
            this.currentTime(0)
            this.play()
          } else if (!this.paused()) {
            this.pause()
          }
          this.trigger('ended')
        }
        a.handleTechDurationChange_ = function e() {
          this.duration(this.techGet_('duration'))
        }
        a.handleTechClick_ = function e(t) {
          if (!K(t)) {
            return
          }
          if (!this.controls_) {
            return
          }
          if (this.paused()) {
            Rt(this.play())
          } else {
            this.pause()
          }
        }
        a.handleTechDoubleClick_ = function e(t) {
          if (!this.controls_) {
            return
          }
          var r = Array.prototype.some.call(
            this.$$('.vjs-control-bar, .vjs-modal-dialog'),
            function(e) {
              return e.contains(t.target)
            }
          )
          if (!r) {
            if (
              this.options_ === undefined ||
              this.options_.userActions === undefined ||
              this.options_.userActions.doubleClick === undefined ||
              this.options_.userActions.doubleClick !== false
            ) {
              if (
                this.options_ !== undefined &&
                this.options_.userActions !== undefined &&
                typeof this.options_.userActions.doubleClick === 'function'
              ) {
                this.options_.userActions.doubleClick.call(this, t)
              } else if (this.isFullscreen()) {
                this.exitFullscreen()
              } else {
                this.requestFullscreen()
              }
            }
          }
        }
        a.handleTechTap_ = function e() {
          this.userActive(!this.userActive())
        }
        a.handleTechTouchStart_ = function e() {
          this.userWasActive = this.userActive()
        }
        a.handleTechTouchMove_ = function e() {
          if (this.userWasActive) {
            this.reportUserActivity()
          }
        }
        a.handleTechTouchEnd_ = function e(t) {
          t.preventDefault()
        }
        a.handleStageClick_ = function e() {
          this.reportUserActivity()
        }
        a.toggleFullscreenClass_ = function e() {
          if (this.isFullscreen()) {
            this.addClass('vjs-fullscreen')
          } else {
            this.removeClass('vjs-fullscreen')
          }
        }
        a.documentFullscreenChange_ = function e(r) {
          var n = this.el()
          var i = t[this.fsApi_.fullscreenElement] === n
          if (!i && n.matches) {
            i = n.matches(':' + this.fsApi_.fullscreen)
          } else if (!i && n.msMatchesSelector) {
            i = n.msMatchesSelector(':' + this.fsApi_.fullscreen)
          }
          this.isFullscreen(i)
          if (this.isFullscreen() === false) {
            ce(t, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_)
          }
          if (this.fsApi_.prefixed) {
            this.trigger('fullscreenchange')
          }
        }
        a.handleTechFullscreenChange_ = function e(t, r) {
          if (r) {
            this.isFullscreen(r.isFullscreen)
          }
          this.trigger('fullscreenchange')
        }
        a.togglePictureInPictureClass_ = function e() {
          if (this.isInPictureInPicture()) {
            this.addClass('vjs-picture-in-picture')
          } else {
            this.removeClass('vjs-picture-in-picture')
          }
        }
        a.handleTechEnterPictureInPicture_ = function e(t) {
          this.isInPictureInPicture(true)
        }
        a.handleTechLeavePictureInPicture_ = function e(t) {
          this.isInPictureInPicture(false)
        }
        a.handleTechError_ = function e() {
          var t = this.tech_.error()
          this.error(t)
        }
        a.handleTechTextData_ = function e() {
          var t = null
          if (arguments.length > 1) {
            t = arguments[1]
          }
          this.trigger('textdata', t)
        }
        a.getCache = function e() {
          return this.cache_
        }
        a.resetCache_ = function e() {
          this.cache_ = {
            currentTime: 0,
            inactivityTimeout: this.options_.inactivityTimeout,
            duration: NaN,
            lastVolume: 1,
            lastPlaybackRate: this.defaultPlaybackRate(),
            media: null,
            src: '',
            source: {},
            sources: [],
            volume: 1,
          }
        }
        a.techCall_ = function e(t, r) {
          this.ready(function() {
            if (t in ma) {
              return pa(this.middleware_, this.tech_, t, r)
            } else if (t in ya) {
              return va(this.middleware_, this.tech_, t, r)
            }
            try {
              if (this.tech_) {
                this.tech_[t](r)
              }
            } catch (e) {
              s(e)
              throw e
            }
          }, true)
        }
        a.techGet_ = function e(t) {
          if (!this.tech_ || !this.tech_.isReady_) {
            return
          }
          if (t in ga) {
            return ha(this.middleware_, this.tech_, t)
          } else if (t in ya) {
            return va(this.middleware_, this.tech_, t)
          }
          try {
            return this.tech_[t]()
          } catch (e) {
            if (this.tech_[t] === undefined) {
              s(
                'Video.js: ' +
                  t +
                  ' method not defined for ' +
                  this.techName_ +
                  ' playback technology.',
                e
              )
              throw e
            }
            if (e.name === 'TypeError') {
              s(
                'Video.js: ' +
                  t +
                  ' unavailable on ' +
                  this.techName_ +
                  ' playback technology element.',
                e
              )
              this.tech_.isReady_ = false
              throw e
            }
            s(e)
            throw e
          }
        }
        a.play = function t() {
          var r = this
          var n = this.options_.Promise || e.Promise
          if (n) {
            return new n(function(e) {
              r.play_(e)
            })
          }
          return this.play_()
        }
        a.play_ = function e(t) {
          var r = this
          if (t === void 0) {
            t = Rt
          }
          this.playCallbacks_.push(t)
          var n = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()))
          if (this.waitToPlay_) {
            this.off(['ready', 'loadstart'], this.waitToPlay_)
            this.waitToPlay_ = null
          }
          if (!this.isReady_ || !n) {
            this.waitToPlay_ = function(e) {
              r.play_()
            }
            this.one(['ready', 'loadstart'], this.waitToPlay_)
            if (!n && (ut || Qe)) {
              this.load()
            }
            return
          }
          var i = this.techGet_('play')
          if (i === null) {
            this.runPlayTerminatedQueue_()
          } else {
            this.runPlayCallbacks_(i)
          }
        }
        a.runPlayTerminatedQueue_ = function e() {
          var t = this.playTerminatedQueue_.slice(0)
          this.playTerminatedQueue_ = []
          t.forEach(function(e) {
            e()
          })
        }
        a.runPlayCallbacks_ = function e(t) {
          var r = this.playCallbacks_.slice(0)
          this.playCallbacks_ = []
          this.playTerminatedQueue_ = []
          r.forEach(function(e) {
            e(t)
          })
        }
        a.pause = function e() {
          this.techCall_('pause')
        }
        a.paused = function e() {
          return this.techGet_('paused') === false ? false : true
        }
        a.played = function e() {
          return this.techGet_('played') || vt(0, 0)
        }
        a.scrubbing = function e(t) {
          if (typeof t === 'undefined') {
            return this.scrubbing_
          }
          this.scrubbing_ = !!t
          if (t) {
            this.addClass('vjs-scrubbing')
          } else {
            this.removeClass('vjs-scrubbing')
          }
        }
        a.currentTime = function e(t) {
          if (typeof t !== 'undefined') {
            if (t < 0) {
              t = 0
            }
            this.techCall_('setCurrentTime', t)
            return
          }
          this.cache_.currentTime = this.techGet_('currentTime') || 0
          return this.cache_.currentTime
        }
        a.duration = function e(t) {
          if (t === undefined) {
            return this.cache_.duration !== undefined ? this.cache_.duration : NaN
          }
          t = parseFloat(t)
          if (t < 0) {
            t = Infinity
          }
          if (t !== this.cache_.duration) {
            this.cache_.duration = t
            if (t === Infinity) {
              this.addClass('vjs-live')
              if (this.options_.liveui && this.player_.liveTracker) {
                this.addClass('vjs-liveui')
              }
            } else {
              this.removeClass('vjs-live')
              this.removeClass('vjs-liveui')
            }
            if (!isNaN(t)) {
              this.trigger('durationchange')
            }
          }
        }
        a.remainingTime = function e() {
          return this.duration() - this.currentTime()
        }
        a.remainingTimeDisplay = function e() {
          return Math.floor(this.duration()) - Math.floor(this.currentTime())
        }
        a.buffered = function e() {
          var e = this.techGet_('buffered')
          if (!e || !e.length) {
            e = vt(0, 0)
          }
          return e
        }
        a.bufferedPercent = function e() {
          return gt(this.buffered(), this.duration())
        }
        a.bufferedEnd = function e() {
          var t = this.buffered()
          var r = this.duration()
          var n = t.end(t.length - 1)
          if (n > r) {
            n = r
          }
          return n
        }
        a.volume = function e(t) {
          var r
          if (t !== undefined) {
            r = Math.max(0, Math.min(1, parseFloat(t)))
            this.cache_.volume = r
            this.techCall_('setVolume', r)
            if (r > 0) {
              this.lastVolume_(r)
            }
            return
          }
          r = parseFloat(this.techGet_('volume'))
          return isNaN(r) ? 1 : r
        }
        a.muted = function e(t) {
          if (t !== undefined) {
            this.techCall_('setMuted', t)
            return
          }
          return this.techGet_('muted') || false
        }
        a.defaultMuted = function e(t) {
          if (t !== undefined) {
            return this.techCall_('setDefaultMuted', t)
          }
          return this.techGet_('defaultMuted') || false
        }
        a.lastVolume_ = function e(t) {
          if (t !== undefined && t !== 0) {
            this.cache_.lastVolume = t
            return
          }
          return this.cache_.lastVolume
        }
        a.supportsFullScreen = function e() {
          return this.techGet_('supportsFullScreen') || false
        }
        a.isFullscreen = function e(t) {
          if (t !== undefined) {
            this.isFullscreen_ = !!t
            this.toggleFullscreenClass_()
            return
          }
          return !!this.isFullscreen_
        }
        a.requestFullscreen = function e(r) {
          var n
          this.isFullscreen(true)
          if (this.fsApi_.requestFullscreen) {
            de(t, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_)
            if (!this.fsApi_.prefixed) {
              n = (this.options_.fullscreen && this.options_.fullscreen.options) || {}
              if (r !== undefined) {
                n = r
              }
            }
            Rt(this.el_[this.fsApi_.requestFullscreen](n))
          } else if (this.tech_.supportsFullScreen()) {
            this.techCall_('enterFullScreen')
          } else {
            this.enterFullWindow()
            this.trigger('fullscreenchange')
          }
        }
        a.exitFullscreen = function e() {
          this.isFullscreen(false)
          if (this.fsApi_.requestFullscreen) {
            Rt(t[this.fsApi_.exitFullscreen]())
          } else if (this.tech_.supportsFullScreen()) {
            this.techCall_('exitFullScreen')
          } else {
            this.exitFullWindow()
            this.trigger('fullscreenchange')
          }
        }
        a.enterFullWindow = function e() {
          this.isFullWindow = true
          this.docOrigOverflow = t.documentElement.style.overflow
          de(t, 'keydown', this.boundFullWindowOnEscKey_)
          t.documentElement.style.overflow = 'hidden'
          C(t.body, 'vjs-full-window')
          this.trigger('enterFullWindow')
        }
        a.fullWindowOnEscKey = function e(t) {
          if (Nt.isEventKey(t, 'Esc')) {
            if (this.isFullscreen() === true) {
              this.exitFullscreen()
            } else {
              this.exitFullWindow()
            }
          }
        }
        a.exitFullWindow = function e() {
          this.isFullWindow = false
          ce(t, 'keydown', this.boundFullWindowOnEscKey_)
          t.documentElement.style.overflow = this.docOrigOverflow
          R(t.body, 'vjs-full-window')
          this.trigger('exitFullWindow')
        }
        a.isInPictureInPicture = function e(t) {
          if (t !== undefined) {
            this.isInPictureInPicture_ = !!t
            this.togglePictureInPictureClass_()
            return
          }
          return !!this.isInPictureInPicture_
        }
        a.requestPictureInPicture = function e() {
          if ('pictureInPictureEnabled' in t) {
            return this.techGet_('requestPictureInPicture')
          }
        }
        a.exitPictureInPicture = function e() {
          if ('pictureInPictureEnabled' in t) {
            return t.exitPictureInPicture()
          }
        }
        a.handleKeyDown = function e(t) {
          var r = this.options_.userActions
          if (!r || !r.hotkeys) {
            return
          }
          var n = function e(t) {
            var r = t.tagName.toLowerCase()
            if (t.isContentEditable) {
              return true
            }
            var n = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit']
            if (r === 'input') {
              return n.indexOf(t.type) === -1
            }
            var i = ['textarea']
            return i.indexOf(r) !== -1
          }
          if (n(this.el_.ownerDocument.activeElement)) {
            return
          }
          if (typeof r.hotkeys === 'function') {
            r.hotkeys.call(this, t)
          } else {
            this.handleHotkeys(t)
          }
        }
        a.handleHotkeys = function e(r) {
          var n = this.options_.userActions ? this.options_.userActions.hotkeys : {}
          var i = n.fullscreenKey,
            a =
              i === void 0
                ? function(e) {
                    return Nt.isEventKey(e, 'f')
                  }
                : i,
            s = n.muteKey,
            o =
              s === void 0
                ? function(e) {
                    return Nt.isEventKey(e, 'm')
                  }
                : s,
            u = n.playPauseKey,
            l =
              u === void 0
                ? function(e) {
                    return Nt.isEventKey(e, 'k') || Nt.isEventKey(e, 'Space')
                  }
                : u
          if (a.call(this, r)) {
            r.preventDefault()
            r.stopPropagation()
            var f = Be.getComponent('FullscreenToggle')
            if (t[this.fsApi_.fullscreenEnabled] !== false) {
              f.prototype.handleClick.call(this, r)
            }
          } else if (o.call(this, r)) {
            r.preventDefault()
            r.stopPropagation()
            var d = Be.getComponent('MuteToggle')
            d.prototype.handleClick.call(this, r)
          } else if (l.call(this, r)) {
            r.preventDefault()
            r.stopPropagation()
            var c = Be.getComponent('PlayToggle')
            c.prototype.handleClick.call(this, r)
          }
        }
        a.canPlayType = function e(t) {
          var r
          for (var n = 0, i = this.options_.techOrder; n < i.length; n++) {
            var a = i[n]
            var o = sa.getTech(a)
            if (!o) {
              o = Be.getComponent(a)
            }
            if (!o) {
              s.error(
                'The "' + a + '" tech is undefined. Skipped browser support check for that tech.'
              )
              continue
            }
            if (o.isSupported()) {
              r = o.canPlayType(t)
              if (r) {
                return r
              }
            }
          }
          return ''
        }
        a.selectSource = function e(t) {
          var r = this
          var n = this.options_.techOrder
            .map(function(e) {
              return [e, sa.getTech(e)]
            })
            .filter(function(e) {
              var t = e[0],
                r = e[1]
              if (r) {
                return r.isSupported()
              }
              s.error(
                'The "' + t + '" tech is undefined. Skipped browser support check for that tech.'
              )
              return false
            })
          var i = function e(t, r, n) {
            var i
            t.some(function(e) {
              return r.some(function(t) {
                i = n(e, t)
                if (i) {
                  return true
                }
              })
            })
            return i
          }
          var a
          var o = function e(t) {
            return function(e, r) {
              return t(r, e)
            }
          }
          var u = function e(t, n) {
            var i = t[0],
              a = t[1]
            if (a.canPlaySource(n, r.options_[i.toLowerCase()])) {
              return { source: n, tech: i }
            }
          }
          if (this.options_.sourceOrder) {
            a = i(t, n, o(u))
          } else {
            a = i(n, t, u)
          }
          return a || false
        }
        a.src = function e(t) {
          var r = this
          if (typeof t === 'undefined') {
            return this.cache_.src || ''
          }
          var n = Ca(t)
          if (!n.length) {
            this.setTimeout(function() {
              this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) })
            }, 0)
            return
          }
          this.changingSrc_ = true
          this.cache_.sources = n
          this.updateSourceCaches_(n[0])
          da(this, n[0], function(e, t) {
            r.middleware_ = t
            r.cache_.sources = n
            r.updateSourceCaches_(e)
            var i = r.src_(e)
            if (i) {
              if (n.length > 1) {
                return r.src(n.slice(1))
              }
              r.changingSrc_ = false
              r.setTimeout(function() {
                this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) })
              }, 0)
              r.triggerReady()
              return
            }
            ca(t, r.tech_)
          })
        }
        a.src_ = function e(t) {
          var r = this
          var n = this.selectSource([t])
          if (!n) {
            return true
          }
          if (!Fe(n.tech, this.techName_)) {
            this.changingSrc_ = true
            this.loadTech_(n.tech, n.source)
            this.tech_.ready(function() {
              r.changingSrc_ = false
            })
            return false
          }
          this.ready(function() {
            if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {
              this.techCall_('setSource', t)
            } else {
              this.techCall_('src', t.src)
            }
            this.changingSrc_ = false
          }, true)
          return false
        }
        a.load = function e() {
          this.techCall_('load')
        }
        a.reset = function t() {
          var r = this
          var n = this.options_.Promise || e.Promise
          if (this.paused() || !n) {
            this.doReset_()
          } else {
            var i = this.play()
            Rt(
              i.then(function() {
                return r.doReset_()
              })
            )
          }
        }
        a.doReset_ = function e() {
          if (this.tech_) {
            this.tech_.clearTracks('text')
          }
          this.resetCache_()
          this.poster('')
          this.loadTech_(this.options_.techOrder[0], null)
          this.techCall_('reset')
          this.resetControlBarUI_()
          if (Se(this)) {
            this.trigger('playerreset')
          }
        }
        a.resetControlBarUI_ = function e() {
          this.resetProgressBar_()
          this.resetPlaybackRate_()
          this.resetVolumeBar_()
        }
        a.resetProgressBar_ = function e() {
          this.currentTime(0)
          var t = this.controlBar,
            r = t.durationDisplay,
            n = t.remainingTimeDisplay
          if (r) {
            r.updateContent()
          }
          if (n) {
            n.updateContent()
          }
        }
        a.resetPlaybackRate_ = function e() {
          this.playbackRate(this.defaultPlaybackRate())
          this.handleTechRateChange_()
        }
        a.resetVolumeBar_ = function e() {
          this.volume(1)
          this.trigger('volumechange')
        }
        a.currentSources = function e() {
          var t = this.currentSource()
          var r = []
          if (Object.keys(t).length !== 0) {
            r.push(t)
          }
          return this.cache_.sources || r
        }
        a.currentSource = function e() {
          return this.cache_.source || {}
        }
        a.currentSrc = function e() {
          return (this.currentSource() && this.currentSource().src) || ''
        }
        a.currentType = function e() {
          return (this.currentSource() && this.currentSource().type) || ''
        }
        a.preload = function e(t) {
          if (t !== undefined) {
            this.techCall_('setPreload', t)
            this.options_.preload = t
            return
          }
          return this.techGet_('preload')
        }
        a.autoplay = function e(t) {
          if (t === undefined) {
            return this.options_.autoplay || false
          }
          var r
          if (typeof t === 'string' && /(any|play|muted)/.test(t)) {
            this.options_.autoplay = t
            this.manualAutoplay_(t)
            r = false
          } else if (!t) {
            this.options_.autoplay = false
          } else {
            this.options_.autoplay = true
          }
          r = typeof r === 'undefined' ? this.options_.autoplay : r
          if (this.tech_) {
            this.techCall_('setAutoplay', r)
          }
        }
        a.playsinline = function e(t) {
          if (t !== undefined) {
            this.techCall_('setPlaysinline', t)
            this.options_.playsinline = t
            return this
          }
          return this.techGet_('playsinline')
        }
        a.loop = function e(t) {
          if (t !== undefined) {
            this.techCall_('setLoop', t)
            this.options_.loop = t
            return
          }
          return this.techGet_('loop')
        }
        a.poster = function e(t) {
          if (t === undefined) {
            return this.poster_
          }
          if (!t) {
            t = ''
          }
          if (t === this.poster_) {
            return
          }
          this.poster_ = t
          this.techCall_('setPoster', t)
          this.isPosterFromTech_ = false
          this.trigger('posterchange')
        }
        a.handleTechPosterChange_ = function e() {
          if (
            (!this.poster_ || this.options_.techCanOverridePoster) &&
            this.tech_ &&
            this.tech_.poster
          ) {
            var t = this.tech_.poster() || ''
            if (t !== this.poster_) {
              this.poster_ = t
              this.isPosterFromTech_ = true
              this.trigger('posterchange')
            }
          }
        }
        a.controls = function e(t) {
          if (t === undefined) {
            return !!this.controls_
          }
          t = !!t
          if (this.controls_ === t) {
            return
          }
          this.controls_ = t
          if (this.usingNativeControls()) {
            this.techCall_('setControls', t)
          }
          if (this.controls_) {
            this.removeClass('vjs-controls-disabled')
            this.addClass('vjs-controls-enabled')
            this.trigger('controlsenabled')
            if (!this.usingNativeControls()) {
              this.addTechControlsListeners_()
            }
          } else {
            this.removeClass('vjs-controls-enabled')
            this.addClass('vjs-controls-disabled')
            this.trigger('controlsdisabled')
            if (!this.usingNativeControls()) {
              this.removeTechControlsListeners_()
            }
          }
        }
        a.usingNativeControls = function e(t) {
          if (t === undefined) {
            return !!this.usingNativeControls_
          }
          t = !!t
          if (this.usingNativeControls_ === t) {
            return
          }
          this.usingNativeControls_ = t
          if (this.usingNativeControls_) {
            this.addClass('vjs-using-native-controls')
            this.trigger('usingnativecontrols')
          } else {
            this.removeClass('vjs-using-native-controls')
            this.trigger('usingcustomcontrols')
          }
        }
        a.error = function e(t) {
          if (t === undefined) {
            return this.error_ || null
          }
          if (
            this.options_.suppressNotSupportedError &&
            t &&
            t.message &&
            t.message === this.localize(this.options_.notSupportedMessage)
          ) {
            var r = function e() {
              this.error(t)
            }
            this.options_.suppressNotSupportedError = false
            this.any(['click', 'touchstart'], r)
            this.one('loadstart', function() {
              this.off(['click', 'touchstart'], r)
            })
            return
          }
          if (t === null) {
            this.error_ = t
            this.removeClass('vjs-error')
            if (this.errorDisplay) {
              this.errorDisplay.close()
            }
            return
          }
          this.error_ = new St(t)
          this.addClass('vjs-error')
          s.error(
            '(CODE:' + this.error_.code + ' ' + St.errorTypes[this.error_.code] + ')',
            this.error_.message,
            this.error_
          )
          this.trigger('error')
          return
        }
        a.reportUserActivity = function e(t) {
          this.userActivity_ = true
        }
        a.userActive = function e(t) {
          if (t === undefined) {
            return this.userActive_
          }
          t = !!t
          if (t === this.userActive_) {
            return
          }
          this.userActive_ = t
          if (this.userActive_) {
            this.userActivity_ = true
            this.removeClass('vjs-user-inactive')
            this.addClass('vjs-user-active')
            this.trigger('useractive')
            return
          }
          if (this.tech_) {
            this.tech_.one('mousemove', function(e) {
              e.stopPropagation()
              e.preventDefault()
            })
          }
          this.userActivity_ = false
          this.removeClass('vjs-user-active')
          this.addClass('vjs-user-inactive')
          this.trigger('userinactive')
        }
        a.listenForUserActivity_ = function e() {
          var t
          var r
          var n
          var i = ye(this, this.reportUserActivity)
          var a = function e(t) {
            if (t.screenX !== r || t.screenY !== n) {
              r = t.screenX
              n = t.screenY
              i()
            }
          }
          var s = function e() {
            i()
            this.clearInterval(t)
            t = this.setInterval(i, 250)
          }
          var o = function e(r) {
            i()
            this.clearInterval(t)
          }
          this.on('mousedown', s)
          this.on('mousemove', a)
          this.on('mouseup', o)
          var u = this.getChild('controlBar')
          if (u && !Qe && !Ze) {
            u.on('mouseenter', function(e) {
              this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout
              this.player().options_.inactivityTimeout = 0
            })
            u.on('mouseleave', function(e) {
              this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout
            })
          }
          this.on('keydown', i)
          this.on('keyup', i)
          var l
          this.setInterval(function() {
            if (!this.userActivity_) {
              return
            }
            this.userActivity_ = false
            this.userActive(true)
            this.clearTimeout(l)
            var e = this.options_.inactivityTimeout
            if (e <= 0) {
              return
            }
            l = this.setTimeout(function() {
              if (!this.userActivity_) {
                this.userActive(false)
              }
            }, e)
          }, 250)
        }
        a.playbackRate = function e(t) {
          if (t !== undefined) {
            this.techCall_('setPlaybackRate', t)
            return
          }
          if (this.tech_ && this.tech_.featuresPlaybackRate) {
            return this.cache_.lastPlaybackRate || this.techGet_('playbackRate')
          }
          return 1
        }
        a.defaultPlaybackRate = function e(t) {
          if (t !== undefined) {
            return this.techCall_('setDefaultPlaybackRate', t)
          }
          if (this.tech_ && this.tech_.featuresPlaybackRate) {
            return this.techGet_('defaultPlaybackRate')
          }
          return 1
        }
        a.isAudio = function e(t) {
          if (t !== undefined) {
            this.isAudio_ = !!t
            return
          }
          return !!this.isAudio_
        }
        a.addTextTrack = function e(t, r, n) {
          if (this.tech_) {
            return this.tech_.addTextTrack(t, r, n)
          }
        }
        a.addRemoteTextTrack = function e(t, r) {
          if (this.tech_) {
            return this.tech_.addRemoteTextTrack(t, r)
          }
        }
        a.removeRemoteTextTrack = function e(t) {
          if (t === void 0) {
            t = {}
          }
          var r = t,
            n = r.track
          if (!n) {
            n = t
          }
          if (this.tech_) {
            return this.tech_.removeRemoteTextTrack(n)
          }
        }
        a.getVideoPlaybackQuality = function e() {
          return this.techGet_('getVideoPlaybackQuality')
        }
        a.videoWidth = function e() {
          return (this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth()) || 0
        }
        a.videoHeight = function e() {
          return (this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight()) || 0
        }
        a.language = function e(t) {
          if (t === undefined) {
            return this.language_
          }
          this.language_ = String(t).toLowerCase()
        }
        a.languages = function e() {
          return Ue(i.prototype.options_.languages, this.languages_)
        }
        a.toJSON = function e() {
          var t = Ue(this.options_)
          var r = t.tracks
          t.tracks = []
          for (var n = 0; n < r.length; n++) {
            var i = r[n]
            i = Ue(i)
            i.player = undefined
            t.tracks[n] = i
          }
          return t
        }
        a.createModal = function e(t, r) {
          var n = this
          r = r || {}
          r.content = t || ''
          var i = new Gt(this, r)
          this.addChild(i)
          i.on('dispose', function() {
            n.removeChild(i)
          })
          i.open()
          return i
        }
        a.updateCurrentBreakpoint_ = function e() {
          if (!this.responsive()) {
            return
          }
          var t = this.currentBreakpoint()
          var r = this.currentWidth()
          for (var n = 0; n < Ao.length; n++) {
            var i = Ao[n]
            var a = this.breakpoints_[i]
            if (r <= a) {
              if (t === i) {
                return
              }
              if (t) {
                this.removeClass(Io[t])
              }
              this.addClass(Io[i])
              this.breakpoint_ = i
              break
            }
          }
        }
        a.removeCurrentBreakpoint_ = function e() {
          var t = this.currentBreakpointClass()
          this.breakpoint_ = ''
          if (t) {
            this.removeClass(t)
          }
        }
        a.breakpoints = function e(t) {
          if (t === undefined) {
            return c(this.breakpoints_)
          }
          this.breakpoint_ = ''
          this.breakpoints_ = c({}, Co, t)
          this.updateCurrentBreakpoint_()
          return c(this.breakpoints_)
        }
        a.responsive = function e(t) {
          if (t === undefined) {
            return this.responsive_
          }
          t = Boolean(t)
          var r = this.responsive_
          if (t === r) {
            return
          }
          this.responsive_ = t
          if (t) {
            this.on('playerresize', this.updateCurrentBreakpoint_)
            this.updateCurrentBreakpoint_()
          } else {
            this.off('playerresize', this.updateCurrentBreakpoint_)
            this.removeCurrentBreakpoint_()
          }
          return t
        }
        a.currentBreakpoint = function e() {
          return this.breakpoint_
        }
        a.currentBreakpointClass = function e() {
          return Io[this.breakpoint_] || ''
        }
        a.loadMedia = function e(t, r) {
          var n = this
          if (!t || typeof t !== 'object') {
            return
          }
          this.reset()
          this.cache_.media = Ue(t)
          var i = this.cache_.media,
            a = i.artwork,
            s = i.poster,
            o = i.src,
            u = i.textTracks
          if (!a && s) {
            this.cache_.media.artwork = [{ src: s, type: Aa(s) }]
          }
          if (o) {
            this.src(o)
          }
          if (s) {
            this.poster(s)
          }
          if (Array.isArray(u)) {
            u.forEach(function(e) {
              return n.addRemoteTextTrack(e, false)
            })
          }
          this.ready(r)
        }
        a.getMedia = function e() {
          if (!this.cache_.media) {
            var t = this.poster()
            var r = this.currentSources()
            var n = Array.prototype.map.call(this.remoteTextTracks(), function(e) {
              return { kind: e.kind, label: e.label, language: e.language, src: e.src }
            })
            var i = { src: r, textTracks: n }
            if (t) {
              i.poster = t
              i.artwork = [{ src: i.poster, type: Aa(i.poster) }]
            }
            return i
          }
          return Ue(this.cache_.media)
        }
        i.getTagSettings = function e(t) {
          var r = { sources: [], tracks: [] }
          var n = M(t)
          var i = n['data-setup']
          if (I(t, 'vjs-fill')) {
            n.fill = true
          }
          if (I(t, 'vjs-fluid')) {
            n.fluid = true
          }
          if (i !== null) {
            var a = At(i || '{}'),
              o = a[0],
              u = a[1]
            if (o) {
              s.error(o)
            }
            c(n, u)
          }
          c(r, n)
          if (t.hasChildNodes()) {
            var l = t.childNodes
            for (var f = 0, d = l.length; f < d; f++) {
              var h = l[f]
              var p = h.nodeName.toLowerCase()
              if (p === 'source') {
                r.sources.push(M(h))
              } else if (p === 'track') {
                r.tracks.push(M(h))
              }
            }
          }
          return r
        }
        a.flexNotSupported_ = function e() {
          var r = t.createElement('i')
          return !(
            'flexBasis' in r.style ||
            'webkitFlexBasis' in r.style ||
            'mozFlexBasis' in r.style ||
            'msFlexBasis' in r.style ||
            'msFlexOrder' in r.style
          )
        }
        return i
      })(Be)
      yi.names.forEach(function(e) {
        var t = yi[e]
        Ro.prototype[t.getterName] = function() {
          if (this.tech_) {
            return this.tech_[t.getterName]()
          }
          this[t.privateName] = this[t.privateName] || new t.ListClass()
          return this[t.privateName]
        }
      })
      Ro.players = {}
      var Do = e.navigator
      Ro.prototype.options_ = {
        techOrder: sa.defaultTechOrder_,
        html5: {},
        flash: {},
        inactivityTimeout: 2e3,
        playbackRates: [],
        liveui: false,
        children: [
          'mediaLoader',
          'posterImage',
          'textTrackDisplay',
          'loadingSpinner',
          'bigPlayButton',
          'liveTracker',
          'controlBar',
          'errorDisplay',
          'textTrackSettings',
          'resizeManager',
        ],
        language:
          (Do && ((Do.languages && Do.languages[0]) || Do.userLanguage || Do.language)) || 'en',
        languages: {},
        notSupportedMessage: 'No compatible source was found for this media.',
        fullscreen: { options: { navigationUI: 'hide' } },
        breakpoints: {},
        responsive: false,
      }
      ;['ended', 'seeking', 'seekable', 'networkState', 'readyState'].forEach(function(e) {
        Ro.prototype[e] = function() {
          return this.techGet_(e)
        }
      })
      So.forEach(function(e) {
        Ro.prototype['handleTech' + xe(e) + '_'] = function() {
          return this.trigger(e)
        }
      })
      Be.registerComponent('Player', Ro)
      var Oo = 'plugin'
      var Mo = 'activePlugins_'
      var ko = {}
      var Po = function e(t) {
        return ko.hasOwnProperty(t)
      }
      var No = function e(t) {
        return Po(t) ? ko[t] : undefined
      }
      var Lo = function e(t, r) {
        t[Mo] = t[Mo] || {}
        t[Mo][r] = true
      }
      var xo = function e(t, r, n) {
        var i = (n ? 'before' : '') + 'pluginsetup'
        t.trigger(i, r)
        t.trigger(i + ':' + r.name, r)
      }
      var Fo = function e(t, r) {
        var n = function e() {
          xo(this, { name: t, plugin: r, instance: null }, true)
          var n = r.apply(this, arguments)
          Lo(this, t)
          xo(this, { name: t, plugin: r, instance: n })
          return n
        }
        Object.keys(r).forEach(function(e) {
          n[e] = r[e]
        })
        return n
      }
      var Uo = function e(t, r) {
        r.prototype.name = t
        return function() {
          xo(this, { name: t, plugin: r, instance: null }, true)
          for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) {
            n[i] = arguments[i]
          }
          var a = He(r, [this].concat(n))
          this[t] = function() {
            return a
          }
          xo(this, a.getEventHash())
          return a
        }
      }
      var Bo = (function() {
        function e(t) {
          if (this.constructor === e) {
            throw new Error('Plugin must be sub-classed; not directly instantiated.')
          }
          this.player = t
          ke(this)
          delete this.trigger
          Ne(this, this.constructor.defaultState)
          Lo(t, this.name)
          this.dispose = ye(this, this.dispose)
          t.on('dispose', this.dispose)
        }
        var t = e.prototype
        t.version = function e() {
          return this.constructor.VERSION
        }
        t.getEventHash = function e(t) {
          if (t === void 0) {
            t = {}
          }
          t.name = this.name
          t.plugin = this.constructor
          t.instance = this
          return t
        }
        t.trigger = function e(t, r) {
          if (r === void 0) {
            r = {}
          }
          return he(this.eventBusEl_, t, this.getEventHash(r))
        }
        t.handleStateChanged = function e(t) {}
        t.dispose = function e() {
          var t = this.name,
            r = this.player
          this.trigger('dispose')
          this.off()
          r.off('dispose', this.dispose)
          r[Mo][t] = false
          this.player = this.state = null
          r[t] = Uo(t, ko[t])
        }
        e.isBasic = function t(r) {
          var n = typeof r === 'string' ? No(r) : r
          return typeof n === 'function' && !e.prototype.isPrototypeOf(n.prototype)
        }
        e.registerPlugin = function t(r, n) {
          if (typeof r !== 'string') {
            throw new Error(
              'Illegal plugin name, "' + r + '", must be a string, was ' + typeof r + '.'
            )
          }
          if (Po(r)) {
            s.warn(
              'A plugin named "' +
                r +
                '" already exists. You may want to avoid re-registering plugins!'
            )
          } else if (Ro.prototype.hasOwnProperty(r)) {
            throw new Error(
              'Illegal plugin name, "' +
                r +
                '", cannot share a name with an existing player method!'
            )
          }
          if (typeof n !== 'function') {
            throw new Error(
              'Illegal plugin for "' + r + '", must be a function, was ' + typeof n + '.'
            )
          }
          ko[r] = n
          if (r !== Oo) {
            if (e.isBasic(n)) {
              Ro.prototype[r] = Fo(r, n)
            } else {
              Ro.prototype[r] = Uo(r, n)
            }
          }
          return n
        }
        e.deregisterPlugin = function e(t) {
          if (t === Oo) {
            throw new Error('Cannot de-register base plugin.')
          }
          if (Po(t)) {
            delete ko[t]
            delete Ro.prototype[t]
          }
        }
        e.getPlugins = function e(t) {
          if (t === void 0) {
            t = Object.keys(ko)
          }
          var r
          t.forEach(function(e) {
            var t = No(e)
            if (t) {
              r = r || {}
              r[e] = t
            }
          })
          return r
        }
        e.getPluginVersion = function e(t) {
          var r = No(t)
          return (r && r.VERSION) || ''
        }
        return e
      })()
      Bo.getPlugin = No
      Bo.BASE_PLUGIN_NAME = Oo
      Bo.registerPlugin(Oo, Bo)
      Ro.prototype.usingPlugin = function(e) {
        return !!this[Mo] && this[Mo][e] === true
      }
      Ro.prototype.hasPlugin = function(e) {
        return !!Po(e)
      }
      var jo = function e(t, r) {
        if (typeof r !== 'function' && r !== null) {
          throw new TypeError('Super expression must either be null or a function, not ' + typeof r)
        }
        t.prototype = Object.create(r && r.prototype, {
          constructor: { value: t, enumerable: false, writable: true, configurable: true },
        })
        if (r) {
          t.super_ = r
        }
      }
      var Go = function e(t, r) {
        if (r === void 0) {
          r = {}
        }
        var n = function e() {
          t.apply(this, arguments)
        }
        var i = {}
        if (typeof r === 'object') {
          if (r.constructor !== Object.prototype.constructor) {
            n = r.constructor
          }
          i = r
        } else if (typeof r === 'function') {
          n = r
        }
        jo(n, t)
        for (var a in i) {
          if (i.hasOwnProperty(a)) {
            n.prototype[a] = i[a]
          }
        }
        return n
      }
      var qo = function e(t) {
        return t.indexOf('#') === 0 ? t.slice(1) : t
      }
      function Ho(e, t, r) {
        var n = Ho.getPlayer(e)
        if (n) {
          if (t) {
            s.warn('Player "' + e + '" is already initialised. Options will not be applied.')
          }
          if (r) {
            n.ready(r)
          }
          return n
        }
        var i = typeof e === 'string' ? Y('#' + qo(e)) : e
        if (!T(i)) {
          throw new TypeError('The element or ID supplied is not valid. (videojs)')
        }
        if (!i.ownerDocument.defaultView || !i.ownerDocument.body.contains(i)) {
          s.warn('The element supplied is not included in the DOM')
        }
        t = t || {}
        Ho.hooks('beforesetup').forEach(function(e) {
          var r = e(i, Ue(t))
          if (!h(r) || Array.isArray(r)) {
            s.error('please return an object in beforesetup hooks')
            return
          }
          t = Ue(t, r)
        })
        var a = Be.getComponent('Player')
        n = new a(i, t, r)
        Ho.hooks('setup').forEach(function(e) {
          return e(n)
        })
        return n
      }
      Ho.hooks_ = {}
      Ho.hooks = function(e, t) {
        Ho.hooks_[e] = Ho.hooks_[e] || []
        if (t) {
          Ho.hooks_[e] = Ho.hooks_[e].concat(t)
        }
        return Ho.hooks_[e]
      }
      Ho.hook = function(e, t) {
        Ho.hooks(e, t)
      }
      Ho.hookOnce = function(e, t) {
        Ho.hooks(
          e,
          [].concat(t).map(function(t) {
            var r = function r() {
              Ho.removeHook(e, r)
              return t.apply(void 0, arguments)
            }
            return r
          })
        )
      }
      Ho.removeHook = function(e, t) {
        var r = Ho.hooks(e).indexOf(t)
        if (r <= -1) {
          return false
        }
        Ho.hooks_[e] = Ho.hooks_[e].slice()
        Ho.hooks_[e].splice(r, 1)
        return true
      }
      if (e.VIDEOJS_NO_DYNAMIC_STYLE !== true && _()) {
        var Vo = Y('.vjs-styles-defaults')
        if (!Vo) {
          Vo = ee('vjs-styles-defaults')
          var Ko = Y('head')
          if (Ko) {
            Ko.insertBefore(Vo, Ko.firstChild)
          }
          te(
            Vo,
            '\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    '
          )
        }
      }
      J(1, Ho)
      Ho.VERSION = r
      Ho.options = Ro.prototype.options_
      Ho.getPlayers = function() {
        return Ro.players
      }
      Ho.getPlayer = function(e) {
        var t = Ro.players
        var r
        if (typeof e === 'string') {
          var n = qo(e)
          var i = t[n]
          if (i) {
            return i
          }
          r = Y('#' + n)
        } else {
          r = e
        }
        if (T(r)) {
          var a = r,
            s = a.player,
            o = a.playerId
          if (s || t[o]) {
            return s || t[o]
          }
        }
      }
      Ho.getAllPlayers = function() {
        return Object.keys(Ro.players)
          .map(function(e) {
            return Ro.players[e]
          })
          .filter(Boolean)
      }
      Ho.players = Ro.players
      Ho.getComponent = Be.getComponent
      Ho.registerComponent = function(e, t) {
        if (sa.isTech(t)) {
          s.warn(
            'The ' +
              e +
              ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)'
          )
        }
        Be.registerComponent.call(Be, e, t)
      }
      Ho.getTech = sa.getTech
      Ho.registerTech = sa.registerTech
      Ho.use = fa
      Object.defineProperty(Ho, 'middleware', { value: {}, writeable: false, enumerable: true })
      Object.defineProperty(Ho.middleware, 'TERMINATOR', {
        value: la,
        writeable: false,
        enumerable: true,
      })
      Ho.browser = dt
      Ho.TOUCH_ENABLED = ft
      Ho.extend = Go
      Ho.mergeOptions = Ue
      Ho.bind = ye
      Ho.registerPlugin = Bo.registerPlugin
      Ho.deregisterPlugin = Bo.deregisterPlugin
      Ho.plugin = function(e, t) {
        s.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead')
        return Bo.registerPlugin(e, t)
      }
      Ho.getPlugins = Bo.getPlugins
      Ho.getPlugin = Bo.getPlugin
      Ho.getPluginVersion = Bo.getPluginVersion
      Ho.addLanguage = function(e, t) {
        var r
        e = ('' + e).toLowerCase()
        Ho.options.languages = Ue(Ho.options.languages, ((r = {}), (r[e] = t), r))
        return Ho.options.languages[e]
      }
      Ho.log = s
      Ho.createLogger = o
      Ho.createTimeRange = Ho.createTimeRanges = vt
      Ho.formatTime = Wa
      Ho.setFormatTime = Ka
      Ho.resetFormatTime = Ya
      Ho.parseUrl = rr
      Ho.isCrossOrigin = ar
      Ho.EventTarget = Ee
      Ho.on = de
      Ho.one = pe
      Ho.off = ce
      Ho.trigger = he
      Ho.xhr = Jn
      Ho.TextTrack = ui
      Ho.AudioTrack = li
      Ho.VideoTrack = fi
      ;[
        'isEl',
        'isTextNode',
        'createEl',
        'hasClass',
        'addClass',
        'removeClass',
        'toggleClass',
        'setAttributes',
        'getAttributes',
        'emptyEl',
        'appendContent',
        'insertContent',
      ].forEach(function(e) {
        Ho[e] = function() {
          s.warn('videojs.' + e + '() is deprecated; use videojs.dom.' + e + '() instead')
          return z[e].apply(null, arguments)
        }
      })
      Ho.computedStyle = v
      Ho.dom = z
      Ho.url = sr
      var Yo = Pt(function(e, t) {
        ;(function(t) {
          var r = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/\?#]*\/)*.*?)??(;.*?)?(\?.*?)?(#.*?)?$/
          var n = /^([^\/?#]*)(.*)$/
          var i = /(?:\/|^)\.(?=\/)/g
          var a = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g
          var s = {
            buildAbsoluteURL: function e(t, r, i) {
              i = i || {}
              t = t.trim()
              r = r.trim()
              if (!r) {
                if (!i.alwaysNormalize) {
                  return t
                }
                var a = s.parseURL(t)
                if (!a) {
                  throw new Error('Error trying to parse base URL.')
                }
                a.path = s.normalizePath(a.path)
                return s.buildURLFromParts(a)
              }
              var o = s.parseURL(r)
              if (!o) {
                throw new Error('Error trying to parse relative URL.')
              }
              if (o.scheme) {
                if (!i.alwaysNormalize) {
                  return r
                }
                o.path = s.normalizePath(o.path)
                return s.buildURLFromParts(o)
              }
              var u = s.parseURL(t)
              if (!u) {
                throw new Error('Error trying to parse base URL.')
              }
              if (!u.netLoc && u.path && u.path[0] !== '/') {
                var l = n.exec(u.path)
                u.netLoc = l[1]
                u.path = l[2]
              }
              if (u.netLoc && !u.path) {
                u.path = '/'
              }
              var f = {
                scheme: u.scheme,
                netLoc: o.netLoc,
                path: null,
                params: o.params,
                query: o.query,
                fragment: o.fragment,
              }
              if (!o.netLoc) {
                f.netLoc = u.netLoc
                if (o.path[0] !== '/') {
                  if (!o.path) {
                    f.path = u.path
                    if (!o.params) {
                      f.params = u.params
                      if (!o.query) {
                        f.query = u.query
                      }
                    }
                  } else {
                    var d = u.path
                    var c = d.substring(0, d.lastIndexOf('/') + 1) + o.path
                    f.path = s.normalizePath(c)
                  }
                }
              }
              if (f.path === null) {
                f.path = i.alwaysNormalize ? s.normalizePath(o.path) : o.path
              }
              return s.buildURLFromParts(f)
            },
            parseURL: function e(t) {
              var n = r.exec(t)
              if (!n) {
                return null
              }
              return {
                scheme: n[1] || '',
                netLoc: n[2] || '',
                path: n[3] || '',
                params: n[4] || '',
                query: n[5] || '',
                fragment: n[6] || '',
              }
            },
            normalizePath: function e(t) {
              t = t
                .split('')
                .reverse()
                .join('')
                .replace(i, '')
              while (t.length !== (t = t.replace(a, '')).length) {}
              return t
                .split('')
                .reverse()
                .join('')
            },
            buildURLFromParts: function e(t) {
              return t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment
            },
          }
          e.exports = s
        })()
      }) /*! @name m3u8-parser @version 4.4.0 @license Apache-2.0 */
      function Wo() {
        Wo =
          Object.assign ||
          function(e) {
            for (var t = 1; t < arguments.length; t++) {
              var r = arguments[t]
              for (var n in r) {
                if (Object.prototype.hasOwnProperty.call(r, n)) {
                  e[n] = r[n]
                }
              }
            }
            return e
          }
        return Wo.apply(this, arguments)
      }
      function zo(e, t) {
        e.prototype = Object.create(t.prototype)
        e.prototype.constructor = e
        e.__proto__ = t
      }
      function Xo(e) {
        if (e === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
        }
        return e
      }
      var $o = (function() {
        function e() {
          this.listeners = {}
        }
        var t = e.prototype
        t.on = function e(t, r) {
          if (!this.listeners[t]) {
            this.listeners[t] = []
          }
          this.listeners[t].push(r)
        }
        t.off = function e(t, r) {
          if (!this.listeners[t]) {
            return false
          }
          var n = this.listeners[t].indexOf(r)
          this.listeners[t].splice(n, 1)
          return n > -1
        }
        t.trigger = function e(t) {
          var r = this.listeners[t]
          var n
          var i
          var a
          if (!r) {
            return
          }
          if (arguments.length === 2) {
            i = r.length
            for (n = 0; n < i; ++n) {
              r[n].call(this, arguments[1])
            }
          } else {
            a = Array.prototype.slice.call(arguments, 1)
            i = r.length
            for (n = 0; n < i; ++n) {
              r[n].apply(this, a)
            }
          }
        }
        t.dispose = function e() {
          this.listeners = {}
        }
        t.pipe = function e(t) {
          this.on('data', function(e) {
            t.push(e)
          })
        }
        return e
      })()
      var Qo = (function(e) {
        zo(t, e)
        function t() {
          var t
          t = e.call(this) || this
          t.buffer = ''
          return t
        }
        var r = t.prototype
        r.push = function e(t) {
          var r
          this.buffer += t
          r = this.buffer.indexOf('\n')
          for (; r > -1; r = this.buffer.indexOf('\n')) {
            this.trigger('data', this.buffer.substring(0, r))
            this.buffer = this.buffer.substring(r + 1)
          }
        }
        return t
      })($o)
      var Jo = function e() {
        var t = '[^=]*'
        var r = '"[^"]*"|[^,]*'
        var n = '(?:' + t + ')=(?:' + r + ')'
        return new RegExp('(?:^|,)(' + n + ')')
      }
      var Zo = function e(t) {
        var r = t.split(Jo())
        var n = {}
        var i = r.length
        var a
        while (i--) {
          if (r[i] === '') {
            continue
          }
          a = /([^=]*)=(.*)/.exec(r[i]).slice(1)
          a[0] = a[0].replace(/^\s+|\s+$/g, '')
          a[1] = a[1].replace(/^\s+|\s+$/g, '')
          a[1] = a[1].replace(/^['"](.*)['"]$/g, '$1')
          n[a[0]] = a[1]
        }
        return n
      }
      var eu = (function(e) {
        zo(t, e)
        function t() {
          var t
          t = e.call(this) || this
          t.customParsers = []
          t.tagMappers = []
          return t
        }
        var r = t.prototype
        r.push = function e(t) {
          var r = this
          var n
          var i
          t = t.trim()
          if (t.length === 0) {
            return
          }
          if (t[0] !== '#') {
            this.trigger('data', { type: 'uri', uri: t })
            return
          }
          var a = this.tagMappers.reduce(
            function(e, r) {
              var n = r(t)
              if (n === t) {
                return e
              }
              return e.concat([n])
            },
            [t]
          )
          a.forEach(function(e) {
            for (var t = 0; t < r.customParsers.length; t++) {
              if (r.customParsers[t].call(r, e)) {
                return
              }
            }
            if (e.indexOf('#EXT') !== 0) {
              r.trigger('data', { type: 'comment', text: e.slice(1) })
              return
            }
            e = e.replace('\r', '')
            n = /^#EXTM3U/.exec(e)
            if (n) {
              r.trigger('data', { type: 'tag', tagType: 'm3u' })
              return
            }
            n = /^#EXTINF:?([0-9\.]*)?,?(.*)?$/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'inf' }
              if (n[1]) {
                i.duration = parseFloat(n[1])
              }
              if (n[2]) {
                i.title = n[2]
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'targetduration' }
              if (n[1]) {
                i.duration = parseInt(n[1], 10)
              }
              r.trigger('data', i)
              return
            }
            n = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'totalduration' }
              if (n[1]) {
                i.duration = parseInt(n[1], 10)
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'version' }
              if (n[1]) {
                i.version = parseInt(n[1], 10)
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'media-sequence' }
              if (n[1]) {
                i.number = parseInt(n[1], 10)
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\-?[0-9.]*)?/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'discontinuity-sequence' }
              if (n[1]) {
                i.number = parseInt(n[1], 10)
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'playlist-type' }
              if (n[1]) {
                i.playlistType = n[1]
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'byterange' }
              if (n[1]) {
                i.length = parseInt(n[1], 10)
              }
              if (n[2]) {
                i.offset = parseInt(n[2], 10)
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'allow-cache' }
              if (n[1]) {
                i.allowed = !/NO/.test(n[1])
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-MAP:?(.*)$/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'map' }
              if (n[1]) {
                var a = Zo(n[1])
                if (a.URI) {
                  i.uri = a.URI
                }
                if (a.BYTERANGE) {
                  var s = a.BYTERANGE.split('@'),
                    o = s[0],
                    u = s[1]
                  i.byterange = {}
                  if (o) {
                    i.byterange.length = parseInt(o, 10)
                  }
                  if (u) {
                    i.byterange.offset = parseInt(u, 10)
                  }
                }
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-STREAM-INF:?(.*)$/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'stream-inf' }
              if (n[1]) {
                i.attributes = Zo(n[1])
                if (i.attributes.RESOLUTION) {
                  var l = i.attributes.RESOLUTION.split('x')
                  var f = {}
                  if (l[0]) {
                    f.width = parseInt(l[0], 10)
                  }
                  if (l[1]) {
                    f.height = parseInt(l[1], 10)
                  }
                  i.attributes.RESOLUTION = f
                }
                if (i.attributes.BANDWIDTH) {
                  i.attributes.BANDWIDTH = parseInt(i.attributes.BANDWIDTH, 10)
                }
                if (i.attributes['PROGRAM-ID']) {
                  i.attributes['PROGRAM-ID'] = parseInt(i.attributes['PROGRAM-ID'], 10)
                }
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-MEDIA:?(.*)$/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'media' }
              if (n[1]) {
                i.attributes = Zo(n[1])
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-ENDLIST/.exec(e)
            if (n) {
              r.trigger('data', { type: 'tag', tagType: 'endlist' })
              return
            }
            n = /^#EXT-X-DISCONTINUITY/.exec(e)
            if (n) {
              r.trigger('data', { type: 'tag', tagType: 'discontinuity' })
              return
            }
            n = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'program-date-time' }
              if (n[1]) {
                i.dateTimeString = n[1]
                i.dateTimeObject = new Date(n[1])
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-KEY:?(.*)$/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'key' }
              if (n[1]) {
                i.attributes = Zo(n[1])
                if (i.attributes.IV) {
                  if (i.attributes.IV.substring(0, 2).toLowerCase() === '0x') {
                    i.attributes.IV = i.attributes.IV.substring(2)
                  }
                  i.attributes.IV = i.attributes.IV.match(/.{8}/g)
                  i.attributes.IV[0] = parseInt(i.attributes.IV[0], 16)
                  i.attributes.IV[1] = parseInt(i.attributes.IV[1], 16)
                  i.attributes.IV[2] = parseInt(i.attributes.IV[2], 16)
                  i.attributes.IV[3] = parseInt(i.attributes.IV[3], 16)
                  i.attributes.IV = new Uint32Array(i.attributes.IV)
                }
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-START:?(.*)$/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'start' }
              if (n[1]) {
                i.attributes = Zo(n[1])
                i.attributes['TIME-OFFSET'] = parseFloat(i.attributes['TIME-OFFSET'])
                i.attributes.PRECISE = /YES/.test(i.attributes.PRECISE)
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'cue-out-cont' }
              if (n[1]) {
                i.data = n[1]
              } else {
                i.data = ''
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'cue-out' }
              if (n[1]) {
                i.data = n[1]
              } else {
                i.data = ''
              }
              r.trigger('data', i)
              return
            }
            n = /^#EXT-X-CUE-IN:?(.*)?$/.exec(e)
            if (n) {
              i = { type: 'tag', tagType: 'cue-in' }
              if (n[1]) {
                i.data = n[1]
              } else {
                i.data = ''
              }
              r.trigger('data', i)
              return
            }
            r.trigger('data', { type: 'tag', data: e.slice(4) })
          })
        }
        r.addParser = function e(t) {
          var r = this
          var n = t.expression,
            i = t.customType,
            a = t.dataParser,
            s = t.segment
          if (typeof a !== 'function') {
            a = function e(t) {
              return t
            }
          }
          this.customParsers.push(function(e) {
            var t = n.exec(e)
            if (t) {
              r.trigger('data', { type: 'custom', data: a(e), customType: i, segment: s })
              return true
            }
          })
        }
        r.addTagMapper = function e(t) {
          var r = t.expression,
            n = t.map
          var i = function e(t) {
            if (r.test(t)) {
              return n(t)
            }
            return t
          }
          this.tagMappers.push(i)
        }
        return t
      })($o)
      function tu(t) {
        var r = e.atob(t || '')
        var n = new Uint8Array(r.length)
        for (var i = 0; i < r.length; i++) {
          n[i] = r.charCodeAt(i)
        }
        return n
      }
      var ru = (function(e) {
        zo(t, e)
        function t() {
          var t
          t = e.call(this) || this
          t.lineStream = new Qo()
          t.parseStream = new eu()
          t.lineStream.pipe(t.parseStream)
          var r = Xo(t)
          var n = []
          var i = {}
          var a
          var s
          var o = function e() {}
          var u = { AUDIO: {}, VIDEO: {}, 'CLOSED-CAPTIONS': {}, SUBTITLES: {} }
          var l = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'
          var f = 0
          t.manifest = { allowCache: true, discontinuityStarts: [], segments: [] }
          t.parseStream.on('data', function(e) {
            var t
            var d
            ;({
              tag: function c() {
                ;((
                  {
                    'allow-cache': function t() {
                      this.manifest.allowCache = e.allowed
                      if (!('allowed' in e)) {
                        this.trigger('info', { message: 'defaulting allowCache to YES' })
                        this.manifest.allowCache = true
                      }
                    },
                    byterange: function t() {
                      var t = {}
                      if ('length' in e) {
                        i.byterange = t
                        t.length = e.length
                        if (!('offset' in e)) {
                          this.trigger('info', { message: 'defaulting offset to zero' })
                          e.offset = 0
                        }
                      }
                      if ('offset' in e) {
                        i.byterange = t
                        t.offset = e.offset
                      }
                    },
                    endlist: function e() {
                      this.manifest.endList = true
                    },
                    inf: function t() {
                      if (!('mediaSequence' in this.manifest)) {
                        this.manifest.mediaSequence = 0
                        this.trigger('info', { message: 'defaulting media sequence to zero' })
                      }
                      if (!('discontinuitySequence' in this.manifest)) {
                        this.manifest.discontinuitySequence = 0
                        this.trigger('info', {
                          message: 'defaulting discontinuity sequence to zero',
                        })
                      }
                      if (e.duration > 0) {
                        i.duration = e.duration
                      }
                      if (e.duration === 0) {
                        i.duration = 0.01
                        this.trigger('info', {
                          message: 'updating zero segment duration to a small value',
                        })
                      }
                      this.manifest.segments = n
                    },
                    key: function t() {
                      if (!e.attributes) {
                        this.trigger('warn', {
                          message: 'ignoring key declaration without attribute list',
                        })
                        return
                      }
                      if (e.attributes.METHOD === 'NONE') {
                        s = null
                        return
                      }
                      if (!e.attributes.URI) {
                        this.trigger('warn', { message: 'ignoring key declaration without URI' })
                        return
                      }
                      if (e.attributes.KEYFORMAT === l) {
                        var r = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC']
                        if (r.indexOf(e.attributes.METHOD) === -1) {
                          this.trigger('warn', {
                            message: 'invalid key method provided for Widevine',
                          })
                          return
                        }
                        if (e.attributes.METHOD === 'SAMPLE-AES-CENC') {
                          this.trigger('warn', {
                            message:
                              'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead',
                          })
                        }
                        if (e.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {
                          this.trigger('warn', { message: 'invalid key URI provided for Widevine' })
                          return
                        }
                        if (!(e.attributes.KEYID && e.attributes.KEYID.substring(0, 2) === '0x')) {
                          this.trigger('warn', { message: 'invalid key ID provided for Widevine' })
                          return
                        }
                        this.manifest.contentProtection = {
                          'com.widevine.alpha': {
                            attributes: {
                              schemeIdUri: e.attributes.KEYFORMAT,
                              keyId: e.attributes.KEYID.substring(2),
                            },
                            pssh: tu(e.attributes.URI.split(',')[1]),
                          },
                        }
                        return
                      }
                      if (!e.attributes.METHOD) {
                        this.trigger('warn', { message: 'defaulting key method to AES-128' })
                      }
                      s = { method: e.attributes.METHOD || 'AES-128', uri: e.attributes.URI }
                      if (typeof e.attributes.IV !== 'undefined') {
                        s.iv = e.attributes.IV
                      }
                    },
                    'media-sequence': function t() {
                      if (!isFinite(e.number)) {
                        this.trigger('warn', {
                          message: 'ignoring invalid media sequence: ' + e.number,
                        })
                        return
                      }
                      this.manifest.mediaSequence = e.number
                    },
                    'discontinuity-sequence': function t() {
                      if (!isFinite(e.number)) {
                        this.trigger('warn', {
                          message: 'ignoring invalid discontinuity sequence: ' + e.number,
                        })
                        return
                      }
                      this.manifest.discontinuitySequence = e.number
                      f = e.number
                    },
                    'playlist-type': function t() {
                      if (!/VOD|EVENT/.test(e.playlistType)) {
                        this.trigger('warn', {
                          message: 'ignoring unknown playlist type: ' + e.playlist,
                        })
                        return
                      }
                      this.manifest.playlistType = e.playlistType
                    },
                    map: function t() {
                      a = {}
                      if (e.uri) {
                        a.uri = e.uri
                      }
                      if (e.byterange) {
                        a.byterange = e.byterange
                      }
                    },
                    'stream-inf': function t() {
                      this.manifest.playlists = n
                      this.manifest.mediaGroups = this.manifest.mediaGroups || u
                      if (!e.attributes) {
                        this.trigger('warn', { message: 'ignoring empty stream-inf attributes' })
                        return
                      }
                      if (!i.attributes) {
                        i.attributes = {}
                      }
                      Wo(i.attributes, e.attributes)
                    },
                    media: function r() {
                      this.manifest.mediaGroups = this.manifest.mediaGroups || u
                      if (
                        !(
                          e.attributes &&
                          e.attributes.TYPE &&
                          e.attributes['GROUP-ID'] &&
                          e.attributes.NAME
                        )
                      ) {
                        this.trigger('warn', {
                          message: 'ignoring incomplete or missing media group',
                        })
                        return
                      }
                      var n = this.manifest.mediaGroups[e.attributes.TYPE]
                      n[e.attributes['GROUP-ID']] = n[e.attributes['GROUP-ID']] || {}
                      t = n[e.attributes['GROUP-ID']]
                      d = { default: /yes/i.test(e.attributes.DEFAULT) }
                      if (d['default']) {
                        d.autoselect = true
                      } else {
                        d.autoselect = /yes/i.test(e.attributes.AUTOSELECT)
                      }
                      if (e.attributes.LANGUAGE) {
                        d.language = e.attributes.LANGUAGE
                      }
                      if (e.attributes.URI) {
                        d.uri = e.attributes.URI
                      }
                      if (e.attributes['INSTREAM-ID']) {
                        d.instreamId = e.attributes['INSTREAM-ID']
                      }
                      if (e.attributes.CHARACTERISTICS) {
                        d.characteristics = e.attributes.CHARACTERISTICS
                      }
                      if (e.attributes.FORCED) {
                        d.forced = /yes/i.test(e.attributes.FORCED)
                      }
                      t[e.attributes.NAME] = d
                    },
                    discontinuity: function e() {
                      f += 1
                      i.discontinuity = true
                      this.manifest.discontinuityStarts.push(n.length)
                    },
                    'program-date-time': function t() {
                      if (typeof this.manifest.dateTimeString === 'undefined') {
                        this.manifest.dateTimeString = e.dateTimeString
                        this.manifest.dateTimeObject = e.dateTimeObject
                      }
                      i.dateTimeString = e.dateTimeString
                      i.dateTimeObject = e.dateTimeObject
                    },
                    targetduration: function t() {
                      if (!isFinite(e.duration) || e.duration < 0) {
                        this.trigger('warn', {
                          message: 'ignoring invalid target duration: ' + e.duration,
                        })
                        return
                      }
                      this.manifest.targetDuration = e.duration
                    },
                    totalduration: function t() {
                      if (!isFinite(e.duration) || e.duration < 0) {
                        this.trigger('warn', {
                          message: 'ignoring invalid total duration: ' + e.duration,
                        })
                        return
                      }
                      this.manifest.totalDuration = e.duration
                    },
                    start: function t() {
                      if (!e.attributes || isNaN(e.attributes['TIME-OFFSET'])) {
                        this.trigger('warn', {
                          message: 'ignoring start declaration without appropriate attribute list',
                        })
                        return
                      }
                      this.manifest.start = {
                        timeOffset: e.attributes['TIME-OFFSET'],
                        precise: e.attributes.PRECISE,
                      }
                    },
                    'cue-out': function t() {
                      i.cueOut = e.data
                    },
                    'cue-out-cont': function t() {
                      i.cueOutCont = e.data
                    },
                    'cue-in': function t() {
                      i.cueIn = e.data
                    },
                  }[e.tagType] || o
                ).call(r))
              },
              uri: function t() {
                i.uri = e.uri
                n.push(i)
                if (this.manifest.targetDuration && !('duration' in i)) {
                  this.trigger('warn', {
                    message: 'defaulting segment duration to the target duration',
                  })
                  i.duration = this.manifest.targetDuration
                }
                if (s) {
                  i.key = s
                }
                i.timeline = f
                if (a) {
                  i.map = a
                }
                i = {}
              },
              comment: function e() {},
              custom: function t() {
                if (e.segment) {
                  i.custom = i.custom || {}
                  i.custom[e.customType] = e.data
                } else {
                  this.manifest.custom = this.manifest.custom || {}
                  this.manifest.custom[e.customType] = e.data
                }
              },
            }[e.type].call(r))
          })
          return t
        }
        var r = t.prototype
        r.push = function e(t) {
          this.lineStream.push(t)
        }
        r.end = function e() {
          this.lineStream.push('\n')
        }
        r.addParser = function e(t) {
          this.parseStream.addParser(t)
        }
        r.addTagMapper = function e(t) {
          this.parseStream.addTagMapper(t)
        }
        return t
      })($o) /*! @name mpd-parser @version 0.8.1 @license Apache-2.0 */
      var nu = function e(t) {
        return !!t && typeof t === 'object'
      }
      var iu = function e() {
        for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
          r[n] = arguments[n]
        }
        return r.reduce(function(t, r) {
          Object.keys(r).forEach(function(n) {
            if (Array.isArray(t[n]) && Array.isArray(r[n])) {
              t[n] = t[n].concat(r[n])
            } else if (nu(t[n]) && nu(r[n])) {
              t[n] = e(t[n], r[n])
            } else {
              t[n] = r[n]
            }
          })
          return t
        }, {})
      }
      var au = function e(t) {
        return Object.keys(t).map(function(e) {
          return t[e]
        })
      }
      var su = function e(t, r) {
        var n = []
        for (var i = t; i < r; i++) {
          n.push(i)
        }
        return n
      }
      var ou = function e(t) {
        return t.reduce(function(e, t) {
          return e.concat(t)
        }, [])
      }
      var uu = function e(t) {
        if (!t.length) {
          return []
        }
        var r = []
        for (var n = 0; n < t.length; n++) {
          r.push(t[n])
        }
        return r
      }
      var lu = function e(t, r) {
        return t.reduce(function(e, t, n) {
          if (t[r]) {
            e.push(n)
          }
          return e
        }, [])
      }
      var fu = {
        INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',
        DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',
        DASH_INVALID_XML: 'DASH_INVALID_XML',
        NO_BASE_URL: 'NO_BASE_URL',
        MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',
        SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',
        UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME',
      }
      function du(e, t) {
        return (t = { exports: {} }), e(t, t.exports), t.exports
      }
      var cu = du(function(e, t) {
        ;(function(t) {
          var r = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/\?#]*\/)*.*?)??(;.*?)?(\?.*?)?(#.*?)?$/
          var n = /^([^\/?#]*)(.*)$/
          var i = /(?:\/|^)\.(?=\/)/g
          var a = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g
          var s = {
            buildAbsoluteURL: function e(t, r, i) {
              i = i || {}
              t = t.trim()
              r = r.trim()
              if (!r) {
                if (!i.alwaysNormalize) {
                  return t
                }
                var a = s.parseURL(t)
                if (!a) {
                  throw new Error('Error trying to parse base URL.')
                }
                a.path = s.normalizePath(a.path)
                return s.buildURLFromParts(a)
              }
              var o = s.parseURL(r)
              if (!o) {
                throw new Error('Error trying to parse relative URL.')
              }
              if (o.scheme) {
                if (!i.alwaysNormalize) {
                  return r
                }
                o.path = s.normalizePath(o.path)
                return s.buildURLFromParts(o)
              }
              var u = s.parseURL(t)
              if (!u) {
                throw new Error('Error trying to parse base URL.')
              }
              if (!u.netLoc && u.path && u.path[0] !== '/') {
                var l = n.exec(u.path)
                u.netLoc = l[1]
                u.path = l[2]
              }
              if (u.netLoc && !u.path) {
                u.path = '/'
              }
              var f = {
                scheme: u.scheme,
                netLoc: o.netLoc,
                path: null,
                params: o.params,
                query: o.query,
                fragment: o.fragment,
              }
              if (!o.netLoc) {
                f.netLoc = u.netLoc
                if (o.path[0] !== '/') {
                  if (!o.path) {
                    f.path = u.path
                    if (!o.params) {
                      f.params = u.params
                      if (!o.query) {
                        f.query = u.query
                      }
                    }
                  } else {
                    var d = u.path
                    var c = d.substring(0, d.lastIndexOf('/') + 1) + o.path
                    f.path = s.normalizePath(c)
                  }
                }
              }
              if (f.path === null) {
                f.path = i.alwaysNormalize ? s.normalizePath(o.path) : o.path
              }
              return s.buildURLFromParts(f)
            },
            parseURL: function e(t) {
              var n = r.exec(t)
              if (!n) {
                return null
              }
              return {
                scheme: n[1] || '',
                netLoc: n[2] || '',
                path: n[3] || '',
                params: n[4] || '',
                query: n[5] || '',
                fragment: n[6] || '',
              }
            },
            normalizePath: function e(t) {
              t = t
                .split('')
                .reverse()
                .join('')
                .replace(i, '')
              while (t.length !== (t = t.replace(a, '')).length) {}
              return t
                .split('')
                .reverse()
                .join('')
            },
            buildURLFromParts: function e(t) {
              return t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment
            },
          }
          e.exports = s
        })()
      })
      var hu = function t(r, n) {
        if (/^[a-z]+:/i.test(n)) {
          return n
        }
        if (!/\/\//i.test(r)) {
          r = cu.buildAbsoluteURL(e.location.href, r)
        }
        return cu.buildAbsoluteURL(r, n)
      }
      var pu = function e(t) {
        var r = t.baseUrl,
          n = r === void 0 ? '' : r,
          i = t.source,
          a = i === void 0 ? '' : i,
          s = t.range,
          o = s === void 0 ? '' : s,
          u = t.indexRange,
          l = u === void 0 ? '' : u
        var f = { uri: a, resolvedUri: hu(n || '', a) }
        if (o || l) {
          var d = o ? o : l
          var c = d.split('-')
          var h = parseInt(c[0], 10)
          var p = parseInt(c[1], 10)
          f.byterange = { length: p - h + 1, offset: h }
        }
        return f
      }
      var vu = function e(t) {
        var r = t.offset + t.length - 1
        return t.offset + '-' + r
      }
      var gu = {
        static: function e(t) {
          var r = t.duration,
            n = t.timescale,
            i = n === void 0 ? 1 : n,
            a = t.sourceDuration
          return { start: 0, end: Math.ceil(a / (r / i)) }
        },
        dynamic: function e(t) {
          var r = t.NOW,
            n = t.clientOffset,
            i = t.availabilityStartTime,
            a = t.timescale,
            s = a === void 0 ? 1 : a,
            o = t.duration,
            u = t.start,
            l = u === void 0 ? 0 : u,
            f = t.minimumUpdatePeriod,
            d = f === void 0 ? 0 : f,
            c = t.timeShiftBufferDepth,
            h = c === void 0 ? Infinity : c
          var p = (r + n) / 1e3
          var v = i + l
          var g = p + d
          var m = g - v
          var y = Math.ceil((m * s) / o)
          var _ = Math.floor(((p - v - h) * s) / o)
          var T = Math.floor(((p - v) * s) / o)
          return { start: Math.max(0, _), end: Math.min(y, T) }
        },
      }
      var mu = function e(t) {
        return function(e, r) {
          var n = t.duration,
            i = t.timescale,
            a = i === void 0 ? 1 : i,
            s = t.periodIndex,
            o = t.startNumber,
            u = o === void 0 ? 1 : o
          return { number: u + e, duration: n / a, timeline: s, time: r * n }
        }
      }
      var yu = function e(t) {
        var r = t.type,
          n = r === void 0 ? 'static' : r,
          i = t.duration,
          a = t.timescale,
          s = a === void 0 ? 1 : a,
          o = t.sourceDuration
        var u = gu[n](t),
          l = u.start,
          f = u.end
        var d = su(l, f).map(mu(t))
        if (n === 'static') {
          var c = d.length - 1
          d[c].duration = o - (i / s) * c
        }
        return d
      }
      var _u = function e(t) {
        var r = t.baseUrl,
          n = t.initialization,
          i = n === void 0 ? {} : n,
          a = t.sourceDuration,
          s = t.timescale,
          o = s === void 0 ? 1 : s,
          u = t.indexRange,
          l = u === void 0 ? '' : u,
          f = t.duration
        if (!r) {
          throw new Error(fu.NO_BASE_URL)
        }
        var d = pu({ baseUrl: r, source: i.sourceURL, range: i.range })
        var c = pu({ baseUrl: r, source: r, indexRange: l })
        c.map = d
        if (f) {
          var h = yu(t)
          if (h.length) {
            c.duration = h[0].duration
            c.timeline = h[0].timeline
          }
        } else if (a) {
          c.duration = a / o
          c.timeline = 0
        }
        c.number = 0
        return [c]
      }
      var Tu = function e(t, r, n) {
        var i = t.sidx.map ? t.sidx.map : null
        var a = t.sidx.duration
        var s = t.timeline || 0
        var o = t.sidx.byterange
        var u = o.offset + o.length
        var l = r.timescale
        var f = r.references.filter(function(e) {
          return e.referenceType !== 1
        })
        var d = []
        var c = u + r.firstOffset
        for (var h = 0; h < f.length; h++) {
          var p = r.references[h]
          var v = p.referencedSize
          var g = p.subsegmentDuration
          var m = c + v - 1
          var y = c + '-' + m
          var _ = {
            baseUrl: n,
            timescale: l,
            timeline: s,
            periodIndex: s,
            duration: g,
            sourceDuration: a,
            indexRange: y,
          }
          var T = _u(_)[0]
          if (i) {
            T.map = i
          }
          d.push(T)
          c += v
        }
        t.segments = d
        return t
      }
      var Eu = function e(t) {
        var r = au(
          t.reduce(function(e, t) {
            var r = t.attributes.id + (t.attributes.lang || '')
            if (e[r]) {
              var n
              if (t.segments[0]) {
                t.segments[0].discontinuity = true
              }
              ;(n = e[r].segments).push.apply(n, t.segments)
              if (t.attributes.contentProtection) {
                e[r].attributes.contentProtection = t.attributes.contentProtection
              }
            } else {
              e[r] = t
            }
            return e
          }, {})
        )
        return r.map(function(e) {
          e.discontinuityStarts = lu(e.segments, 'discontinuity')
          return e
        })
      }
      var bu = function e(t, r) {
        if (r === void 0) {
          r = {}
        }
        if (!Object.keys(r).length) {
          return t
        }
        for (var n in t) {
          var i = t[n]
          if (!i.sidx) {
            continue
          }
          var a = i.sidx.uri + '-' + vu(i.sidx.byterange)
          var s = r[a] && r[a].sidx
          if (i.sidx && s) {
            Tu(i, s, i.sidx.resolvedUri)
          }
        }
        return t
      }
      var Su = function e(t) {
        var r
        var n = t.attributes,
          i = t.segments,
          a = t.sidx
        var s = {
          attributes: ((r = { NAME: n.id, BANDWIDTH: n.bandwidth, CODECS: n.codecs }),
          (r['PROGRAM-ID'] = 1),
          r),
          uri: '',
          endList: (n.type || 'static') === 'static',
          timeline: n.periodIndex,
          resolvedUri: '',
          targetDuration: n.duration,
          segments: i,
          mediaSequence: i.length ? i[0].number : 1,
        }
        if (n.contentProtection) {
          s.contentProtection = n.contentProtection
        }
        if (a) {
          s.sidx = a
        }
        return s
      }
      var wu = function e(t) {
        var r
        var n = t.attributes,
          i = t.segments
        if (typeof i === 'undefined') {
          i = [
            {
              uri: n.baseUrl,
              timeline: n.periodIndex,
              resolvedUri: n.baseUrl || '',
              duration: n.sourceDuration,
              number: 0,
            },
          ]
          n.duration = n.sourceDuration
        }
        return {
          attributes: ((r = { NAME: n.id, BANDWIDTH: n.bandwidth }), (r['PROGRAM-ID'] = 1), r),
          uri: '',
          endList: (n.type || 'static') === 'static',
          timeline: n.periodIndex,
          resolvedUri: n.baseUrl || '',
          targetDuration: n.duration,
          segments: i,
          mediaSequence: i.length ? i[0].number : 1,
        }
      }
      var Au = function e(t, r) {
        if (r === void 0) {
          r = {}
        }
        var n
        var i = t.reduce(function(e, t) {
          var i = (t.attributes.role && t.attributes.role.value) || ''
          var a = t.attributes.lang || ''
          var s = 'main'
          if (a) {
            var o = i ? ' (' + i + ')' : ''
            s = '' + t.attributes.lang + o
          }
          if (e[s] && e[s].playlists[0].attributes.BANDWIDTH > t.attributes.bandwidth) {
            return e
          }
          e[s] = {
            language: a,
            autoselect: true,
            default: i === 'main',
            playlists: bu([Su(t)], r),
            uri: '',
          }
          if (typeof n === 'undefined' && i === 'main') {
            n = t
            n['default'] = true
          }
          return e
        }, {})
        if (!n) {
          var a = Object.keys(i)[0]
          i[a]['default'] = true
        }
        return i
      }
      var Iu = function e(t, r) {
        if (r === void 0) {
          r = {}
        }
        return t.reduce(function(e, t) {
          var n = t.attributes.lang || 'text'
          if (e[n]) {
            return e
          }
          e[n] = {
            language: n,
            default: false,
            autoselect: false,
            playlists: bu([wu(t)], r),
            uri: '',
          }
          return e
        }, {})
      }
      var Cu = function e(t) {
        var r
        var n = t.attributes,
          i = t.segments,
          a = t.sidx
        var s = {
          attributes: ((r = {
            NAME: n.id,
            AUDIO: 'audio',
            SUBTITLES: 'subs',
            RESOLUTION: { width: n.width, height: n.height },
            CODECS: n.codecs,
            BANDWIDTH: n.bandwidth,
          }),
          (r['PROGRAM-ID'] = 1),
          r),
          uri: '',
          endList: (n.type || 'static') === 'static',
          timeline: n.periodIndex,
          resolvedUri: '',
          targetDuration: n.duration,
          segments: i,
          mediaSequence: i.length ? i[0].number : 1,
        }
        if (n.contentProtection) {
          s.contentProtection = n.contentProtection
        }
        if (a) {
          s.sidx = a
        }
        return s
      }
      var Ru = function e(t, r) {
        var n
        if (r === void 0) {
          r = {}
        }
        if (!t.length) {
          return {}
        }
        var i = t[0].attributes,
          a = i.sourceDuration,
          s = i.minimumUpdatePeriod,
          o = s === void 0 ? 0 : s
        var u = function e(t) {
          var r = t.attributes
          return r.mimeType === 'video/mp4' || r.contentType === 'video'
        }
        var l = function e(t) {
          var r = t.attributes
          return r.mimeType === 'audio/mp4' || r.contentType === 'audio'
        }
        var f = function e(t) {
          var r = t.attributes
          return r.mimeType === 'text/vtt' || r.contentType === 'text'
        }
        var d = Eu(t.filter(u)).map(Cu)
        var c = Eu(t.filter(l))
        var h = t.filter(f)
        var p = {
          allowCache: true,
          discontinuityStarts: [],
          segments: [],
          endList: true,
          mediaGroups: ((n = { AUDIO: {}, VIDEO: {} }),
          (n['CLOSED-CAPTIONS'] = {}),
          (n.SUBTITLES = {}),
          n),
          uri: '',
          duration: a,
          playlists: bu(d, r),
          minimumUpdatePeriod: o * 1e3,
        }
        if (c.length) {
          p.mediaGroups.AUDIO.audio = Au(c, r)
        }
        if (h.length) {
          p.mediaGroups.SUBTITLES.subs = Iu(h, r)
        }
        return p
      }
      var Du = function e(t, r, n) {
        var i = t.NOW,
          a = t.clientOffset,
          s = t.availabilityStartTime,
          o = t.timescale,
          u = o === void 0 ? 1 : o,
          l = t.start,
          f = l === void 0 ? 0 : l,
          d = t.minimumUpdatePeriod,
          c = d === void 0 ? 0 : d
        var h = (i + a) / 1e3
        var p = s + f
        var v = h + c
        var g = v - p
        return Math.ceil((g * u - r) / n)
      }
      var Ou = function e(t, r) {
        var n = t.type,
          i = n === void 0 ? 'static' : n,
          a = t.minimumUpdatePeriod,
          s = a === void 0 ? 0 : a,
          o = t.media,
          u = o === void 0 ? '' : o,
          l = t.sourceDuration,
          f = t.timescale,
          d = f === void 0 ? 1 : f,
          c = t.startNumber,
          h = c === void 0 ? 1 : c,
          p = t.periodIndex
        var v = []
        var g = -1
        for (var m = 0; m < r.length; m++) {
          var y = r[m]
          var _ = y.d
          var T = y.r || 0
          var E = y.t || 0
          if (g < 0) {
            g = E
          }
          if (E && E > g) {
            g = E
          }
          var b = void 0
          if (T < 0) {
            var S = m + 1
            if (S === r.length) {
              if (i === 'dynamic' && s > 0 && u.indexOf('$Number$') > 0) {
                b = Du(t, g, _)
              } else {
                b = (l * d - g) / _
              }
            } else {
              b = (r[S].t - g) / _
            }
          } else {
            b = T + 1
          }
          var w = h + v.length + b
          var A = h + v.length
          while (A < w) {
            v.push({ number: A, duration: _ / d, time: g, timeline: p })
            g += _
            A++
          }
        }
        return v
      }
      var Mu = /\$([A-z]*)(?:(%0)([0-9]+)d)?\$/g
      var ku = function e(t) {
        return function(e, r, n, i) {
          if (e === '$$') {
            return '$'
          }
          if (typeof t[r] === 'undefined') {
            return e
          }
          var a = '' + t[r]
          if (r === 'RepresentationID') {
            return a
          }
          if (!n) {
            i = 1
          } else {
            i = parseInt(i, 10)
          }
          if (a.length >= i) {
            return a
          }
          return '' + new Array(i - a.length + 1).join('0') + a
        }
      }
      var Pu = function e(t, r) {
        return t.replace(Mu, ku(r))
      }
      var Nu = function e(t, r) {
        if (!t.duration && !r) {
          return [
            {
              number: t.startNumber || 1,
              duration: t.sourceDuration,
              time: 0,
              timeline: t.periodIndex,
            },
          ]
        }
        if (t.duration) {
          return yu(t)
        }
        return Ou(t, r)
      }
      var Lu = function e(t, r) {
        var n = { RepresentationID: t.id, Bandwidth: t.bandwidth || 0 }
        var i = t.initialization,
          a = i === void 0 ? { sourceURL: '', range: '' } : i
        var s = pu({ baseUrl: t.baseUrl, source: Pu(a.sourceURL, n), range: a.range })
        var o = Nu(t, r)
        return o.map(function(e) {
          n.Number = e.number
          n.Time = e.time
          var r = Pu(t.media || '', n)
          return {
            uri: r,
            timeline: e.timeline,
            duration: e.duration,
            resolvedUri: hu(t.baseUrl || '', r),
            map: s,
            number: e.number,
          }
        })
      }
      var xu = function e(t, r) {
        var n = t.baseUrl,
          i = t.initialization,
          a = i === void 0 ? {} : i
        var s = pu({ baseUrl: n, source: a.sourceURL, range: a.range })
        var o = pu({ baseUrl: n, source: r.media, range: r.mediaRange })
        o.map = s
        return o
      }
      var Fu = function e(t, r) {
        var n = t.duration,
          i = t.segmentUrls,
          a = i === void 0 ? [] : i
        if ((!n && !r) || (n && r)) {
          throw new Error(fu.SEGMENT_TIME_UNSPECIFIED)
        }
        var s = a.map(function(e) {
          return xu(t, e)
        })
        var o
        if (n) {
          o = yu(t)
        }
        if (r) {
          o = Ou(t, r)
        }
        var u = o
          .map(function(e, t) {
            if (s[t]) {
              var r = s[t]
              r.timeline = e.timeline
              r.duration = e.duration
              r.number = e.number
              return r
            }
          })
          .filter(function(e) {
            return e
          })
        return u
      }
      var Uu = function e(t) {
        var r = t.attributes,
          n = t.segmentInfo
        var i
        var a
        if (n.template) {
          a = Lu
          i = iu(r, n.template)
        } else if (n.base) {
          a = _u
          i = iu(r, n.base)
        } else if (n.list) {
          a = Fu
          i = iu(r, n.list)
        }
        var s = { attributes: r }
        if (!a) {
          return s
        }
        var o = a(i, n.timeline)
        if (i.duration) {
          var u = i,
            l = u.duration,
            f = u.timescale,
            d = f === void 0 ? 1 : f
          i.duration = l / d
        } else if (o.length) {
          i.duration = o.reduce(function(e, t) {
            return Math.max(e, Math.ceil(t.duration))
          }, 0)
        } else {
          i.duration = 0
        }
        s.attributes = i
        s.segments = o
        if (n.base && i.indexRange) {
          s.sidx = o[0]
          s.segments = []
        }
        return s
      }
      var Bu = function e(t) {
        return t.map(Uu)
      }
      var ju = function e(t, r) {
        return uu(t.childNodes).filter(function(e) {
          var t = e.tagName
          return t === r
        })
      }
      var Gu = function e(t) {
        return t.textContent.trim()
      }
      var qu = function e(t) {
        var r = 365 * 24 * 60 * 60
        var n = 30 * 24 * 60 * 60
        var i = 24 * 60 * 60
        var a = 60 * 60
        var s = 60
        var o = /P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)D)?(?:T(?:(\d*)H)?(?:(\d*)M)?(?:([\d.]*)S)?)?/
        var u = o.exec(t)
        if (!u) {
          return 0
        }
        var l = u.slice(1),
          f = l[0],
          d = l[1],
          c = l[2],
          h = l[3],
          p = l[4],
          v = l[5]
        return (
          parseFloat(f || 0) * r +
          parseFloat(d || 0) * n +
          parseFloat(c || 0) * i +
          parseFloat(h || 0) * a +
          parseFloat(p || 0) * s +
          parseFloat(v || 0)
        )
      }
      var Hu = function e(t) {
        var r = /^\d+-\d+-\d+T\d+:\d+:\d+(\.\d+)?$/
        if (r.test(t)) {
          t += 'Z'
        }
        return Date.parse(t)
      }
      var Vu = {
        mediaPresentationDuration: function e(t) {
          return qu(t)
        },
        availabilityStartTime: function e(t) {
          return Hu(t) / 1e3
        },
        minimumUpdatePeriod: function e(t) {
          return qu(t)
        },
        timeShiftBufferDepth: function e(t) {
          return qu(t)
        },
        start: function e(t) {
          return qu(t)
        },
        width: function e(t) {
          return parseInt(t, 10)
        },
        height: function e(t) {
          return parseInt(t, 10)
        },
        bandwidth: function e(t) {
          return parseInt(t, 10)
        },
        startNumber: function e(t) {
          return parseInt(t, 10)
        },
        timescale: function e(t) {
          return parseInt(t, 10)
        },
        duration: function e(t) {
          var r = parseInt(t, 10)
          if (isNaN(r)) {
            return qu(t)
          }
          return r
        },
        d: function e(t) {
          return parseInt(t, 10)
        },
        t: function e(t) {
          return parseInt(t, 10)
        },
        r: function e(t) {
          return parseInt(t, 10)
        },
        DEFAULT: function e(t) {
          return t
        },
      }
      var Ku = function e(t) {
        if (!(t && t.attributes)) {
          return {}
        }
        return uu(t.attributes).reduce(function(e, t) {
          var r = Vu[t.name] || Vu.DEFAULT
          e[t.name] = r(t.value)
          return e
        }, {})
      }
      function Yu(t) {
        var r = e.atob(t)
        var n = new Uint8Array(r.length)
        for (var i = 0; i < r.length; i++) {
          n[i] = r.charCodeAt(i)
        }
        return n
      }
      var Wu = {
        'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',
        'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',
        'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',
        'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime',
      }
      var zu = function e(t, r) {
        if (!r.length) {
          return t
        }
        return ou(
          t.map(function(e) {
            return r.map(function(t) {
              return hu(e, Gu(t))
            })
          })
        )
      }
      var Xu = function e(t) {
        var r = ju(t, 'SegmentTemplate')[0]
        var n = ju(t, 'SegmentList')[0]
        var i =
          n &&
          ju(n, 'SegmentURL').map(function(e) {
            return iu({ tag: 'SegmentURL' }, Ku(e))
          })
        var a = ju(t, 'SegmentBase')[0]
        var s = n || r
        var o = s && ju(s, 'SegmentTimeline')[0]
        var u = n || a || r
        var l = u && ju(u, 'Initialization')[0]
        var f = r && Ku(r)
        if (f && l) {
          f.initialization = l && Ku(l)
        } else if (f && f.initialization) {
          f.initialization = { sourceURL: f.initialization }
        }
        var d = {
          template: f,
          timeline:
            o &&
            ju(o, 'S').map(function(e) {
              return Ku(e)
            }),
          list: n && iu(Ku(n), { segmentUrls: i, initialization: Ku(l) }),
          base: a && iu(Ku(a), { initialization: Ku(l) }),
        }
        Object.keys(d).forEach(function(e) {
          if (!d[e]) {
            delete d[e]
          }
        })
        return d
      }
      var $u = function e(t, r, n) {
        return function(e) {
          var i = ju(e, 'BaseURL')
          var a = zu(r, i)
          var s = iu(t, Ku(e))
          var o = Xu(e)
          return a.map(function(e) {
            return { segmentInfo: iu(n, o), attributes: iu(s, { baseUrl: e }) }
          })
        }
      }
      var Qu = function e(t) {
        return t.reduce(function(e, t) {
          var r = Ku(t)
          var n = Wu[r.schemeIdUri]
          if (n) {
            e[n] = { attributes: r }
            var i = ju(t, 'cenc:pssh')[0]
            if (i) {
              var a = Gu(i)
              var s = a && Yu(a)
              e[n].pssh = s
            }
          }
          return e
        }, {})
      }
      var Ju = function e(t, r, n) {
        return function(e) {
          var i = Ku(e)
          var a = zu(r, ju(e, 'BaseURL'))
          var s = ju(e, 'Role')[0]
          var o = { role: Ku(s) }
          var u = iu(t, i, o)
          var l = Qu(ju(e, 'ContentProtection'))
          if (Object.keys(l).length) {
            u = iu(u, { contentProtection: l })
          }
          var f = Xu(e)
          var d = ju(e, 'Representation')
          var c = iu(n, f)
          return ou(d.map($u(u, a, c)))
        }
      }
      var Zu = function t(r, n) {
        return function(t, i) {
          var a = zu(n, ju(t, 'BaseURL'))
          var s = Ku(t)
          var o = parseInt(s.id, 10)
          var u = e.isNaN(o) ? i : o
          var l = iu(r, { periodIndex: u })
          var f = ju(t, 'AdaptationSet')
          var d = Xu(t)
          return ou(f.map(Ju(l, a, d)))
        }
      }
      var el = function e(t, r) {
        if (r === void 0) {
          r = {}
        }
        var n = r,
          i = n.manifestUri,
          a = i === void 0 ? '' : i,
          s = n.NOW,
          o = s === void 0 ? Date.now() : s,
          u = n.clientOffset,
          l = u === void 0 ? 0 : u
        var f = ju(t, 'Period')
        if (!f.length) {
          throw new Error(fu.INVALID_NUMBER_OF_PERIOD)
        }
        var d = Ku(t)
        var c = zu([a], ju(t, 'BaseURL'))
        d.sourceDuration = d.mediaPresentationDuration || 0
        d.NOW = o
        d.clientOffset = l
        return ou(f.map(Zu(d, c)))
      }
      var tl = function t(r) {
        if (r === '') {
          throw new Error(fu.DASH_EMPTY_MANIFEST)
        }
        var n = new e.DOMParser()
        var i = n.parseFromString(r, 'application/xml')
        var a = i && i.documentElement.tagName === 'MPD' ? i.documentElement : null
        if (!a || (a && a.getElementsByTagName('parsererror').length > 0)) {
          throw new Error(fu.DASH_INVALID_XML)
        }
        return a
      }
      var rl = function e(t) {
        var r = ju(t, 'UTCTiming')[0]
        if (!r) {
          return null
        }
        var n = Ku(r)
        switch (n.schemeIdUri) {
          case 'urn:mpeg:dash:utc:http-head:2014':
          case 'urn:mpeg:dash:utc:http-head:2012':
            n.method = 'HEAD'
            break
          case 'urn:mpeg:dash:utc:http-xsdate:2014':
          case 'urn:mpeg:dash:utc:http-iso:2014':
          case 'urn:mpeg:dash:utc:http-xsdate:2012':
          case 'urn:mpeg:dash:utc:http-iso:2012':
            n.method = 'GET'
            break
          case 'urn:mpeg:dash:utc:direct:2014':
          case 'urn:mpeg:dash:utc:direct:2012':
            n.method = 'DIRECT'
            n.value = Date.parse(n.value)
            break
          case 'urn:mpeg:dash:utc:http-ntp:2014':
          case 'urn:mpeg:dash:utc:ntp:2014':
          case 'urn:mpeg:dash:utc:sntp:2014':
          default:
            throw new Error(fu.UNSUPPORTED_UTC_TIMING_SCHEME)
        }
        return n
      }
      var nl = function e(t, r) {
        if (r === void 0) {
          r = {}
        }
        return Ru(Bu(el(tl(t), r)), r.sidxMapping)
      }
      var il = function e(t) {
        return rl(tl(t))
      }
      var al = function e(t) {
        return t >>> 0
      }
      var sl = function e(t) {
        return ('00' + t.toString(16)).slice(-2)
      }
      var ol = { toUnsigned: al, toHexString: sl }
      var ul = ol.toUnsigned
      var ll = ol.toHexString
      var fl, dl, cl, hl, pl, vl
      fl = function e(t, r) {
        var n = [],
          i,
          a,
          s,
          o,
          u
        if (!r.length) {
          return null
        }
        for (i = 0; i < t.byteLength; ) {
          a = ul((t[i] << 24) | (t[i + 1] << 16) | (t[i + 2] << 8) | t[i + 3])
          s = dl(t.subarray(i + 4, i + 8))
          o = a > 1 ? i + a : t.byteLength
          if (s === r[0]) {
            if (r.length === 1) {
              n.push(t.subarray(i + 8, o))
            } else {
              u = fl(t.subarray(i + 8, o), r.slice(1))
              if (u.length) {
                n = n.concat(u)
              }
            }
          }
          i = o
        }
        return n
      }
      dl = function e(t) {
        var r = ''
        r += String.fromCharCode(t[0])
        r += String.fromCharCode(t[1])
        r += String.fromCharCode(t[2])
        r += String.fromCharCode(t[3])
        return r
      }
      cl = function e(t) {
        var r = {},
          n = fl(t, ['moov', 'trak'])
        return n.reduce(function(e, t) {
          var r, n, i, a, s
          r = fl(t, ['tkhd'])[0]
          if (!r) {
            return null
          }
          n = r[0]
          i = n === 0 ? 12 : 20
          a = ul((r[i] << 24) | (r[i + 1] << 16) | (r[i + 2] << 8) | r[i + 3])
          s = fl(t, ['mdia', 'mdhd'])[0]
          if (!s) {
            return null
          }
          n = s[0]
          i = n === 0 ? 12 : 20
          e[a] = ul((s[i] << 24) | (s[i + 1] << 16) | (s[i + 2] << 8) | s[i + 3])
          return e
        }, r)
      }
      hl = function e(t, r) {
        var n, i, a
        n = fl(r, ['moof', 'traf'])
        i = [].concat.apply(
          [],
          n.map(function(e) {
            return fl(e, ['tfhd']).map(function(r) {
              var n, i, a
              n = ul((r[4] << 24) | (r[5] << 16) | (r[6] << 8) | r[7])
              i = t[n] || 9e4
              a = fl(e, ['tfdt']).map(function(e) {
                var t, r
                t = e[0]
                r = ul((e[4] << 24) | (e[5] << 16) | (e[6] << 8) | e[7])
                if (t === 1) {
                  r *= Math.pow(2, 32)
                  r += ul((e[8] << 24) | (e[9] << 16) | (e[10] << 8) | e[11])
                }
                return r
              })[0]
              a = a || Infinity
              return a / i
            })
          })
        )
        a = Math.min.apply(null, i)
        return isFinite(a) ? a : 0
      }
      pl = function e(t) {
        var r = fl(t, ['moov', 'trak'])
        var n = []
        r.forEach(function(e) {
          var t = fl(e, ['mdia', 'hdlr'])
          var r = fl(e, ['tkhd'])
          t.forEach(function(e, t) {
            var i = dl(e.subarray(8, 12))
            var a = r[t]
            var s
            var o
            var u
            if (i === 'vide') {
              s = new DataView(a.buffer, a.byteOffset, a.byteLength)
              o = s.getUint8(0)
              u = o === 0 ? s.getUint32(12) : s.getUint32(20)
              n.push(u)
            }
          })
        })
        return n
      }
      vl = function e(t) {
        var r = fl(t, ['moov', 'trak'])
        var n = []
        r.forEach(function(e) {
          var t = {}
          var r = fl(e, ['tkhd'])[0]
          var i, a
          if (r) {
            i = new DataView(r.buffer, r.byteOffset, r.byteLength)
            a = i.getUint8(0)
            t.id = a === 0 ? i.getUint32(12) : i.getUint32(20)
          }
          var s = fl(e, ['mdia', 'hdlr'])[0]
          if (s) {
            var o = dl(s.subarray(8, 12))
            if (o === 'vide') {
              t.type = 'video'
            } else if (o === 'soun') {
              t.type = 'audio'
            } else {
              t.type = o
            }
          }
          var u = fl(e, ['mdia', 'minf', 'stbl', 'stsd'])[0]
          if (u) {
            var l = u.subarray(8)
            t.codec = dl(l.subarray(4, 8))
            var f = fl(l, [t.codec])[0]
            var d, c
            if (f) {
              if (/^[a-z]vc[1-9]$/i.test(t.codec)) {
                d = f.subarray(78)
                c = dl(d.subarray(4, 8))
                if (c === 'avcC' && d.length > 11) {
                  t.codec += '.'
                  t.codec += ll(d[9])
                  t.codec += ll(d[10])
                  t.codec += ll(d[11])
                } else {
                  t.codec = 'avc1.4d400d'
                }
              } else if (/^mp4[a,v]$/i.test(t.codec)) {
                d = f.subarray(28)
                c = dl(d.subarray(4, 8))
                if (c === 'esds' && d.length > 20 && d[19] !== 0) {
                  t.codec += '.' + ll(d[19])
                  t.codec += '.' + ll((d[20] >>> 2) & 63).replace(/^0/, '')
                } else {
                  t.codec = 'mp4a.40.2'
                }
              }
            }
          }
          var h = fl(e, ['mdia', 'mdhd'])[0]
          if (h && r) {
            var p = a === 0 ? 12 : 20
            t.timescale = ul((h[p] << 24) | (h[p + 1] << 16) | (h[p + 2] << 8) | h[p + 3])
          }
          n.push(t)
        })
        return n
      }
      var gl = {
        findBox: fl,
        parseType: dl,
        timescale: cl,
        startTime: hl,
        videoTrackIds: pl,
        tracks: vl,
      }
      var ml,
        yl,
        _l = gl.parseType,
        Tl = function e(t) {
          return new Date(t * 1e3 - 20828448e5)
        },
        El = function e(t) {
          return {
            isLeading: (t[0] & 12) >>> 2,
            dependsOn: t[0] & 3,
            isDependedOn: (t[1] & 192) >>> 6,
            hasRedundancy: (t[1] & 48) >>> 4,
            paddingValue: (t[1] & 14) >>> 1,
            isNonSyncSample: t[1] & 1,
            degradationPriority: (t[2] << 8) | t[3],
          }
        },
        bl = function e(t) {
          var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
            n = [],
            i,
            a
          for (i = 0; i + 4 < t.length; i += a) {
            a = r.getUint32(i)
            i += 4
            if (a <= 0) {
              n.push("<span style='color:red;'>MALFORMED DATA</span>")
              continue
            }
            switch (t[i] & 31) {
              case 1:
                n.push('slice_layer_without_partitioning_rbsp')
                break
              case 5:
                n.push('slice_layer_without_partitioning_rbsp_idr')
                break
              case 6:
                n.push('sei_rbsp')
                break
              case 7:
                n.push('seq_parameter_set_rbsp')
                break
              case 8:
                n.push('pic_parameter_set_rbsp')
                break
              case 9:
                n.push('access_unit_delimiter_rbsp')
                break
              default:
                n.push(('UNKNOWN NAL - ' + t[i]) & 31)
                break
            }
          }
          return n
        },
        Sl = {
          avc1: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength)
            return {
              dataReferenceIndex: r.getUint16(6),
              width: r.getUint16(24),
              height: r.getUint16(26),
              horizresolution: r.getUint16(28) + r.getUint16(30) / 16,
              vertresolution: r.getUint16(32) + r.getUint16(34) / 16,
              frameCount: r.getUint16(40),
              depth: r.getUint16(74),
              config: ml(t.subarray(78, t.byteLength)),
            }
          },
          avcC: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
              n = {
                configurationVersion: t[0],
                avcProfileIndication: t[1],
                profileCompatibility: t[2],
                avcLevelIndication: t[3],
                lengthSizeMinusOne: t[4] & 3,
                sps: [],
                pps: [],
              },
              i = t[5] & 31,
              a,
              s,
              o,
              u
            o = 6
            for (u = 0; u < i; u++) {
              s = r.getUint16(o)
              o += 2
              n.sps.push(new Uint8Array(t.subarray(o, o + s)))
              o += s
            }
            a = t[o]
            o++
            for (u = 0; u < a; u++) {
              s = r.getUint16(o)
              o += 2
              n.pps.push(new Uint8Array(t.subarray(o, o + s)))
              o += s
            }
            return n
          },
          btrt: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength)
            return {
              bufferSizeDB: r.getUint32(0),
              maxBitrate: r.getUint32(4),
              avgBitrate: r.getUint32(8),
            }
          },
          esds: function e(t) {
            return {
              version: t[0],
              flags: new Uint8Array(t.subarray(1, 4)),
              esId: (t[6] << 8) | t[7],
              streamPriority: t[8] & 31,
              decoderConfig: {
                objectProfileIndication: t[11],
                streamType: (t[12] >>> 2) & 63,
                bufferSize: (t[13] << 16) | (t[14] << 8) | t[15],
                maxBitrate: (t[16] << 24) | (t[17] << 16) | (t[18] << 8) | t[19],
                avgBitrate: (t[20] << 24) | (t[21] << 16) | (t[22] << 8) | t[23],
                decoderConfigDescriptor: {
                  tag: t[24],
                  length: t[25],
                  audioObjectType: (t[26] >>> 3) & 31,
                  samplingFrequencyIndex: ((t[26] & 7) << 1) | ((t[27] >>> 7) & 1),
                  channelConfiguration: (t[27] >>> 3) & 15,
                },
              },
            }
          },
          ftyp: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
              n = {
                majorBrand: _l(t.subarray(0, 4)),
                minorVersion: r.getUint32(4),
                compatibleBrands: [],
              },
              i = 8
            while (i < t.byteLength) {
              n.compatibleBrands.push(_l(t.subarray(i, i + 4)))
              i += 4
            }
            return n
          },
          dinf: function e(t) {
            return { boxes: ml(t) }
          },
          dref: function e(t) {
            return {
              version: t[0],
              flags: new Uint8Array(t.subarray(1, 4)),
              dataReferences: ml(t.subarray(8)),
            }
          },
          hdlr: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
              n = {
                version: r.getUint8(0),
                flags: new Uint8Array(t.subarray(1, 4)),
                handlerType: _l(t.subarray(8, 12)),
                name: '',
              },
              i = 8
            for (i = 24; i < t.byteLength; i++) {
              if (t[i] === 0) {
                i++
                break
              }
              n.name += String.fromCharCode(t[i])
            }
            n.name = decodeURIComponent(escape(n.name))
            return n
          },
          mdat: function e(t) {
            return { byteLength: t.byteLength, nals: bl(t) }
          },
          mdhd: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
              n = 4,
              i,
              a = { version: r.getUint8(0), flags: new Uint8Array(t.subarray(1, 4)), language: '' }
            if (a.version === 1) {
              n += 4
              a.creationTime = Tl(r.getUint32(n))
              n += 8
              a.modificationTime = Tl(r.getUint32(n))
              n += 4
              a.timescale = r.getUint32(n)
              n += 8
              a.duration = r.getUint32(n)
            } else {
              a.creationTime = Tl(r.getUint32(n))
              n += 4
              a.modificationTime = Tl(r.getUint32(n))
              n += 4
              a.timescale = r.getUint32(n)
              n += 4
              a.duration = r.getUint32(n)
            }
            n += 4
            i = r.getUint16(n)
            a.language += String.fromCharCode((i >> 10) + 96)
            a.language += String.fromCharCode(((i & 992) >> 5) + 96)
            a.language += String.fromCharCode((i & 31) + 96)
            return a
          },
          mdia: function e(t) {
            return { boxes: ml(t) }
          },
          mfhd: function e(t) {
            return {
              version: t[0],
              flags: new Uint8Array(t.subarray(1, 4)),
              sequenceNumber: (t[4] << 24) | (t[5] << 16) | (t[6] << 8) | t[7],
            }
          },
          minf: function e(t) {
            return { boxes: ml(t) }
          },
          mp4a: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
              n = {
                dataReferenceIndex: r.getUint16(6),
                channelcount: r.getUint16(16),
                samplesize: r.getUint16(18),
                samplerate: r.getUint16(24) + r.getUint16(26) / 65536,
              }
            if (t.byteLength > 28) {
              n.streamDescriptor = ml(t.subarray(28))[0]
            }
            return n
          },
          moof: function e(t) {
            return { boxes: ml(t) }
          },
          moov: function e(t) {
            return { boxes: ml(t) }
          },
          mvex: function e(t) {
            return { boxes: ml(t) }
          },
          mvhd: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
              n = 4,
              i = { version: r.getUint8(0), flags: new Uint8Array(t.subarray(1, 4)) }
            if (i.version === 1) {
              n += 4
              i.creationTime = Tl(r.getUint32(n))
              n += 8
              i.modificationTime = Tl(r.getUint32(n))
              n += 4
              i.timescale = r.getUint32(n)
              n += 8
              i.duration = r.getUint32(n)
            } else {
              i.creationTime = Tl(r.getUint32(n))
              n += 4
              i.modificationTime = Tl(r.getUint32(n))
              n += 4
              i.timescale = r.getUint32(n)
              n += 4
              i.duration = r.getUint32(n)
            }
            n += 4
            i.rate = r.getUint16(n) + r.getUint16(n + 2) / 16
            n += 4
            i.volume = r.getUint8(n) + r.getUint8(n + 1) / 8
            n += 2
            n += 2
            n += 2 * 4
            i.matrix = new Uint32Array(t.subarray(n, n + 9 * 4))
            n += 9 * 4
            n += 6 * 4
            i.nextTrackId = r.getUint32(n)
            return i
          },
          pdin: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength)
            return {
              version: r.getUint8(0),
              flags: new Uint8Array(t.subarray(1, 4)),
              rate: r.getUint32(4),
              initialDelay: r.getUint32(8),
            }
          },
          sdtp: function e(t) {
            var r = { version: t[0], flags: new Uint8Array(t.subarray(1, 4)), samples: [] },
              n
            for (n = 4; n < t.byteLength; n++) {
              r.samples.push({
                dependsOn: (t[n] & 48) >> 4,
                isDependedOn: (t[n] & 12) >> 2,
                hasRedundancy: t[n] & 3,
              })
            }
            return r
          },
          sidx: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
              n = {
                version: t[0],
                flags: new Uint8Array(t.subarray(1, 4)),
                references: [],
                referenceId: r.getUint32(4),
                timescale: r.getUint32(8),
                earliestPresentationTime: r.getUint32(12),
                firstOffset: r.getUint32(16),
              },
              i = r.getUint16(22),
              a
            for (a = 24; i; a += 12, i--) {
              n.references.push({
                referenceType: (t[a] & 128) >>> 7,
                referencedSize: r.getUint32(a) & 2147483647,
                subsegmentDuration: r.getUint32(a + 4),
                startsWithSap: !!(t[a + 8] & 128),
                sapType: (t[a + 8] & 112) >>> 4,
                sapDeltaTime: r.getUint32(a + 8) & 268435455,
              })
            }
            return n
          },
          smhd: function e(t) {
            return {
              version: t[0],
              flags: new Uint8Array(t.subarray(1, 4)),
              balance: t[4] + t[5] / 256,
            }
          },
          stbl: function e(t) {
            return { boxes: ml(t) }
          },
          stco: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
              n = { version: t[0], flags: new Uint8Array(t.subarray(1, 4)), chunkOffsets: [] },
              i = r.getUint32(4),
              a
            for (a = 8; i; a += 4, i--) {
              n.chunkOffsets.push(r.getUint32(a))
            }
            return n
          },
          stsc: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
              n = r.getUint32(4),
              i = { version: t[0], flags: new Uint8Array(t.subarray(1, 4)), sampleToChunks: [] },
              a
            for (a = 8; n; a += 12, n--) {
              i.sampleToChunks.push({
                firstChunk: r.getUint32(a),
                samplesPerChunk: r.getUint32(a + 4),
                sampleDescriptionIndex: r.getUint32(a + 8),
              })
            }
            return i
          },
          stsd: function e(t) {
            return {
              version: t[0],
              flags: new Uint8Array(t.subarray(1, 4)),
              sampleDescriptions: ml(t.subarray(8)),
            }
          },
          stsz: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
              n = {
                version: t[0],
                flags: new Uint8Array(t.subarray(1, 4)),
                sampleSize: r.getUint32(4),
                entries: [],
              },
              i
            for (i = 12; i < t.byteLength; i += 4) {
              n.entries.push(r.getUint32(i))
            }
            return n
          },
          stts: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
              n = { version: t[0], flags: new Uint8Array(t.subarray(1, 4)), timeToSamples: [] },
              i = r.getUint32(4),
              a
            for (a = 8; i; a += 8, i--) {
              n.timeToSamples.push({ sampleCount: r.getUint32(a), sampleDelta: r.getUint32(a + 4) })
            }
            return n
          },
          styp: function e(t) {
            return Sl.ftyp(t)
          },
          tfdt: function e(t) {
            var r = {
              version: t[0],
              flags: new Uint8Array(t.subarray(1, 4)),
              baseMediaDecodeTime: (t[4] << 24) | (t[5] << 16) | (t[6] << 8) | t[7],
            }
            if (r.version === 1) {
              r.baseMediaDecodeTime *= Math.pow(2, 32)
              r.baseMediaDecodeTime += (t[8] << 24) | (t[9] << 16) | (t[10] << 8) | t[11]
            }
            return r
          },
          tfhd: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
              n = {
                version: t[0],
                flags: new Uint8Array(t.subarray(1, 4)),
                trackId: r.getUint32(4),
              },
              i = n.flags[2] & 1,
              a = n.flags[2] & 2,
              s = n.flags[2] & 8,
              o = n.flags[2] & 16,
              u = n.flags[2] & 32,
              l = n.flags[0] & 65536,
              f = n.flags[0] & 131072,
              d
            d = 8
            if (i) {
              d += 4
              n.baseDataOffset = r.getUint32(12)
              d += 4
            }
            if (a) {
              n.sampleDescriptionIndex = r.getUint32(d)
              d += 4
            }
            if (s) {
              n.defaultSampleDuration = r.getUint32(d)
              d += 4
            }
            if (o) {
              n.defaultSampleSize = r.getUint32(d)
              d += 4
            }
            if (u) {
              n.defaultSampleFlags = r.getUint32(d)
            }
            if (l) {
              n.durationIsEmpty = true
            }
            if (!i && f) {
              n.baseDataOffsetIsMoof = true
            }
            return n
          },
          tkhd: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
              n = 4,
              i = { version: r.getUint8(0), flags: new Uint8Array(t.subarray(1, 4)) }
            if (i.version === 1) {
              n += 4
              i.creationTime = Tl(r.getUint32(n))
              n += 8
              i.modificationTime = Tl(r.getUint32(n))
              n += 4
              i.trackId = r.getUint32(n)
              n += 4
              n += 8
              i.duration = r.getUint32(n)
            } else {
              i.creationTime = Tl(r.getUint32(n))
              n += 4
              i.modificationTime = Tl(r.getUint32(n))
              n += 4
              i.trackId = r.getUint32(n)
              n += 4
              n += 4
              i.duration = r.getUint32(n)
            }
            n += 4
            n += 2 * 4
            i.layer = r.getUint16(n)
            n += 2
            i.alternateGroup = r.getUint16(n)
            n += 2
            i.volume = r.getUint8(n) + r.getUint8(n + 1) / 8
            n += 2
            n += 2
            i.matrix = new Uint32Array(t.subarray(n, n + 9 * 4))
            n += 9 * 4
            i.width = r.getUint16(n) + r.getUint16(n + 2) / 16
            n += 4
            i.height = r.getUint16(n) + r.getUint16(n + 2) / 16
            return i
          },
          traf: function e(t) {
            return { boxes: ml(t) }
          },
          trak: function e(t) {
            return { boxes: ml(t) }
          },
          trex: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength)
            return {
              version: t[0],
              flags: new Uint8Array(t.subarray(1, 4)),
              trackId: r.getUint32(4),
              defaultSampleDescriptionIndex: r.getUint32(8),
              defaultSampleDuration: r.getUint32(12),
              defaultSampleSize: r.getUint32(16),
              sampleDependsOn: t[20] & 3,
              sampleIsDependedOn: (t[21] & 192) >> 6,
              sampleHasRedundancy: (t[21] & 48) >> 4,
              samplePaddingValue: (t[21] & 14) >> 1,
              sampleIsDifferenceSample: !!(t[21] & 1),
              sampleDegradationPriority: r.getUint16(22),
            }
          },
          trun: function e(t) {
            var r = { version: t[0], flags: new Uint8Array(t.subarray(1, 4)), samples: [] },
              n = new DataView(t.buffer, t.byteOffset, t.byteLength),
              i = r.flags[2] & 1,
              a = r.flags[2] & 4,
              s = r.flags[1] & 1,
              o = r.flags[1] & 2,
              u = r.flags[1] & 4,
              l = r.flags[1] & 8,
              f = n.getUint32(4),
              d = 8,
              c
            if (i) {
              r.dataOffset = n.getInt32(d)
              d += 4
            }
            if (a && f) {
              c = { flags: El(t.subarray(d, d + 4)) }
              d += 4
              if (s) {
                c.duration = n.getUint32(d)
                d += 4
              }
              if (o) {
                c.size = n.getUint32(d)
                d += 4
              }
              if (l) {
                c.compositionTimeOffset = n.getUint32(d)
                d += 4
              }
              r.samples.push(c)
              f--
            }
            while (f--) {
              c = {}
              if (s) {
                c.duration = n.getUint32(d)
                d += 4
              }
              if (o) {
                c.size = n.getUint32(d)
                d += 4
              }
              if (u) {
                c.flags = El(t.subarray(d, d + 4))
                d += 4
              }
              if (l) {
                c.compositionTimeOffset = n.getUint32(d)
                d += 4
              }
              r.samples.push(c)
            }
            return r
          },
          'url ': function e(t) {
            return { version: t[0], flags: new Uint8Array(t.subarray(1, 4)) }
          },
          vmhd: function e(t) {
            var r = new DataView(t.buffer, t.byteOffset, t.byteLength)
            return {
              version: t[0],
              flags: new Uint8Array(t.subarray(1, 4)),
              graphicsmode: r.getUint16(4),
              opcolor: new Uint16Array([r.getUint16(6), r.getUint16(8), r.getUint16(10)]),
            }
          },
        }
      ml = function e(t) {
        var r = 0,
          n = [],
          i,
          a,
          s,
          o,
          u
        var l = new ArrayBuffer(t.length)
        var f = new Uint8Array(l)
        for (var d = 0; d < t.length; ++d) {
          f[d] = t[d]
        }
        i = new DataView(l)
        while (r < t.byteLength) {
          a = i.getUint32(r)
          s = _l(t.subarray(r + 4, r + 8))
          o = a > 1 ? r + a : t.byteLength
          u = (Sl[s] ||
            function(e) {
              return { data: e }
            })(t.subarray(r + 8, o))
          u.size = a
          u.type = s
          n.push(u)
          r = o
        }
        return n
      }
      yl = function e(t, r) {
        var n
        r = r || 0
        n = new Array(r * 2 + 1).join(' ')
        return t
          .map(function(e, t) {
            return (
              n +
              e.type +
              '\n' +
              Object.keys(e)
                .filter(function(e) {
                  return e !== 'type' && e !== 'boxes'
                })
                .map(function(t) {
                  var r = n + '  ' + t + ': ',
                    i = e[t]
                  if (i instanceof Uint8Array || i instanceof Uint32Array) {
                    var a = Array.prototype.slice
                      .call(new Uint8Array(i.buffer, i.byteOffset, i.byteLength))
                      .map(function(e) {
                        return ' ' + ('00' + e.toString(16)).slice(-2)
                      })
                      .join('')
                      .match(/.{1,24}/g)
                    if (!a) {
                      return r + '<>'
                    }
                    if (a.length === 1) {
                      return r + '<' + a.join('').slice(1) + '>'
                    }
                    return (
                      r +
                      '<\n' +
                      a
                        .map(function(e) {
                          return n + '  ' + e
                        })
                        .join('\n') +
                      '\n' +
                      n +
                      '  >'
                    )
                  }
                  return (
                    r +
                    JSON.stringify(i, null, 2)
                      .split('\n')
                      .map(function(e, t) {
                        if (t === 0) {
                          return e
                        }
                        return n + '  ' + e
                      })
                      .join('\n')
                  )
                })
                .join('\n') +
              (e.boxes ? '\n' + yl(e.boxes, r + 1) : '')
            )
          })
          .join('\n')
      }
      var wl = {
        inspect: ml,
        textify: yl,
        parseTfdt: Sl.tfdt,
        parseHdlr: Sl.hdlr,
        parseTfhd: Sl.tfhd,
        parseTrun: Sl.trun,
        parseSidx: Sl.sidx,
      }
      var Al = 4,
        Il = 128
      var Cl = function e(t) {
        var r = 0,
          n = { payloadType: -1, payloadSize: 0 },
          i = 0,
          a = 0
        while (r < t.byteLength) {
          if (t[r] === Il) {
            break
          }
          while (t[r] === 255) {
            i += 255
            r++
          }
          i += t[r++]
          while (t[r] === 255) {
            a += 255
            r++
          }
          a += t[r++]
          if (!n.payload && i === Al) {
            n.payloadType = i
            n.payloadSize = a
            n.payload = t.subarray(r, r + a)
            break
          }
          r += a
          i = 0
          a = 0
        }
        return n
      }
      var Rl = function e(t) {
        if (t.payload[0] !== 181) {
          return null
        }
        if (((t.payload[1] << 8) | t.payload[2]) !== 49) {
          return null
        }
        if (
          String.fromCharCode(t.payload[3], t.payload[4], t.payload[5], t.payload[6]) !== 'GA94'
        ) {
          return null
        }
        if (t.payload[7] !== 3) {
          return null
        }
        return t.payload.subarray(8, t.payload.length - 1)
      }
      var Dl = function e(t, r) {
        var n = [],
          i,
          a,
          s,
          o
        if (!(r[0] & 64)) {
          return n
        }
        a = r[0] & 31
        for (i = 0; i < a; i++) {
          s = i * 3
          o = { type: r[s + 2] & 3, pts: t }
          if (r[s + 2] & 4) {
            o.ccData = (r[s + 3] << 8) | r[s + 4]
            n.push(o)
          }
        }
        return n
      }
      var Ol = function e(t) {
        var r = t.byteLength,
          n = [],
          i = 1,
          a,
          s
        while (i < r - 2) {
          if (t[i] === 0 && t[i + 1] === 0 && t[i + 2] === 3) {
            n.push(i + 2)
            i += 2
          } else {
            i++
          }
        }
        if (n.length === 0) {
          return t
        }
        a = r - n.length
        s = new Uint8Array(a)
        var o = 0
        for (i = 0; i < a; o++, i++) {
          if (o === n[0]) {
            o++
            n.shift()
          }
          s[i] = t[o]
        }
        return s
      }
      var Ml = {
        parseSei: Cl,
        parseUserData: Rl,
        parseCaptionPackets: Dl,
        discardEmulationPreventionBytes: Ol,
        USER_DATA_REGISTERED_ITU_T_T35: Al,
      }
      var kl = function e() {
        this.init = function() {
          var e = {}
          this.on = function(t, r) {
            if (!e[t]) {
              e[t] = []
            }
            e[t] = e[t].concat(r)
          }
          this.off = function(t, r) {
            var n
            if (!e[t]) {
              return false
            }
            n = e[t].indexOf(r)
            e[t] = e[t].slice()
            e[t].splice(n, 1)
            return n > -1
          }
          this.trigger = function(t) {
            var r, n, i, a
            r = e[t]
            if (!r) {
              return
            }
            if (arguments.length === 2) {
              i = r.length
              for (n = 0; n < i; ++n) {
                r[n].call(this, arguments[1])
              }
            } else {
              a = []
              n = arguments.length
              for (n = 1; n < arguments.length; ++n) {
                a.push(arguments[n])
              }
              i = r.length
              for (n = 0; n < i; ++n) {
                r[n].apply(this, a)
              }
            }
          }
          this.dispose = function() {
            e = {}
          }
        }
      }
      kl.prototype.pipe = function(e) {
        this.on('data', function(t) {
          e.push(t)
        })
        this.on('done', function(t) {
          e.flush(t)
        })
        this.on('partialdone', function(t) {
          e.partialFlush(t)
        })
        this.on('endedtimeline', function(t) {
          e.endTimeline(t)
        })
        this.on('reset', function(t) {
          e.reset(t)
        })
        return e
      }
      kl.prototype.push = function(e) {
        this.trigger('data', e)
      }
      kl.prototype.flush = function(e) {
        this.trigger('done', e)
      }
      kl.prototype.partialFlush = function(e) {
        this.trigger('partialdone', e)
      }
      kl.prototype.endTimeline = function(e) {
        this.trigger('endedtimeline', e)
      }
      kl.prototype.reset = function(e) {
        this.trigger('reset', e)
      }
      var Pl = kl
      var Nl = function e() {
        e.prototype.init.call(this)
        this.captionPackets_ = []
        this.ccStreams_ = [new jl(0, 0), new jl(0, 1), new jl(1, 0), new jl(1, 1)]
        this.reset()
        this.ccStreams_.forEach(function(e) {
          e.on('data', this.trigger.bind(this, 'data'))
          e.on('partialdone', this.trigger.bind(this, 'partialdone'))
          e.on('done', this.trigger.bind(this, 'done'))
        }, this)
      }
      Nl.prototype = new Pl()
      Nl.prototype.push = function(e) {
        var t, r, n
        if (e.nalUnitType !== 'sei_rbsp') {
          return
        }
        t = Ml.parseSei(e.escapedRBSP)
        if (t.payloadType !== Ml.USER_DATA_REGISTERED_ITU_T_T35) {
          return
        }
        r = Ml.parseUserData(t)
        if (!r) {
          return
        }
        if (e.dts < this.latestDts_) {
          this.ignoreNextEqualDts_ = true
          return
        } else if (e.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
          this.numSameDts_--
          if (!this.numSameDts_) {
            this.ignoreNextEqualDts_ = false
          }
          return
        }
        n = Ml.parseCaptionPackets(e.pts, r)
        this.captionPackets_ = this.captionPackets_.concat(n)
        if (this.latestDts_ !== e.dts) {
          this.numSameDts_ = 0
        }
        this.numSameDts_++
        this.latestDts_ = e.dts
      }
      Nl.prototype.flushCCStreams = function(e) {
        this.ccStreams_.forEach(function(t) {
          return e === 'flush' ? t.flush() : t.partialFlush()
        }, this)
      }
      Nl.prototype.flushStream = function(e) {
        if (!this.captionPackets_.length) {
          this.flushCCStreams(e)
          return
        }
        this.captionPackets_.forEach(function(e, t) {
          e.presortIndex = t
        })
        this.captionPackets_.sort(function(e, t) {
          if (e.pts === t.pts) {
            return e.presortIndex - t.presortIndex
          }
          return e.pts - t.pts
        })
        this.captionPackets_.forEach(function(e) {
          if (e.type < 2) {
            this.dispatchCea608Packet(e)
          }
        }, this)
        this.captionPackets_.length = 0
        this.flushCCStreams(e)
      }
      Nl.prototype.flush = function() {
        return this.flushStream('flush')
      }
      Nl.prototype.partialFlush = function() {
        return this.flushStream('partialFlush')
      }
      Nl.prototype.reset = function() {
        this.latestDts_ = null
        this.ignoreNextEqualDts_ = false
        this.numSameDts_ = 0
        this.activeCea608Channel_ = [null, null]
        this.ccStreams_.forEach(function(e) {
          e.reset()
        })
      }
      Nl.prototype.dispatchCea608Packet = function(e) {
        if (this.setsTextOrXDSActive(e)) {
          this.activeCea608Channel_[e.type] = null
        } else if (this.setsChannel1Active(e)) {
          this.activeCea608Channel_[e.type] = 0
        } else if (this.setsChannel2Active(e)) {
          this.activeCea608Channel_[e.type] = 1
        }
        if (this.activeCea608Channel_[e.type] === null) {
          return
        }
        this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
      }
      Nl.prototype.setsChannel1Active = function(e) {
        return (e.ccData & 30720) === 4096
      }
      Nl.prototype.setsChannel2Active = function(e) {
        return (e.ccData & 30720) === 6144
      }
      Nl.prototype.setsTextOrXDSActive = function(e) {
        return (
          (e.ccData & 28928) === 256 || (e.ccData & 30974) === 4138 || (e.ccData & 30974) === 6186
        )
      }
      var Ll = {
        42: 225,
        92: 233,
        94: 237,
        95: 243,
        96: 250,
        123: 231,
        124: 247,
        125: 209,
        126: 241,
        127: 9608,
        304: 174,
        305: 176,
        306: 189,
        307: 191,
        308: 8482,
        309: 162,
        310: 163,
        311: 9834,
        312: 224,
        313: 160,
        314: 232,
        315: 226,
        316: 234,
        317: 238,
        318: 244,
        319: 251,
        544: 193,
        545: 201,
        546: 211,
        547: 218,
        548: 220,
        549: 252,
        550: 8216,
        551: 161,
        552: 42,
        553: 39,
        554: 8212,
        555: 169,
        556: 8480,
        557: 8226,
        558: 8220,
        559: 8221,
        560: 192,
        561: 194,
        562: 199,
        563: 200,
        564: 202,
        565: 203,
        566: 235,
        567: 206,
        568: 207,
        569: 239,
        570: 212,
        571: 217,
        572: 249,
        573: 219,
        574: 171,
        575: 187,
        800: 195,
        801: 227,
        802: 205,
        803: 204,
        804: 236,
        805: 210,
        806: 242,
        807: 213,
        808: 245,
        809: 123,
        810: 125,
        811: 92,
        812: 94,
        813: 95,
        814: 124,
        815: 126,
        816: 196,
        817: 228,
        818: 214,
        819: 246,
        820: 223,
        821: 165,
        822: 164,
        823: 9474,
        824: 197,
        825: 229,
        826: 216,
        827: 248,
        828: 9484,
        829: 9488,
        830: 9492,
        831: 9496,
      }
      var xl = function e(t) {
        if (t === null) {
          return ''
        }
        t = Ll[t] || t
        return String.fromCharCode(t)
      }
      var Fl = 14
      var Ul = [
        4352,
        4384,
        4608,
        4640,
        5376,
        5408,
        5632,
        5664,
        5888,
        5920,
        4096,
        4864,
        4896,
        5120,
        5152,
      ]
      var Bl = function e() {
        var t = [],
          r = Fl + 1
        while (r--) {
          t.push('')
        }
        return t
      }
      var jl = function e(t, r) {
        e.prototype.init.call(this)
        this.field_ = t || 0
        this.dataChannel_ = r || 0
        this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1)
        this.setConstants()
        this.reset()
        this.push = function(e) {
          var t, r, n, i, a
          t = e.ccData & 32639
          if (t === this.lastControlCode_) {
            this.lastControlCode_ = null
            return
          }
          if ((t & 61440) === 4096) {
            this.lastControlCode_ = t
          } else if (t !== this.PADDING_) {
            this.lastControlCode_ = null
          }
          n = t >>> 8
          i = t & 255
          if (t === this.PADDING_) {
            return
          } else if (t === this.RESUME_CAPTION_LOADING_) {
            this.mode_ = 'popOn'
          } else if (t === this.END_OF_CAPTION_) {
            this.mode_ = 'popOn'
            this.clearFormatting(e.pts)
            this.flushDisplayed(e.pts)
            r = this.displayed_
            this.displayed_ = this.nonDisplayed_
            this.nonDisplayed_ = r
            this.startPts_ = e.pts
          } else if (t === this.ROLL_UP_2_ROWS_) {
            this.rollUpRows_ = 2
            this.setRollUp(e.pts)
          } else if (t === this.ROLL_UP_3_ROWS_) {
            this.rollUpRows_ = 3
            this.setRollUp(e.pts)
          } else if (t === this.ROLL_UP_4_ROWS_) {
            this.rollUpRows_ = 4
            this.setRollUp(e.pts)
          } else if (t === this.CARRIAGE_RETURN_) {
            this.clearFormatting(e.pts)
            this.flushDisplayed(e.pts)
            this.shiftRowsUp_()
            this.startPts_ = e.pts
          } else if (t === this.BACKSPACE_) {
            if (this.mode_ === 'popOn') {
              this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
            } else {
              this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
            }
          } else if (t === this.ERASE_DISPLAYED_MEMORY_) {
            this.flushDisplayed(e.pts)
            this.displayed_ = Bl()
          } else if (t === this.ERASE_NON_DISPLAYED_MEMORY_) {
            this.nonDisplayed_ = Bl()
          } else if (t === this.RESUME_DIRECT_CAPTIONING_) {
            if (this.mode_ !== 'paintOn') {
              this.flushDisplayed(e.pts)
              this.displayed_ = Bl()
            }
            this.mode_ = 'paintOn'
            this.startPts_ = e.pts
          } else if (this.isSpecialCharacter(n, i)) {
            n = (n & 3) << 8
            a = xl(n | i)
            this[this.mode_](e.pts, a)
            this.column_++
          } else if (this.isExtCharacter(n, i)) {
            if (this.mode_ === 'popOn') {
              this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
            } else {
              this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
            }
            n = (n & 3) << 8
            a = xl(n | i)
            this[this.mode_](e.pts, a)
            this.column_++
          } else if (this.isMidRowCode(n, i)) {
            this.clearFormatting(e.pts)
            this[this.mode_](e.pts, ' ')
            this.column_++
            if ((i & 14) === 14) {
              this.addFormatting(e.pts, ['i'])
            }
            if ((i & 1) === 1) {
              this.addFormatting(e.pts, ['u'])
            }
          } else if (this.isOffsetControlCode(n, i)) {
            this.column_ += i & 3
          } else if (this.isPAC(n, i)) {
            var s = Ul.indexOf(t & 7968)
            if (this.mode_ === 'rollUp') {
              if (s - this.rollUpRows_ + 1 < 0) {
                s = this.rollUpRows_ - 1
              }
              this.setRollUp(e.pts, s)
            }
            if (s !== this.row_) {
              this.clearFormatting(e.pts)
              this.row_ = s
            }
            if (i & 1 && this.formatting_.indexOf('u') === -1) {
              this.addFormatting(e.pts, ['u'])
            }
            if ((t & 16) === 16) {
              this.column_ = ((t & 14) >> 1) * 4
            }
            if (this.isColorPAC(i)) {
              if ((i & 14) === 14) {
                this.addFormatting(e.pts, ['i'])
              }
            }
          } else if (this.isNormalChar(n)) {
            if (i === 0) {
              i = null
            }
            a = xl(n)
            a += xl(i)
            this[this.mode_](e.pts, a)
            this.column_ += a.length
          }
        }
      }
      jl.prototype = new Pl()
      jl.prototype.flushDisplayed = function(e) {
        var t = this.displayed_
          .map(function(e) {
            try {
              return e.trim()
            } catch (e) {
              console.error('Skipping malformed caption.')
              return ''
            }
          })
          .join('\n')
          .replace(/^\n+|\n+$/g, '')
        if (t.length) {
          this.trigger('data', { startPts: this.startPts_, endPts: e, text: t, stream: this.name_ })
        }
      }
      jl.prototype.reset = function() {
        this.mode_ = 'popOn'
        this.topRow_ = 0
        this.startPts_ = 0
        this.displayed_ = Bl()
        this.nonDisplayed_ = Bl()
        this.lastControlCode_ = null
        this.column_ = 0
        this.row_ = Fl
        this.rollUpRows_ = 2
        this.formatting_ = []
      }
      jl.prototype.setConstants = function() {
        if (this.dataChannel_ === 0) {
          this.BASE_ = 16
          this.EXT_ = 17
          this.CONTROL_ = (20 | this.field_) << 8
          this.OFFSET_ = 23
        } else if (this.dataChannel_ === 1) {
          this.BASE_ = 24
          this.EXT_ = 25
          this.CONTROL_ = (28 | this.field_) << 8
          this.OFFSET_ = 31
        }
        this.PADDING_ = 0
        this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32
        this.END_OF_CAPTION_ = this.CONTROL_ | 47
        this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37
        this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38
        this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39
        this.CARRIAGE_RETURN_ = this.CONTROL_ | 45
        this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41
        this.BACKSPACE_ = this.CONTROL_ | 33
        this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44
        this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46
      }
      jl.prototype.isSpecialCharacter = function(e, t) {
        return e === this.EXT_ && t >= 48 && t <= 63
      }
      jl.prototype.isExtCharacter = function(e, t) {
        return (e === this.EXT_ + 1 || e === this.EXT_ + 2) && t >= 32 && t <= 63
      }
      jl.prototype.isMidRowCode = function(e, t) {
        return e === this.EXT_ && t >= 32 && t <= 47
      }
      jl.prototype.isOffsetControlCode = function(e, t) {
        return e === this.OFFSET_ && t >= 33 && t <= 35
      }
      jl.prototype.isPAC = function(e, t) {
        return e >= this.BASE_ && e < this.BASE_ + 8 && t >= 64 && t <= 127
      }
      jl.prototype.isColorPAC = function(e) {
        return (e >= 64 && e <= 79) || (e >= 96 && e <= 127)
      }
      jl.prototype.isNormalChar = function(e) {
        return e >= 32 && e <= 127
      }
      jl.prototype.setRollUp = function(e, t) {
        if (this.mode_ !== 'rollUp') {
          this.row_ = Fl
          this.mode_ = 'rollUp'
          this.flushDisplayed(e)
          this.nonDisplayed_ = Bl()
          this.displayed_ = Bl()
        }
        if (t !== undefined && t !== this.row_) {
          for (var r = 0; r < this.rollUpRows_; r++) {
            this.displayed_[t - r] = this.displayed_[this.row_ - r]
            this.displayed_[this.row_ - r] = ''
          }
        }
        if (t === undefined) {
          t = this.row_
        }
        this.topRow_ = t - this.rollUpRows_ + 1
      }
      jl.prototype.addFormatting = function(e, t) {
        this.formatting_ = this.formatting_.concat(t)
        var r = t.reduce(function(e, t) {
          return e + '<' + t + '>'
        }, '')
        this[this.mode_](e, r)
      }
      jl.prototype.clearFormatting = function(e) {
        if (!this.formatting_.length) {
          return
        }
        var t = this.formatting_.reverse().reduce(function(e, t) {
          return e + '</' + t + '>'
        }, '')
        this.formatting_ = []
        this[this.mode_](e, t)
      }
      jl.prototype.popOn = function(e, t) {
        var r = this.nonDisplayed_[this.row_]
        r += t
        this.nonDisplayed_[this.row_] = r
      }
      jl.prototype.rollUp = function(e, t) {
        var r = this.displayed_[this.row_]
        r += t
        this.displayed_[this.row_] = r
      }
      jl.prototype.shiftRowsUp_ = function() {
        var e
        for (e = 0; e < this.topRow_; e++) {
          this.displayed_[e] = ''
        }
        for (e = this.row_ + 1; e < Fl + 1; e++) {
          this.displayed_[e] = ''
        }
        for (e = this.topRow_; e < this.row_; e++) {
          this.displayed_[e] = this.displayed_[e + 1]
        }
        this.displayed_[this.row_] = ''
      }
      jl.prototype.paintOn = function(e, t) {
        var r = this.displayed_[this.row_]
        r += t
        this.displayed_[this.row_] = r
      }
      var Gl = { CaptionStream: Nl, Cea608Stream: jl }
      var ql = Ml.discardEmulationPreventionBytes
      var Hl = Gl.CaptionStream
      var Vl = function e(t, r) {
        var n = t
        for (var i = 0; i < r.length; i++) {
          var a = r[i]
          if (n < a.size) {
            return a
          }
          n -= a.size
        }
        return null
      }
      var Kl = function e(t, r, n) {
        var i = new DataView(t.buffer, t.byteOffset, t.byteLength),
          a = [],
          s,
          o,
          u,
          l
        for (o = 0; o + 4 < t.length; o += u) {
          u = i.getUint32(o)
          o += 4
          if (u <= 0) {
            continue
          }
          switch (t[o] & 31) {
            case 6:
              var f = t.subarray(o + 1, o + 1 + u)
              var d = Vl(o, r)
              s = { nalUnitType: 'sei_rbsp', size: u, data: f, escapedRBSP: ql(f), trackId: n }
              if (d) {
                s.pts = d.pts
                s.dts = d.dts
                l = d
              } else {
                s.pts = l.pts
                s.dts = l.dts
              }
              a.push(s)
              break
            default:
              break
          }
        }
        return a
      }
      var Yl = function e(t, r, n) {
        var i = r
        var a = n.defaultSampleDuration || 0
        var s = n.defaultSampleSize || 0
        var o = n.trackId
        var u = []
        t.forEach(function(e) {
          var t = wl.parseTrun(e)
          var r = t.samples
          r.forEach(function(e) {
            if (e.duration === undefined) {
              e.duration = a
            }
            if (e.size === undefined) {
              e.size = s
            }
            e.trackId = o
            e.dts = i
            if (e.compositionTimeOffset === undefined) {
              e.compositionTimeOffset = 0
            }
            e.pts = i + e.compositionTimeOffset
            i += e.duration
          })
          u = u.concat(r)
        })
        return u
      }
      var Wl = function e(t, r) {
        var n = gl.findBox(t, ['moof', 'traf'])
        var i = gl.findBox(t, ['mdat'])
        var a = {}
        var s = []
        i.forEach(function(e, t) {
          var r = n[t]
          s.push({ mdat: e, traf: r })
        })
        s.forEach(function(e) {
          var t = e.mdat
          var n = e.traf
          var i = gl.findBox(n, ['tfhd'])
          var s = wl.parseTfhd(i[0])
          var o = s.trackId
          var u = gl.findBox(n, ['tfdt'])
          var l = u.length > 0 ? wl.parseTfdt(u[0]).baseMediaDecodeTime : 0
          var f = gl.findBox(n, ['trun'])
          var d
          var c
          if (r === o && f.length > 0) {
            d = Yl(f, l, s)
            c = Kl(t, d, o)
            if (!a[o]) {
              a[o] = []
            }
            a[o] = a[o].concat(c)
          }
        })
        return a
      }
      var zl = function e(t, r, n) {
        var i
        if (r === null) {
          return null
        }
        i = Wl(t, r)
        return { seiNals: i[r], timescale: n }
      }
      var Xl = function e() {
        var t = false
        var r
        var n
        var i
        var a
        var s
        var o
        this.isInitialized = function() {
          return t
        }
        this.init = function(e) {
          r = new Hl()
          t = true
          o = e ? e.isPartial : false
          r.on('data', function(e) {
            e.startTime = e.startPts / a
            e.endTime = e.endPts / a
            s.captions.push(e)
            s.captionStreams[e.stream] = true
          })
        }
        this.isNewInit = function(e, t) {
          if (
            (e && e.length === 0) ||
            (t && typeof t === 'object' && Object.keys(t).length === 0)
          ) {
            return false
          }
          return i !== e[0] || a !== t[i]
        }
        this.parse = function(e, t, r) {
          var o
          if (!this.isInitialized()) {
            return null
          } else if (!t || !r) {
            return null
          } else if (this.isNewInit(t, r)) {
            i = t[0]
            a = r[i]
          } else if (i === null || !a) {
            n.push(e)
            return null
          }
          while (n.length > 0) {
            var u = n.shift()
            this.parse(u, t, r)
          }
          o = zl(e, i, a)
          if (o === null || !o.seiNals) {
            return null
          }
          this.pushNals(o.seiNals)
          this.flushStream()
          return s
        }
        this.pushNals = function(e) {
          if (!this.isInitialized() || !e || e.length === 0) {
            return null
          }
          e.forEach(function(e) {
            r.push(e)
          })
        }
        this.flushStream = function() {
          if (!this.isInitialized()) {
            return null
          }
          if (!o) {
            r.flush()
          } else {
            r.partialFlush()
          }
        }
        this.clearParsedCaptions = function() {
          s.captions = []
          s.captionStreams = {}
        }
        this.resetCaptionStream = function() {
          if (!this.isInitialized()) {
            return null
          }
          r.reset()
        }
        this.clearAllCaptions = function() {
          this.clearParsedCaptions()
          this.resetCaptionStream()
        }
        this.reset = function() {
          n = []
          i = null
          a = null
          if (!s) {
            s = { captions: [], captionStreams: {} }
          } else {
            this.clearParsedCaptions()
          }
          this.resetCaptionStream()
        }
        this.reset()
      }
      var $l = Xl
      var Ql = { H264_STREAM_TYPE: 27, ADTS_STREAM_TYPE: 15, METADATA_STREAM_TYPE: 21 }
      var Jl = 8589934592
      var Zl = 4294967296
      var ef = 'shared'
      var tf = function e(t, r) {
        var n = 1
        if (t > r) {
          n = -1
        }
        while (Math.abs(r - t) > Zl) {
          t += n * Jl
        }
        return t
      }
      var rf = function e(t) {
        var r, n
        e.prototype.init.call(this)
        this.type_ = t || ef
        this.push = function(e) {
          if (this.type_ !== ef && e.type !== this.type_) {
            return
          }
          if (n === undefined) {
            n = e.dts
          }
          e.dts = tf(e.dts, n)
          e.pts = tf(e.pts, n)
          r = e.dts
          this.trigger('data', e)
        }
        this.flush = function() {
          n = r
          this.trigger('done')
        }
        this.endTimeline = function() {
          this.flush()
          this.trigger('endedtimeline')
        }
        this.discontinuity = function() {
          n = void 0
          r = void 0
        }
        this.reset = function() {
          this.discontinuity()
          this.trigger('reset')
        }
      }
      rf.prototype = new Pl()
      var nf = { TimestampRolloverStream: rf, handleRollover: tf }
      var af = function e(t) {
        var r = t[1] & 31
        r <<= 8
        r |= t[2]
        return r
      }
      var sf = function e(t) {
        return !!(t[1] & 64)
      }
      var of = function e(t) {
        var r = 0
        if ((t[3] & 48) >>> 4 > 1) {
          r += t[4] + 1
        }
        return r
      }
      var uf = function e(t, r) {
        var n = af(t)
        if (n === 0) {
          return 'pat'
        } else if (n === r) {
          return 'pmt'
        } else if (r) {
          return 'pes'
        }
        return null
      }
      var lf = function e(t) {
        var r = sf(t)
        var n = 4 + of(t)
        if (r) {
          n += t[n] + 1
        }
        return ((t[n + 10] & 31) << 8) | t[n + 11]
      }
      var ff = function e(t) {
        var r = {}
        var n = sf(t)
        var i = 4 + of(t)
        if (n) {
          i += t[i] + 1
        }
        if (!(t[i + 5] & 1)) {
          return
        }
        var a, s, o
        a = ((t[i + 1] & 15) << 8) | t[i + 2]
        s = 3 + a - 4
        o = ((t[i + 10] & 15) << 8) | t[i + 11]
        var u = 12 + o
        while (u < s) {
          var l = i + u
          r[((t[l + 1] & 31) << 8) | t[l + 2]] = t[l]
          u += (((t[l + 3] & 15) << 8) | t[l + 4]) + 5
        }
        return r
      }
      var df = function e(t, r) {
        var n = af(t)
        var i = r[n]
        switch (i) {
          case Ql.H264_STREAM_TYPE:
            return 'video'
          case Ql.ADTS_STREAM_TYPE:
            return 'audio'
          case Ql.METADATA_STREAM_TYPE:
            return 'timed-metadata'
          default:
            return null
        }
      }
      var cf = function e(t) {
        var r = sf(t)
        if (!r) {
          return null
        }
        var n = 4 + of(t)
        if (n >= t.byteLength) {
          return null
        }
        var i = null
        var a
        a = t[n + 7]
        if (a & 192) {
          i = {}
          i.pts =
            ((t[n + 9] & 14) << 27) |
            ((t[n + 10] & 255) << 20) |
            ((t[n + 11] & 254) << 12) |
            ((t[n + 12] & 255) << 5) |
            ((t[n + 13] & 254) >>> 3)
          i.pts *= 4
          i.pts += (t[n + 13] & 6) >>> 1
          i.dts = i.pts
          if (a & 64) {
            i.dts =
              ((t[n + 14] & 14) << 27) |
              ((t[n + 15] & 255) << 20) |
              ((t[n + 16] & 254) << 12) |
              ((t[n + 17] & 255) << 5) |
              ((t[n + 18] & 254) >>> 3)
            i.dts *= 4
            i.dts += (t[n + 18] & 6) >>> 1
          }
        }
        return i
      }
      var hf = function e(t) {
        switch (t) {
          case 5:
            return 'slice_layer_without_partitioning_rbsp_idr'
          case 6:
            return 'sei_rbsp'
          case 7:
            return 'seq_parameter_set_rbsp'
          case 8:
            return 'pic_parameter_set_rbsp'
          case 9:
            return 'access_unit_delimiter_rbsp'
          default:
            return null
        }
      }
      var pf = function e(t) {
        var r = 4 + of(t)
        var n = t.subarray(r)
        var i = 0
        var a = 0
        var s = false
        var o
        for (; a < n.byteLength - 3; a++) {
          if (n[a + 2] === 1) {
            i = a + 5
            break
          }
        }
        while (i < n.byteLength) {
          switch (n[i]) {
            case 0:
              if (n[i - 1] !== 0) {
                i += 2
                break
              } else if (n[i - 2] !== 0) {
                i++
                break
              }
              if (a + 3 !== i - 2) {
                o = hf(n[a + 3] & 31)
                if (o === 'slice_layer_without_partitioning_rbsp_idr') {
                  s = true
                }
              }
              do {
                i++
              } while (n[i] !== 1 && i < n.length)
              a = i - 2
              i += 3
              break
            case 1:
              if (n[i - 1] !== 0 || n[i - 2] !== 0) {
                i += 3
                break
              }
              o = hf(n[a + 3] & 31)
              if (o === 'slice_layer_without_partitioning_rbsp_idr') {
                s = true
              }
              a = i - 2
              i += 3
              break
            default:
              i += 3
              break
          }
        }
        n = n.subarray(a)
        i -= a
        a = 0
        if (n && n.byteLength > 3) {
          o = hf(n[a + 3] & 31)
          if (o === 'slice_layer_without_partitioning_rbsp_idr') {
            s = true
          }
        }
        return s
      }
      var vf = {
        parseType: uf,
        parsePat: lf,
        parsePmt: ff,
        parsePayloadUnitStartIndicator: sf,
        parsePesType: df,
        parsePesTime: cf,
        videoPacketContainsKeyFrame: pf,
      }
      var gf = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350]
      var mf = function e(t) {
        if (
          t[0] === 'I'.charCodeAt(0) &&
          t[1] === 'D'.charCodeAt(0) &&
          t[2] === '3'.charCodeAt(0)
        ) {
          return true
        }
        return false
      }
      var yf = function e(t) {
        return (t[0] << 21) | (t[1] << 14) | (t[2] << 7) | t[3]
      }
      var _f = function e(t, r, n) {
        var i,
          a = ''
        for (i = r; i < n; i++) {
          a += '%' + ('00' + t[i].toString(16)).slice(-2)
        }
        return a
      }
      var Tf = function e(t, r, n) {
        return unescape(_f(t, r, n))
      }
      var Ef = function e(t, r) {
        var n = (t[r + 6] << 21) | (t[r + 7] << 14) | (t[r + 8] << 7) | t[r + 9],
          i = t[r + 5],
          a = (i & 16) >> 4
        if (a) {
          return n + 20
        }
        return n + 10
      }
      var bf = function e(t, r) {
        var n = (t[r + 5] & 224) >> 5,
          i = t[r + 4] << 3,
          a = t[r + 3] & (3 << 11)
        return a | i | n
      }
      var Sf = function e(t, r) {
        if (
          t[r] === 'I'.charCodeAt(0) &&
          t[r + 1] === 'D'.charCodeAt(0) &&
          t[r + 2] === '3'.charCodeAt(0)
        ) {
          return 'timed-metadata'
        } else if (t[r] & (255 === 255) && (t[r + 1] & 240) === 240) {
          return 'audio'
        }
        return null
      }
      var wf = function e(t) {
        var r = 0
        while (r + 5 < t.length) {
          if (t[r] !== 255 || (t[r + 1] & 246) !== 240) {
            r++
            continue
          }
          return gf[(t[r + 2] & 60) >>> 2]
        }
        return null
      }
      var Af = function e(t) {
        var r, n, i, a
        r = 10
        if (t[5] & 64) {
          r += 4
          r += yf(t.subarray(10, 14))
        }
        do {
          n = yf(t.subarray(r + 4, r + 8))
          if (n < 1) {
            return null
          }
          a = String.fromCharCode(t[r], t[r + 1], t[r + 2], t[r + 3])
          if (a === 'PRIV') {
            i = t.subarray(r + 10, r + n + 10)
            for (var s = 0; s < i.byteLength; s++) {
              if (i[s] === 0) {
                var o = Tf(i, 0, s)
                if (o === 'com.apple.streaming.transportStreamTimestamp') {
                  var u = i.subarray(s + 1)
                  var l =
                    ((u[3] & 1) << 30) | (u[4] << 22) | (u[5] << 14) | (u[6] << 6) | (u[7] >>> 2)
                  l *= 4
                  l += u[7] & 3
                  return l
                }
                break
              }
            }
          }
          r += 10
          r += n
        } while (r < t.byteLength)
        return null
      }
      var If = {
        isLikelyAacData: mf,
        parseId3TagSize: Ef,
        parseAdtsSize: bf,
        parseType: Sf,
        parseSampleRate: wf,
        parseAacTimestamp: Af,
      }
      var Cf = 9e4,
        Rf,
        Df,
        Of,
        Mf,
        kf,
        Pf,
        Nf
      Rf = function e(t) {
        return t * Cf
      }
      Df = function e(t, r) {
        return t * r
      }
      Of = function e(t) {
        return t / Cf
      }
      Mf = function e(t, r) {
        return t / r
      }
      kf = function e(t, r) {
        return Rf(Mf(t, r))
      }
      Pf = function e(t, r) {
        return Df(Of(t), r)
      }
      Nf = function e(t, r, n) {
        return Of(n ? t : t - r)
      }
      var Lf = {
        ONE_SECOND_IN_TS: Cf,
        secondsToVideoTs: Rf,
        secondsToAudioTs: Df,
        videoTsToSeconds: Of,
        audioTsToSeconds: Mf,
        audioTsToVideoTs: kf,
        videoTsToAudioTs: Pf,
        metadataTsToSeconds: Nf,
      }
      var xf = nf.handleRollover
      var Ff = {}
      Ff.ts = vf
      Ff.aac = If
      var Uf = Lf.ONE_SECOND_IN_TS
      var Bf = 188,
        jf = 71
      var Gf = function e(t, r) {
        var n = 0,
          i = Bf,
          a,
          s
        while (i < t.byteLength) {
          if (t[n] === jf && t[i] === jf) {
            a = t.subarray(n, i)
            s = Ff.ts.parseType(a, r.pid)
            switch (s) {
              case 'pat':
                if (!r.pid) {
                  r.pid = Ff.ts.parsePat(a)
                }
                break
              case 'pmt':
                if (!r.table) {
                  r.table = Ff.ts.parsePmt(a)
                }
                break
              default:
                break
            }
            if (r.pid && r.table) {
              return
            }
            n += Bf
            i += Bf
            continue
          }
          n++
          i++
        }
      }
      var qf = function e(t, r, n) {
        var i = 0,
          a = Bf,
          s,
          o,
          u,
          l,
          f
        var d = false
        while (a <= t.byteLength) {
          if (t[i] === jf && (t[a] === jf || a === t.byteLength)) {
            s = t.subarray(i, a)
            o = Ff.ts.parseType(s, r.pid)
            switch (o) {
              case 'pes':
                u = Ff.ts.parsePesType(s, r.table)
                l = Ff.ts.parsePayloadUnitStartIndicator(s)
                if (u === 'audio' && l) {
                  f = Ff.ts.parsePesTime(s)
                  if (f) {
                    f.type = 'audio'
                    n.audio.push(f)
                    d = true
                  }
                }
                break
              default:
                break
            }
            if (d) {
              break
            }
            i += Bf
            a += Bf
            continue
          }
          i++
          a++
        }
        a = t.byteLength
        i = a - Bf
        d = false
        while (i >= 0) {
          if (t[i] === jf && (t[a] === jf || a === t.byteLength)) {
            s = t.subarray(i, a)
            o = Ff.ts.parseType(s, r.pid)
            switch (o) {
              case 'pes':
                u = Ff.ts.parsePesType(s, r.table)
                l = Ff.ts.parsePayloadUnitStartIndicator(s)
                if (u === 'audio' && l) {
                  f = Ff.ts.parsePesTime(s)
                  if (f) {
                    f.type = 'audio'
                    n.audio.push(f)
                    d = true
                  }
                }
                break
              default:
                break
            }
            if (d) {
              break
            }
            i -= Bf
            a -= Bf
            continue
          }
          i--
          a--
        }
      }
      var Hf = function e(t, r, n) {
        var i = 0,
          a = Bf,
          s,
          o,
          u,
          l,
          f,
          d,
          c,
          h
        var p = false
        var v = { data: [], size: 0 }
        while (a < t.byteLength) {
          if (t[i] === jf && t[a] === jf) {
            s = t.subarray(i, a)
            o = Ff.ts.parseType(s, r.pid)
            switch (o) {
              case 'pes':
                u = Ff.ts.parsePesType(s, r.table)
                l = Ff.ts.parsePayloadUnitStartIndicator(s)
                if (u === 'video') {
                  if (l && !p) {
                    f = Ff.ts.parsePesTime(s)
                    if (f) {
                      f.type = 'video'
                      n.video.push(f)
                      p = true
                    }
                  }
                  if (!n.firstKeyFrame) {
                    if (l) {
                      if (v.size !== 0) {
                        d = new Uint8Array(v.size)
                        c = 0
                        while (v.data.length) {
                          h = v.data.shift()
                          d.set(h, c)
                          c += h.byteLength
                        }
                        if (Ff.ts.videoPacketContainsKeyFrame(d)) {
                          var g = Ff.ts.parsePesTime(d)
                          if (g) {
                            n.firstKeyFrame = g
                            n.firstKeyFrame.type = 'video'
                          } else {
                            console.warn(
                              'Failed to extract PTS/DTS from PES at first keyframe. ' +
                                'This could be an unusual TS segment, or else mux.js did not ' +
                                'parse your TS segment correctly. If you know your TS ' +
                                'segments do contain PTS/DTS on keyframes please file a bug ' +
                                'report! You can try ffprobe to double check for yourself.'
                            )
                          }
                        }
                        v.size = 0
                      }
                    }
                    v.data.push(s)
                    v.size += s.byteLength
                  }
                }
                break
              default:
                break
            }
            if (p && n.firstKeyFrame) {
              break
            }
            i += Bf
            a += Bf
            continue
          }
          i++
          a++
        }
        a = t.byteLength
        i = a - Bf
        p = false
        while (i >= 0) {
          if (t[i] === jf && t[a] === jf) {
            s = t.subarray(i, a)
            o = Ff.ts.parseType(s, r.pid)
            switch (o) {
              case 'pes':
                u = Ff.ts.parsePesType(s, r.table)
                l = Ff.ts.parsePayloadUnitStartIndicator(s)
                if (u === 'video' && l) {
                  f = Ff.ts.parsePesTime(s)
                  if (f) {
                    f.type = 'video'
                    n.video.push(f)
                    p = true
                  }
                }
                break
              default:
                break
            }
            if (p) {
              break
            }
            i -= Bf
            a -= Bf
            continue
          }
          i--
          a--
        }
      }
      var Vf = function e(t, r) {
        if (t.audio && t.audio.length) {
          var n = r
          if (typeof n === 'undefined') {
            n = t.audio[0].dts
          }
          t.audio.forEach(function(e) {
            e.dts = xf(e.dts, n)
            e.pts = xf(e.pts, n)
            e.dtsTime = e.dts / Uf
            e.ptsTime = e.pts / Uf
          })
        }
        if (t.video && t.video.length) {
          var i = r
          if (typeof i === 'undefined') {
            i = t.video[0].dts
          }
          t.video.forEach(function(e) {
            e.dts = xf(e.dts, i)
            e.pts = xf(e.pts, i)
            e.dtsTime = e.dts / Uf
            e.ptsTime = e.pts / Uf
          })
          if (t.firstKeyFrame) {
            var a = t.firstKeyFrame
            a.dts = xf(a.dts, i)
            a.pts = xf(a.pts, i)
            a.dtsTime = a.dts / Uf
            a.ptsTime = a.dts / Uf
          }
        }
      }
      var Kf = function e(t) {
        var r = false,
          n = 0,
          i = null,
          a = null,
          s = 0,
          o = 0,
          u
        while (t.length - o >= 3) {
          var l = Ff.aac.parseType(t, o)
          switch (l) {
            case 'timed-metadata':
              if (t.length - o < 10) {
                r = true
                break
              }
              s = Ff.aac.parseId3TagSize(t, o)
              if (s > t.length) {
                r = true
                break
              }
              if (a === null) {
                u = t.subarray(o, o + s)
                a = Ff.aac.parseAacTimestamp(u)
              }
              o += s
              break
            case 'audio':
              if (t.length - o < 7) {
                r = true
                break
              }
              s = Ff.aac.parseAdtsSize(t, o)
              if (s > t.length) {
                r = true
                break
              }
              if (i === null) {
                u = t.subarray(o, o + s)
                i = Ff.aac.parseSampleRate(u)
              }
              n++
              o += s
              break
            default:
              o++
              break
          }
          if (r) {
            return null
          }
        }
        if (i === null || a === null) {
          return null
        }
        var f = Uf / i
        var d = {
          audio: [
            { type: 'audio', dts: a, pts: a },
            { type: 'audio', dts: a + n * 1024 * f, pts: a + n * 1024 * f },
          ],
        }
        return d
      }
      var Yf = function e(t) {
        var r = { pid: null, table: null }
        var n = {}
        Gf(t, r)
        for (var i in r.table) {
          if (r.table.hasOwnProperty(i)) {
            var a = r.table[i]
            switch (a) {
              case Ql.H264_STREAM_TYPE:
                n.video = []
                Hf(t, r, n)
                if (n.video.length === 0) {
                  delete n.video
                }
                break
              case Ql.ADTS_STREAM_TYPE:
                n.audio = []
                qf(t, r, n)
                if (n.audio.length === 0) {
                  delete n.audio
                }
                break
              default:
                break
            }
          }
        }
        return n
      }
      var Wf = function e(t, r) {
        var n = Ff.aac.isLikelyAacData(t)
        var i
        if (n) {
          i = Kf(t)
        } else {
          i = Yf(t)
        }
        if (!i || (!i.audio && !i.video)) {
          return null
        }
        Vf(i, r)
        return i
      }
      var zf = { inspect: Wf, parseAudioPes_: qf }
      function Xf(e) {
        return e.subarray(0, e.byteLength - e[e.byteLength - 1])
      }
      var $f = function e(t, r) {
        if (!(t instanceof r)) {
          throw new TypeError('Cannot call a class as a function')
        }
      }
      var Qf = (function() {
        function e(e, t) {
          for (var r = 0; r < t.length; r++) {
            var n = t[r]
            n.enumerable = n.enumerable || false
            n.configurable = true
            if ('value' in n) n.writable = true
            Object.defineProperty(e, n.key, n)
          }
        }
        return function(t, r, n) {
          if (r) e(t.prototype, r)
          if (n) e(t, n)
          return t
        }
      })()
      var Jf = function e(t, r) {
        if (typeof r !== 'function' && r !== null) {
          throw new TypeError('Super expression must either be null or a function, not ' + typeof r)
        }
        t.prototype = Object.create(r && r.prototype, {
          constructor: { value: t, enumerable: false, writable: true, configurable: true },
        })
        if (r) Object.setPrototypeOf ? Object.setPrototypeOf(t, r) : (t.__proto__ = r)
      }
      var Zf = function e(t, r) {
        if (!t) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
        }
        return r && (typeof r === 'object' || typeof r === 'function') ? r : t
      }
      var ed = function e() {
        var t = [[[], [], [], [], []], [[], [], [], [], []]]
        var r = t[0]
        var n = t[1]
        var i = r[4]
        var a = n[4]
        var s = void 0
        var o = void 0
        var u = void 0
        var l = []
        var f = []
        var d = void 0
        var c = void 0
        var h = void 0
        var p = void 0
        var v = void 0
        var g = void 0
        for (s = 0; s < 256; s++) {
          f[(l[s] = (s << 1) ^ ((s >> 7) * 283)) ^ s] = s
        }
        for (o = u = 0; !i[o]; o ^= d || 1, u = f[u] || 1) {
          p = u ^ (u << 1) ^ (u << 2) ^ (u << 3) ^ (u << 4)
          p = (p >> 8) ^ (p & 255) ^ 99
          i[o] = p
          a[p] = o
          h = l[(c = l[(d = l[o])])]
          g = (h * 16843009) ^ (c * 65537) ^ (d * 257) ^ (o * 16843008)
          v = (l[p] * 257) ^ (p * 16843008)
          for (s = 0; s < 4; s++) {
            r[s][o] = v = (v << 24) ^ (v >>> 8)
            n[s][p] = g = (g << 24) ^ (g >>> 8)
          }
        }
        for (s = 0; s < 5; s++) {
          r[s] = r[s].slice(0)
          n[s] = n[s].slice(0)
        }
        return t
      }
      var td = null
      var rd = (function() {
        function e(t) {
          $f(this, e)
          if (!td) {
            td = ed()
          }
          this._tables = [
            [
              td[0][0].slice(),
              td[0][1].slice(),
              td[0][2].slice(),
              td[0][3].slice(),
              td[0][4].slice(),
            ],
            [
              td[1][0].slice(),
              td[1][1].slice(),
              td[1][2].slice(),
              td[1][3].slice(),
              td[1][4].slice(),
            ],
          ]
          var r = void 0
          var n = void 0
          var i = void 0
          var a = void 0
          var s = void 0
          var o = this._tables[0][4]
          var u = this._tables[1]
          var l = t.length
          var f = 1
          if (l !== 4 && l !== 6 && l !== 8) {
            throw new Error('Invalid aes key size')
          }
          a = t.slice(0)
          s = []
          this._key = [a, s]
          for (r = l; r < 4 * l + 28; r++) {
            i = a[r - 1]
            if (r % l === 0 || (l === 8 && r % l === 4)) {
              i =
                (o[i >>> 24] << 24) ^
                (o[(i >> 16) & 255] << 16) ^
                (o[(i >> 8) & 255] << 8) ^
                o[i & 255]
              if (r % l === 0) {
                i = (i << 8) ^ (i >>> 24) ^ (f << 24)
                f = (f << 1) ^ ((f >> 7) * 283)
              }
            }
            a[r] = a[r - l] ^ i
          }
          for (n = 0; r; n++, r--) {
            i = a[n & 3 ? r : r - 4]
            if (r <= 4 || n < 4) {
              s[n] = i
            } else {
              s[n] =
                u[0][o[i >>> 24]] ^
                u[1][o[(i >> 16) & 255]] ^
                u[2][o[(i >> 8) & 255]] ^
                u[3][o[i & 255]]
            }
          }
        }
        e.prototype.decrypt = function e(t, r, n, i, a, s) {
          var o = this._key[1]
          var u = t ^ o[0]
          var l = i ^ o[1]
          var f = n ^ o[2]
          var d = r ^ o[3]
          var c = void 0
          var h = void 0
          var p = void 0
          var v = o.length / 4 - 2
          var g = void 0
          var m = 4
          var y = this._tables[1]
          var _ = y[0]
          var T = y[1]
          var E = y[2]
          var b = y[3]
          var S = y[4]
          for (g = 0; g < v; g++) {
            c = _[u >>> 24] ^ T[(l >> 16) & 255] ^ E[(f >> 8) & 255] ^ b[d & 255] ^ o[m]
            h = _[l >>> 24] ^ T[(f >> 16) & 255] ^ E[(d >> 8) & 255] ^ b[u & 255] ^ o[m + 1]
            p = _[f >>> 24] ^ T[(d >> 16) & 255] ^ E[(u >> 8) & 255] ^ b[l & 255] ^ o[m + 2]
            d = _[d >>> 24] ^ T[(u >> 16) & 255] ^ E[(l >> 8) & 255] ^ b[f & 255] ^ o[m + 3]
            m += 4
            u = c
            l = h
            f = p
          }
          for (g = 0; g < 4; g++) {
            a[(3 & -g) + s] =
              (S[u >>> 24] << 24) ^
              (S[(l >> 16) & 255] << 16) ^
              (S[(f >> 8) & 255] << 8) ^
              S[d & 255] ^
              o[m++]
            c = u
            u = l
            l = f
            f = d
            d = c
          }
        }
        return e
      })()
      var nd = (function() {
        function e() {
          $f(this, e)
          this.listeners = {}
        }
        e.prototype.on = function e(t, r) {
          if (!this.listeners[t]) {
            this.listeners[t] = []
          }
          this.listeners[t].push(r)
        }
        e.prototype.off = function e(t, r) {
          if (!this.listeners[t]) {
            return false
          }
          var n = this.listeners[t].indexOf(r)
          this.listeners[t].splice(n, 1)
          return n > -1
        }
        e.prototype.trigger = function e(t) {
          var r = this.listeners[t]
          if (!r) {
            return
          }
          if (arguments.length === 2) {
            var n = r.length
            for (var i = 0; i < n; ++i) {
              r[i].call(this, arguments[1])
            }
          } else {
            var a = Array.prototype.slice.call(arguments, 1)
            var s = r.length
            for (var o = 0; o < s; ++o) {
              r[o].apply(this, a)
            }
          }
        }
        e.prototype.dispose = function e() {
          this.listeners = {}
        }
        e.prototype.pipe = function e(t) {
          this.on('data', function(e) {
            t.push(e)
          })
        }
        return e
      })()
      var id = (function(e) {
        Jf(t, e)
        function t() {
          $f(this, t)
          var r = Zf(this, e.call(this, nd))
          r.jobs = []
          r.delay = 1
          r.timeout_ = null
          return r
        }
        t.prototype.processJob_ = function e() {
          this.jobs.shift()()
          if (this.jobs.length) {
            this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
          } else {
            this.timeout_ = null
          }
        }
        t.prototype.push = function e(t) {
          this.jobs.push(t)
          if (!this.timeout_) {
            this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
          }
        }
        return t
      })(nd)
      var ad = function e(t) {
        return (t << 24) | ((t & 65280) << 8) | ((t & 16711680) >> 8) | (t >>> 24)
      }
      var sd = function e(t, r, n) {
        var i = new Int32Array(t.buffer, t.byteOffset, t.byteLength >> 2)
        var a = new rd(Array.prototype.slice.call(r))
        var s = new Uint8Array(t.byteLength)
        var o = new Int32Array(s.buffer)
        var u = void 0
        var l = void 0
        var f = void 0
        var d = void 0
        var c = void 0
        var h = void 0
        var p = void 0
        var v = void 0
        var g = void 0
        u = n[0]
        l = n[1]
        f = n[2]
        d = n[3]
        for (g = 0; g < i.length; g += 4) {
          c = ad(i[g])
          h = ad(i[g + 1])
          p = ad(i[g + 2])
          v = ad(i[g + 3])
          a.decrypt(c, h, p, v, o, g)
          o[g] = ad(o[g] ^ u)
          o[g + 1] = ad(o[g + 1] ^ l)
          o[g + 2] = ad(o[g + 2] ^ f)
          o[g + 3] = ad(o[g + 3] ^ d)
          u = c
          l = h
          f = p
          d = v
        }
        return s
      }
      var od = (function() {
        function e(t, r, n, i) {
          $f(this, e)
          var a = e.STEP
          var s = new Int32Array(t.buffer)
          var o = new Uint8Array(t.byteLength)
          var u = 0
          this.asyncStream_ = new id()
          this.asyncStream_.push(this.decryptChunk_(s.subarray(u, u + a), r, n, o))
          for (u = a; u < s.length; u += a) {
            n = new Uint32Array([ad(s[u - 4]), ad(s[u - 3]), ad(s[u - 2]), ad(s[u - 1])])
            this.asyncStream_.push(this.decryptChunk_(s.subarray(u, u + a), r, n, o))
          }
          this.asyncStream_.push(function() {
            i(null, Xf(o))
          })
        }
        e.prototype.decryptChunk_ = function e(t, r, n, i) {
          return function() {
            var e = sd(t, r, n)
            i.set(e, t.byteOffset)
          }
        }
        Qf(e, null, [
          {
            key: 'STEP',
            get: function e() {
              return 32e3
            },
          },
        ])
        return e
      })()
      /**
       * @videojs/http-streaming
       * @version 1.10.6
       * @copyright 2019 Brightcove, Inc
       * @license Apache-2.0
       */
      var ud = function t(r, n) {
        if (/^[a-z]+:/i.test(n)) {
          return n
        }
        if (!/\/\//i.test(r)) {
          r = Yo.buildAbsoluteURL(e.location.href, r)
        }
        return Yo.buildAbsoluteURL(r, n)
      }
      var ld = function e(t, r, n) {
        if (t && n.responseURL && r !== n.responseURL) {
          return n.responseURL
        }
        return r
      }
      var fd = function e(t, r) {
        if (!(t instanceof r)) {
          throw new TypeError('Cannot call a class as a function')
        }
      }
      var dd = (function() {
        function e(e, t) {
          for (var r = 0; r < t.length; r++) {
            var n = t[r]
            n.enumerable = n.enumerable || false
            n.configurable = true
            if ('value' in n) n.writable = true
            Object.defineProperty(e, n.key, n)
          }
        }
        return function(t, r, n) {
          if (r) e(t.prototype, r)
          if (n) e(t, n)
          return t
        }
      })()
      var cd = function e(t, r, n) {
        if (t === null) t = Function.prototype
        var i = Object.getOwnPropertyDescriptor(t, r)
        if (i === undefined) {
          var a = Object.getPrototypeOf(t)
          if (a === null) {
            return undefined
          } else {
            return e(a, r, n)
          }
        } else if ('value' in i) {
          return i.value
        } else {
          var s = i.get
          if (s === undefined) {
            return undefined
          }
          return s.call(n)
        }
      }
      var hd = function e(t, r) {
        if (typeof r !== 'function' && r !== null) {
          throw new TypeError('Super expression must either be null or a function, not ' + typeof r)
        }
        t.prototype = Object.create(r && r.prototype, {
          constructor: { value: t, enumerable: false, writable: true, configurable: true },
        })
        if (r) Object.setPrototypeOf ? Object.setPrototypeOf(t, r) : (t.__proto__ = r)
      }
      var pd = function e(t, r) {
        if (!t) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
        }
        return r && (typeof r === 'object' || typeof r === 'function') ? r : t
      }
      var vd = (function() {
        function e(e, t) {
          var r = []
          var n = true
          var i = false
          var a = undefined
          try {
            for (var s = e[Symbol.iterator](), o; !(n = (o = s.next()).done); n = true) {
              r.push(o.value)
              if (t && r.length === t) break
            }
          } catch (e) {
            i = true
            a = e
          } finally {
            try {
              if (!n && s['return']) s['return']()
            } finally {
              if (i) throw a
            }
          }
          return r
        }
        return function(t, r) {
          if (Array.isArray(t)) {
            return t
          } else if (Symbol.iterator in Object(t)) {
            return e(t, r)
          } else {
            throw new TypeError('Invalid attempt to destructure non-iterable instance')
          }
        }
      })()
      var gd = Ho.mergeOptions,
        md = Ho.EventTarget,
        yd = Ho.log
      var _d = function e(t, r) {
        ;['AUDIO', 'SUBTITLES'].forEach(function(e) {
          for (var n in t.mediaGroups[e]) {
            for (var i in t.mediaGroups[e][n]) {
              var a = t.mediaGroups[e][n][i]
              r(a, e, n, i)
            }
          }
        })
      }
      var Td = function e(t, r, n) {
        var i = r.slice()
        n = n || 0
        var a = Math.min(t.length, r.length + n)
        for (var s = n; s < a; s++) {
          i[s - n] = gd(t[s], i[s - n])
        }
        return i
      }
      var Ed = function e(t, r) {
        if (!t.resolvedUri) {
          t.resolvedUri = ud(r, t.uri)
        }
        if (t.key && !t.key.resolvedUri) {
          t.key.resolvedUri = ud(r, t.key.uri)
        }
        if (t.map && !t.map.resolvedUri) {
          t.map.resolvedUri = ud(r, t.map.uri)
        }
      }
      var bd = function e(t, r) {
        var n = gd(t, {})
        var i = n.playlists[r.uri]
        if (!i) {
          return null
        }
        if (
          i.segments &&
          r.segments &&
          i.segments.length === r.segments.length &&
          i.endList === r.endList &&
          i.mediaSequence === r.mediaSequence
        ) {
          return null
        }
        var a = gd(i, r)
        if (i.segments) {
          a.segments = Td(i.segments, r.segments, r.mediaSequence - i.mediaSequence)
        }
        a.segments.forEach(function(e) {
          Ed(e, a.resolvedUri)
        })
        for (var s = 0; s < n.playlists.length; s++) {
          if (n.playlists[s].uri === r.uri) {
            n.playlists[s] = a
          }
        }
        n.playlists[r.uri] = a
        return n
      }
      var Sd = function e(t) {
        var r = t.playlists.length
        while (r--) {
          var n = t.playlists[r]
          t.playlists[n.uri] = n
          n.resolvedUri = ud(t.uri, n.uri)
          n.id = r
          if (!n.attributes) {
            n.attributes = {}
            yd.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.')
          }
        }
      }
      var wd = function e(t) {
        _d(t, function(e) {
          if (e.uri) {
            e.resolvedUri = ud(t.uri, e.uri)
          }
        })
      }
      var Ad = function e(t, r) {
        var n = t.segments[t.segments.length - 1]
        var i = void 0
        if (r && n && n.duration) {
          i = n.duration * 1e3
        } else {
          i = (t.targetDuration || 10) * 500
        }
        return i
      }
      var Id = (function(t) {
        hd(r, t)
        function r(e, t) {
          var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}
          fd(this, r)
          var i = pd(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this))
          var a = n.withCredentials,
            s = a === undefined ? false : a,
            o = n.handleManifestRedirects,
            u = o === undefined ? false : o
          i.srcUrl = e
          i.hls_ = t
          i.withCredentials = s
          i.handleManifestRedirects = u
          var l = t.options_
          i.customTagParsers = (l && l.customTagParsers) || []
          i.customTagMappers = (l && l.customTagMappers) || []
          if (!i.srcUrl) {
            throw new Error('A non-empty playlist URL is required')
          }
          i.state = 'HAVE_NOTHING'
          i.on('mediaupdatetimeout', function() {
            if (i.state !== 'HAVE_METADATA') {
              return
            }
            i.state = 'HAVE_CURRENT_METADATA'
            i.request = i.hls_.xhr(
              { uri: ud(i.master.uri, i.media().uri), withCredentials: i.withCredentials },
              function(e, t) {
                if (!i.request) {
                  return
                }
                if (e) {
                  return i.playlistRequestError(i.request, i.media().uri, 'HAVE_METADATA')
                }
                i.haveMetadata(i.request, i.media().uri)
              }
            )
          })
          return i
        }
        dd(r, [
          {
            key: 'playlistRequestError',
            value: function e(t, r, n) {
              this.request = null
              if (n) {
                this.state = n
              }
              this.error = {
                playlist: this.master.playlists[r],
                status: t.status,
                message: 'HLS playlist request error at URL: ' + r + '.',
                responseText: t.responseText,
                code: t.status >= 500 ? 4 : 2,
              }
              this.trigger('error')
            },
          },
          {
            key: 'haveMetadata',
            value: function t(r, n) {
              var i = this
              this.request = null
              this.state = 'HAVE_METADATA'
              var a = new ru()
              this.customTagParsers.forEach(function(e) {
                return a.addParser(e)
              })
              this.customTagMappers.forEach(function(e) {
                return a.addTagMapper(e)
              })
              a.push(r.responseText)
              a.end()
              a.manifest.uri = n
              a.manifest.attributes = a.manifest.attributes || {}
              var s = bd(this.master, a.manifest)
              this.targetDuration = a.manifest.targetDuration
              if (s) {
                this.master = s
                this.media_ = this.master.playlists[a.manifest.uri]
              } else {
                this.trigger('playlistunchanged')
              }
              if (!this.media().endList) {
                e.clearTimeout(this.mediaUpdateTimeout)
                this.mediaUpdateTimeout = e.setTimeout(function() {
                  i.trigger('mediaupdatetimeout')
                }, Ad(this.media(), !!s))
              }
              this.trigger('loadedplaylist')
            },
          },
          {
            key: 'dispose',
            value: function t() {
              this.stopRequest()
              e.clearTimeout(this.mediaUpdateTimeout)
              e.clearTimeout(this.finalRenditionTimeout)
            },
          },
          {
            key: 'stopRequest',
            value: function e() {
              if (this.request) {
                var t = this.request
                this.request = null
                t.onreadystatechange = null
                t.abort()
              }
            },
          },
          {
            key: 'media',
            value: function t(r, n) {
              var i = this
              if (!r) {
                return this.media_
              }
              if (this.state === 'HAVE_NOTHING') {
                throw new Error('Cannot switch media playlist from ' + this.state)
              }
              if (typeof r === 'string') {
                if (!this.master.playlists[r]) {
                  throw new Error('Unknown playlist URI: ' + r)
                }
                r = this.master.playlists[r]
              }
              e.clearTimeout(this.finalRenditionTimeout)
              if (n) {
                var a = (r.targetDuration / 2) * 1e3 || 5 * 1e3
                this.finalRenditionTimeout = e.setTimeout(this.media.bind(this, r, false), a)
                return
              }
              var s = this.state
              var o = !this.media_ || r.uri !== this.media_.uri
              if (this.master.playlists[r.uri].endList) {
                if (this.request) {
                  this.request.onreadystatechange = null
                  this.request.abort()
                  this.request = null
                }
                this.state = 'HAVE_METADATA'
                this.media_ = r
                if (o) {
                  this.trigger('mediachanging')
                  this.trigger('mediachange')
                }
                return
              }
              if (!o) {
                return
              }
              this.state = 'SWITCHING_MEDIA'
              if (this.request) {
                if (r.resolvedUri === this.request.url) {
                  return
                }
                this.request.onreadystatechange = null
                this.request.abort()
                this.request = null
              }
              if (this.media_) {
                this.trigger('mediachanging')
              }
              this.request = this.hls_.xhr(
                { uri: r.resolvedUri, withCredentials: this.withCredentials },
                function(e, t) {
                  if (!i.request) {
                    return
                  }
                  r.resolvedUri = ld(i.handleManifestRedirects, r.resolvedUri, t)
                  if (e) {
                    return i.playlistRequestError(i.request, r.uri, s)
                  }
                  i.haveMetadata(t, r.uri)
                  if (s === 'HAVE_MASTER') {
                    i.trigger('loadedmetadata')
                  } else {
                    i.trigger('mediachange')
                  }
                }
              )
            },
          },
          {
            key: 'pause',
            value: function t() {
              this.stopRequest()
              e.clearTimeout(this.mediaUpdateTimeout)
              if (this.state === 'HAVE_NOTHING') {
                this.started = false
              }
              if (this.state === 'SWITCHING_MEDIA') {
                if (this.media_) {
                  this.state = 'HAVE_METADATA'
                } else {
                  this.state = 'HAVE_MASTER'
                }
              } else if (this.state === 'HAVE_CURRENT_METADATA') {
                this.state = 'HAVE_METADATA'
              }
            },
          },
          {
            key: 'load',
            value: function t(r) {
              var n = this
              e.clearTimeout(this.mediaUpdateTimeout)
              var i = this.media()
              if (r) {
                var a = i ? (i.targetDuration / 2) * 1e3 : 5 * 1e3
                this.mediaUpdateTimeout = e.setTimeout(function() {
                  return n.load()
                }, a)
                return
              }
              if (!this.started) {
                this.start()
                return
              }
              if (i && !i.endList) {
                this.trigger('mediaupdatetimeout')
              } else {
                this.trigger('loadedplaylist')
              }
            },
          },
          {
            key: 'start',
            value: function t() {
              var r = this
              this.started = true
              this.request = this.hls_.xhr(
                { uri: this.srcUrl, withCredentials: this.withCredentials },
                function(t, n) {
                  if (!r.request) {
                    return
                  }
                  r.request = null
                  if (t) {
                    r.error = {
                      status: n.status,
                      message: 'HLS playlist request error at URL: ' + r.srcUrl + '.',
                      responseText: n.responseText,
                      code: 2,
                    }
                    if (r.state === 'HAVE_NOTHING') {
                      r.started = false
                    }
                    return r.trigger('error')
                  }
                  var i = new ru()
                  r.customTagParsers.forEach(function(e) {
                    return i.addParser(e)
                  })
                  r.customTagMappers.forEach(function(e) {
                    return i.addTagMapper(e)
                  })
                  i.push(n.responseText)
                  i.end()
                  r.state = 'HAVE_MASTER'
                  r.srcUrl = ld(r.handleManifestRedirects, r.srcUrl, n)
                  i.manifest.uri = r.srcUrl
                  if (i.manifest.playlists) {
                    r.master = i.manifest
                    Sd(r.master)
                    wd(r.master)
                    r.trigger('loadedplaylist')
                    if (!r.request) {
                      r.media(i.manifest.playlists[0])
                    }
                    return
                  }
                  r.master = {
                    mediaGroups: { AUDIO: {}, VIDEO: {}, 'CLOSED-CAPTIONS': {}, SUBTITLES: {} },
                    uri: e.location.href,
                    playlists: [{ uri: r.srcUrl, id: 0, resolvedUri: r.srcUrl, attributes: {} }],
                  }
                  r.master.playlists[r.srcUrl] = r.master.playlists[0]
                  r.haveMetadata(n, r.srcUrl)
                  return r.trigger('loadedmetadata')
                }
              )
            },
          },
        ])
        return r
      })(md)
      var Cd = Ho.createTimeRange
      var Rd = function e(t, r) {
        var n = 0
        var i = r - t.mediaSequence
        var a = t.segments[i]
        if (a) {
          if (typeof a.start !== 'undefined') {
            return { result: a.start, precise: true }
          }
          if (typeof a.end !== 'undefined') {
            return { result: a.end - a.duration, precise: true }
          }
        }
        while (i--) {
          a = t.segments[i]
          if (typeof a.end !== 'undefined') {
            return { result: n + a.end, precise: true }
          }
          n += a.duration
          if (typeof a.start !== 'undefined') {
            return { result: n + a.start, precise: true }
          }
        }
        return { result: n, precise: false }
      }
      var Dd = function e(t, r) {
        var n = 0
        var i = void 0
        var a = r - t.mediaSequence
        for (; a < t.segments.length; a++) {
          i = t.segments[a]
          if (typeof i.start !== 'undefined') {
            return { result: i.start - n, precise: true }
          }
          n += i.duration
          if (typeof i.end !== 'undefined') {
            return { result: i.end - n, precise: true }
          }
        }
        return { result: -1, precise: false }
      }
      var Od = function e(t, r, n) {
        var i = void 0
        var a = void 0
        if (typeof r === 'undefined') {
          r = t.mediaSequence + t.segments.length
        }
        if (r < t.mediaSequence) {
          return 0
        }
        i = Rd(t, r)
        if (i.precise) {
          return i.result
        }
        a = Dd(t, r)
        if (a.precise) {
          return a.result
        }
        return i.result + n
      }
      var Md = function t(r, n, i) {
        if (!r) {
          return 0
        }
        if (typeof i !== 'number') {
          i = 0
        }
        if (typeof n === 'undefined') {
          if (r.totalDuration) {
            return r.totalDuration
          }
          if (!r.endList) {
            return e.Infinity
          }
        }
        return Od(r, n, i)
      }
      var kd = function e(t, r, n) {
        var i = 0
        if (r > n) {
          var a = [n, r]
          r = a[0]
          n = a[1]
        }
        if (r < 0) {
          for (var s = r; s < Math.min(0, n); s++) {
            i += t.targetDuration
          }
          r = 0
        }
        for (var o = r; o < n; o++) {
          i += t.segments[o].duration
        }
        return i
      }
      var Pd = function e(t) {
        if (!t.segments.length) {
          return 0
        }
        var r = t.segments.length - 1
        var n = t.segments[r].duration || t.targetDuration
        var i = n + t.targetDuration * 2
        while (r--) {
          n += t.segments[r].duration
          if (n >= i) {
            break
          }
        }
        return Math.max(0, r)
      }
      var Nd = function e(t, r, n) {
        if (!t || !t.segments) {
          return null
        }
        if (t.endList) {
          return Md(t)
        }
        if (r === null) {
          return null
        }
        r = r || 0
        var i = n ? Pd(t) : t.segments.length
        return Od(t, t.mediaSequence + i, r)
      }
      var Ld = function e(t, r) {
        var n = true
        var i = r || 0
        var a = Nd(t, r, n)
        if (a === null) {
          return Cd()
        }
        return Cd(i, a)
      }
      var xd = function e(t) {
        return t - Math.floor(t) === 0
      }
      var Fd = function e(t, r) {
        if (xd(r)) {
          return r + t * 0.1
        }
        var n = r.toString().split('.')[1].length
        for (var i = 1; i <= n; i++) {
          var a = Math.pow(10, i)
          var s = r * a
          if (xd(s) || i === n) {
            return (s + t) / a
          }
        }
      }
      var Ud = Fd.bind(null, 1)
      var Bd = Fd.bind(null, -1)
      var jd = function e(t, r, n, i) {
        var a = void 0
        var s = void 0
        var o = t.segments.length
        var u = r - i
        if (u < 0) {
          if (n > 0) {
            for (a = n - 1; a >= 0; a--) {
              s = t.segments[a]
              u += Bd(s.duration)
              if (u > 0) {
                return { mediaIndex: a, startTime: i - kd(t, n, a) }
              }
            }
          }
          return { mediaIndex: 0, startTime: r }
        }
        if (n < 0) {
          for (a = n; a < 0; a++) {
            u -= t.targetDuration
            if (u < 0) {
              return { mediaIndex: 0, startTime: r }
            }
          }
          n = 0
        }
        for (a = n; a < o; a++) {
          s = t.segments[a]
          u -= Ud(s.duration)
          if (u < 0) {
            return { mediaIndex: a, startTime: i + kd(t, n, a) }
          }
        }
        return { mediaIndex: o - 1, startTime: r }
      }
      var Gd = function e(t) {
        return t.excludeUntil && t.excludeUntil > Date.now()
      }
      var qd = function e(t) {
        return t.excludeUntil && t.excludeUntil === Infinity
      }
      var Hd = function e(t) {
        var r = Gd(t)
        return !t.disabled && !r
      }
      var Vd = function e(t) {
        return t.disabled
      }
      var Kd = function e(t) {
        for (var r = 0; r < t.segments.length; r++) {
          if (t.segments[r].key) {
            return true
          }
        }
        return false
      }
      var Yd = function e(t) {
        for (var r = 0; r < t.segments.length; r++) {
          if (t.segments[r].map) {
            return true
          }
        }
        return false
      }
      var Wd = function e(t, r) {
        return r.attributes && r.attributes[t]
      }
      var zd = function e(t, r, n) {
        var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0
        if (!Wd('BANDWIDTH', n)) {
          return NaN
        }
        var a = t * n.attributes.BANDWIDTH
        return (a - i * 8) / r
      }
      var Xd = function e(t, r) {
        if (t.playlists.length === 1) {
          return true
        }
        var n = r.attributes.BANDWIDTH || Number.MAX_VALUE
        return (
          t.playlists.filter(function(e) {
            if (!Hd(e)) {
              return false
            }
            return (e.attributes.BANDWIDTH || 0) < n
          }).length === 0
        )
      }
      var $d = {
        duration: Md,
        seekable: Ld,
        safeLiveIndex: Pd,
        getMediaInfoForTime: jd,
        isEnabled: Hd,
        isDisabled: Vd,
        isBlacklisted: Gd,
        isIncompatible: qd,
        playlistEnd: Nd,
        isAes: Kd,
        isFmp4: Yd,
        hasAttribute: Wd,
        estimateSegmentRequestTime: zd,
        isLowestEnabledRendition: Xd,
      }
      var Qd = Ho.xhr,
        Jd = Ho.mergeOptions
      var Zd = function e() {
        var t = function e(t, r) {
          t = Jd({ timeout: 45e3 }, t)
          var n = e.beforeRequest || Ho.Hls.xhr.beforeRequest
          if (n && typeof n === 'function') {
            var i = n(t)
            if (i) {
              t = i
            }
          }
          var a = Qd(t, function(e, t) {
            var n = a.response
            if (!e && n) {
              a.responseTime = Date.now()
              a.roundTripTime = a.responseTime - a.requestTime
              a.bytesReceived = n.byteLength || n.length
              if (!a.bandwidth) {
                a.bandwidth = Math.floor((a.bytesReceived / a.roundTripTime) * 8 * 1e3)
              }
            }
            if (t.headers) {
              a.responseHeaders = t.headers
            }
            if (e && e.code === 'ETIMEDOUT') {
              a.timedout = true
            }
            if (
              !e &&
              !a.aborted &&
              t.statusCode !== 200 &&
              t.statusCode !== 206 &&
              t.statusCode !== 0
            ) {
              e = new Error('XHR Failed with a response of: ' + (a && (n || a.responseText)))
            }
            r(e, a)
          })
          var s = a.abort
          a.abort = function() {
            a.aborted = true
            return s.apply(a, arguments)
          }
          a.uri = t.uri
          a.requestTime = Date.now()
          return a
        }
        return t
      }
      var ec = function e(t) {
        var r = void 0
        var n = void 0
        n = t.offset + t.length - 1
        r = t.offset
        return 'bytes=' + r + '-' + n
      }
      var tc = function e(t) {
        var r = {}
        if (t.byterange) {
          r.Range = ec(t.byterange)
        }
        return r
      }
      var rc = function e(t, r) {
        return t.start(r) + '-' + t.end(r)
      }
      var nc = function e(t, r) {
        var n = t.toString(16)
        return '00'.substring(0, 2 - n.length) + n + (r % 2 ? ' ' : '')
      }
      var ic = function e(t) {
        if (t >= 32 && t < 126) {
          return String.fromCharCode(t)
        }
        return '.'
      }
      var ac = function e(t) {
        var r = {}
        Object.keys(t).forEach(function(e) {
          var n = t[e]
          if (ArrayBuffer.isView(n)) {
            r[e] = { bytes: n.buffer, byteOffset: n.byteOffset, byteLength: n.byteLength }
          } else {
            r[e] = n
          }
        })
        return r
      }
      var sc = function e(t) {
        var r = t.byterange || { length: Infinity, offset: 0 }
        return [r.length, r.offset, t.resolvedUri].join(',')
      }
      var oc = function e(t) {
        return t.resolvedUri
      }
      var uc = function e(t) {
        var r = Array.prototype.slice.call(t)
        var n = 16
        var i = ''
        var a = void 0
        var s = void 0
        for (var o = 0; o < r.length / n; o++) {
          a = r
            .slice(o * n, o * n + n)
            .map(nc)
            .join('')
          s = r
            .slice(o * n, o * n + n)
            .map(ic)
            .join('')
          i += a + ' ' + s + '\n'
        }
        return i
      }
      var lc = function e(t) {
        var r = t.bytes
        return uc(r)
      }
      var fc = function e(t) {
        var r = ''
        var n = void 0
        for (n = 0; n < t.length; n++) {
          r += rc(t, n) + ' '
        }
        return r
      }
      var dc = Object.freeze({
        createTransferableMessage: ac,
        initSegmentId: sc,
        segmentKeyId: oc,
        hexDump: uc,
        tagDump: lc,
        textRanges: fc,
      })
      var cc = 0.25
      var hc = function e(t, r) {
        if (!r.dateTimeObject) {
          return null
        }
        var n = r.videoTimingInfo.transmuxerPrependedSeconds
        var i = r.videoTimingInfo.transmuxedPresentationStart
        var a = i + n
        var s = t - a
        return new Date(r.dateTimeObject.getTime() + s * 1e3)
      }
      var pc = function e(t) {
        return (
          t.transmuxedPresentationEnd - t.transmuxedPresentationStart - t.transmuxerPrependedSeconds
        )
      }
      var vc = function e(t, r) {
        var n = void 0
        try {
          n = new Date(t)
        } catch (e) {
          return null
        }
        if (!r || !r.segments || r.segments.length === 0) {
          return null
        }
        var i = r.segments[0]
        if (n < i.dateTimeObject) {
          return null
        }
        for (var a = 0; a < r.segments.length - 1; a++) {
          i = r.segments[a]
          var s = r.segments[a + 1].dateTimeObject
          if (n < s) {
            break
          }
        }
        var o = r.segments[r.segments.length - 1]
        var u = o.dateTimeObject
        var l = o.videoTimingInfo ? pc(o.videoTimingInfo) : o.duration + o.duration * cc
        var f = new Date(u.getTime() + l * 1e3)
        if (n > f) {
          return null
        }
        if (n > u) {
          i = o
        }
        return {
          segment: i,
          estimatedStart: i.videoTimingInfo
            ? i.videoTimingInfo.transmuxedPresentationStart
            : $d.duration(r, r.mediaSequence + r.segments.indexOf(i)),
          type: i.videoTimingInfo ? 'accurate' : 'estimate',
        }
      }
      var gc = function e(t, r) {
        if (!r || !r.segments || r.segments.length === 0) {
          return null
        }
        var n = 0
        var i = void 0
        for (var a = 0; a < r.segments.length; a++) {
          i = r.segments[a]
          n = i.videoTimingInfo ? i.videoTimingInfo.transmuxedPresentationEnd : n + i.duration
          if (t <= n) {
            break
          }
        }
        var s = r.segments[r.segments.length - 1]
        if (s.videoTimingInfo && s.videoTimingInfo.transmuxedPresentationEnd < t) {
          return null
        }
        if (t > n) {
          if (t > n + s.duration * cc) {
            return null
          }
          i = s
        }
        return {
          segment: i,
          estimatedStart: i.videoTimingInfo
            ? i.videoTimingInfo.transmuxedPresentationStart
            : n - i.duration,
          type: i.videoTimingInfo ? 'accurate' : 'estimate',
        }
      }
      var mc = function e(t, r) {
        var n = void 0
        var i = void 0
        try {
          n = new Date(t)
          i = new Date(r)
        } catch (e) {}
        var a = n.getTime()
        var s = i.getTime()
        return (s - a) / 1e3
      }
      var yc = function e(t) {
        if (!t.segments || t.segments.length === 0) {
          return false
        }
        for (var r = 0; r < t.segments.length; r++) {
          var n = t.segments[r]
          if (!n.dateTimeObject) {
            return false
          }
        }
        return true
      }
      var _c = function e(t) {
        var r = t.playlist,
          n = t.time,
          i = n === undefined ? undefined : n,
          a = t.callback
        if (!a) {
          throw new Error('getProgramTime: callback must be provided')
        }
        if (!r || i === undefined) {
          return a({ message: 'getProgramTime: playlist and time must be provided' })
        }
        var s = gc(i, r)
        if (!s) {
          return a({ message: 'valid programTime was not found' })
        }
        if (s.type === 'estimate') {
          return a({
            message:
              'Accurate programTime could not be determined.' +
              ' Please seek to e.seekTime and try again',
            seekTime: s.estimatedStart,
          })
        }
        var o = { mediaSeconds: i }
        var u = hc(i, s.segment)
        if (u) {
          o.programDateTime = u.toISOString()
        }
        return a(null, o)
      }
      var Tc = function e(t) {
        var r = t.programTime,
          n = t.playlist,
          i = t.retryCount,
          a = i === undefined ? 2 : i,
          s = t.seekTo,
          o = t.pauseAfterSeek,
          u = o === undefined ? true : o,
          l = t.tech,
          f = t.callback
        if (!f) {
          throw new Error('seekToProgramTime: callback must be provided')
        }
        if (typeof r === 'undefined' || !n || !s) {
          return f({
            message: 'seekToProgramTime: programTime, seekTo and playlist must be provided',
          })
        }
        if (!n.endList && !l.hasStarted_) {
          return f({ message: 'player must be playing a live stream to start buffering' })
        }
        if (!yc(n)) {
          return f({
            message: 'programDateTime tags must be provided in the manifest ' + n.resolvedUri,
          })
        }
        var d = vc(r, n)
        if (!d) {
          return f({ message: r + ' was not found in the stream' })
        }
        var c = d.segment
        var h = mc(c.dateTimeObject, r)
        if (d.type === 'estimate') {
          if (a === 0) {
            return f({ message: r + ' is not buffered yet. Try again' })
          }
          s(d.estimatedStart + h)
          l.one('seeked', function() {
            e({
              programTime: r,
              playlist: n,
              retryCount: a - 1,
              seekTo: s,
              pauseAfterSeek: u,
              tech: l,
              callback: f,
            })
          })
          return
        }
        var p = c.start + h
        var v = function e() {
          return f(null, l.currentTime())
        }
        l.one('seeked', v)
        if (u) {
          l.pause()
        }
        s(p)
      }
      var Ec = 1 / 30
      var bc = Ec * 3
      var Sc = function e(t, r) {
        var n = []
        var i = void 0
        if (t && t.length) {
          for (i = 0; i < t.length; i++) {
            if (r(t.start(i), t.end(i))) {
              n.push([t.start(i), t.end(i)])
            }
          }
        }
        return Ho.createTimeRanges(n)
      }
      var wc = function e(t, r) {
        return Sc(t, function(e, t) {
          return e - bc <= r && t + bc >= r
        })
      }
      var Ac = function e(t, r) {
        return Sc(t, function(e) {
          return e - Ec >= r
        })
      }
      var Ic = function e(t) {
        if (t.length < 2) {
          return Ho.createTimeRanges()
        }
        var r = []
        for (var n = 1; n < t.length; n++) {
          var i = t.end(n - 1)
          var a = t.start(n)
          r.push([i, a])
        }
        return Ho.createTimeRanges(r)
      }
      var Cc = function e(t) {
        var r = []
        if (!t || !t.length) {
          return ''
        }
        for (var n = 0; n < t.length; n++) {
          r.push(t.start(n) + ' => ' + t.end(n))
        }
        return r.join(', ')
      }
      var Rc = function e(t, r) {
        var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1
        var i = t.length ? t.end(t.length - 1) : 0
        return (i - r) / n
      }
      var Dc = function e(t) {
        var r = []
        for (var n = 0; n < t.length; n++) {
          r.push({ start: t.start(n), end: t.end(n) })
        }
        return r
      }
      var Oc = function e(t, r, n) {
        var i = r.player_
        if (n.captions && n.captions.length) {
          if (!t.inbandTextTracks_) {
            t.inbandTextTracks_ = {}
          }
          for (var a in n.captionStreams) {
            if (!t.inbandTextTracks_[a]) {
              i.tech_.trigger({ type: 'usage', name: 'hls-608' })
              var s = i.textTracks().getTrackById(a)
              if (s) {
                t.inbandTextTracks_[a] = s
              } else {
                t.inbandTextTracks_[a] = i.addRemoteTextTrack(
                  { kind: 'captions', id: a, label: a },
                  false
                ).track
              }
            }
          }
        }
        if (n.metadata && n.metadata.length && !t.metadataTrack_) {
          t.metadataTrack_ = i.addRemoteTextTrack(
            { kind: 'metadata', label: 'Timed Metadata' },
            false
          ).track
          t.metadataTrack_.inBandMetadataTrackDispatchType = n.metadata.dispatchType
        }
      }
      var Mc = function e(t, r, n) {
        var i = void 0
        var a = void 0
        if (!n) {
          return
        }
        if (!n.cues) {
          return
        }
        i = n.cues.length
        while (i--) {
          a = n.cues[i]
          if (a.startTime <= r && a.endTime >= t) {
            n.removeCue(a)
          }
        }
      }
      var kc = function e(t) {
        Object.defineProperties(t.frame, {
          id: {
            get: function e() {
              Ho.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.')
              return t.value.key
            },
          },
          value: {
            get: function e() {
              Ho.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.')
              return t.value.data
            },
          },
          privateData: {
            get: function e() {
              Ho.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.')
              return t.value.data
            },
          },
        })
      }
      var Pc = function e(t) {
        var r = void 0
        if (isNaN(t) || Math.abs(t) === Infinity) {
          r = Number.MAX_VALUE
        } else {
          r = t
        }
        return r
      }
      var Nc = function t(r, n, i) {
        var a = e.WebKitDataCue || e.VTTCue
        if (n) {
          n.forEach(function(e) {
            var t = e.stream
            this.inbandTextTracks_[t].addCue(
              new a(e.startTime + this.timestampOffset, e.endTime + this.timestampOffset, e.text)
            )
          }, r)
        }
        if (i) {
          var s = Pc(r.mediaSource_.duration)
          i.forEach(function(t) {
            var r = t.cueTime + this.timestampOffset
            if (typeof r !== 'number' || e.isNaN(r) || r < 0 || !(r < Infinity)) {
              return
            }
            t.frames.forEach(function(e) {
              var t = new a(r, r, e.value || e.url || e.data || '')
              t.frame = e
              t.value = e
              kc(t)
              this.metadataTrack_.addCue(t)
            }, this)
          }, r)
          if (r.metadataTrack_ && r.metadataTrack_.cues && r.metadataTrack_.cues.length) {
            var o = r.metadataTrack_.cues
            var u = []
            for (var l = 0; l < o.length; l++) {
              if (o[l]) {
                u.push(o[l])
              }
            }
            var f = u.reduce(function(e, t) {
              var r = e[t.startTime] || []
              r.push(t)
              e[t.startTime] = r
              return e
            }, {})
            var d = Object.keys(f).sort(function(e, t) {
              return Number(e) - Number(t)
            })
            d.forEach(function(e, t) {
              var r = f[e]
              var n = Number(d[t + 1]) || s
              r.forEach(function(e) {
                e.endTime = n
              })
            })
          }
        }
      }
      var Lc = typeof window !== 'undefined' ? window : {},
        xc = typeof Symbol === 'undefined' ? '__target' : Symbol(),
        Fc = 'application/javascript',
        Uc = Lc.BlobBuilder || Lc.WebKitBlobBuilder || Lc.MozBlobBuilder || Lc.MSBlobBuilder,
        Bc = Lc.URL || Lc.webkitURL || (Bc && Bc.msURL),
        jc = Lc.Worker
      function Gc(e, t) {
        return function r(n) {
          var i = this
          if (!t) {
            return new jc(e)
          } else if (jc && !n) {
            var a = t
                .toString()
                .replace(/^function.+?{/, '')
                .slice(0, -1),
              s = Kc(a)
            this[xc] = new jc(s)
            Yc(this[xc], s)
            return this[xc]
          } else {
            var o = {
              postMessage: function e(t) {
                if (i.onmessage) {
                  setTimeout(function() {
                    i.onmessage({ data: t, target: o })
                  })
                }
              },
            }
            t.call(o)
            this.postMessage = function(e) {
              setTimeout(function() {
                o.onmessage({ data: e, target: i })
              })
            }
            this.isThisThread = true
          }
        }
      }
      if (jc) {
        var qc,
          Hc = Kc('self.onmessage = function () {}'),
          Vc = new Uint8Array(1)
        try {
          qc = new jc(Hc)
          qc.postMessage(Vc, [Vc.buffer])
        } catch (e) {
          jc = null
        } finally {
          Bc.revokeObjectURL(Hc)
          if (qc) {
            qc.terminate()
          }
        }
      }
      function Kc(e) {
        try {
          return Bc.createObjectURL(new Blob([e], { type: Fc }))
        } catch (r) {
          var t = new Uc()
          t.append(e)
          return Bc.createObjectURL(t.getBlob(type))
        }
      }
      function Yc(e, t) {
        if (!e || !t) return
        var r = e.terminate
        e.objURL = t
        e.terminate = function() {
          if (e.objURL) Bc.revokeObjectURL(e.objURL)
          r.call(e)
        }
      }
      var Wc = new Gc('./transmuxer-worker.worker.js', function(e, t) {
        var r = this
        var n = (function() {
          var e = function e() {
            this.init = function() {
              var e = {}
              this.on = function(t, r) {
                if (!e[t]) {
                  e[t] = []
                }
                e[t] = e[t].concat(r)
              }
              this.off = function(t, r) {
                var n
                if (!e[t]) {
                  return false
                }
                n = e[t].indexOf(r)
                e[t] = e[t].slice()
                e[t].splice(n, 1)
                return n > -1
              }
              this.trigger = function(t) {
                var r, n, i, a
                r = e[t]
                if (!r) {
                  return
                }
                if (arguments.length === 2) {
                  i = r.length
                  for (n = 0; n < i; ++n) {
                    r[n].call(this, arguments[1])
                  }
                } else {
                  a = []
                  n = arguments.length
                  for (n = 1; n < arguments.length; ++n) {
                    a.push(arguments[n])
                  }
                  i = r.length
                  for (n = 0; n < i; ++n) {
                    r[n].apply(this, a)
                  }
                }
              }
              this.dispose = function() {
                e = {}
              }
            }
          }
          e.prototype.pipe = function(e) {
            this.on('data', function(t) {
              e.push(t)
            })
            this.on('done', function(t) {
              e.flush(t)
            })
            this.on('partialdone', function(t) {
              e.partialFlush(t)
            })
            this.on('endedtimeline', function(t) {
              e.endTimeline(t)
            })
            this.on('reset', function(t) {
              e.reset(t)
            })
            return e
          }
          e.prototype.push = function(e) {
            this.trigger('data', e)
          }
          e.prototype.flush = function(e) {
            this.trigger('done', e)
          }
          e.prototype.partialFlush = function(e) {
            this.trigger('partialdone', e)
          }
          e.prototype.endTimeline = function(e) {
            this.trigger('endedtimeline', e)
          }
          e.prototype.reset = function(e) {
            this.trigger('reset', e)
          }
          var t = e
          var n = Math.pow(2, 32) - 1
          var i,
            a,
            s,
            o,
            u,
            l,
            f,
            d,
            c,
            h,
            p,
            v,
            g,
            m,
            y,
            _,
            T,
            E,
            b,
            S,
            w,
            A,
            I,
            C,
            R,
            D,
            O,
            M,
            k,
            P,
            N,
            L,
            x,
            F,
            U,
            B
          ;(function() {
            var e
            I = {
              avc1: [],
              avcC: [],
              btrt: [],
              dinf: [],
              dref: [],
              esds: [],
              ftyp: [],
              hdlr: [],
              mdat: [],
              mdhd: [],
              mdia: [],
              mfhd: [],
              minf: [],
              moof: [],
              moov: [],
              mp4a: [],
              mvex: [],
              mvhd: [],
              pasp: [],
              sdtp: [],
              smhd: [],
              stbl: [],
              stco: [],
              stsc: [],
              stsd: [],
              stsz: [],
              stts: [],
              styp: [],
              tfdt: [],
              tfhd: [],
              traf: [],
              trak: [],
              trun: [],
              trex: [],
              tkhd: [],
              vmhd: [],
            }
            if (typeof Uint8Array === 'undefined') {
              return
            }
            for (e in I) {
              if (I.hasOwnProperty(e)) {
                I[e] = [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]
              }
            }
            C = new Uint8Array([
              'i'.charCodeAt(0),
              's'.charCodeAt(0),
              'o'.charCodeAt(0),
              'm'.charCodeAt(0),
            ])
            D = new Uint8Array([
              'a'.charCodeAt(0),
              'v'.charCodeAt(0),
              'c'.charCodeAt(0),
              '1'.charCodeAt(0),
            ])
            R = new Uint8Array([0, 0, 0, 1])
            O = new Uint8Array([
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              118,
              105,
              100,
              101,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              86,
              105,
              100,
              101,
              111,
              72,
              97,
              110,
              100,
              108,
              101,
              114,
              0,
            ])
            M = new Uint8Array([
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              115,
              111,
              117,
              110,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              83,
              111,
              117,
              110,
              100,
              72,
              97,
              110,
              100,
              108,
              101,
              114,
              0,
            ])
            k = { video: O, audio: M }
            L = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1])
            N = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])
            x = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])
            F = x
            U = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
            B = x
            P = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
          })()
          i = function e(t) {
            var r = [],
              n = 0,
              i,
              a,
              s
            for (i = 1; i < arguments.length; i++) {
              r.push(arguments[i])
            }
            i = r.length
            while (i--) {
              n += r[i].byteLength
            }
            a = new Uint8Array(n + 8)
            s = new DataView(a.buffer, a.byteOffset, a.byteLength)
            s.setUint32(0, a.byteLength)
            a.set(t, 4)
            for (i = 0, n = 8; i < r.length; i++) {
              a.set(r[i], n)
              n += r[i].byteLength
            }
            return a
          }
          a = function e() {
            return i(I.dinf, i(I.dref, L))
          }
          s = function e(t) {
            return i(
              I.esds,
              new Uint8Array([
                0,
                0,
                0,
                0,
                3,
                25,
                0,
                0,
                0,
                4,
                17,
                64,
                21,
                0,
                6,
                0,
                0,
                0,
                218,
                192,
                0,
                0,
                218,
                192,
                5,
                2,
                (t.audioobjecttype << 3) | (t.samplingfrequencyindex >>> 1),
                (t.samplingfrequencyindex << 7) | (t.channelcount << 3),
                6,
                1,
                2,
              ])
            )
          }
          o = function e() {
            return i(I.ftyp, C, R, C, D)
          }
          _ = function e(t) {
            return i(I.hdlr, k[t])
          }
          u = function e(t) {
            return i(I.mdat, t)
          }
          y = function e(t) {
            var r = new Uint8Array([
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              2,
              0,
              0,
              0,
              3,
              0,
              1,
              95,
              144,
              (t.duration >>> 24) & 255,
              (t.duration >>> 16) & 255,
              (t.duration >>> 8) & 255,
              t.duration & 255,
              85,
              196,
              0,
              0,
            ])
            if (t.samplerate) {
              r[12] = (t.samplerate >>> 24) & 255
              r[13] = (t.samplerate >>> 16) & 255
              r[14] = (t.samplerate >>> 8) & 255
              r[15] = t.samplerate & 255
            }
            return i(I.mdhd, r)
          }
          m = function e(t) {
            return i(I.mdia, y(t), _(t.type), f(t))
          }
          l = function e(t) {
            return i(
              I.mfhd,
              new Uint8Array([
                0,
                0,
                0,
                0,
                (t & 4278190080) >> 24,
                (t & 16711680) >> 16,
                (t & 65280) >> 8,
                t & 255,
              ])
            )
          }
          f = function e(t) {
            return i(I.minf, t.type === 'video' ? i(I.vmhd, P) : i(I.smhd, N), a(), E(t))
          }
          d = function e(t, r) {
            var n = [],
              a = r.length
            while (a--) {
              n[a] = S(r[a])
            }
            return i.apply(null, [I.moof, l(t)].concat(n))
          }
          c = function e(t) {
            var r = t.length,
              n = []
            while (r--) {
              n[r] = v(t[r])
            }
            return i.apply(null, [I.moov, p(4294967295)].concat(n).concat(h(t)))
          }
          h = function e(t) {
            var r = t.length,
              n = []
            while (r--) {
              n[r] = w(t[r])
            }
            return i.apply(null, [I.mvex].concat(n))
          }
          p = function e(t) {
            var r = new Uint8Array([
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              1,
              0,
              0,
              0,
              2,
              0,
              1,
              95,
              144,
              (t & 4278190080) >> 24,
              (t & 16711680) >> 16,
              (t & 65280) >> 8,
              t & 255,
              0,
              1,
              0,
              0,
              1,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              1,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              1,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              64,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              255,
              255,
              255,
              255,
            ])
            return i(I.mvhd, r)
          }
          T = function e(t) {
            var r = t.samples || [],
              n = new Uint8Array(4 + r.length),
              a,
              s
            for (s = 0; s < r.length; s++) {
              a = r[s].flags
              n[s + 4] = (a.dependsOn << 4) | (a.isDependedOn << 2) | a.hasRedundancy
            }
            return i(I.sdtp, n)
          }
          E = function e(t) {
            return i(I.stbl, b(t), i(I.stts, B), i(I.stsc, F), i(I.stsz, U), i(I.stco, x))
          }
          ;(function() {
            var e, t
            b = function r(n) {
              return i(
                I.stsd,
                new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]),
                n.type === 'video' ? e(n) : t(n)
              )
            }
            e = function e(t) {
              var r = t.sps || [],
                n = t.pps || [],
                a = [],
                s = [],
                o,
                u
              for (o = 0; o < r.length; o++) {
                a.push((r[o].byteLength & 65280) >>> 8)
                a.push(r[o].byteLength & 255)
                a = a.concat(Array.prototype.slice.call(r[o]))
              }
              for (o = 0; o < n.length; o++) {
                s.push((n[o].byteLength & 65280) >>> 8)
                s.push(n[o].byteLength & 255)
                s = s.concat(Array.prototype.slice.call(n[o]))
              }
              u = [
                I.avc1,
                new Uint8Array([
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  (t.width & 65280) >> 8,
                  t.width & 255,
                  (t.height & 65280) >> 8,
                  t.height & 255,
                  0,
                  72,
                  0,
                  0,
                  0,
                  72,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  19,
                  118,
                  105,
                  100,
                  101,
                  111,
                  106,
                  115,
                  45,
                  99,
                  111,
                  110,
                  116,
                  114,
                  105,
                  98,
                  45,
                  104,
                  108,
                  115,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  24,
                  17,
                  17,
                ]),
                i(
                  I.avcC,
                  new Uint8Array(
                    [1, t.profileIdc, t.profileCompatibility, t.levelIdc, 255].concat(
                      [r.length],
                      a,
                      [n.length],
                      s
                    )
                  )
                ),
                i(I.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])),
              ]
              if (t.sarRatio) {
                var l = t.sarRatio[0],
                  f = t.sarRatio[1]
                u.push(
                  i(
                    I.pasp,
                    new Uint8Array([
                      (l & 4278190080) >> 24,
                      (l & 16711680) >> 16,
                      (l & 65280) >> 8,
                      l & 255,
                      (f & 4278190080) >> 24,
                      (f & 16711680) >> 16,
                      (f & 65280) >> 8,
                      f & 255,
                    ])
                  )
                )
              }
              return i.apply(null, u)
            }
            t = function e(t) {
              return i(
                I.mp4a,
                new Uint8Array([
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  (t.channelcount & 65280) >> 8,
                  t.channelcount & 255,
                  (t.samplesize & 65280) >> 8,
                  t.samplesize & 255,
                  0,
                  0,
                  0,
                  0,
                  (t.samplerate & 65280) >> 8,
                  t.samplerate & 255,
                  0,
                  0,
                ]),
                s(t)
              )
            }
          })()
          g = function e(t) {
            var r = new Uint8Array([
              0,
              0,
              0,
              7,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              (t.id & 4278190080) >> 24,
              (t.id & 16711680) >> 16,
              (t.id & 65280) >> 8,
              t.id & 255,
              0,
              0,
              0,
              0,
              (t.duration & 4278190080) >> 24,
              (t.duration & 16711680) >> 16,
              (t.duration & 65280) >> 8,
              t.duration & 255,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              1,
              0,
              0,
              0,
              0,
              1,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              1,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              64,
              0,
              0,
              0,
              (t.width & 65280) >> 8,
              t.width & 255,
              0,
              0,
              (t.height & 65280) >> 8,
              t.height & 255,
              0,
              0,
            ])
            return i(I.tkhd, r)
          }
          S = function e(t) {
            var r, a, s, o, u, l, f
            r = i(
              I.tfhd,
              new Uint8Array([
                0,
                0,
                0,
                58,
                (t.id & 4278190080) >> 24,
                (t.id & 16711680) >> 16,
                (t.id & 65280) >> 8,
                t.id & 255,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
              ])
            )
            l = Math.floor(t.baseMediaDecodeTime / (n + 1))
            f = Math.floor(t.baseMediaDecodeTime % (n + 1))
            a = i(
              I.tfdt,
              new Uint8Array([
                1,
                0,
                0,
                0,
                (l >>> 24) & 255,
                (l >>> 16) & 255,
                (l >>> 8) & 255,
                l & 255,
                (f >>> 24) & 255,
                (f >>> 16) & 255,
                (f >>> 8) & 255,
                f & 255,
              ])
            )
            u = 32 + 20 + 8 + 16 + 8 + 8
            if (t.type === 'audio') {
              s = A(t, u)
              return i(I.traf, r, a, s)
            }
            o = T(t)
            s = A(t, o.length + u)
            return i(I.traf, r, a, s, o)
          }
          v = function e(t) {
            t.duration = t.duration || 4294967295
            return i(I.trak, g(t), m(t))
          }
          w = function e(t) {
            var r = new Uint8Array([
              0,
              0,
              0,
              0,
              (t.id & 4278190080) >> 24,
              (t.id & 16711680) >> 16,
              (t.id & 65280) >> 8,
              t.id & 255,
              0,
              0,
              0,
              1,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              1,
              0,
              1,
            ])
            if (t.type !== 'video') {
              r[r.length - 1] = 0
            }
            return i(I.trex, r)
          }
          ;(function() {
            var e, t, r
            r = function e(t, r) {
              var n = 0,
                i = 0,
                a = 0,
                s = 0
              if (t.length) {
                if (t[0].duration !== undefined) {
                  n = 1
                }
                if (t[0].size !== undefined) {
                  i = 2
                }
                if (t[0].flags !== undefined) {
                  a = 4
                }
                if (t[0].compositionTimeOffset !== undefined) {
                  s = 8
                }
              }
              return [
                0,
                0,
                n | i | a | s,
                1,
                (t.length & 4278190080) >>> 24,
                (t.length & 16711680) >>> 16,
                (t.length & 65280) >>> 8,
                t.length & 255,
                (r & 4278190080) >>> 24,
                (r & 16711680) >>> 16,
                (r & 65280) >>> 8,
                r & 255,
              ]
            }
            t = function e(t, n) {
              var a, s, o, u
              s = t.samples || []
              n += 8 + 12 + 16 * s.length
              a = r(s, n)
              for (u = 0; u < s.length; u++) {
                o = s[u]
                a = a.concat([
                  (o.duration & 4278190080) >>> 24,
                  (o.duration & 16711680) >>> 16,
                  (o.duration & 65280) >>> 8,
                  o.duration & 255,
                  (o.size & 4278190080) >>> 24,
                  (o.size & 16711680) >>> 16,
                  (o.size & 65280) >>> 8,
                  o.size & 255,
                  (o.flags.isLeading << 2) | o.flags.dependsOn,
                  (o.flags.isDependedOn << 6) |
                    (o.flags.hasRedundancy << 4) |
                    (o.flags.paddingValue << 1) |
                    o.flags.isNonSyncSample,
                  o.flags.degradationPriority & (240 << 8),
                  o.flags.degradationPriority & 15,
                  (o.compositionTimeOffset & 4278190080) >>> 24,
                  (o.compositionTimeOffset & 16711680) >>> 16,
                  (o.compositionTimeOffset & 65280) >>> 8,
                  o.compositionTimeOffset & 255,
                ])
              }
              return i(I.trun, new Uint8Array(a))
            }
            e = function e(t, n) {
              var a, s, o, u
              s = t.samples || []
              n += 8 + 12 + 8 * s.length
              a = r(s, n)
              for (u = 0; u < s.length; u++) {
                o = s[u]
                a = a.concat([
                  (o.duration & 4278190080) >>> 24,
                  (o.duration & 16711680) >>> 16,
                  (o.duration & 65280) >>> 8,
                  o.duration & 255,
                  (o.size & 4278190080) >>> 24,
                  (o.size & 16711680) >>> 16,
                  (o.size & 65280) >>> 8,
                  o.size & 255,
                ])
              }
              return i(I.trun, new Uint8Array(a))
            }
            A = function r(n, i) {
              if (n.type === 'audio') {
                return e(n, i)
              }
              return t(n, i)
            }
          })()
          var j = {
            ftyp: o,
            mdat: u,
            moof: d,
            moov: c,
            initSegment: function e(t) {
              var r = o(),
                n = c(t),
                i
              i = new Uint8Array(r.byteLength + n.byteLength)
              i.set(r)
              i.set(n, r.byteLength)
              return i
            },
          }
          var G = function e(t) {
            var r,
              n,
              i = [],
              a = []
            a.byteLength = 0
            a.nalCount = 0
            a.duration = 0
            i.byteLength = 0
            for (r = 0; r < t.length; r++) {
              n = t[r]
              if (n.nalUnitType === 'access_unit_delimiter_rbsp') {
                if (i.length) {
                  i.duration = n.dts - i.dts
                  a.byteLength += i.byteLength
                  a.nalCount += i.length
                  a.duration += i.duration
                  a.push(i)
                }
                i = [n]
                i.byteLength = n.data.byteLength
                i.pts = n.pts
                i.dts = n.dts
              } else {
                if (n.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {
                  i.keyFrame = true
                }
                i.duration = n.dts - i.dts
                i.byteLength += n.data.byteLength
                i.push(n)
              }
            }
            if (a.length && (!i.duration || i.duration <= 0)) {
              i.duration = a[a.length - 1].duration
            }
            a.byteLength += i.byteLength
            a.nalCount += i.length
            a.duration += i.duration
            a.push(i)
            return a
          }
          var q = function e(t) {
            var r,
              n,
              i = [],
              a = []
            i.byteLength = 0
            i.nalCount = 0
            i.duration = 0
            i.pts = t[0].pts
            i.dts = t[0].dts
            a.byteLength = 0
            a.nalCount = 0
            a.duration = 0
            a.pts = t[0].pts
            a.dts = t[0].dts
            for (r = 0; r < t.length; r++) {
              n = t[r]
              if (n.keyFrame) {
                if (i.length) {
                  a.push(i)
                  a.byteLength += i.byteLength
                  a.nalCount += i.nalCount
                  a.duration += i.duration
                }
                i = [n]
                i.nalCount = n.length
                i.byteLength = n.byteLength
                i.pts = n.pts
                i.dts = n.dts
                i.duration = n.duration
              } else {
                i.duration += n.duration
                i.nalCount += n.length
                i.byteLength += n.byteLength
                i.push(n)
              }
            }
            if (a.length && i.duration <= 0) {
              i.duration = a[a.length - 1].duration
            }
            a.byteLength += i.byteLength
            a.nalCount += i.nalCount
            a.duration += i.duration
            a.push(i)
            return a
          }
          var H = function e(t) {
            var r
            if (!t[0][0].keyFrame && t.length > 1) {
              r = t.shift()
              t.byteLength -= r.byteLength
              t.nalCount -= r.nalCount
              t[0][0].dts = r.dts
              t[0][0].pts = r.pts
              t[0][0].duration += r.duration
            }
            return t
          }
          var V = function e() {
            return {
              size: 0,
              flags: {
                isLeading: 0,
                dependsOn: 1,
                isDependedOn: 0,
                hasRedundancy: 0,
                degradationPriority: 0,
                isNonSyncSample: 1,
              },
            }
          }
          var K = function e(t, r) {
            var n = V()
            n.dataOffset = r
            n.compositionTimeOffset = t.pts - t.dts
            n.duration = t.duration
            n.size = 4 * t.length
            n.size += t.byteLength
            if (t.keyFrame) {
              n.flags.dependsOn = 2
              n.flags.isNonSyncSample = 0
            }
            return n
          }
          var Y = function e(t, r) {
            var n,
              i,
              a,
              s,
              o,
              u = r || 0,
              l = []
            for (n = 0; n < t.length; n++) {
              s = t[n]
              for (i = 0; i < s.length; i++) {
                o = s[i]
                a = K(o, u)
                u += a.size
                l.push(a)
              }
            }
            return l
          }
          var W = function e(t) {
            var r,
              n,
              i,
              a,
              s,
              o,
              u = 0,
              l = t.byteLength,
              f = t.nalCount,
              d = l + 4 * f,
              c = new Uint8Array(d),
              h = new DataView(c.buffer)
            for (r = 0; r < t.length; r++) {
              a = t[r]
              for (n = 0; n < a.length; n++) {
                s = a[n]
                for (i = 0; i < s.length; i++) {
                  o = s[i]
                  h.setUint32(u, o.data.byteLength)
                  u += 4
                  c.set(o.data, u)
                  u += o.data.byteLength
                }
              }
            }
            return c
          }
          var z = function e(t, r) {
            var n,
              i = r || 0,
              a = []
            n = K(t, i)
            a.push(n)
            return a
          }
          var X = function e(t) {
            var r,
              n,
              i = 0,
              a = t.byteLength,
              s = t.length,
              o = a + 4 * s,
              u = new Uint8Array(o),
              l = new DataView(u.buffer)
            for (r = 0; r < t.length; r++) {
              n = t[r]
              l.setUint32(i, n.data.byteLength)
              i += 4
              u.set(n.data, i)
              i += n.data.byteLength
            }
            return u
          }
          var $ = {
            groupNalsIntoFrames: G,
            groupFramesIntoGops: q,
            extendFirstKeyFrame: H,
            generateSampleTable: Y,
            concatenateNalData: W,
            generateSampleTableForFrame: z,
            concatenateNalDataForFrame: X,
          }
          var Q = [33, 16, 5, 32, 164, 27]
          var J = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252]
          var Z = function e(t) {
            var r = []
            while (t--) {
              r.push(0)
            }
            return r
          }
          var ee = function e(t) {
            return Object.keys(t).reduce(function(e, r) {
              e[r] = new Uint8Array(
                t[r].reduce(function(e, t) {
                  return e.concat(t)
                }, [])
              )
              return e
            }, {})
          }
          var te = {
            96e3: [Q, [227, 64], Z(154), [56]],
            88200: [Q, [231], Z(170), [56]],
            64e3: [Q, [248, 192], Z(240), [56]],
            48e3: [Q, [255, 192], Z(268), [55, 148, 128], Z(54), [112]],
            44100: [Q, [255, 192], Z(268), [55, 163, 128], Z(84), [112]],
            32e3: [Q, [255, 192], Z(268), [55, 234], Z(226), [112]],
            24e3: [Q, [255, 192], Z(268), [55, 255, 128], Z(268), [111, 112], Z(126), [224]],
            16e3: [
              Q,
              [255, 192],
              Z(268),
              [55, 255, 128],
              Z(268),
              [111, 255],
              Z(269),
              [223, 108],
              Z(195),
              [1, 192],
            ],
            12e3: [
              J,
              Z(268),
              [3, 127, 248],
              Z(268),
              [6, 255, 240],
              Z(268),
              [13, 255, 224],
              Z(268),
              [27, 253, 128],
              Z(259),
              [56],
            ],
            11025: [
              J,
              Z(268),
              [3, 127, 248],
              Z(268),
              [6, 255, 240],
              Z(268),
              [13, 255, 224],
              Z(268),
              [27, 255, 192],
              Z(268),
              [55, 175, 128],
              Z(108),
              [112],
            ],
            8e3: [J, Z(268), [3, 121, 16], Z(47), [7]],
          }
          var re = ee(te)
          var ne = 9e4,
            ie,
            ae,
            se,
            oe,
            ue,
            le,
            fe
          ie = function e(t) {
            return t * ne
          }
          ae = function e(t, r) {
            return t * r
          }
          se = function e(t) {
            return t / ne
          }
          oe = function e(t, r) {
            return t / r
          }
          ue = function e(t, r) {
            return ie(oe(t, r))
          }
          le = function e(t, r) {
            return ae(se(t), r)
          }
          fe = function e(t, r, n) {
            return se(n ? t : t - r)
          }
          var de = {
            ONE_SECOND_IN_TS: ne,
            secondsToVideoTs: ie,
            secondsToAudioTs: ae,
            videoTsToSeconds: se,
            audioTsToSeconds: oe,
            audioTsToVideoTs: ue,
            videoTsToAudioTs: le,
            metadataTsToSeconds: fe,
          }
          var ce = function e(t) {
            var r,
              n,
              i = 0
            for (r = 0; r < t.length; r++) {
              n = t[r]
              i += n.data.byteLength
            }
            return i
          }
          var he = function e(t, r, n, i) {
            var a,
              s = 0,
              o = 0,
              u = 0,
              l = 0,
              f,
              d,
              c
            if (!r.length) {
              return
            }
            a = de.audioTsToVideoTs(t.baseMediaDecodeTime, t.samplerate)
            s = Math.ceil(de.ONE_SECOND_IN_TS / (t.samplerate / 1024))
            if (n && i) {
              o = a - Math.max(n, i)
              u = Math.floor(o / s)
              l = u * s
            }
            if (u < 1 || l > de.ONE_SECOND_IN_TS / 2) {
              return
            }
            f = re[t.samplerate]
            if (!f) {
              f = r[0].data
            }
            for (d = 0; d < u; d++) {
              c = r[0]
              r.splice(0, 0, { data: f, dts: c.dts - s, pts: c.pts - s })
            }
            t.baseMediaDecodeTime -= Math.floor(de.videoTsToAudioTs(l, t.samplerate))
          }
          var pe = function e(t, r, n) {
            if (r.minSegmentDts >= n) {
              return t
            }
            r.minSegmentDts = Infinity
            return t.filter(function(e) {
              if (e.dts >= n) {
                r.minSegmentDts = Math.min(r.minSegmentDts, e.dts)
                r.minSegmentPts = r.minSegmentDts
                return true
              }
              return false
            })
          }
          var ve = function e(t) {
            var r,
              n,
              i = []
            for (r = 0; r < t.length; r++) {
              n = t[r]
              i.push({ size: n.data.byteLength, duration: 1024 })
            }
            return i
          }
          var ge = function e(t) {
            var r,
              n,
              i = 0,
              a = new Uint8Array(ce(t))
            for (r = 0; r < t.length; r++) {
              n = t[r]
              a.set(n.data, i)
              i += n.data.byteLength
            }
            return a
          }
          var me = {
            prefixWithSilence: he,
            trimAdtsFramesByEarliestDts: pe,
            generateSampleTable: ve,
            concatenateFrameData: ge,
          }
          var ye = de.ONE_SECOND_IN_TS
          var _e = function e(t, r) {
            if (typeof r.pts === 'number') {
              if (t.timelineStartInfo.pts === undefined) {
                t.timelineStartInfo.pts = r.pts
              }
              if (t.minSegmentPts === undefined) {
                t.minSegmentPts = r.pts
              } else {
                t.minSegmentPts = Math.min(t.minSegmentPts, r.pts)
              }
              if (t.maxSegmentPts === undefined) {
                t.maxSegmentPts = r.pts
              } else {
                t.maxSegmentPts = Math.max(t.maxSegmentPts, r.pts)
              }
            }
            if (typeof r.dts === 'number') {
              if (t.timelineStartInfo.dts === undefined) {
                t.timelineStartInfo.dts = r.dts
              }
              if (t.minSegmentDts === undefined) {
                t.minSegmentDts = r.dts
              } else {
                t.minSegmentDts = Math.min(t.minSegmentDts, r.dts)
              }
              if (t.maxSegmentDts === undefined) {
                t.maxSegmentDts = r.dts
              } else {
                t.maxSegmentDts = Math.max(t.maxSegmentDts, r.dts)
              }
            }
          }
          var Te = function e(t) {
            delete t.minSegmentDts
            delete t.maxSegmentDts
            delete t.minSegmentPts
            delete t.maxSegmentPts
          }
          var Ee = function e(t, r) {
            var n,
              i,
              a = t.minSegmentDts
            if (!r) {
              a -= t.timelineStartInfo.dts
            }
            n = t.timelineStartInfo.baseMediaDecodeTime
            n += a
            n = Math.max(0, n)
            if (t.type === 'audio') {
              i = t.samplerate / ye
              n *= i
              n = Math.floor(n)
            }
            return n
          }
          var be = { clearDtsInfo: Te, calculateTrackBaseMediaDecodeTime: Ee, collectDtsInfo: _e }
          var Se = 4,
            we = 128
          var Ae = function e(t) {
            var r = 0,
              n = { payloadType: -1, payloadSize: 0 },
              i = 0,
              a = 0
            while (r < t.byteLength) {
              if (t[r] === we) {
                break
              }
              while (t[r] === 255) {
                i += 255
                r++
              }
              i += t[r++]
              while (t[r] === 255) {
                a += 255
                r++
              }
              a += t[r++]
              if (!n.payload && i === Se) {
                n.payloadType = i
                n.payloadSize = a
                n.payload = t.subarray(r, r + a)
                break
              }
              r += a
              i = 0
              a = 0
            }
            return n
          }
          var Ie = function e(t) {
            if (t.payload[0] !== 181) {
              return null
            }
            if (((t.payload[1] << 8) | t.payload[2]) !== 49) {
              return null
            }
            if (
              String.fromCharCode(t.payload[3], t.payload[4], t.payload[5], t.payload[6]) !== 'GA94'
            ) {
              return null
            }
            if (t.payload[7] !== 3) {
              return null
            }
            return t.payload.subarray(8, t.payload.length - 1)
          }
          var Ce = function e(t, r) {
            var n = [],
              i,
              a,
              s,
              o
            if (!(r[0] & 64)) {
              return n
            }
            a = r[0] & 31
            for (i = 0; i < a; i++) {
              s = i * 3
              o = { type: r[s + 2] & 3, pts: t }
              if (r[s + 2] & 4) {
                o.ccData = (r[s + 3] << 8) | r[s + 4]
                n.push(o)
              }
            }
            return n
          }
          var Re = function e(t) {
            var r = t.byteLength,
              n = [],
              i = 1,
              a,
              s
            while (i < r - 2) {
              if (t[i] === 0 && t[i + 1] === 0 && t[i + 2] === 3) {
                n.push(i + 2)
                i += 2
              } else {
                i++
              }
            }
            if (n.length === 0) {
              return t
            }
            a = r - n.length
            s = new Uint8Array(a)
            var o = 0
            for (i = 0; i < a; o++, i++) {
              if (o === n[0]) {
                o++
                n.shift()
              }
              s[i] = t[o]
            }
            return s
          }
          var De = {
            parseSei: Ae,
            parseUserData: Ie,
            parseCaptionPackets: Ce,
            discardEmulationPreventionBytes: Re,
            USER_DATA_REGISTERED_ITU_T_T35: Se,
          }
          var Oe = function e() {
            e.prototype.init.call(this)
            this.captionPackets_ = []
            this.ccStreams_ = [new xe(0, 0), new xe(0, 1), new xe(1, 0), new xe(1, 1)]
            this.reset()
            this.ccStreams_.forEach(function(e) {
              e.on('data', this.trigger.bind(this, 'data'))
              e.on('partialdone', this.trigger.bind(this, 'partialdone'))
              e.on('done', this.trigger.bind(this, 'done'))
            }, this)
          }
          Oe.prototype = new t()
          Oe.prototype.push = function(e) {
            var t, r, n
            if (e.nalUnitType !== 'sei_rbsp') {
              return
            }
            t = De.parseSei(e.escapedRBSP)
            if (t.payloadType !== De.USER_DATA_REGISTERED_ITU_T_T35) {
              return
            }
            r = De.parseUserData(t)
            if (!r) {
              return
            }
            if (e.dts < this.latestDts_) {
              this.ignoreNextEqualDts_ = true
              return
            } else if (e.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
              this.numSameDts_--
              if (!this.numSameDts_) {
                this.ignoreNextEqualDts_ = false
              }
              return
            }
            n = De.parseCaptionPackets(e.pts, r)
            this.captionPackets_ = this.captionPackets_.concat(n)
            if (this.latestDts_ !== e.dts) {
              this.numSameDts_ = 0
            }
            this.numSameDts_++
            this.latestDts_ = e.dts
          }
          Oe.prototype.flushCCStreams = function(e) {
            this.ccStreams_.forEach(function(t) {
              return e === 'flush' ? t.flush() : t.partialFlush()
            }, this)
          }
          Oe.prototype.flushStream = function(e) {
            if (!this.captionPackets_.length) {
              this.flushCCStreams(e)
              return
            }
            this.captionPackets_.forEach(function(e, t) {
              e.presortIndex = t
            })
            this.captionPackets_.sort(function(e, t) {
              if (e.pts === t.pts) {
                return e.presortIndex - t.presortIndex
              }
              return e.pts - t.pts
            })
            this.captionPackets_.forEach(function(e) {
              if (e.type < 2) {
                this.dispatchCea608Packet(e)
              }
            }, this)
            this.captionPackets_.length = 0
            this.flushCCStreams(e)
          }
          Oe.prototype.flush = function() {
            return this.flushStream('flush')
          }
          Oe.prototype.partialFlush = function() {
            return this.flushStream('partialFlush')
          }
          Oe.prototype.reset = function() {
            this.latestDts_ = null
            this.ignoreNextEqualDts_ = false
            this.numSameDts_ = 0
            this.activeCea608Channel_ = [null, null]
            this.ccStreams_.forEach(function(e) {
              e.reset()
            })
          }
          Oe.prototype.dispatchCea608Packet = function(e) {
            if (this.setsTextOrXDSActive(e)) {
              this.activeCea608Channel_[e.type] = null
            } else if (this.setsChannel1Active(e)) {
              this.activeCea608Channel_[e.type] = 0
            } else if (this.setsChannel2Active(e)) {
              this.activeCea608Channel_[e.type] = 1
            }
            if (this.activeCea608Channel_[e.type] === null) {
              return
            }
            this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
          }
          Oe.prototype.setsChannel1Active = function(e) {
            return (e.ccData & 30720) === 4096
          }
          Oe.prototype.setsChannel2Active = function(e) {
            return (e.ccData & 30720) === 6144
          }
          Oe.prototype.setsTextOrXDSActive = function(e) {
            return (
              (e.ccData & 28928) === 256 ||
              (e.ccData & 30974) === 4138 ||
              (e.ccData & 30974) === 6186
            )
          }
          var Me = {
            42: 225,
            92: 233,
            94: 237,
            95: 243,
            96: 250,
            123: 231,
            124: 247,
            125: 209,
            126: 241,
            127: 9608,
            304: 174,
            305: 176,
            306: 189,
            307: 191,
            308: 8482,
            309: 162,
            310: 163,
            311: 9834,
            312: 224,
            313: 160,
            314: 232,
            315: 226,
            316: 234,
            317: 238,
            318: 244,
            319: 251,
            544: 193,
            545: 201,
            546: 211,
            547: 218,
            548: 220,
            549: 252,
            550: 8216,
            551: 161,
            552: 42,
            553: 39,
            554: 8212,
            555: 169,
            556: 8480,
            557: 8226,
            558: 8220,
            559: 8221,
            560: 192,
            561: 194,
            562: 199,
            563: 200,
            564: 202,
            565: 203,
            566: 235,
            567: 206,
            568: 207,
            569: 239,
            570: 212,
            571: 217,
            572: 249,
            573: 219,
            574: 171,
            575: 187,
            800: 195,
            801: 227,
            802: 205,
            803: 204,
            804: 236,
            805: 210,
            806: 242,
            807: 213,
            808: 245,
            809: 123,
            810: 125,
            811: 92,
            812: 94,
            813: 95,
            814: 124,
            815: 126,
            816: 196,
            817: 228,
            818: 214,
            819: 246,
            820: 223,
            821: 165,
            822: 164,
            823: 9474,
            824: 197,
            825: 229,
            826: 216,
            827: 248,
            828: 9484,
            829: 9488,
            830: 9492,
            831: 9496,
          }
          var ke = function e(t) {
            if (t === null) {
              return ''
            }
            t = Me[t] || t
            return String.fromCharCode(t)
          }
          var Pe = 14
          var Ne = [
            4352,
            4384,
            4608,
            4640,
            5376,
            5408,
            5632,
            5664,
            5888,
            5920,
            4096,
            4864,
            4896,
            5120,
            5152,
          ]
          var Le = function e() {
            var t = [],
              r = Pe + 1
            while (r--) {
              t.push('')
            }
            return t
          }
          var xe = function e(t, r) {
            e.prototype.init.call(this)
            this.field_ = t || 0
            this.dataChannel_ = r || 0
            this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1)
            this.setConstants()
            this.reset()
            this.push = function(e) {
              var t, r, n, i, a
              t = e.ccData & 32639
              if (t === this.lastControlCode_) {
                this.lastControlCode_ = null
                return
              }
              if ((t & 61440) === 4096) {
                this.lastControlCode_ = t
              } else if (t !== this.PADDING_) {
                this.lastControlCode_ = null
              }
              n = t >>> 8
              i = t & 255
              if (t === this.PADDING_) {
                return
              } else if (t === this.RESUME_CAPTION_LOADING_) {
                this.mode_ = 'popOn'
              } else if (t === this.END_OF_CAPTION_) {
                this.mode_ = 'popOn'
                this.clearFormatting(e.pts)
                this.flushDisplayed(e.pts)
                r = this.displayed_
                this.displayed_ = this.nonDisplayed_
                this.nonDisplayed_ = r
                this.startPts_ = e.pts
              } else if (t === this.ROLL_UP_2_ROWS_) {
                this.rollUpRows_ = 2
                this.setRollUp(e.pts)
              } else if (t === this.ROLL_UP_3_ROWS_) {
                this.rollUpRows_ = 3
                this.setRollUp(e.pts)
              } else if (t === this.ROLL_UP_4_ROWS_) {
                this.rollUpRows_ = 4
                this.setRollUp(e.pts)
              } else if (t === this.CARRIAGE_RETURN_) {
                this.clearFormatting(e.pts)
                this.flushDisplayed(e.pts)
                this.shiftRowsUp_()
                this.startPts_ = e.pts
              } else if (t === this.BACKSPACE_) {
                if (this.mode_ === 'popOn') {
                  this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
                } else {
                  this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
                }
              } else if (t === this.ERASE_DISPLAYED_MEMORY_) {
                this.flushDisplayed(e.pts)
                this.displayed_ = Le()
              } else if (t === this.ERASE_NON_DISPLAYED_MEMORY_) {
                this.nonDisplayed_ = Le()
              } else if (t === this.RESUME_DIRECT_CAPTIONING_) {
                if (this.mode_ !== 'paintOn') {
                  this.flushDisplayed(e.pts)
                  this.displayed_ = Le()
                }
                this.mode_ = 'paintOn'
                this.startPts_ = e.pts
              } else if (this.isSpecialCharacter(n, i)) {
                n = (n & 3) << 8
                a = ke(n | i)
                this[this.mode_](e.pts, a)
                this.column_++
              } else if (this.isExtCharacter(n, i)) {
                if (this.mode_ === 'popOn') {
                  this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1)
                } else {
                  this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1)
                }
                n = (n & 3) << 8
                a = ke(n | i)
                this[this.mode_](e.pts, a)
                this.column_++
              } else if (this.isMidRowCode(n, i)) {
                this.clearFormatting(e.pts)
                this[this.mode_](e.pts, ' ')
                this.column_++
                if ((i & 14) === 14) {
                  this.addFormatting(e.pts, ['i'])
                }
                if ((i & 1) === 1) {
                  this.addFormatting(e.pts, ['u'])
                }
              } else if (this.isOffsetControlCode(n, i)) {
                this.column_ += i & 3
              } else if (this.isPAC(n, i)) {
                var s = Ne.indexOf(t & 7968)
                if (this.mode_ === 'rollUp') {
                  if (s - this.rollUpRows_ + 1 < 0) {
                    s = this.rollUpRows_ - 1
                  }
                  this.setRollUp(e.pts, s)
                }
                if (s !== this.row_) {
                  this.clearFormatting(e.pts)
                  this.row_ = s
                }
                if (i & 1 && this.formatting_.indexOf('u') === -1) {
                  this.addFormatting(e.pts, ['u'])
                }
                if ((t & 16) === 16) {
                  this.column_ = ((t & 14) >> 1) * 4
                }
                if (this.isColorPAC(i)) {
                  if ((i & 14) === 14) {
                    this.addFormatting(e.pts, ['i'])
                  }
                }
              } else if (this.isNormalChar(n)) {
                if (i === 0) {
                  i = null
                }
                a = ke(n)
                a += ke(i)
                this[this.mode_](e.pts, a)
                this.column_ += a.length
              }
            }
          }
          xe.prototype = new t()
          xe.prototype.flushDisplayed = function(e) {
            var t = this.displayed_
              .map(function(e) {
                try {
                  return e.trim()
                } catch (e) {
                  console.error('Skipping malformed caption.')
                  return ''
                }
              })
              .join('\n')
              .replace(/^\n+|\n+$/g, '')
            if (t.length) {
              this.trigger('data', {
                startPts: this.startPts_,
                endPts: e,
                text: t,
                stream: this.name_,
              })
            }
          }
          xe.prototype.reset = function() {
            this.mode_ = 'popOn'
            this.topRow_ = 0
            this.startPts_ = 0
            this.displayed_ = Le()
            this.nonDisplayed_ = Le()
            this.lastControlCode_ = null
            this.column_ = 0
            this.row_ = Pe
            this.rollUpRows_ = 2
            this.formatting_ = []
          }
          xe.prototype.setConstants = function() {
            if (this.dataChannel_ === 0) {
              this.BASE_ = 16
              this.EXT_ = 17
              this.CONTROL_ = (20 | this.field_) << 8
              this.OFFSET_ = 23
            } else if (this.dataChannel_ === 1) {
              this.BASE_ = 24
              this.EXT_ = 25
              this.CONTROL_ = (28 | this.field_) << 8
              this.OFFSET_ = 31
            }
            this.PADDING_ = 0
            this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32
            this.END_OF_CAPTION_ = this.CONTROL_ | 47
            this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37
            this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38
            this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39
            this.CARRIAGE_RETURN_ = this.CONTROL_ | 45
            this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41
            this.BACKSPACE_ = this.CONTROL_ | 33
            this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44
            this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46
          }
          xe.prototype.isSpecialCharacter = function(e, t) {
            return e === this.EXT_ && t >= 48 && t <= 63
          }
          xe.prototype.isExtCharacter = function(e, t) {
            return (e === this.EXT_ + 1 || e === this.EXT_ + 2) && t >= 32 && t <= 63
          }
          xe.prototype.isMidRowCode = function(e, t) {
            return e === this.EXT_ && t >= 32 && t <= 47
          }
          xe.prototype.isOffsetControlCode = function(e, t) {
            return e === this.OFFSET_ && t >= 33 && t <= 35
          }
          xe.prototype.isPAC = function(e, t) {
            return e >= this.BASE_ && e < this.BASE_ + 8 && t >= 64 && t <= 127
          }
          xe.prototype.isColorPAC = function(e) {
            return (e >= 64 && e <= 79) || (e >= 96 && e <= 127)
          }
          xe.prototype.isNormalChar = function(e) {
            return e >= 32 && e <= 127
          }
          xe.prototype.setRollUp = function(e, t) {
            if (this.mode_ !== 'rollUp') {
              this.row_ = Pe
              this.mode_ = 'rollUp'
              this.flushDisplayed(e)
              this.nonDisplayed_ = Le()
              this.displayed_ = Le()
            }
            if (t !== undefined && t !== this.row_) {
              for (var r = 0; r < this.rollUpRows_; r++) {
                this.displayed_[t - r] = this.displayed_[this.row_ - r]
                this.displayed_[this.row_ - r] = ''
              }
            }
            if (t === undefined) {
              t = this.row_
            }
            this.topRow_ = t - this.rollUpRows_ + 1
          }
          xe.prototype.addFormatting = function(e, t) {
            this.formatting_ = this.formatting_.concat(t)
            var r = t.reduce(function(e, t) {
              return e + '<' + t + '>'
            }, '')
            this[this.mode_](e, r)
          }
          xe.prototype.clearFormatting = function(e) {
            if (!this.formatting_.length) {
              return
            }
            var t = this.formatting_.reverse().reduce(function(e, t) {
              return e + '</' + t + '>'
            }, '')
            this.formatting_ = []
            this[this.mode_](e, t)
          }
          xe.prototype.popOn = function(e, t) {
            var r = this.nonDisplayed_[this.row_]
            r += t
            this.nonDisplayed_[this.row_] = r
          }
          xe.prototype.rollUp = function(e, t) {
            var r = this.displayed_[this.row_]
            r += t
            this.displayed_[this.row_] = r
          }
          xe.prototype.shiftRowsUp_ = function() {
            var e
            for (e = 0; e < this.topRow_; e++) {
              this.displayed_[e] = ''
            }
            for (e = this.row_ + 1; e < Pe + 1; e++) {
              this.displayed_[e] = ''
            }
            for (e = this.topRow_; e < this.row_; e++) {
              this.displayed_[e] = this.displayed_[e + 1]
            }
            this.displayed_[this.row_] = ''
          }
          xe.prototype.paintOn = function(e, t) {
            var r = this.displayed_[this.row_]
            r += t
            this.displayed_[this.row_] = r
          }
          var Fe = { CaptionStream: Oe, Cea608Stream: xe }
          var Ue = { H264_STREAM_TYPE: 27, ADTS_STREAM_TYPE: 15, METADATA_STREAM_TYPE: 21 }
          var Be = 8589934592
          var je = 4294967296
          var Ge = 'shared'
          var qe = function e(t, r) {
            var n = 1
            if (t > r) {
              n = -1
            }
            while (Math.abs(r - t) > je) {
              t += n * Be
            }
            return t
          }
          var He = function e(t) {
            var r, n
            e.prototype.init.call(this)
            this.type_ = t || Ge
            this.push = function(e) {
              if (this.type_ !== Ge && e.type !== this.type_) {
                return
              }
              if (n === undefined) {
                n = e.dts
              }
              e.dts = qe(e.dts, n)
              e.pts = qe(e.pts, n)
              r = e.dts
              this.trigger('data', e)
            }
            this.flush = function() {
              n = r
              this.trigger('done')
            }
            this.endTimeline = function() {
              this.flush()
              this.trigger('endedtimeline')
            }
            this.discontinuity = function() {
              n = void 0
              r = void 0
            }
            this.reset = function() {
              this.discontinuity()
              this.trigger('reset')
            }
          }
          He.prototype = new t()
          var Ve = { TimestampRolloverStream: He, handleRollover: qe }
          var Ke = function e(t, r, n) {
              var i,
                a = ''
              for (i = r; i < n; i++) {
                a += '%' + ('00' + t[i].toString(16)).slice(-2)
              }
              return a
            },
            Ye = function e(t, r, n) {
              return decodeURIComponent(Ke(t, r, n))
            },
            We = function e(t, r, n) {
              return unescape(Ke(t, r, n))
            },
            ze = function e(t) {
              return (t[0] << 21) | (t[1] << 14) | (t[2] << 7) | t[3]
            },
            Xe = {
              TXXX: function e(t) {
                var r
                if (t.data[0] !== 3) {
                  return
                }
                for (r = 1; r < t.data.length; r++) {
                  if (t.data[r] === 0) {
                    t.description = Ye(t.data, 1, r)
                    t.value = Ye(t.data, r + 1, t.data.length).replace(/\0*$/, '')
                    break
                  }
                }
                t.data = t.value
              },
              WXXX: function e(t) {
                var r
                if (t.data[0] !== 3) {
                  return
                }
                for (r = 1; r < t.data.length; r++) {
                  if (t.data[r] === 0) {
                    t.description = Ye(t.data, 1, r)
                    t.url = Ye(t.data, r + 1, t.data.length)
                    break
                  }
                }
              },
              PRIV: function e(t) {
                var r
                for (r = 0; r < t.data.length; r++) {
                  if (t.data[r] === 0) {
                    t.owner = We(t.data, 0, r)
                    break
                  }
                }
                t.privateData = t.data.subarray(r + 1)
                t.data = t.privateData
              },
            },
            $e
          $e = function e(t) {
            var r = { debug: !!(t && t.debug), descriptor: t && t.descriptor },
              n = 0,
              i = [],
              a = 0,
              s
            $e.prototype.init.call(this)
            this.dispatchType = Ue.METADATA_STREAM_TYPE.toString(16)
            if (r.descriptor) {
              for (s = 0; s < r.descriptor.length; s++) {
                this.dispatchType += ('00' + r.descriptor[s].toString(16)).slice(-2)
              }
            }
            this.push = function(e) {
              var t, s, o, u, l, f
              if (e.type !== 'timed-metadata') {
                return
              }
              if (e.dataAlignmentIndicator) {
                a = 0
                i.length = 0
              }
              if (
                i.length === 0 &&
                (e.data.length < 10 ||
                  e.data[0] !== 'I'.charCodeAt(0) ||
                  e.data[1] !== 'D'.charCodeAt(0) ||
                  e.data[2] !== '3'.charCodeAt(0))
              ) {
                if (r.debug) {
                  console.log('Skipping unrecognized metadata packet')
                }
                return
              }
              i.push(e)
              a += e.data.byteLength
              if (i.length === 1) {
                n = ze(e.data.subarray(6, 10))
                n += 10
              }
              if (a < n) {
                return
              }
              t = { data: new Uint8Array(n), frames: [], pts: i[0].pts, dts: i[0].dts }
              for (l = 0; l < n; ) {
                t.data.set(i[0].data.subarray(0, n - l), l)
                l += i[0].data.byteLength
                a -= i[0].data.byteLength
                i.shift()
              }
              s = 10
              if (t.data[5] & 64) {
                s += 4
                s += ze(t.data.subarray(10, 14))
                n -= ze(t.data.subarray(16, 20))
              }
              do {
                o = ze(t.data.subarray(s + 4, s + 8))
                if (o < 1) {
                  return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.')
                }
                f = String.fromCharCode(t.data[s], t.data[s + 1], t.data[s + 2], t.data[s + 3])
                u = { id: f, data: t.data.subarray(s + 10, s + o + 10) }
                u.key = u.id
                if (Xe[u.id]) {
                  Xe[u.id](u)
                  if (u.owner === 'com.apple.streaming.transportStreamTimestamp') {
                    var d = u.data,
                      c =
                        ((d[3] & 1) << 30) |
                        (d[4] << 22) |
                        (d[5] << 14) |
                        (d[6] << 6) |
                        (d[7] >>> 2)
                    c *= 4
                    c += d[7] & 3
                    u.timeStamp = c
                    if (t.pts === undefined && t.dts === undefined) {
                      t.pts = u.timeStamp
                      t.dts = u.timeStamp
                    }
                    this.trigger('timestamp', u)
                  }
                }
                t.frames.push(u)
                s += 10
                s += o
              } while (s < n)
              this.trigger('data', t)
            }
          }
          $e.prototype = new t()
          var Qe = $e
          var Je = Ve.TimestampRolloverStream
          var Ze, et, tt
          var rt = 188,
            nt = 71
          Ze = function e() {
            var t = new Uint8Array(rt),
              r = 0
            Ze.prototype.init.call(this)
            this.push = function(e) {
              var n = 0,
                i = rt,
                a
              if (r) {
                a = new Uint8Array(e.byteLength + r)
                a.set(t.subarray(0, r))
                a.set(e, r)
                r = 0
              } else {
                a = e
              }
              while (i < a.byteLength) {
                if (a[n] === nt && a[i] === nt) {
                  this.trigger('data', a.subarray(n, i))
                  n += rt
                  i += rt
                  continue
                }
                n++
                i++
              }
              if (n < a.byteLength) {
                t.set(a.subarray(n), 0)
                r = a.byteLength - n
              }
            }
            this.flush = function() {
              if (r === rt && t[0] === nt) {
                this.trigger('data', t)
                r = 0
              }
              this.trigger('done')
            }
            this.endTimeline = function() {
              this.flush()
              this.trigger('endedtimeline')
            }
            this.reset = function() {
              r = 0
              this.trigger('reset')
            }
          }
          Ze.prototype = new t()
          et = function e() {
            var t, r, n, i
            et.prototype.init.call(this)
            i = this
            this.packetsWaitingForPmt = []
            this.programMapTable = undefined
            t = function e(t, i) {
              var a = 0
              if (i.payloadUnitStartIndicator) {
                a += t[a] + 1
              }
              if (i.type === 'pat') {
                r(t.subarray(a), i)
              } else {
                n(t.subarray(a), i)
              }
            }
            r = function e(t, r) {
              r.section_number = t[7]
              r.last_section_number = t[8]
              i.pmtPid = ((t[10] & 31) << 8) | t[11]
              r.pmtPid = i.pmtPid
            }
            n = function e(t, r) {
              var n, a, s, o
              if (!(t[5] & 1)) {
                return
              }
              i.programMapTable = { video: null, audio: null, 'timed-metadata': {} }
              n = ((t[1] & 15) << 8) | t[2]
              a = 3 + n - 4
              s = ((t[10] & 15) << 8) | t[11]
              o = 12 + s
              while (o < a) {
                var u = t[o]
                var l = ((t[o + 1] & 31) << 8) | t[o + 2]
                if (u === Ue.H264_STREAM_TYPE && i.programMapTable.video === null) {
                  i.programMapTable.video = l
                } else if (u === Ue.ADTS_STREAM_TYPE && i.programMapTable.audio === null) {
                  i.programMapTable.audio = l
                } else if (u === Ue.METADATA_STREAM_TYPE) {
                  i.programMapTable['timed-metadata'][l] = u
                }
                o += (((t[o + 3] & 15) << 8) | t[o + 4]) + 5
              }
              r.programMapTable = i.programMapTable
            }
            this.push = function(e) {
              var r = {},
                n = 4
              r.payloadUnitStartIndicator = !!(e[1] & 64)
              r.pid = e[1] & 31
              r.pid <<= 8
              r.pid |= e[2]
              if ((e[3] & 48) >>> 4 > 1) {
                n += e[n] + 1
              }
              if (r.pid === 0) {
                r.type = 'pat'
                t(e.subarray(n), r)
                this.trigger('data', r)
              } else if (r.pid === this.pmtPid) {
                r.type = 'pmt'
                t(e.subarray(n), r)
                this.trigger('data', r)
                while (this.packetsWaitingForPmt.length) {
                  this.processPes_.apply(this, this.packetsWaitingForPmt.shift())
                }
              } else if (this.programMapTable === undefined) {
                this.packetsWaitingForPmt.push([e, n, r])
              } else {
                this.processPes_(e, n, r)
              }
            }
            this.processPes_ = function(e, t, r) {
              if (r.pid === this.programMapTable.video) {
                r.streamType = Ue.H264_STREAM_TYPE
              } else if (r.pid === this.programMapTable.audio) {
                r.streamType = Ue.ADTS_STREAM_TYPE
              } else {
                r.streamType = this.programMapTable['timed-metadata'][r.pid]
              }
              r.type = 'pes'
              r.data = e.subarray(t)
              this.trigger('data', r)
            }
          }
          et.prototype = new t()
          et.STREAM_TYPES = { h264: 27, adts: 15 }
          tt = function e() {
            var t = this,
              r = { data: [], size: 0 },
              n = { data: [], size: 0 },
              i = { data: [], size: 0 },
              a,
              s = function e(t, r) {
                var n
                r.packetLength = 6 + ((t[4] << 8) | t[5])
                r.dataAlignmentIndicator = (t[6] & 4) !== 0
                n = t[7]
                if (n & 192) {
                  r.pts =
                    ((t[9] & 14) << 27) |
                    ((t[10] & 255) << 20) |
                    ((t[11] & 254) << 12) |
                    ((t[12] & 255) << 5) |
                    ((t[13] & 254) >>> 3)
                  r.pts *= 4
                  r.pts += (t[13] & 6) >>> 1
                  r.dts = r.pts
                  if (n & 64) {
                    r.dts =
                      ((t[14] & 14) << 27) |
                      ((t[15] & 255) << 20) |
                      ((t[16] & 254) << 12) |
                      ((t[17] & 255) << 5) |
                      ((t[18] & 254) >>> 3)
                    r.dts *= 4
                    r.dts += (t[18] & 6) >>> 1
                  }
                }
                r.data = t.subarray(9 + t[8])
              },
              o = function e(r, n, i) {
                var a = new Uint8Array(r.size),
                  o = { type: n },
                  u = 0,
                  l = 0,
                  f = false,
                  d
                if (!r.data.length || r.size < 9) {
                  return
                }
                o.trackId = r.data[0].pid
                for (u = 0; u < r.data.length; u++) {
                  d = r.data[u]
                  a.set(d.data, l)
                  l += d.data.byteLength
                }
                s(a, o)
                f = n === 'video' || o.packetLength <= r.size
                if (i || f) {
                  r.size = 0
                  r.data.length = 0
                }
                if (f) {
                  t.trigger('data', o)
                }
              }
            tt.prototype.init.call(this)
            this.push = function(e) {
              ;({
                pat: function e() {},
                pes: function t() {
                  var a, s
                  switch (e.streamType) {
                    case Ue.H264_STREAM_TYPE:
                    case Ue.H264_STREAM_TYPE:
                      a = r
                      s = 'video'
                      break
                    case Ue.ADTS_STREAM_TYPE:
                      a = n
                      s = 'audio'
                      break
                    case Ue.METADATA_STREAM_TYPE:
                      a = i
                      s = 'timed-metadata'
                      break
                    default:
                      return
                  }
                  if (e.payloadUnitStartIndicator) {
                    o(a, s, true)
                  }
                  a.data.push(e)
                  a.size += e.data.byteLength
                },
                pmt: function r() {
                  var n = { type: 'metadata', tracks: [] }
                  a = e.programMapTable
                  if (a.video !== null) {
                    n.tracks.push({
                      timelineStartInfo: { baseMediaDecodeTime: 0 },
                      id: +a.video,
                      codec: 'avc',
                      type: 'video',
                    })
                  }
                  if (a.audio !== null) {
                    n.tracks.push({
                      timelineStartInfo: { baseMediaDecodeTime: 0 },
                      id: +a.audio,
                      codec: 'adts',
                      type: 'audio',
                    })
                  }
                  t.trigger('data', n)
                },
              }[e.type]())
            }
            this.reset = function() {
              r.size = 0
              r.data.length = 0
              n.size = 0
              n.data.length = 0
              this.trigger('reset')
            }
            this.flushStreams_ = function() {
              o(r, 'video')
              o(n, 'audio')
              o(i, 'timed-metadata')
            }
            this.flush = function() {
              this.flushStreams_()
              this.trigger('done')
            }
          }
          tt.prototype = new t()
          var it = {
            PAT_PID: 0,
            MP2T_PACKET_LENGTH: rt,
            TransportPacketStream: Ze,
            TransportParseStream: et,
            ElementaryStream: tt,
            TimestampRolloverStream: Je,
            CaptionStream: Fe.CaptionStream,
            Cea608Stream: Fe.Cea608Stream,
            MetadataStream: Qe,
          }
          for (var at in Ue) {
            if (Ue.hasOwnProperty(at)) {
              it[at] = Ue[at]
            }
          }
          var st = it
          var ot = de.ONE_SECOND_IN_TS
          var ut
          var lt = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350]
          ut = function e(t) {
            var r,
              n = 0
            ut.prototype.init.call(this)
            this.push = function(e) {
              var i = 0,
                a,
                s,
                o,
                u,
                l,
                f
              if (!t) {
                n = 0
              }
              if (e.type !== 'audio') {
                return
              }
              if (r) {
                u = r
                r = new Uint8Array(u.byteLength + e.data.byteLength)
                r.set(u)
                r.set(e.data, u.byteLength)
              } else {
                r = e.data
              }
              while (i + 5 < r.length) {
                if (r[i] !== 255 || (r[i + 1] & 246) !== 240) {
                  i++
                  continue
                }
                s = (~r[i + 1] & 1) * 2
                a = ((r[i + 3] & 3) << 11) | (r[i + 4] << 3) | ((r[i + 5] & 224) >> 5)
                l = ((r[i + 6] & 3) + 1) * 1024
                f = (l * ot) / lt[(r[i + 2] & 60) >>> 2]
                o = i + a
                if (r.byteLength < o) {
                  return
                }
                this.trigger('data', {
                  pts: e.pts + n * f,
                  dts: e.dts + n * f,
                  sampleCount: l,
                  audioobjecttype: ((r[i + 2] >>> 6) & 3) + 1,
                  channelcount: ((r[i + 2] & 1) << 2) | ((r[i + 3] & 192) >>> 6),
                  samplerate: lt[(r[i + 2] & 60) >>> 2],
                  samplingfrequencyindex: (r[i + 2] & 60) >>> 2,
                  samplesize: 16,
                  data: r.subarray(i + 7 + s, o),
                })
                n++
                if (r.byteLength === o) {
                  r = undefined
                  return
                }
                r = r.subarray(o)
              }
            }
            this.flush = function() {
              n = 0
              this.trigger('done')
            }
            this.reset = function() {
              r = void 0
              this.trigger('reset')
            }
            this.endTimeline = function() {
              r = void 0
              this.trigger('endedtimeline')
            }
          }
          ut.prototype = new t()
          var ft = ut
          var dt
          dt = function e(t) {
            var r = t.byteLength,
              n = 0,
              i = 0
            this.length = function() {
              return 8 * r
            }
            this.bitsAvailable = function() {
              return 8 * r + i
            }
            this.loadWord = function() {
              var e = t.byteLength - r,
                a = new Uint8Array(4),
                s = Math.min(4, r)
              if (s === 0) {
                throw new Error('no bytes available')
              }
              a.set(t.subarray(e, e + s))
              n = new DataView(a.buffer).getUint32(0)
              i = s * 8
              r -= s
            }
            this.skipBits = function(e) {
              var t
              if (i > e) {
                n <<= e
                i -= e
              } else {
                e -= i
                t = Math.floor(e / 8)
                e -= t * 8
                r -= t
                this.loadWord()
                n <<= e
                i -= e
              }
            }
            this.readBits = function(e) {
              var t = Math.min(i, e),
                a = n >>> (32 - t)
              i -= t
              if (i > 0) {
                n <<= t
              } else if (r > 0) {
                this.loadWord()
              }
              t = e - t
              if (t > 0) {
                return (a << t) | this.readBits(t)
              }
              return a
            }
            this.skipLeadingZeros = function() {
              var e
              for (e = 0; e < i; ++e) {
                if ((n & (2147483648 >>> e)) !== 0) {
                  n <<= e
                  i -= e
                  return e
                }
              }
              this.loadWord()
              return e + this.skipLeadingZeros()
            }
            this.skipUnsignedExpGolomb = function() {
              this.skipBits(1 + this.skipLeadingZeros())
            }
            this.skipExpGolomb = function() {
              this.skipBits(1 + this.skipLeadingZeros())
            }
            this.readUnsignedExpGolomb = function() {
              var e = this.skipLeadingZeros()
              return this.readBits(e + 1) - 1
            }
            this.readExpGolomb = function() {
              var e = this.readUnsignedExpGolomb()
              if (1 & e) {
                return (1 + e) >>> 1
              }
              return -1 * (e >>> 1)
            }
            this.readBoolean = function() {
              return this.readBits(1) === 1
            }
            this.readUnsignedByte = function() {
              return this.readBits(8)
            }
            this.loadWord()
          }
          var ct = dt
          var ht, pt
          var vt
          pt = function e() {
            var t = 0,
              r,
              n
            pt.prototype.init.call(this)
            this.push = function(e) {
              var i
              if (!n) {
                n = e.data
              } else {
                i = new Uint8Array(n.byteLength + e.data.byteLength)
                i.set(n)
                i.set(e.data, n.byteLength)
                n = i
              }
              var a = n.byteLength
              for (; t < a - 3; t++) {
                if (n[t + 2] === 1) {
                  r = t + 5
                  break
                }
              }
              while (r < a) {
                switch (n[r]) {
                  case 0:
                    if (n[r - 1] !== 0) {
                      r += 2
                      break
                    } else if (n[r - 2] !== 0) {
                      r++
                      break
                    }
                    if (t + 3 !== r - 2) {
                      this.trigger('data', n.subarray(t + 3, r - 2))
                    }
                    do {
                      r++
                    } while (n[r] !== 1 && r < a)
                    t = r - 2
                    r += 3
                    break
                  case 1:
                    if (n[r - 1] !== 0 || n[r - 2] !== 0) {
                      r += 3
                      break
                    }
                    this.trigger('data', n.subarray(t + 3, r - 2))
                    t = r - 2
                    r += 3
                    break
                  default:
                    r += 3
                    break
                }
              }
              n = n.subarray(t)
              r -= t
              t = 0
            }
            this.reset = function() {
              n = null
              t = 0
              this.trigger('reset')
            }
            this.flush = function() {
              if (n && n.byteLength > 3) {
                this.trigger('data', n.subarray(t + 3))
              }
              n = null
              t = 0
              this.trigger('done')
            }
            this.endTimeline = function() {
              this.flush()
              this.trigger('endedtimeline')
            }
          }
          pt.prototype = new t()
          vt = {
            100: true,
            110: true,
            122: true,
            244: true,
            44: true,
            83: true,
            86: true,
            118: true,
            128: true,
            138: true,
            139: true,
            134: true,
          }
          ht = function e() {
            var t = new pt(),
              r,
              n,
              i,
              a,
              s,
              o,
              u
            ht.prototype.init.call(this)
            r = this
            this.push = function(e) {
              if (e.type !== 'video') {
                return
              }
              n = e.trackId
              i = e.pts
              a = e.dts
              t.push(e)
            }
            t.on('data', function(e) {
              var t = { trackId: n, pts: i, dts: a, data: e }
              switch (e[0] & 31) {
                case 5:
                  t.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr'
                  break
                case 6:
                  t.nalUnitType = 'sei_rbsp'
                  t.escapedRBSP = s(e.subarray(1))
                  break
                case 7:
                  t.nalUnitType = 'seq_parameter_set_rbsp'
                  t.escapedRBSP = s(e.subarray(1))
                  t.config = o(t.escapedRBSP)
                  break
                case 8:
                  t.nalUnitType = 'pic_parameter_set_rbsp'
                  break
                case 9:
                  t.nalUnitType = 'access_unit_delimiter_rbsp'
                  break
                default:
                  break
              }
              r.trigger('data', t)
            })
            t.on('done', function() {
              r.trigger('done')
            })
            t.on('partialdone', function() {
              r.trigger('partialdone')
            })
            t.on('reset', function() {
              r.trigger('reset')
            })
            t.on('endedtimeline', function() {
              r.trigger('endedtimeline')
            })
            this.flush = function() {
              t.flush()
            }
            this.partialFlush = function() {
              t.partialFlush()
            }
            this.reset = function() {
              t.reset()
            }
            this.endTimeline = function() {
              t.endTimeline()
            }
            u = function e(t, r) {
              var n = 8,
                i = 8,
                a,
                s
              for (a = 0; a < t; a++) {
                if (i !== 0) {
                  s = r.readExpGolomb()
                  i = (n + s + 256) % 256
                }
                n = i === 0 ? n : i
              }
            }
            s = function e(t) {
              var r = t.byteLength,
                n = [],
                i = 1,
                a,
                s
              while (i < r - 2) {
                if (t[i] === 0 && t[i + 1] === 0 && t[i + 2] === 3) {
                  n.push(i + 2)
                  i += 2
                } else {
                  i++
                }
              }
              if (n.length === 0) {
                return t
              }
              a = r - n.length
              s = new Uint8Array(a)
              var o = 0
              for (i = 0; i < a; o++, i++) {
                if (o === n[0]) {
                  o++
                  n.shift()
                }
                s[i] = t[o]
              }
              return s
            }
            o = function e(t) {
              var r = 0,
                n = 0,
                i = 0,
                a = 0,
                s = 1,
                o,
                l,
                f,
                d,
                c,
                h,
                p,
                v,
                g,
                m,
                y,
                _,
                T,
                E
              o = new ct(t)
              l = o.readUnsignedByte()
              d = o.readUnsignedByte()
              f = o.readUnsignedByte()
              o.skipUnsignedExpGolomb()
              if (vt[l]) {
                c = o.readUnsignedExpGolomb()
                if (c === 3) {
                  o.skipBits(1)
                }
                o.skipUnsignedExpGolomb()
                o.skipUnsignedExpGolomb()
                o.skipBits(1)
                if (o.readBoolean()) {
                  y = c !== 3 ? 8 : 12
                  for (E = 0; E < y; E++) {
                    if (o.readBoolean()) {
                      if (E < 6) {
                        u(16, o)
                      } else {
                        u(64, o)
                      }
                    }
                  }
                }
              }
              o.skipUnsignedExpGolomb()
              h = o.readUnsignedExpGolomb()
              if (h === 0) {
                o.readUnsignedExpGolomb()
              } else if (h === 1) {
                o.skipBits(1)
                o.skipExpGolomb()
                o.skipExpGolomb()
                p = o.readUnsignedExpGolomb()
                for (E = 0; E < p; E++) {
                  o.skipExpGolomb()
                }
              }
              o.skipUnsignedExpGolomb()
              o.skipBits(1)
              v = o.readUnsignedExpGolomb()
              g = o.readUnsignedExpGolomb()
              m = o.readBits(1)
              if (m === 0) {
                o.skipBits(1)
              }
              o.skipBits(1)
              if (o.readBoolean()) {
                r = o.readUnsignedExpGolomb()
                n = o.readUnsignedExpGolomb()
                i = o.readUnsignedExpGolomb()
                a = o.readUnsignedExpGolomb()
              }
              if (o.readBoolean()) {
                if (o.readBoolean()) {
                  T = o.readUnsignedByte()
                  switch (T) {
                    case 1:
                      _ = [1, 1]
                      break
                    case 2:
                      _ = [12, 11]
                      break
                    case 3:
                      _ = [10, 11]
                      break
                    case 4:
                      _ = [16, 11]
                      break
                    case 5:
                      _ = [40, 33]
                      break
                    case 6:
                      _ = [24, 11]
                      break
                    case 7:
                      _ = [20, 11]
                      break
                    case 8:
                      _ = [32, 11]
                      break
                    case 9:
                      _ = [80, 33]
                      break
                    case 10:
                      _ = [18, 11]
                      break
                    case 11:
                      _ = [15, 11]
                      break
                    case 12:
                      _ = [64, 33]
                      break
                    case 13:
                      _ = [160, 99]
                      break
                    case 14:
                      _ = [4, 3]
                      break
                    case 15:
                      _ = [3, 2]
                      break
                    case 16:
                      _ = [2, 1]
                      break
                    case 255: {
                      _ = [
                        (o.readUnsignedByte() << 8) | o.readUnsignedByte(),
                        (o.readUnsignedByte() << 8) | o.readUnsignedByte(),
                      ]
                      break
                    }
                  }
                  if (_) {
                    s = _[0] / _[1]
                  }
                }
              }
              return {
                profileIdc: l,
                levelIdc: f,
                profileCompatibility: d,
                width: Math.ceil(((v + 1) * 16 - r * 2 - n * 2) * s),
                height: (2 - m) * (g + 1) * 16 - i * 2 - a * 2,
                sarRatio: _,
              }
            }
          }
          ht.prototype = new t()
          var gt = { H264Stream: ht, NalByteStream: pt }
          var mt = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350]
          var yt = function e(t) {
            if (
              t[0] === 'I'.charCodeAt(0) &&
              t[1] === 'D'.charCodeAt(0) &&
              t[2] === '3'.charCodeAt(0)
            ) {
              return true
            }
            return false
          }
          var _t = function e(t) {
            return (t[0] << 21) | (t[1] << 14) | (t[2] << 7) | t[3]
          }
          var Tt = function e(t, r, n) {
            var i,
              a = ''
            for (i = r; i < n; i++) {
              a += '%' + ('00' + t[i].toString(16)).slice(-2)
            }
            return a
          }
          var Et = function e(t, r, n) {
            return unescape(Tt(t, r, n))
          }
          var bt = function e(t, r) {
            var n = (t[r + 6] << 21) | (t[r + 7] << 14) | (t[r + 8] << 7) | t[r + 9],
              i = t[r + 5],
              a = (i & 16) >> 4
            if (a) {
              return n + 20
            }
            return n + 10
          }
          var St = function e(t, r) {
            var n = (t[r + 5] & 224) >> 5,
              i = t[r + 4] << 3,
              a = t[r + 3] & (3 << 11)
            return a | i | n
          }
          var wt = function e(t, r) {
            if (
              t[r] === 'I'.charCodeAt(0) &&
              t[r + 1] === 'D'.charCodeAt(0) &&
              t[r + 2] === '3'.charCodeAt(0)
            ) {
              return 'timed-metadata'
            } else if (t[r] & (255 === 255) && (t[r + 1] & 240) === 240) {
              return 'audio'
            }
            return null
          }
          var At = function e(t) {
            var r = 0
            while (r + 5 < t.length) {
              if (t[r] !== 255 || (t[r + 1] & 246) !== 240) {
                r++
                continue
              }
              return mt[(t[r + 2] & 60) >>> 2]
            }
            return null
          }
          var It = function e(t) {
            var r, n, i, a
            r = 10
            if (t[5] & 64) {
              r += 4
              r += _t(t.subarray(10, 14))
            }
            do {
              n = _t(t.subarray(r + 4, r + 8))
              if (n < 1) {
                return null
              }
              a = String.fromCharCode(t[r], t[r + 1], t[r + 2], t[r + 3])
              if (a === 'PRIV') {
                i = t.subarray(r + 10, r + n + 10)
                for (var s = 0; s < i.byteLength; s++) {
                  if (i[s] === 0) {
                    var o = Et(i, 0, s)
                    if (o === 'com.apple.streaming.transportStreamTimestamp') {
                      var u = i.subarray(s + 1)
                      var l =
                        ((u[3] & 1) << 30) |
                        (u[4] << 22) |
                        (u[5] << 14) |
                        (u[6] << 6) |
                        (u[7] >>> 2)
                      l *= 4
                      l += u[7] & 3
                      return l
                    }
                    break
                  }
                }
              }
              r += 10
              r += n
            } while (r < t.byteLength)
            return null
          }
          var Ct = {
            isLikelyAacData: yt,
            parseId3TagSize: bt,
            parseAdtsSize: St,
            parseType: wt,
            parseSampleRate: At,
            parseAacTimestamp: It,
          }
          var Rt
          Rt = function e() {
            var t = new Uint8Array(),
              r = 0
            Rt.prototype.init.call(this)
            this.setTimestamp = function(e) {
              r = e
            }
            this.push = function(e) {
              var n = 0,
                i = 0,
                a,
                s,
                o,
                u
              if (t.length) {
                u = t.length
                t = new Uint8Array(e.byteLength + u)
                t.set(t.subarray(0, u))
                t.set(e, u)
              } else {
                t = e
              }
              while (t.length - i >= 3) {
                if (
                  t[i] === 'I'.charCodeAt(0) &&
                  t[i + 1] === 'D'.charCodeAt(0) &&
                  t[i + 2] === '3'.charCodeAt(0)
                ) {
                  if (t.length - i < 10) {
                    break
                  }
                  n = Ct.parseId3TagSize(t, i)
                  if (i + n > t.length) {
                    break
                  }
                  s = { type: 'timed-metadata', data: t.subarray(i, i + n) }
                  this.trigger('data', s)
                  i += n
                  continue
                } else if ((t[i] & 255) === 255 && (t[i + 1] & 240) === 240) {
                  if (t.length - i < 7) {
                    break
                  }
                  n = Ct.parseAdtsSize(t, i)
                  if (i + n > t.length) {
                    break
                  }
                  o = { type: 'audio', data: t.subarray(i, i + n), pts: r, dts: r }
                  this.trigger('data', o)
                  i += n
                  continue
                }
                i++
              }
              a = t.length - i
              if (a > 0) {
                t = t.subarray(i)
              } else {
                t = new Uint8Array()
              }
            }
            this.reset = function() {
              t = new Uint8Array()
              this.trigger('reset')
            }
            this.endTimeline = function() {
              t = new Uint8Array()
              this.trigger('endedtimeline')
            }
          }
          Rt.prototype = new t()
          var Dt = Rt
          var Ot = gt.H264Stream
          var Mt = Ct.isLikelyAacData
          var kt = de.ONE_SECOND_IN_TS
          var Pt = [
            'audioobjecttype',
            'channelcount',
            'samplerate',
            'samplingfrequencyindex',
            'samplesize',
          ]
          var Nt = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio']
          var Lt, xt, Ft, Ut
          var Bt = function e(t, r) {
            var n
            if (t.length !== r.length) {
              return false
            }
            for (n = 0; n < t.length; n++) {
              if (t[n] !== r[n]) {
                return false
              }
            }
            return true
          }
          var jt = function e(t, r, n, i, a, s) {
            var o = n - r,
              u = i - r,
              l = a - n
            return {
              start: { dts: t, pts: t + o },
              end: { dts: t + u, pts: t + l },
              prependedContentDuration: s,
              baseMediaDecodeTime: t,
            }
          }
          xt = function e(t, r) {
            var n = [],
              i = 0,
              a = 0,
              s = 0,
              o = Infinity
            r = r || {}
            xt.prototype.init.call(this)
            this.push = function(e) {
              be.collectDtsInfo(t, e)
              if (t) {
                Pt.forEach(function(r) {
                  t[r] = e[r]
                })
              }
              n.push(e)
            }
            this.setEarliestDts = function(e) {
              a = e - t.timelineStartInfo.baseMediaDecodeTime
            }
            this.setVideoBaseMediaDecodeTime = function(e) {
              o = e
            }
            this.setAudioAppendStart = function(e) {
              s = e
            }
            this.flush = function() {
              var e, u, l, f, d
              if (n.length === 0) {
                this.trigger('done', 'AudioSegmentStream')
                return
              }
              e = me.trimAdtsFramesByEarliestDts(n, t, a)
              t.baseMediaDecodeTime = be.calculateTrackBaseMediaDecodeTime(
                t,
                r.keepOriginalTimestamps
              )
              me.prefixWithSilence(t, e, s, o)
              t.samples = me.generateSampleTable(e)
              l = j.mdat(me.concatenateFrameData(e))
              n = []
              u = j.moof(i, [t])
              f = new Uint8Array(u.byteLength + l.byteLength)
              i++
              f.set(u)
              f.set(l, u.byteLength)
              be.clearDtsInfo(t)
              d = Math.ceil((kt * 1024) / t.samplerate)
              if (e.length) {
                this.trigger('timingInfo', { start: e[0].dts, end: e[0].dts + e.length * d })
              }
              this.trigger('data', { track: t, boxes: f })
              this.trigger('done', 'AudioSegmentStream')
            }
            this.reset = function() {
              be.clearDtsInfo(t)
              n = []
              this.trigger('reset')
            }
          }
          xt.prototype = new t()
          Lt = function e(t, r) {
            var n = 0,
              i = [],
              a = [],
              s,
              o
            r = r || {}
            Lt.prototype.init.call(this)
            delete t.minPTS
            this.gopCache_ = []
            this.push = function(e) {
              be.collectDtsInfo(t, e)
              if (e.nalUnitType === 'seq_parameter_set_rbsp' && !s) {
                s = e.config
                t.sps = [e.data]
                Nt.forEach(function(e) {
                  t[e] = s[e]
                }, this)
              }
              if (e.nalUnitType === 'pic_parameter_set_rbsp' && !o) {
                o = e.data
                t.pps = [e.data]
              }
              i.push(e)
            }
            this.flush = function() {
              var e,
                s,
                o,
                u,
                l,
                f,
                d = 0,
                c,
                h
              while (i.length) {
                if (i[0].nalUnitType === 'access_unit_delimiter_rbsp') {
                  break
                }
                i.shift()
              }
              if (i.length === 0) {
                this.resetStream_()
                this.trigger('done', 'VideoSegmentStream')
                return
              }
              e = $.groupNalsIntoFrames(i)
              o = $.groupFramesIntoGops(e)
              if (!o[0][0].keyFrame) {
                s = this.getGopForFusion_(i[0], t)
                if (s) {
                  d = s.duration
                  o.unshift(s)
                  o.byteLength += s.byteLength
                  o.nalCount += s.nalCount
                  o.pts = s.pts
                  o.dts = s.dts
                  o.duration += s.duration
                } else {
                  o = $.extendFirstKeyFrame(o)
                }
              }
              if (a.length) {
                var p
                if (r.alignGopsAtEnd) {
                  p = this.alignGopsAtEnd_(o)
                } else {
                  p = this.alignGopsAtStart_(o)
                }
                if (!p) {
                  this.gopCache_.unshift({ gop: o.pop(), pps: t.pps, sps: t.sps })
                  this.gopCache_.length = Math.min(6, this.gopCache_.length)
                  i = []
                  this.resetStream_()
                  this.trigger('done', 'VideoSegmentStream')
                  return
                }
                be.clearDtsInfo(t)
                o = p
              }
              be.collectDtsInfo(t, o)
              t.samples = $.generateSampleTable(o)
              l = j.mdat($.concatenateNalData(o))
              t.baseMediaDecodeTime = be.calculateTrackBaseMediaDecodeTime(
                t,
                r.keepOriginalTimestamps
              )
              this.trigger(
                'processedGopsInfo',
                o.map(function(e) {
                  return { pts: e.pts, dts: e.dts, byteLength: e.byteLength }
                })
              )
              c = o[0]
              h = o[o.length - 1]
              this.trigger(
                'segmentTimingInfo',
                jt(t.baseMediaDecodeTime, c.dts, c.pts, h.dts + h.duration, h.pts + h.duration, d)
              )
              this.trigger('timingInfo', {
                start: o[0].dts,
                end: o[o.length - 1].dts + o[o.length - 1].duration,
              })
              this.gopCache_.unshift({ gop: o.pop(), pps: t.pps, sps: t.sps })
              this.gopCache_.length = Math.min(6, this.gopCache_.length)
              i = []
              this.trigger('baseMediaDecodeTime', t.baseMediaDecodeTime)
              this.trigger('timelineStartInfo', t.timelineStartInfo)
              u = j.moof(n, [t])
              f = new Uint8Array(u.byteLength + l.byteLength)
              n++
              f.set(u)
              f.set(l, u.byteLength)
              this.trigger('data', { track: t, boxes: f })
              this.resetStream_()
              this.trigger('done', 'VideoSegmentStream')
            }
            this.reset = function() {
              this.resetStream_()
              i = []
              this.gopCache_.length = 0
              a.length = 0
              this.trigger('reset')
            }
            this.resetStream_ = function() {
              be.clearDtsInfo(t)
              s = undefined
              o = undefined
            }
            this.getGopForFusion_ = function(e) {
              var r = 45e3,
                n = 1e4,
                i = Infinity,
                a,
                s,
                o,
                u,
                l
              for (l = 0; l < this.gopCache_.length; l++) {
                u = this.gopCache_[l]
                o = u.gop
                if (!(t.pps && Bt(t.pps[0], u.pps[0])) || !(t.sps && Bt(t.sps[0], u.sps[0]))) {
                  continue
                }
                if (o.dts < t.timelineStartInfo.dts) {
                  continue
                }
                a = e.dts - o.dts - o.duration
                if (a >= -n && a <= r) {
                  if (!s || i > a) {
                    s = u
                    i = a
                  }
                }
              }
              if (s) {
                return s.gop
              }
              return null
            }
            this.alignGopsAtStart_ = function(e) {
              var t, r, n, i, s, o, u, l
              s = e.byteLength
              o = e.nalCount
              u = e.duration
              t = r = 0
              while (t < a.length && r < e.length) {
                n = a[t]
                i = e[r]
                if (n.pts === i.pts) {
                  break
                }
                if (i.pts > n.pts) {
                  t++
                  continue
                }
                r++
                s -= i.byteLength
                o -= i.nalCount
                u -= i.duration
              }
              if (r === 0) {
                return e
              }
              if (r === e.length) {
                return null
              }
              l = e.slice(r)
              l.byteLength = s
              l.duration = u
              l.nalCount = o
              l.pts = l[0].pts
              l.dts = l[0].dts
              return l
            }
            this.alignGopsAtEnd_ = function(e) {
              var t, r, n, i, s, o
              t = a.length - 1
              r = e.length - 1
              s = null
              o = false
              while (t >= 0 && r >= 0) {
                n = a[t]
                i = e[r]
                if (n.pts === i.pts) {
                  o = true
                  break
                }
                if (n.pts > i.pts) {
                  t--
                  continue
                }
                if (t === a.length - 1) {
                  s = r
                }
                r--
              }
              if (!o && s === null) {
                return null
              }
              var u
              if (o) {
                u = r
              } else {
                u = s
              }
              if (u === 0) {
                return e
              }
              var l = e.slice(u)
              var f = l.reduce(
                function(e, t) {
                  e.byteLength += t.byteLength
                  e.duration += t.duration
                  e.nalCount += t.nalCount
                  return e
                },
                { byteLength: 0, duration: 0, nalCount: 0 }
              )
              l.byteLength = f.byteLength
              l.duration = f.duration
              l.nalCount = f.nalCount
              l.pts = l[0].pts
              l.dts = l[0].dts
              return l
            }
            this.alignGopsWith = function(e) {
              a = e
            }
          }
          Lt.prototype = new t()
          Ut = function e(t, r) {
            this.numberOfTracks = 0
            this.metadataStream = r
            t = t || {}
            if (typeof t.remux !== 'undefined') {
              this.remuxTracks = !!t.remux
            } else {
              this.remuxTracks = true
            }
            if (typeof t.keepOriginalTimestamps === 'boolean') {
              this.keepOriginalTimestamps = t.keepOriginalTimestamps
            } else {
              this.keepOriginalTimestamps = false
            }
            this.pendingTracks = []
            this.videoTrack = null
            this.pendingBoxes = []
            this.pendingCaptions = []
            this.pendingMetadata = []
            this.pendingBytes = 0
            this.emittedTracks = 0
            Ut.prototype.init.call(this)
            this.push = function(e) {
              if (e.text) {
                return this.pendingCaptions.push(e)
              }
              if (e.frames) {
                return this.pendingMetadata.push(e)
              }
              this.pendingTracks.push(e.track)
              this.pendingBytes += e.boxes.byteLength
              if (e.track.type === 'video') {
                this.videoTrack = e.track
                this.pendingBoxes.push(e.boxes)
              }
              if (e.track.type === 'audio') {
                this.audioTrack = e.track
                this.pendingBoxes.unshift(e.boxes)
              }
            }
          }
          Ut.prototype = new t()
          Ut.prototype.flush = function(e) {
            var t = 0,
              r = { captions: [], captionStreams: {}, metadata: [], info: {} },
              n,
              i,
              a,
              s = 0,
              o
            if (this.pendingTracks.length < this.numberOfTracks) {
              if (e !== 'VideoSegmentStream' && e !== 'AudioSegmentStream') {
                return
              } else if (this.remuxTracks) {
                return
              } else if (this.pendingTracks.length === 0) {
                this.emittedTracks++
                if (this.emittedTracks >= this.numberOfTracks) {
                  this.trigger('done')
                  this.emittedTracks = 0
                }
                return
              }
            }
            if (this.videoTrack) {
              s = this.videoTrack.timelineStartInfo.pts
              Nt.forEach(function(e) {
                r.info[e] = this.videoTrack[e]
              }, this)
            } else if (this.audioTrack) {
              s = this.audioTrack.timelineStartInfo.pts
              Pt.forEach(function(e) {
                r.info[e] = this.audioTrack[e]
              }, this)
            }
            if (this.videoTrack || this.audioTrack) {
              if (this.pendingTracks.length === 1) {
                r.type = this.pendingTracks[0].type
              } else {
                r.type = 'combined'
              }
              this.emittedTracks += this.pendingTracks.length
              a = j.initSegment(this.pendingTracks)
              r.initSegment = new Uint8Array(a.byteLength)
              r.initSegment.set(a)
              r.data = new Uint8Array(this.pendingBytes)
              for (o = 0; o < this.pendingBoxes.length; o++) {
                r.data.set(this.pendingBoxes[o], t)
                t += this.pendingBoxes[o].byteLength
              }
              for (o = 0; o < this.pendingCaptions.length; o++) {
                n = this.pendingCaptions[o]
                n.startTime = de.metadataTsToSeconds(n.startPts, s, this.keepOriginalTimestamps)
                n.endTime = de.metadataTsToSeconds(n.endPts, s, this.keepOriginalTimestamps)
                r.captionStreams[n.stream] = true
                r.captions.push(n)
              }
              for (o = 0; o < this.pendingMetadata.length; o++) {
                i = this.pendingMetadata[o]
                i.cueTime = de.metadataTsToSeconds(i.pts, s, this.keepOriginalTimestamps)
                r.metadata.push(i)
              }
              r.metadata.dispatchType = this.metadataStream.dispatchType
              this.pendingTracks.length = 0
              this.videoTrack = null
              this.pendingBoxes.length = 0
              this.pendingCaptions.length = 0
              this.pendingBytes = 0
              this.pendingMetadata.length = 0
              this.trigger('data', r)
              for (o = 0; o < r.captions.length; o++) {
                n = r.captions[o]
                this.trigger('caption', n)
              }
              for (o = 0; o < r.metadata.length; o++) {
                i = r.metadata[o]
                this.trigger('id3Frame', i)
              }
            }
            if (this.emittedTracks >= this.numberOfTracks) {
              this.trigger('done')
              this.emittedTracks = 0
            }
          }
          Ut.prototype.setRemux = function(e) {
            this.remuxTracks = e
          }
          Ft = function e(t) {
            var r = this,
              n = true,
              i,
              a
            Ft.prototype.init.call(this)
            t = t || {}
            this.baseMediaDecodeTime = t.baseMediaDecodeTime || 0
            this.transmuxPipeline_ = {}
            this.setupAacPipeline = function() {
              var e = {}
              this.transmuxPipeline_ = e
              e.type = 'aac'
              e.metadataStream = new st.MetadataStream()
              e.aacStream = new Dt()
              e.audioTimestampRolloverStream = new st.TimestampRolloverStream('audio')
              e.timedMetadataTimestampRolloverStream = new st.TimestampRolloverStream(
                'timed-metadata'
              )
              e.adtsStream = new ft()
              e.coalesceStream = new Ut(t, e.metadataStream)
              e.headOfPipeline = e.aacStream
              e.aacStream.pipe(e.audioTimestampRolloverStream).pipe(e.adtsStream)
              e.aacStream
                .pipe(e.timedMetadataTimestampRolloverStream)
                .pipe(e.metadataStream)
                .pipe(e.coalesceStream)
              e.metadataStream.on('timestamp', function(t) {
                e.aacStream.setTimestamp(t.timeStamp)
              })
              e.aacStream.on('data', function(n) {
                if (n.type === 'timed-metadata' && !e.audioSegmentStream) {
                  a = a || {
                    timelineStartInfo: { baseMediaDecodeTime: r.baseMediaDecodeTime },
                    codec: 'adts',
                    type: 'audio',
                  }
                  e.coalesceStream.numberOfTracks++
                  e.audioSegmentStream = new xt(a, t)
                  e.audioSegmentStream.on('timingInfo', r.trigger.bind(r, 'audioTimingInfo'))
                  e.adtsStream.pipe(e.audioSegmentStream).pipe(e.coalesceStream)
                }
                r.trigger('trackinfo', { hasAudio: !!a, hasVideo: !!i })
              })
              e.coalesceStream.on('data', this.trigger.bind(this, 'data'))
              e.coalesceStream.on('done', this.trigger.bind(this, 'done'))
            }
            this.setupTsPipeline = function() {
              var e = {}
              this.transmuxPipeline_ = e
              e.type = 'ts'
              e.metadataStream = new st.MetadataStream()
              e.packetStream = new st.TransportPacketStream()
              e.parseStream = new st.TransportParseStream()
              e.elementaryStream = new st.ElementaryStream()
              e.timestampRolloverStream = new st.TimestampRolloverStream()
              e.adtsStream = new ft()
              e.h264Stream = new Ot()
              e.captionStream = new st.CaptionStream()
              e.coalesceStream = new Ut(t, e.metadataStream)
              e.headOfPipeline = e.packetStream
              e.packetStream
                .pipe(e.parseStream)
                .pipe(e.elementaryStream)
                .pipe(e.timestampRolloverStream)
              e.timestampRolloverStream.pipe(e.h264Stream)
              e.timestampRolloverStream.pipe(e.adtsStream)
              e.timestampRolloverStream.pipe(e.metadataStream).pipe(e.coalesceStream)
              e.h264Stream.pipe(e.captionStream).pipe(e.coalesceStream)
              e.elementaryStream.on('data', function(n) {
                var s
                if (n.type === 'metadata') {
                  s = n.tracks.length
                  while (s--) {
                    if (!i && n.tracks[s].type === 'video') {
                      i = n.tracks[s]
                      i.timelineStartInfo.baseMediaDecodeTime = r.baseMediaDecodeTime
                    } else if (!a && n.tracks[s].type === 'audio') {
                      a = n.tracks[s]
                      a.timelineStartInfo.baseMediaDecodeTime = r.baseMediaDecodeTime
                    }
                  }
                  if (i && !e.videoSegmentStream) {
                    e.coalesceStream.numberOfTracks++
                    e.videoSegmentStream = new Lt(i, t)
                    e.videoSegmentStream.on('timelineStartInfo', function(t) {
                      if (a) {
                        a.timelineStartInfo = t
                        e.audioSegmentStream.setEarliestDts(t.dts)
                      }
                    })
                    e.videoSegmentStream.on('processedGopsInfo', r.trigger.bind(r, 'gopInfo'))
                    e.videoSegmentStream.on(
                      'segmentTimingInfo',
                      r.trigger.bind(r, 'videoSegmentTimingInfo')
                    )
                    e.videoSegmentStream.on('baseMediaDecodeTime', function(t) {
                      if (a) {
                        e.audioSegmentStream.setVideoBaseMediaDecodeTime(t)
                      }
                    })
                    e.videoSegmentStream.on('timingInfo', r.trigger.bind(r, 'videoTimingInfo'))
                    e.h264Stream.pipe(e.videoSegmentStream).pipe(e.coalesceStream)
                  }
                  if (a && !e.audioSegmentStream) {
                    e.coalesceStream.numberOfTracks++
                    e.audioSegmentStream = new xt(a, t)
                    e.audioSegmentStream.on('timingInfo', r.trigger.bind(r, 'audioTimingInfo'))
                    e.adtsStream.pipe(e.audioSegmentStream).pipe(e.coalesceStream)
                  }
                  r.trigger('trackinfo', { hasAudio: !!a, hasVideo: !!i })
                }
              })
              e.coalesceStream.on('data', this.trigger.bind(this, 'data'))
              e.coalesceStream.on('id3Frame', function(t) {
                t.dispatchType = e.metadataStream.dispatchType
                r.trigger('id3Frame', t)
              })
              e.coalesceStream.on('caption', this.trigger.bind(this, 'caption'))
              e.coalesceStream.on('done', this.trigger.bind(this, 'done'))
            }
            this.setBaseMediaDecodeTime = function(e) {
              var r = this.transmuxPipeline_
              if (!t.keepOriginalTimestamps) {
                this.baseMediaDecodeTime = e
              }
              if (a) {
                a.timelineStartInfo.dts = undefined
                a.timelineStartInfo.pts = undefined
                be.clearDtsInfo(a)
                if (!t.keepOriginalTimestamps) {
                  a.timelineStartInfo.baseMediaDecodeTime = e
                }
                if (r.audioTimestampRolloverStream) {
                  r.audioTimestampRolloverStream.discontinuity()
                }
              }
              if (i) {
                if (r.videoSegmentStream) {
                  r.videoSegmentStream.gopCache_ = []
                }
                i.timelineStartInfo.dts = undefined
                i.timelineStartInfo.pts = undefined
                be.clearDtsInfo(i)
                r.captionStream.reset()
                if (!t.keepOriginalTimestamps) {
                  i.timelineStartInfo.baseMediaDecodeTime = e
                }
              }
              if (r.timestampRolloverStream) {
                r.timestampRolloverStream.discontinuity()
              }
            }
            this.setAudioAppendStart = function(e) {
              if (a) {
                this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(e)
              }
            }
            this.setRemux = function(e) {
              var r = this.transmuxPipeline_
              t.remux = e
              if (r && r.coalesceStream) {
                r.coalesceStream.setRemux(e)
              }
            }
            this.alignGopsWith = function(e) {
              if (i && this.transmuxPipeline_.videoSegmentStream) {
                this.transmuxPipeline_.videoSegmentStream.alignGopsWith(e)
              }
            }
            this.push = function(e) {
              if (n) {
                var t = Mt(e)
                if (t && this.transmuxPipeline_.type !== 'aac') {
                  this.setupAacPipeline()
                } else if (!t && this.transmuxPipeline_.type !== 'ts') {
                  this.setupTsPipeline()
                }
                n = false
              }
              this.transmuxPipeline_.headOfPipeline.push(e)
            }
            this.flush = function() {
              n = true
              this.transmuxPipeline_.headOfPipeline.flush()
            }
            this.endTimeline = function() {
              this.transmuxPipeline_.headOfPipeline.endTimeline()
            }
            this.reset = function() {
              if (this.transmuxPipeline_.headOfPipeline) {
                this.transmuxPipeline_.headOfPipeline.reset()
              }
            }
            this.resetCaptions = function() {
              if (this.transmuxPipeline_.captionStream) {
                this.transmuxPipeline_.captionStream.reset()
              }
            }
          }
          Ft.prototype = new t()
          var Gt = {
            Transmuxer: Ft,
            VideoSegmentStream: Lt,
            AudioSegmentStream: xt,
            AUDIO_PROPERTIES: Pt,
            VIDEO_PROPERTIES: Nt,
            generateVideoSegmentTimingInfo: jt,
          }
          var qt = function e(t, r) {
            if (!(t instanceof r)) {
              throw new TypeError('Cannot call a class as a function')
            }
          }
          var Ht = (function() {
            function e(e, t) {
              for (var r = 0; r < t.length; r++) {
                var n = t[r]
                n.enumerable = n.enumerable || false
                n.configurable = true
                if ('value' in n) n.writable = true
                Object.defineProperty(e, n.key, n)
              }
            }
            return function(t, r, n) {
              if (r) e(t.prototype, r)
              if (n) e(t, n)
              return t
            }
          })()
          var Vt = function e(t, r) {
            r.on('data', function(e) {
              var r = e.initSegment
              e.initSegment = { data: r.buffer, byteOffset: r.byteOffset, byteLength: r.byteLength }
              var n = e.data
              e.data = n.buffer
              t.postMessage(
                { action: 'data', segment: e, byteOffset: n.byteOffset, byteLength: n.byteLength },
                [e.data]
              )
            })
            if (r.captionStream) {
              r.captionStream.on('data', function(e) {
                t.postMessage({ action: 'caption', data: e })
              })
            }
            r.on('done', function(e) {
              t.postMessage({ action: 'done' })
            })
            r.on('gopInfo', function(e) {
              t.postMessage({ action: 'gopInfo', gopInfo: e })
            })
            r.on('videoSegmentTimingInfo', function(e) {
              t.postMessage({ action: 'videoSegmentTimingInfo', videoSegmentTimingInfo: e })
            })
          }
          var Kt = (function() {
            function e(t, r) {
              qt(this, e)
              this.options = r || {}
              this.self = t
              this.init()
            }
            Ht(e, [
              {
                key: 'init',
                value: function e() {
                  if (this.transmuxer) {
                    this.transmuxer.dispose()
                  }
                  this.transmuxer = new Gt.Transmuxer(this.options)
                  Vt(this.self, this.transmuxer)
                },
              },
              {
                key: 'push',
                value: function e(t) {
                  var r = new Uint8Array(t.data, t.byteOffset, t.byteLength)
                  this.transmuxer.push(r)
                },
              },
              {
                key: 'reset',
                value: function e() {
                  this.init()
                },
              },
              {
                key: 'setTimestampOffset',
                value: function e(t) {
                  var r = t.timestampOffset || 0
                  this.transmuxer.setBaseMediaDecodeTime(Math.round(r * 9e4))
                },
              },
              {
                key: 'setAudioAppendStart',
                value: function e(t) {
                  this.transmuxer.setAudioAppendStart(Math.ceil(t.appendStart * 9e4))
                },
              },
              {
                key: 'flush',
                value: function e(t) {
                  this.transmuxer.flush()
                },
              },
              {
                key: 'resetCaptions',
                value: function e() {
                  this.transmuxer.resetCaptions()
                },
              },
              {
                key: 'alignGopsWith',
                value: function e(t) {
                  this.transmuxer.alignGopsWith(t.gopsToAlignWith.slice())
                },
              },
            ])
            return e
          })()
          var Yt = function e(t) {
            t.onmessage = function(e) {
              if (e.data.action === 'init' && e.data.options) {
                this.messageHandlers = new Kt(t, e.data.options)
                return
              }
              if (!this.messageHandlers) {
                this.messageHandlers = new Kt(t)
              }
              if (e.data && e.data.action && e.data.action !== 'init') {
                if (this.messageHandlers[e.data.action]) {
                  this.messageHandlers[e.data.action](e.data)
                }
              }
            }
          }
          var Wt = new Yt(r)
          return Wt
        })()
      })
      var zc = { videoCodec: 'avc1', videoObjectTypeIndicator: '.4d400d', audioProfile: '2' }
      var Xc = function e(t) {
        return t.map(function(e) {
          return e.replace(/avc1\.(\d+)\.(\d+)/i, function(e, t, r) {
            var n = ('00' + Number(t).toString(16)).slice(-2)
            var i = ('00' + Number(r).toString(16)).slice(-2)
            return 'avc1.' + n + '00' + i
          })
        })
      }
      var $c = function e() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ''
        var r = { codecCount: 0 }
        var n = void 0
        r.codecCount = t.split(',').length
        r.codecCount = r.codecCount || 2
        n = /(^|\s|,)+(avc[13])([^ ,]*)/i.exec(t)
        if (n) {
          r.videoCodec = n[2]
          r.videoObjectTypeIndicator = n[3]
        }
        r.audioProfile = /(^|\s|,)+mp4a.[0-9A-Fa-f]+\.([0-9A-Fa-f]+)/i.exec(t)
        r.audioProfile = r.audioProfile && r.audioProfile[2]
        return r
      }
      var Qc = function e(t) {
        return t.replace(/avc1\.(\d+)\.(\d+)/i, function(e) {
          return Xc([e])[0]
        })
      }
      var Jc = function e(t, r, n) {
        return (
          t +
          '/' +
          r +
          '; codecs="' +
          n
            .filter(function(e) {
              return !!e
            })
            .join(', ') +
          '"'
        )
      }
      var Zc = function e(t) {
        if (t.segments && t.segments.length && t.segments[0].map) {
          return 'mp4'
        }
        return 'mp2t'
      }
      var eh = function e(t) {
        var r = t.attributes || {}
        if (r.CODECS) {
          return $c(r.CODECS)
        }
        return zc
      }
      var th = function e(t, r) {
        if (!t.mediaGroups.AUDIO || !r) {
          return null
        }
        var n = t.mediaGroups.AUDIO[r]
        if (!n) {
          return null
        }
        for (var i in n) {
          var a = n[i]
          if (a['default'] && a.playlists) {
            return $c(a.playlists[0].attributes.CODECS).audioProfile
          }
        }
        return null
      }
      var rh = function e(t, r) {
        var n = Zc(r)
        var i = eh(r)
        var a = r.attributes || {}
        var s = true
        var o = false
        if (!r) {
          return []
        }
        if (t.mediaGroups.AUDIO && a.AUDIO) {
          var u = t.mediaGroups.AUDIO[a.AUDIO]
          if (u) {
            o = true
            s = false
            for (var l in u) {
              if (!u[l].uri && !u[l].playlists) {
                s = true
                break
              }
            }
          }
        }
        if (o && !i.audioProfile) {
          if (!s) {
            i.audioProfile = th(t, a.AUDIO)
          }
          if (!i.audioProfile) {
            Ho.log.warn(
              'Multiple audio tracks present but no audio codec string is specified. ' +
                'Attempting to use the default audio codec (mp4a.40.2)'
            )
            i.audioProfile = zc.audioProfile
          }
        }
        var f = {}
        if (i.videoCodec) {
          f.video = '' + i.videoCodec + i.videoObjectTypeIndicator
        }
        if (i.audioProfile) {
          f.audio = 'mp4a.40.' + i.audioProfile
        }
        var d = Jc('audio', n, [f.audio])
        var c = Jc('video', n, [f.video])
        var h = Jc('video', n, [f.video, f.audio])
        if (o) {
          if (!s && f.video) {
            return [c, d]
          }
          if (!s && !f.video) {
            return [d, d]
          }
          return [h, d]
        }
        if (!f.video) {
          return [d]
        }
        return [h]
      }
      var nh = function e(t) {
        var r = { type: '', parameters: {} }
        var n = t.trim().split(';')
        r.type = n.shift().trim()
        n.forEach(function(e) {
          var t = e.trim().split('=')
          if (t.length > 1) {
            var n = t[0].replace(/"/g, '').trim()
            var i = t[1].replace(/"/g, '').trim()
            r.parameters[n] = i
          }
        })
        return r
      }
      var ih = function e(t) {
        return /mp4a\.\d+.\d+/i.test(t)
      }
      var ah = function e(t) {
        return /avc1\.[\da-f]+/i.test(t)
      }
      var sh = function e(t, r, n) {
        if (typeof r === 'undefined' || r === null || !t.length) {
          return []
        }
        var i = Math.ceil((r - n + 3) * 9e4)
        var a = void 0
        for (a = 0; a < t.length; a++) {
          if (t[a].pts > i) {
            break
          }
        }
        return t.slice(a)
      }
      var oh = function e(t, r, n) {
        if (!r.length) {
          return t
        }
        if (n) {
          return r.slice()
        }
        var i = r[0].pts
        var a = 0
        for (a; a < t.length; a++) {
          if (t[a].pts >= i) {
            break
          }
        }
        return t.slice(0, a).concat(r)
      }
      var uh = function e(t, r, n, i) {
        var a = Math.ceil((r - i) * 9e4)
        var s = Math.ceil((n - i) * 9e4)
        var o = t.slice()
        var u = t.length
        while (u--) {
          if (t[u].pts <= s) {
            break
          }
        }
        if (u === -1) {
          return o
        }
        var l = u + 1
        while (l--) {
          if (t[l].pts <= a) {
            break
          }
        }
        l = Math.max(l, 0)
        o.splice(l, u - l + 1)
        return o
      }
      var lh = function e(t, r, n) {
        var i = null
        var a = null
        var s = 0
        var o = []
        var u = []
        if (!t && !r) {
          return Ho.createTimeRange()
        }
        if (!t) {
          return r.buffered
        }
        if (!r) {
          return t.buffered
        }
        if (n) {
          return t.buffered
        }
        if (t.buffered.length === 0 && r.buffered.length === 0) {
          return Ho.createTimeRange()
        }
        var l = t.buffered
        var f = r.buffered
        var d = l.length
        while (d--) {
          o.push({ time: l.start(d), type: 'start' })
          o.push({ time: l.end(d), type: 'end' })
        }
        d = f.length
        while (d--) {
          o.push({ time: f.start(d), type: 'start' })
          o.push({ time: f.end(d), type: 'end' })
        }
        o.sort(function(e, t) {
          return e.time - t.time
        })
        for (d = 0; d < o.length; d++) {
          if (o[d].type === 'start') {
            s++
            if (s === 2) {
              i = o[d].time
            }
          } else if (o[d].type === 'end') {
            s--
            if (s === 1) {
              a = o[d].time
            }
          }
          if (i !== null && a !== null) {
            u.push([i, a])
            i = null
            a = null
          }
        }
        return Ho.createTimeRanges(u)
      }
      var fh = 9e4
      var dh = function e(t, r) {
        var n = t.addSourceBuffer(r)
        var i = Object.create(null)
        i.updating = false
        i.realBuffer_ = n
        var a = function e(t) {
          if (typeof n[t] === 'function') {
            i[t] = function() {
              return n[t].apply(n, arguments)
            }
          } else if (typeof i[t] === 'undefined') {
            Object.defineProperty(i, t, {
              get: function e() {
                return n[t]
              },
              set: function e(r) {
                return (n[t] = r)
              },
            })
          }
        }
        for (var s in n) {
          a(s)
        }
        return i
      }
      var ch = (function(e) {
        hd(t, e)
        function t(e, r) {
          fd(this, t)
          var n = pd(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, Ho.EventTarget))
          n.timestampOffset_ = 0
          n.pendingBuffers_ = []
          n.bufferUpdating_ = false
          n.mediaSource_ = e
          n.codecs_ = r
          n.audioCodec_ = null
          n.videoCodec_ = null
          n.audioDisabled_ = false
          n.appendAudioInitSegment_ = true
          n.gopBuffer_ = []
          n.timeMapping_ = 0
          n.safeAppend_ = Ho.browser.IE_VERSION >= 11
          var i = { remux: false, alignGopsAtEnd: n.safeAppend_ }
          n.codecs_.forEach(function(e) {
            if (ih(e)) {
              n.audioCodec_ = e
            } else if (ah(e)) {
              n.videoCodec_ = e
            }
          })
          n.transmuxer_ = new Wc()
          n.transmuxer_.postMessage({ action: 'init', options: i })
          n.transmuxer_.onmessage = function(e) {
            if (e.data.action === 'data') {
              return n.data_(e)
            }
            if (e.data.action === 'done') {
              return n.done_(e)
            }
            if (e.data.action === 'gopInfo') {
              return n.appendGopInfo_(e)
            }
            if (e.data.action === 'videoSegmentTimingInfo') {
              return n.videoSegmentTimingInfo_(e.data.videoSegmentTimingInfo)
            }
          }
          Object.defineProperty(n, 'timestampOffset', {
            get: function e() {
              return this.timestampOffset_
            },
            set: function e(t) {
              if (typeof t === 'number' && t >= 0) {
                this.timestampOffset_ = t
                this.appendAudioInitSegment_ = true
                this.gopBuffer_.length = 0
                this.timeMapping_ = 0
                this.transmuxer_.postMessage({ action: 'setTimestampOffset', timestampOffset: t })
              }
            },
          })
          Object.defineProperty(n, 'appendWindowStart', {
            get: function e() {
              return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart
            },
            set: function e(t) {
              if (this.videoBuffer_) {
                this.videoBuffer_.appendWindowStart = t
              }
              if (this.audioBuffer_) {
                this.audioBuffer_.appendWindowStart = t
              }
            },
          })
          Object.defineProperty(n, 'updating', {
            get: function e() {
              return !!(
                this.bufferUpdating_ ||
                (!this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating) ||
                (this.videoBuffer_ && this.videoBuffer_.updating)
              )
            },
          })
          Object.defineProperty(n, 'buffered', {
            get: function e() {
              return lh(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_)
            },
          })
          return n
        }
        dd(t, [
          {
            key: 'data_',
            value: function e(t) {
              var r = t.data.segment
              r.data = new Uint8Array(r.data, t.data.byteOffset, t.data.byteLength)
              r.initSegment = new Uint8Array(
                r.initSegment.data,
                r.initSegment.byteOffset,
                r.initSegment.byteLength
              )
              Oc(this, this.mediaSource_, r)
              this.pendingBuffers_.push(r)
              return
            },
          },
          {
            key: 'done_',
            value: function e(t) {
              if (this.mediaSource_.readyState === 'closed') {
                this.pendingBuffers_.length = 0
                return
              }
              this.processPendingSegments_()
              return
            },
          },
          {
            key: 'videoSegmentTimingInfo_',
            value: function e(t) {
              var r = {
                start: { decode: t.start.dts / fh, presentation: t.start.pts / fh },
                end: { decode: t.end.dts / fh, presentation: t.end.pts / fh },
                baseMediaDecodeTime: t.baseMediaDecodeTime / fh,
              }
              if (t.prependedContentDuration) {
                r.prependedContentDuration = t.prependedContentDuration / fh
              }
              this.trigger({ type: 'videoSegmentTimingInfo', videoSegmentTimingInfo: r })
            },
          },
          {
            key: 'createRealSourceBuffers_',
            value: function e() {
              var t = this
              var r = ['audio', 'video']
              r.forEach(function(e) {
                if (!t[e + 'Codec_']) {
                  return
                }
                if (t[e + 'Buffer_']) {
                  return
                }
                var n = null
                if (t.mediaSource_[e + 'Buffer_']) {
                  n = t.mediaSource_[e + 'Buffer_']
                  n.updating = false
                } else {
                  var i = e + 'Codec_'
                  var a = e + '/mp4;codecs="' + t[i] + '"'
                  n = dh(t.mediaSource_.nativeMediaSource_, a)
                  t.mediaSource_[e + 'Buffer_'] = n
                }
                t[e + 'Buffer_'] = n
                ;['update', 'updatestart', 'updateend'].forEach(function(i) {
                  n.addEventListener(i, function() {
                    if (e === 'audio' && t.audioDisabled_) {
                      return
                    }
                    if (i === 'updateend') {
                      t[e + 'Buffer_'].updating = false
                    }
                    var n = r.every(function(r) {
                      if (r === 'audio' && t.audioDisabled_) {
                        return true
                      }
                      if (e !== r && t[r + 'Buffer_'] && t[r + 'Buffer_'].updating) {
                        return false
                      }
                      return true
                    })
                    if (n) {
                      return t.trigger(i)
                    }
                  })
                })
              })
            },
          },
          {
            key: 'appendBuffer',
            value: function e(t) {
              this.bufferUpdating_ = true
              if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {
                var r = this.audioBuffer_.buffered
                this.transmuxer_.postMessage({
                  action: 'setAudioAppendStart',
                  appendStart: r.end(r.length - 1),
                })
              }
              if (this.videoBuffer_) {
                this.transmuxer_.postMessage({
                  action: 'alignGopsWith',
                  gopsToAlignWith: sh(
                    this.gopBuffer_,
                    this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null,
                    this.timeMapping_
                  ),
                })
              }
              this.transmuxer_.postMessage(
                {
                  action: 'push',
                  data: t.buffer,
                  byteOffset: t.byteOffset,
                  byteLength: t.byteLength,
                },
                [t.buffer]
              )
              this.transmuxer_.postMessage({ action: 'flush' })
            },
          },
          {
            key: 'appendGopInfo_',
            value: function e(t) {
              this.gopBuffer_ = oh(this.gopBuffer_, t.data.gopInfo, this.safeAppend_)
            },
          },
          {
            key: 'remove',
            value: function e(t, r) {
              if (this.videoBuffer_) {
                this.videoBuffer_.updating = true
                this.videoBuffer_.remove(t, r)
                this.gopBuffer_ = uh(this.gopBuffer_, t, r, this.timeMapping_)
              }
              if (!this.audioDisabled_ && this.audioBuffer_) {
                this.audioBuffer_.updating = true
                this.audioBuffer_.remove(t, r)
              }
              Mc(t, r, this.metadataTrack_)
              if (this.inbandTextTracks_) {
                for (var n in this.inbandTextTracks_) {
                  Mc(t, r, this.inbandTextTracks_[n])
                }
              }
            },
          },
          {
            key: 'processPendingSegments_',
            value: function e() {
              var t = {
                video: { segments: [], bytes: 0 },
                audio: { segments: [], bytes: 0 },
                captions: [],
                metadata: [],
              }
              if (!this.pendingBuffers_.length) {
                this.trigger('updateend')
                this.bufferUpdating_ = false
                return
              }
              t = this.pendingBuffers_.reduce(function(e, t) {
                var r = t.type
                var n = t.data
                var i = t.initSegment
                e[r].segments.push(n)
                e[r].bytes += n.byteLength
                e[r].initSegment = i
                if (t.captions) {
                  e.captions = e.captions.concat(t.captions)
                }
                if (t.info) {
                  e[r].info = t.info
                }
                if (t.metadata) {
                  e.metadata = e.metadata.concat(t.metadata)
                }
                return e
              }, t)
              if (!this.videoBuffer_ && !this.audioBuffer_) {
                if (t.video.bytes === 0) {
                  this.videoCodec_ = null
                }
                if (t.audio.bytes === 0) {
                  this.audioCodec_ = null
                }
                this.createRealSourceBuffers_()
              }
              if (t.audio.info) {
                this.mediaSource_.trigger({ type: 'audioinfo', info: t.audio.info })
              }
              if (t.video.info) {
                this.mediaSource_.trigger({ type: 'videoinfo', info: t.video.info })
              }
              if (this.appendAudioInitSegment_) {
                if (!this.audioDisabled_ && this.audioBuffer_) {
                  t.audio.segments.unshift(t.audio.initSegment)
                  t.audio.bytes += t.audio.initSegment.byteLength
                }
                this.appendAudioInitSegment_ = false
              }
              var r = false
              if (this.videoBuffer_ && t.video.bytes) {
                t.video.segments.unshift(t.video.initSegment)
                t.video.bytes += t.video.initSegment.byteLength
                this.concatAndAppendSegments_(t.video, this.videoBuffer_)
              } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {
                r = true
              }
              Nc(this, t.captions, t.metadata)
              if (!this.audioDisabled_ && this.audioBuffer_) {
                this.concatAndAppendSegments_(t.audio, this.audioBuffer_)
              }
              this.pendingBuffers_.length = 0
              if (r) {
                this.trigger('updateend')
              }
              this.bufferUpdating_ = false
            },
          },
          {
            key: 'concatAndAppendSegments_',
            value: function e(t, r) {
              var n = 0
              var i = void 0
              if (t.bytes) {
                i = new Uint8Array(t.bytes)
                t.segments.forEach(function(e) {
                  i.set(e, n)
                  n += e.byteLength
                })
                try {
                  r.updating = true
                  r.appendBuffer(i)
                } catch (e) {
                  if (this.mediaSource_.player_) {
                    this.mediaSource_.player_.error({
                      code: -3,
                      type: 'APPEND_BUFFER_ERR',
                      message: e.message,
                      originalError: e,
                    })
                  }
                }
              }
            },
          },
          {
            key: 'abort',
            value: function e() {
              if (this.videoBuffer_) {
                this.videoBuffer_.abort()
              }
              if (!this.audioDisabled_ && this.audioBuffer_) {
                this.audioBuffer_.abort()
              }
              if (this.transmuxer_) {
                this.transmuxer_.postMessage({ action: 'reset' })
              }
              this.pendingBuffers_.length = 0
              this.bufferUpdating_ = false
            },
          },
        ])
        return t
      })(Ho.EventTarget)
      var hh = (function(r) {
        hd(n, r)
        function n() {
          fd(this, n)
          var r = pd(this, (n.__proto__ || Object.getPrototypeOf(n)).call(this))
          var i = void 0
          r.nativeMediaSource_ = new e.MediaSource()
          for (i in r.nativeMediaSource_) {
            if (!(i in n.prototype) && typeof r.nativeMediaSource_[i] === 'function') {
              r[i] = r.nativeMediaSource_[i].bind(r.nativeMediaSource_)
            }
          }
          r.duration_ = NaN
          Object.defineProperty(r, 'duration', {
            get: function e() {
              if (this.duration_ === Infinity) {
                return this.duration_
              }
              return this.nativeMediaSource_.duration
            },
            set: function e(t) {
              this.duration_ = t
              if (t !== Infinity) {
                this.nativeMediaSource_.duration = t
                return
              }
            },
          })
          Object.defineProperty(r, 'seekable', {
            get: function e() {
              if (this.duration_ === Infinity) {
                return Ho.createTimeRanges([[0, this.nativeMediaSource_.duration]])
              }
              return this.nativeMediaSource_.seekable
            },
          })
          Object.defineProperty(r, 'readyState', {
            get: function e() {
              return this.nativeMediaSource_.readyState
            },
          })
          Object.defineProperty(r, 'activeSourceBuffers', {
            get: function e() {
              return this.activeSourceBuffers_
            },
          })
          r.sourceBuffers = []
          r.activeSourceBuffers_ = []
          r.updateActiveSourceBuffers_ = function() {
            r.activeSourceBuffers_.length = 0
            if (r.sourceBuffers.length === 1) {
              var e = r.sourceBuffers[0]
              e.appendAudioInitSegment_ = true
              e.audioDisabled_ = !e.audioCodec_
              r.activeSourceBuffers_.push(e)
              return
            }
            var t = false
            var n = true
            for (var i = 0; i < r.player_.audioTracks().length; i++) {
              var a = r.player_.audioTracks()[i]
              if (a.enabled && a.kind !== 'main') {
                t = true
                n = false
                break
              }
            }
            r.sourceBuffers.forEach(function(e, i) {
              e.appendAudioInitSegment_ = true
              if (e.videoCodec_ && e.audioCodec_) {
                e.audioDisabled_ = t
              } else if (e.videoCodec_ && !e.audioCodec_) {
                e.audioDisabled_ = true
                n = false
              } else if (!e.videoCodec_ && e.audioCodec_) {
                e.audioDisabled_ = i ? n : !n
                if (e.audioDisabled_) {
                  return
                }
              }
              r.activeSourceBuffers_.push(e)
            })
          }
          r.onPlayerMediachange_ = function() {
            r.sourceBuffers.forEach(function(e) {
              e.appendAudioInitSegment_ = true
            })
          }
          r.onHlsReset_ = function() {
            r.sourceBuffers.forEach(function(e) {
              if (e.transmuxer_) {
                e.transmuxer_.postMessage({ action: 'resetCaptions' })
              }
            })
          }
          r.onHlsSegmentTimeMapping_ = function(e) {
            r.sourceBuffers.forEach(function(t) {
              return (t.timeMapping_ = e.mapping)
            })
          }
          ;['sourceopen', 'sourceclose', 'sourceended'].forEach(function(e) {
            this.nativeMediaSource_.addEventListener(e, this.trigger.bind(this))
          }, r)
          r.on('sourceopen', function(e) {
            var n = t.querySelector('[src="' + r.url_ + '"]')
            if (!n) {
              return
            }
            r.player_ = Ho(n.parentNode)
            if (!r.player_) {
              return
            }
            r.player_.tech_.on('hls-reset', r.onHlsReset_)
            r.player_.tech_.on('hls-segment-time-mapping', r.onHlsSegmentTimeMapping_)
            if (r.player_.audioTracks && r.player_.audioTracks()) {
              r.player_.audioTracks().on('change', r.updateActiveSourceBuffers_)
              r.player_.audioTracks().on('addtrack', r.updateActiveSourceBuffers_)
              r.player_.audioTracks().on('removetrack', r.updateActiveSourceBuffers_)
            }
            r.player_.on('mediachange', r.onPlayerMediachange_)
          })
          r.on('sourceended', function(e) {
            var t = Pc(r.duration)
            for (var n = 0; n < r.sourceBuffers.length; n++) {
              var i = r.sourceBuffers[n]
              var a = i.metadataTrack_ && i.metadataTrack_.cues
              if (a && a.length) {
                a[a.length - 1].endTime = t
              }
            }
          })
          r.on('sourceclose', function(e) {
            this.sourceBuffers.forEach(function(e) {
              if (e.transmuxer_) {
                e.transmuxer_.terminate()
              }
            })
            this.sourceBuffers.length = 0
            if (!this.player_) {
              return
            }
            if (this.player_.audioTracks && this.player_.audioTracks()) {
              this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_)
              this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_)
              this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_)
            }
            if (this.player_.el_) {
              this.player_.off('mediachange', this.onPlayerMediachange_)
            }
            if (this.player_.tech_ && this.player_.tech_.el_) {
              this.player_.tech_.off('hls-reset', this.onHlsReset_)
              this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_)
            }
          })
          return r
        }
        dd(n, [
          {
            key: 'addSeekableRange_',
            value: function e(t, r) {
              var n = void 0
              if (this.duration !== Infinity) {
                n = new Error(
                  'MediaSource.addSeekableRange() can only be invoked ' +
                    'when the duration is Infinity'
                )
                n.name = 'InvalidStateError'
                n.code = 11
                throw n
              }
              if (r > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {
                this.nativeMediaSource_.duration = r
              }
            },
          },
          {
            key: 'addSourceBuffer',
            value: function e(t) {
              var r = void 0
              var n = nh(t)
              if (/^(video|audio)\/mp2t$/i.test(n.type)) {
                var i = []
                if (n.parameters && n.parameters.codecs) {
                  i = n.parameters.codecs.split(',')
                  i = Xc(i)
                  i = i.filter(function(e) {
                    return ih(e) || ah(e)
                  })
                }
                if (i.length === 0) {
                  i = ['avc1.4d400d', 'mp4a.40.2']
                }
                r = new ch(this, i)
                if (this.sourceBuffers.length !== 0) {
                  this.sourceBuffers[0].createRealSourceBuffers_()
                  r.createRealSourceBuffers_()
                  this.sourceBuffers[0].audioDisabled_ = true
                }
              } else {
                r = this.nativeMediaSource_.addSourceBuffer(t)
              }
              this.sourceBuffers.push(r)
              return r
            },
          },
        ])
        return n
      })(Ho.EventTarget)
      var ph = 0
      Ho.mediaSources = {}
      var vh = function e(t, r) {
        var n = Ho.mediaSources[t]
        if (n) {
          n.trigger({ type: 'sourceopen', swfId: r })
        } else {
          throw new Error('Media Source not found (Video.js)')
        }
      }
      var gh = function t() {
        return (
          !!e.MediaSource &&
          !!e.MediaSource.isTypeSupported &&
          e.MediaSource.isTypeSupported('video/mp4;codecs="avc1.4d400d,mp4a.40.2"')
        )
      }
      var mh = function e() {
        this.MediaSource = { open: vh, supportsNativeMediaSources: gh }
        if (gh()) {
          return new hh()
        }
        throw new Error('Cannot use create a virtual MediaSource for this video')
      }
      mh.open = vh
      mh.supportsNativeMediaSources = gh
      var yh = {
        createObjectURL: function t(r) {
          var n = 'blob:vjs-media-source/'
          var i = void 0
          if (r instanceof hh) {
            i = e.URL.createObjectURL(r.nativeMediaSource_)
            r.url_ = i
            return i
          }
          if (!(r instanceof hh)) {
            i = e.URL.createObjectURL(r)
            r.url_ = i
            return i
          }
          i = n + ph
          ph++
          Ho.mediaSources[i] = r
          return i
        },
      }
      Ho.MediaSource = mh
      Ho.URL = yh
      var _h = Ho.EventTarget,
        Th = Ho.mergeOptions
      var Eh = function e(t, r) {
        var n = void 0
        var i = Th(t, { duration: r.duration, minimumUpdatePeriod: r.minimumUpdatePeriod })
        for (var a = 0; a < r.playlists.length; a++) {
          var s = bd(i, r.playlists[a])
          if (s) {
            i = s
          } else {
            n = true
          }
        }
        _d(r, function(e, t, r, a) {
          if (e.playlists && e.playlists.length) {
            var s = e.playlists[0].uri
            var o = bd(i, e.playlists[0])
            if (o) {
              i = o
              i.mediaGroups[t][r][a].playlists[0] = i.playlists[s]
              n = false
            }
          }
        })
        if (n) {
          return null
        }
        return i
      }
      var bh = function e(t) {
        var r = t.byterange.offset + t.byterange.length - 1
        return t.uri + '-' + t.byterange.offset + '-' + r
      }
      var Sh = function e(t, r) {
        var n = Boolean(!t.map && !r.map)
        var i =
          n ||
          Boolean(
            t.map &&
              r.map &&
              t.map.byterange.offset === r.map.byterange.offset &&
              t.map.byterange.length === r.map.byterange.length
          )
        return (
          i &&
          t.uri === r.uri &&
          t.byterange.offset === r.byterange.offset &&
          t.byterange.length === r.byterange.length
        )
      }
      var wh = function e(t, r) {
        var n = {}
        for (var i in t) {
          var a = t[i]
          var s = a.sidx
          if (s) {
            var o = bh(s)
            if (!r[o]) {
              break
            }
            var u = r[o].sidxInfo
            if (Sh(u, s)) {
              n[o] = r[o]
            }
          }
        }
        return n
      }
      var Ah = function e(t, r, n, i) {
        var a = nl(t, { manifestUri: r, clientOffset: n })
        var s = wh(a.playlists, i)
        var o = s
        _d(a, function(e, t, r, n) {
          if (e.playlists && e.playlists.length) {
            var a = e.playlists
            o = Th(o, wh(a, i))
          }
        })
        return o
      }
      var Ih = function e(t, r, n, i, a) {
        var s = {
          uri: ld(i.handleManifestRedirects, t.resolvedUri),
          byterange: t.byterange,
          playlist: r,
        }
        var o = Ho.mergeOptions(s, { responseType: 'arraybuffer', headers: tc(s) })
        return n(o, a)
      }
      var Ch = (function(t) {
        hd(r, t)
        function r(e, t) {
          var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}
          var i = arguments[3]
          fd(this, r)
          var a = pd(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this))
          var s = n.withCredentials,
            o = s === undefined ? false : s,
            u = n.handleManifestRedirects,
            l = u === undefined ? false : u
          a.hls_ = t
          a.withCredentials = o
          a.handleManifestRedirects = l
          if (!e) {
            throw new Error('A non-empty playlist URL or playlist is required')
          }
          a.on('minimumUpdatePeriod', function() {
            a.refreshXml_()
          })
          a.on('mediaupdatetimeout', function() {
            a.refreshMedia_(a.media().uri)
          })
          a.state = 'HAVE_NOTHING'
          a.loadedPlaylists_ = {}
          if (typeof e === 'string') {
            a.srcUrl = e
            a.sidxMapping_ = {}
            return pd(a)
          }
          a.setupChildLoader(i, e)
          return a
        }
        dd(r, [
          {
            key: 'setupChildLoader',
            value: function e(t, r) {
              this.masterPlaylistLoader_ = t
              this.childPlaylist_ = r
            },
          },
          {
            key: 'dispose',
            value: function t() {
              this.stopRequest()
              this.loadedPlaylists_ = {}
              e.clearTimeout(this.minimumUpdatePeriodTimeout_)
              e.clearTimeout(this.mediaRequest_)
              e.clearTimeout(this.mediaUpdateTimeout)
            },
          },
          {
            key: 'hasPendingRequest',
            value: function e() {
              return this.request || this.mediaRequest_
            },
          },
          {
            key: 'stopRequest',
            value: function e() {
              if (this.request) {
                var t = this.request
                this.request = null
                t.onreadystatechange = null
                t.abort()
              }
            },
          },
          {
            key: 'sidxRequestFinished_',
            value: function e(t, r, n, i) {
              var a = this
              return function(e, s) {
                if (!a.request) {
                  return
                }
                a.request = null
                if (e) {
                  a.error = {
                    status: s.status,
                    message: 'DASH playlist request error at URL: ' + t.uri,
                    response: s.response,
                    code: 2,
                  }
                  if (n) {
                    a.state = n
                  }
                  a.trigger('error')
                  return i(r, null)
                }
                var o = new Uint8Array(s.response)
                var u = wl.parseSidx(o.subarray(8))
                return i(r, u)
              }
            },
          },
          {
            key: 'media',
            value: function t(r) {
              var n = this
              if (!r) {
                return this.media_
              }
              if (this.state === 'HAVE_NOTHING') {
                throw new Error('Cannot switch media playlist from ' + this.state)
              }
              var i = this.state
              if (typeof r === 'string') {
                if (!this.master.playlists[r]) {
                  throw new Error('Unknown playlist URI: ' + r)
                }
                r = this.master.playlists[r]
              }
              var a = !this.media_ || r.uri !== this.media_.uri
              if (a && this.loadedPlaylists_[r.uri] && this.loadedPlaylists_[r.uri].endList) {
                this.state = 'HAVE_METADATA'
                this.media_ = r
                if (a) {
                  this.trigger('mediachanging')
                  this.trigger('mediachange')
                }
                return
              }
              if (!a) {
                return
              }
              if (this.media_) {
                this.trigger('mediachanging')
              }
              if (!r.sidx) {
                this.mediaRequest_ = e.setTimeout(
                  this.haveMetadata.bind(this, { startingState: i, playlist: r }),
                  0
                )
                return
              }
              var s = void 0
              var o = void 0
              if (this.masterPlaylistLoader_) {
                s = this.masterPlaylistLoader_.master
                o = this.masterPlaylistLoader_.sidxMapping_
              } else {
                s = this.master
                o = this.sidxMapping_
              }
              var u = bh(r.sidx)
              o[u] = { sidxInfo: r.sidx }
              this.request = Ih(
                r.sidx,
                r,
                this.hls_.xhr,
                { handleManifestRedirects: this.handleManifestRedirects },
                this.sidxRequestFinished_(r, s, i, function(e, t) {
                  if (!e || !t) {
                    throw new Error('failed to request sidx')
                  }
                  o[u].sidx = t
                  n.haveMetadata({ startingState: i, playlist: e.playlists[r.uri] })
                })
              )
            },
          },
          {
            key: 'haveMetadata',
            value: function e(t) {
              var r = t.startingState,
                n = t.playlist
              this.state = 'HAVE_METADATA'
              this.loadedPlaylists_[n.uri] = n
              this.mediaRequest_ = null
              this.refreshMedia_(n.uri)
              if (r === 'HAVE_MASTER') {
                this.trigger('loadedmetadata')
              } else {
                this.trigger('mediachange')
              }
            },
          },
          {
            key: 'pause',
            value: function t() {
              this.stopRequest()
              e.clearTimeout(this.mediaUpdateTimeout)
              e.clearTimeout(this.minimumUpdatePeriodTimeout_)
              if (this.state === 'HAVE_NOTHING') {
                this.started = false
              }
            },
          },
          {
            key: 'load',
            value: function t(r) {
              var n = this
              e.clearTimeout(this.mediaUpdateTimeout)
              e.clearTimeout(this.minimumUpdatePeriodTimeout_)
              var i = this.media()
              if (r) {
                var a = i ? (i.targetDuration / 2) * 1e3 : 5 * 1e3
                this.mediaUpdateTimeout = e.setTimeout(function() {
                  return n.load()
                }, a)
                return
              }
              if (!this.started) {
                this.start()
                return
              }
              this.trigger('loadedplaylist')
            },
          },
          {
            key: 'parseMasterXml',
            value: function e() {
              var t = nl(this.masterXml_, {
                manifestUri: this.srcUrl,
                clientOffset: this.clientOffset_,
                sidxMapping: this.sidxMapping_,
              })
              t.uri = this.srcUrl
              for (var r = 0; r < t.playlists.length; r++) {
                var n = 'placeholder-uri-' + r
                t.playlists[r].uri = n
                t.playlists[n] = t.playlists[r]
              }
              _d(t, function(e, r, n, i) {
                if (e.playlists && e.playlists.length) {
                  var a = 'placeholder-uri-' + r + '-' + n + '-' + i
                  e.playlists[0].uri = a
                  t.playlists[a] = e.playlists[0]
                }
              })
              Sd(t)
              wd(t)
              return t
            },
          },
          {
            key: 'start',
            value: function t() {
              var r = this
              this.started = true
              if (this.masterPlaylistLoader_) {
                this.mediaRequest_ = e.setTimeout(this.haveMaster_.bind(this), 0)
                return
              }
              this.request = this.hls_.xhr(
                { uri: this.srcUrl, withCredentials: this.withCredentials },
                function(e, t) {
                  if (!r.request) {
                    return
                  }
                  r.request = null
                  if (e) {
                    r.error = {
                      status: t.status,
                      message: 'DASH playlist request error at URL: ' + r.srcUrl,
                      responseText: t.responseText,
                      code: 2,
                    }
                    if (r.state === 'HAVE_NOTHING') {
                      r.started = false
                    }
                    return r.trigger('error')
                  }
                  r.masterXml_ = t.responseText
                  if (t.responseHeaders && t.responseHeaders.date) {
                    r.masterLoaded_ = Date.parse(t.responseHeaders.date)
                  } else {
                    r.masterLoaded_ = Date.now()
                  }
                  r.srcUrl = ld(r.handleManifestRedirects, r.srcUrl, t)
                  r.syncClientServerClock_(r.onClientServerClockSync_.bind(r))
                }
              )
            },
          },
          {
            key: 'syncClientServerClock_',
            value: function e(t) {
              var r = this
              var n = il(this.masterXml_)
              if (n === null) {
                this.clientOffset_ = this.masterLoaded_ - Date.now()
                return t()
              }
              if (n.method === 'DIRECT') {
                this.clientOffset_ = n.value - Date.now()
                return t()
              }
              this.request = this.hls_.xhr(
                {
                  uri: ud(this.srcUrl, n.value),
                  method: n.method,
                  withCredentials: this.withCredentials,
                },
                function(e, i) {
                  if (!r.request) {
                    return
                  }
                  if (e) {
                    r.clientOffset_ = r.masterLoaded_ - Date.now()
                    return t()
                  }
                  var a = void 0
                  if (n.method === 'HEAD') {
                    if (!i.responseHeaders || !i.responseHeaders.date) {
                      a = r.masterLoaded_
                    } else {
                      a = Date.parse(i.responseHeaders.date)
                    }
                  } else {
                    a = Date.parse(i.responseText)
                  }
                  r.clientOffset_ = a - Date.now()
                  t()
                }
              )
            },
          },
          {
            key: 'haveMaster_',
            value: function e() {
              this.state = 'HAVE_MASTER'
              this.mediaRequest_ = null
              if (!this.masterPlaylistLoader_) {
                this.master = this.parseMasterXml()
                this.trigger('loadedplaylist')
              } else if (!this.media_) {
                this.media(this.childPlaylist_)
              }
            },
          },
          {
            key: 'onClientServerClockSync_',
            value: function t() {
              var r = this
              this.haveMaster_()
              if (!this.hasPendingRequest() && !this.media_) {
                this.media(this.master.playlists[0])
              }
              if (this.master && this.master.minimumUpdatePeriod) {
                this.minimumUpdatePeriodTimeout_ = e.setTimeout(function() {
                  r.trigger('minimumUpdatePeriod')
                }, this.master.minimumUpdatePeriod)
              }
            },
          },
          {
            key: 'refreshXml_',
            value: function t() {
              var r = this
              this.request = this.hls_.xhr(
                { uri: this.srcUrl, withCredentials: this.withCredentials },
                function(t, n) {
                  if (!r.request) {
                    return
                  }
                  r.request = null
                  if (t) {
                    r.error = {
                      status: n.status,
                      message: 'DASH playlist request error at URL: ' + r.srcUrl,
                      responseText: n.responseText,
                      code: 2,
                    }
                    if (r.state === 'HAVE_NOTHING') {
                      r.started = false
                    }
                    return r.trigger('error')
                  }
                  r.masterXml_ = n.responseText
                  r.sidxMapping_ = Ah(r.masterXml_, r.srcUrl, r.clientOffset_, r.sidxMapping_)
                  var i = r.parseMasterXml()
                  var a = Eh(r.master, i)
                  var s = r.media().sidx
                  if (a) {
                    if (s) {
                      var o = bh(s)
                      if (!r.sidxMapping_[o]) {
                        var u = r.media()
                        r.request = Ih(
                          u.sidx,
                          u,
                          r.hls_.xhr,
                          { handleManifestRedirects: r.handleManifestRedirects },
                          r.sidxRequestFinished_(u, i, r.state, function(t, n) {
                            if (!t || !n) {
                              throw new Error('failed to request sidx on minimumUpdatePeriod')
                            }
                            r.sidxMapping_[o].sidx = n
                            r.minimumUpdatePeriodTimeout_ = e.setTimeout(function() {
                              r.trigger('minimumUpdatePeriod')
                            }, r.master.minimumUpdatePeriod)
                            r.refreshMedia_(r.media().uri)
                            return
                          })
                        )
                      }
                    } else {
                      r.master = a
                    }
                  }
                  r.minimumUpdatePeriodTimeout_ = e.setTimeout(function() {
                    r.trigger('minimumUpdatePeriod')
                  }, r.master.minimumUpdatePeriod)
                }
              )
            },
          },
          {
            key: 'refreshMedia_',
            value: function t(r) {
              var n = this
              if (!r) {
                throw new Error('refreshMedia_ must take a media uri')
              }
              var i = void 0
              var a = void 0
              if (this.masterPlaylistLoader_) {
                i = this.masterPlaylistLoader_.master
                a = this.masterPlaylistLoader_.parseMasterXml()
              } else {
                i = this.master
                a = this.parseMasterXml()
              }
              var s = Eh(i, a)
              if (s) {
                if (this.masterPlaylistLoader_) {
                  this.masterPlaylistLoader_.master = s
                } else {
                  this.master = s
                }
                this.media_ = s.playlists[r]
              } else {
                this.media_ = a.playlists[r]
                this.trigger('playlistunchanged')
              }
              if (!this.media().endList) {
                this.mediaUpdateTimeout = e.setTimeout(function() {
                  n.trigger('mediaupdatetimeout')
                }, Ad(this.media(), !!s))
              }
              this.trigger('loadedplaylist')
            },
          },
        ])
        return r
      })(_h)
      var Rh = function e(t) {
        if (Ho.log.debug) {
          return Ho.log.debug.bind(Ho, 'VHS:', t + ' >')
        }
        return function() {}
      }
      function Dh() {}
      var Oh = (function() {
        function e(t, r, n, i) {
          fd(this, e)
          this.callbacks_ = []
          this.pendingCallback_ = null
          this.timestampOffset_ = 0
          this.mediaSource = t
          this.processedAppend_ = false
          this.type_ = n
          this.mimeType_ = r
          this.logger_ = Rh('SourceUpdater[' + n + '][' + r + ']')
          if (t.readyState === 'closed') {
            t.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, r, i))
          } else {
            this.createSourceBuffer_(r, i)
          }
        }
        dd(e, [
          {
            key: 'createSourceBuffer_',
            value: function e(t, r) {
              var n = this
              this.sourceBuffer_ = this.mediaSource.addSourceBuffer(t)
              this.logger_('created SourceBuffer')
              if (r) {
                r.trigger('sourcebufferadded')
                if (this.mediaSource.sourceBuffers.length < 2) {
                  r.on('sourcebufferadded', function() {
                    n.start_()
                  })
                  return
                }
              }
              this.start_()
            },
          },
          {
            key: 'start_',
            value: function e() {
              var t = this
              this.started_ = true
              this.onUpdateendCallback_ = function() {
                var e = t.pendingCallback_
                t.pendingCallback_ = null
                t.sourceBuffer_.removing = false
                t.logger_('buffered [' + Cc(t.buffered()) + ']')
                if (e) {
                  e()
                }
                t.runCallback_()
              }
              this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_)
              this.runCallback_()
            },
          },
          {
            key: 'abort',
            value: function e(t) {
              var r = this
              if (this.processedAppend_) {
                this.queueCallback_(function() {
                  r.sourceBuffer_.abort()
                }, t)
              }
            },
          },
          {
            key: 'appendBuffer',
            value: function e(t, r) {
              var n = this
              this.processedAppend_ = true
              this.queueCallback_(
                function() {
                  if (t.videoSegmentTimingInfoCallback) {
                    n.sourceBuffer_.addEventListener(
                      'videoSegmentTimingInfo',
                      t.videoSegmentTimingInfoCallback
                    )
                  }
                  n.sourceBuffer_.appendBuffer(t.bytes)
                },
                function() {
                  if (t.videoSegmentTimingInfoCallback) {
                    n.sourceBuffer_.removeEventListener(
                      'videoSegmentTimingInfo',
                      t.videoSegmentTimingInfoCallback
                    )
                  }
                  r()
                }
              )
            },
          },
          {
            key: 'buffered',
            value: function e() {
              if (!this.sourceBuffer_) {
                return Ho.createTimeRanges()
              }
              return this.sourceBuffer_.buffered
            },
          },
          {
            key: 'remove',
            value: function e(t, r) {
              var n = this
              var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Dh
              if (this.processedAppend_) {
                this.queueCallback_(function() {
                  n.logger_('remove [' + t + ' => ' + r + ']')
                  n.sourceBuffer_.removing = true
                  n.sourceBuffer_.remove(t, r)
                }, i)
              }
            },
          },
          {
            key: 'updating',
            value: function e() {
              return (
                !this.sourceBuffer_ ||
                this.sourceBuffer_.updating ||
                (!!this.pendingCallback_ && this.pendingCallback_ !== Dh)
              )
            },
          },
          {
            key: 'timestampOffset',
            value: function e(t) {
              var r = this
              if (typeof t !== 'undefined') {
                this.queueCallback_(function() {
                  r.sourceBuffer_.timestampOffset = t
                  r.runCallback_()
                })
                this.timestampOffset_ = t
              }
              return this.timestampOffset_
            },
          },
          {
            key: 'queueCallback_',
            value: function e(t, r) {
              this.callbacks_.push([t.bind(this), r])
              this.runCallback_()
            },
          },
          {
            key: 'runCallback_',
            value: function e() {
              var t = void 0
              if (!this.updating() && this.callbacks_.length && this.started_) {
                t = this.callbacks_.shift()
                this.pendingCallback_ = t[1]
                t[0]()
              }
            },
          },
          {
            key: 'dispose',
            value: function e() {
              var t = this
              var r = function e() {
                if (t.sourceBuffer_ && t.mediaSource.readyState === 'open') {
                  t.sourceBuffer_.abort()
                }
                t.sourceBuffer_.removeEventListener('updateend', e)
              }
              this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_)
              if (this.sourceBuffer_.removing) {
                this.sourceBuffer_.addEventListener('updateend', r)
              } else {
                r()
              }
            },
          },
        ])
        return e
      })()
      var Mh = {
        GOAL_BUFFER_LENGTH: 30,
        MAX_GOAL_BUFFER_LENGTH: 60,
        GOAL_BUFFER_LENGTH_RATE: 1,
        INITIAL_BANDWIDTH: 4194304,
        BANDWIDTH_VARIANCE: 1.2,
        BUFFER_LOW_WATER_LINE: 0,
        MAX_BUFFER_LOW_WATER_LINE: 30,
        BUFFER_LOW_WATER_LINE_RATE: 1,
      }
      var kh = { FAILURE: 2, TIMEOUT: -101, ABORTED: -102 }
      var Ph = function e(t) {
        t.forEach(function(e) {
          e.abort()
        })
      }
      var Nh = function e(t) {
        return {
          bandwidth: t.bandwidth,
          bytesReceived: t.bytesReceived || 0,
          roundTripTime: t.roundTripTime || 0,
        }
      }
      var Lh = function e(t) {
        var r = t.target
        var n = Date.now() - r.requestTime
        var i = { bandwidth: Infinity, bytesReceived: 0, roundTripTime: n || 0 }
        i.bytesReceived = t.loaded
        i.bandwidth = Math.floor((i.bytesReceived / i.roundTripTime) * 8 * 1e3)
        return i
      }
      var xh = function e(t, r) {
        if (r.timedout) {
          return {
            status: r.status,
            message: 'HLS request timed-out at URL: ' + r.uri,
            code: kh.TIMEOUT,
            xhr: r,
          }
        }
        if (r.aborted) {
          return {
            status: r.status,
            message: 'HLS request aborted at URL: ' + r.uri,
            code: kh.ABORTED,
            xhr: r,
          }
        }
        if (t) {
          return {
            status: r.status,
            message: 'HLS request errored at URL: ' + r.uri,
            code: kh.FAILURE,
            xhr: r,
          }
        }
        return null
      }
      var Fh = function e(t, r) {
        return function(e, n) {
          var i = n.response
          var a = xh(e, n)
          if (a) {
            return r(a, t)
          }
          if (i.byteLength !== 16) {
            return r(
              {
                status: n.status,
                message: 'Invalid HLS key at URL: ' + n.uri,
                code: kh.FAILURE,
                xhr: n,
              },
              t
            )
          }
          var s = new DataView(i)
          t.key.bytes = new Uint32Array([
            s.getUint32(0),
            s.getUint32(4),
            s.getUint32(8),
            s.getUint32(12),
          ])
          return r(null, t)
        }
      }
      var Uh = function e(t, r, n) {
        return function(e, i) {
          var a = i.response
          var s = xh(e, i)
          if (s) {
            return n(s, t)
          }
          if (a.byteLength === 0) {
            return n(
              {
                status: i.status,
                message: 'Empty HLS segment content at URL: ' + i.uri,
                code: kh.FAILURE,
                xhr: i,
              },
              t
            )
          }
          t.map.bytes = new Uint8Array(i.response)
          if (r && !r.isInitialized()) {
            r.init()
          }
          t.map.timescales = gl.timescale(t.map.bytes)
          t.map.videoTrackIds = gl.videoTrackIds(t.map.bytes)
          return n(null, t)
        }
      }
      var Bh = function e(t, r, n) {
        return function(e, i) {
          var a = i.response
          var s = xh(e, i)
          var o = void 0
          if (s) {
            return n(s, t)
          }
          if (a.byteLength === 0) {
            return n(
              {
                status: i.status,
                message: 'Empty HLS segment content at URL: ' + i.uri,
                code: kh.FAILURE,
                xhr: i,
              },
              t
            )
          }
          t.stats = Nh(i)
          if (t.key) {
            t.encryptedBytes = new Uint8Array(i.response)
          } else {
            t.bytes = new Uint8Array(i.response)
          }
          if (r && t.map && t.map.bytes) {
            if (!r.isInitialized()) {
              r.init()
            }
            o = r.parse(t.bytes, t.map.videoTrackIds, t.map.timescales)
            if (o && o.captions) {
              t.captionStreams = o.captionStreams
              t.fmp4Captions = o.captions
            }
          }
          return n(null, t)
        }
      }
      var jh = function e(t, r, n) {
        var i = function e(i) {
          if (i.data.source === r.requestId) {
            t.removeEventListener('message', e)
            var a = i.data.decrypted
            r.bytes = new Uint8Array(a.bytes, a.byteOffset, a.byteLength)
            return n(null, r)
          }
        }
        t.addEventListener('message', i)
        var a = void 0
        if (r.key.bytes.slice) {
          a = r.key.bytes.slice()
        } else {
          a = new Uint32Array(Array.prototype.slice.call(r.key.bytes))
        }
        t.postMessage(
          ac({ source: r.requestId, encrypted: r.encryptedBytes, key: a, iv: r.key.iv }),
          [r.encryptedBytes.buffer, a.buffer]
        )
      }
      var Gh = function e(t, r, n) {
        var i = 0
        var a = false
        return function(e, s) {
          if (a) {
            return
          }
          if (e) {
            a = true
            Ph(t)
            return n(e, s)
          }
          i += 1
          if (i === t.length) {
            s.endOfAllRequests = Date.now()
            if (s.encryptedBytes) {
              return jh(r, s, n)
            }
            return n(null, s)
          }
        }
      }
      var qh = function e(t, r) {
        return function(e) {
          t.stats = Ho.mergeOptions(t.stats, Lh(e))
          if (!t.stats.firstBytesReceivedAt && t.stats.bytesReceived) {
            t.stats.firstBytesReceivedAt = Date.now()
          }
          return r(e, t)
        }
      }
      var Hh = function e(t, r, n, i, a, s, o) {
        var u = []
        var l = Gh(u, n, o)
        if (a.key && !a.key.bytes) {
          var f = Ho.mergeOptions(r, { uri: a.key.resolvedUri, responseType: 'arraybuffer' })
          var d = Fh(a, l)
          var c = t(f, d)
          u.push(c)
        }
        if (a.map && !a.map.bytes) {
          var h = Ho.mergeOptions(r, {
            uri: a.map.resolvedUri,
            responseType: 'arraybuffer',
            headers: tc(a.map),
          })
          var p = Uh(a, i, l)
          var v = t(h, p)
          u.push(v)
        }
        var g = Ho.mergeOptions(r, {
          uri: a.resolvedUri,
          responseType: 'arraybuffer',
          headers: tc(a),
        })
        var m = Bh(a, i, l)
        var y = t(g, m)
        y.addEventListener('progress', qh(a, s))
        u.push(y)
        return function() {
          return Ph(u)
        }
      }
      var Vh = function t(r, n) {
        var i = void 0
        if (!r) {
          return ''
        }
        i = e.getComputedStyle(r)
        if (!i) {
          return ''
        }
        return i[n]
      }
      var Kh = function e(t, r) {
        var n = t.slice()
        t.sort(function(e, t) {
          var i = r(e, t)
          if (i === 0) {
            return n.indexOf(e) - n.indexOf(t)
          }
          return i
        })
      }
      var Yh = function t(r, n) {
        var i = void 0
        var a = void 0
        if (r.attributes.BANDWIDTH) {
          i = r.attributes.BANDWIDTH
        }
        i = i || e.Number.MAX_VALUE
        if (n.attributes.BANDWIDTH) {
          a = n.attributes.BANDWIDTH
        }
        a = a || e.Number.MAX_VALUE
        return i - a
      }
      var Wh = function t(r, n) {
        var i = void 0
        var a = void 0
        if (r.attributes.RESOLUTION && r.attributes.RESOLUTION.width) {
          i = r.attributes.RESOLUTION.width
        }
        i = i || e.Number.MAX_VALUE
        if (n.attributes.RESOLUTION && n.attributes.RESOLUTION.width) {
          a = n.attributes.RESOLUTION.width
        }
        a = a || e.Number.MAX_VALUE
        if (i === a && r.attributes.BANDWIDTH && n.attributes.BANDWIDTH) {
          return r.attributes.BANDWIDTH - n.attributes.BANDWIDTH
        }
        return i - a
      }
      var zh = function t(r, n, i, a, s) {
        var o = r.playlists.map(function(t) {
          var r = void 0
          var n = void 0
          var i = void 0
          r = t.attributes.RESOLUTION && t.attributes.RESOLUTION.width
          n = t.attributes.RESOLUTION && t.attributes.RESOLUTION.height
          i = t.attributes.BANDWIDTH
          i = i || e.Number.MAX_VALUE
          return { bandwidth: i, width: r, height: n, playlist: t }
        })
        Kh(o, function(e, t) {
          return e.bandwidth - t.bandwidth
        })
        o = o.filter(function(e) {
          return !$d.isIncompatible(e.playlist)
        })
        var u = o.filter(function(e) {
          return $d.isEnabled(e.playlist)
        })
        if (!u.length) {
          u = o.filter(function(e) {
            return !$d.isDisabled(e.playlist)
          })
        }
        var l = u.filter(function(e) {
          return e.bandwidth * Mh.BANDWIDTH_VARIANCE < n
        })
        var f = l[l.length - 1]
        var d = l.filter(function(e) {
          return e.bandwidth === f.bandwidth
        })[0]
        if (s === false) {
          var c = d || u[0] || o[0]
          return c ? c.playlist : null
        }
        var h = l.filter(function(e) {
          return e.width && e.height
        })
        Kh(h, function(e, t) {
          return e.width - t.width
        })
        var p = h.filter(function(e) {
          return e.width === i && e.height === a
        })
        f = p[p.length - 1]
        var v = p.filter(function(e) {
          return e.bandwidth === f.bandwidth
        })[0]
        var g = void 0
        var m = void 0
        var y = void 0
        if (!v) {
          g = h.filter(function(e) {
            return e.width > i || e.height > a
          })
          m = g.filter(function(e) {
            return e.width === g[0].width && e.height === g[0].height
          })
          f = m[m.length - 1]
          y = m.filter(function(e) {
            return e.bandwidth === f.bandwidth
          })[0]
        }
        var _ = y || v || d || u[0] || o[0]
        return _ ? _.playlist : null
      }
      var Xh = function e() {
        return zh(
          this.playlists.master,
          this.systemBandwidth,
          parseInt(Vh(this.tech_.el(), 'width'), 10),
          parseInt(Vh(this.tech_.el(), 'height'), 10),
          this.limitRenditionByPlayerDimensions
        )
      }
      var $h = function e(t) {
        var r = t.master,
          n = t.currentTime,
          i = t.bandwidth,
          a = t.duration,
          s = t.segmentDuration,
          o = t.timeUntilRebuffer,
          u = t.currentTimeline,
          l = t.syncController
        var f = r.playlists.filter(function(e) {
          return !$d.isIncompatible(e)
        })
        var d = f.filter($d.isEnabled)
        if (!d.length) {
          d = f.filter(function(e) {
            return !$d.isDisabled(e)
          })
        }
        var c = d.filter($d.hasAttribute.bind(null, 'BANDWIDTH'))
        var h = c.map(function(e) {
          var t = l.getSyncPoint(e, a, u, n)
          var r = t ? 1 : 2
          var f = $d.estimateSegmentRequestTime(s, i, e)
          var d = f * r - o
          return { playlist: e, rebufferingImpact: d }
        })
        var p = h.filter(function(e) {
          return e.rebufferingImpact <= 0
        })
        Kh(p, function(e, t) {
          return Yh(t.playlist, e.playlist)
        })
        if (p.length) {
          return p[0]
        }
        Kh(h, function(e, t) {
          return e.rebufferingImpact - t.rebufferingImpact
        })
        return h[0] || null
      }
      var Qh = function e() {
        var t = this.playlists.master.playlists.filter($d.isEnabled)
        Kh(t, function(e, t) {
          return Yh(e, t)
        })
        var r = t.filter(function(e) {
          return $c(e.attributes.CODECS).videoCodec
        })
        return r[0] || null
      }
      var Jh = function e(t, r, n) {
        for (var i in n) {
          if (!t[i]) {
            r.trigger({ type: 'usage', name: 'hls-608' })
            var a = r.textTracks().getTrackById(i)
            if (a) {
              t[i] = a
            } else {
              t[i] = r.addRemoteTextTrack({ kind: 'captions', id: i, label: i }, false).track
            }
          }
        }
      }
      var Zh = function e(t) {
        var r = t.inbandTextTracks,
          n = t.captionArray,
          i = t.timestampOffset
        if (!n) {
          return
        }
        var a = window.WebKitDataCue || window.VTTCue
        n.forEach(function(e) {
          var t = e.stream
          var n = e.startTime
          var s = e.endTime
          if (!r[t]) {
            return
          }
          n += i
          s += i
          r[t].addCue(new a(n, s, e.text))
        })
      }
      var ep = 500
      var tp = function e(t, r, n) {
        if (!t || !r) {
          return false
        }
        var i = t.segments
        var a = n === i.length
        return t.endList && r.readyState === 'open' && a
      }
      var rp = function e(t) {
        return typeof t === 'number' && isFinite(t)
      }
      var np = function e(t, r, n) {
        if (t !== 'main' || !r || !n) {
          return null
        }
        if (!n.containsAudio && !n.containsVideo) {
          return 'Neither audio nor video found in segment.'
        }
        if (r.containsVideo && !n.containsVideo) {
          return (
            'Only audio found in segment when we expected video.' +
            " We can't switch to audio only from a stream that had video." +
            ' To get rid of this message, please add codec information to the manifest.'
          )
        }
        if (!r.containsVideo && n.containsVideo) {
          return (
            'Video found in segment when we expected only audio.' +
            " We can't switch to a stream with video from an audio only stream." +
            ' To get rid of this message, please add codec information to the manifest.'
          )
        }
        return null
      }
      var ip = function e(t, r, n) {
        var i = void 0
        if (t.length && t.start(0) > 0 && t.start(0) < r) {
          i = t.start(0)
        } else {
          i = r - 30
        }
        return Math.min(i, r - n)
      }
      var ap = function e(t) {
        var r = t.segment,
          n = r.start,
          i = r.end,
          a = t.playlist,
          s = a.mediaSequence,
          o = a.id,
          u = a.segments,
          l = u === undefined ? [] : u,
          f = t.mediaIndex,
          d = t.timeline
        return [
          'appending [' + f + '] of [' + s + ', ' + (s + l.length) + '] from playlist [' + o + ']',
          '[' + n + ' => ' + i + '] in timeline [' + d + ']',
        ].join(' ')
      }
      var sp = (function(t) {
        hd(r, t)
        function r(e) {
          fd(this, r)
          var t = pd(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this))
          if (!e) {
            throw new TypeError('Initialization settings are required')
          }
          if (typeof e.currentTime !== 'function') {
            throw new TypeError('No currentTime getter specified')
          }
          if (!e.mediaSource) {
            throw new TypeError('No MediaSource specified')
          }
          t.bandwidth = e.bandwidth
          t.throughput = { rate: 0, count: 0 }
          t.roundTrip = NaN
          t.resetStats_()
          t.mediaIndex = null
          t.hasPlayed_ = e.hasPlayed
          t.currentTime_ = e.currentTime
          t.seekable_ = e.seekable
          t.seeking_ = e.seeking
          t.duration_ = e.duration
          t.mediaSource_ = e.mediaSource
          t.hls_ = e.hls
          t.loaderType_ = e.loaderType
          t.startingMedia_ = void 0
          t.segmentMetadataTrack_ = e.segmentMetadataTrack
          t.goalBufferLength_ = e.goalBufferLength
          t.sourceType_ = e.sourceType
          t.inbandTextTracks_ = e.inbandTextTracks
          t.state_ = 'INIT'
          t.checkBufferTimeout_ = null
          t.error_ = void 0
          t.currentTimeline_ = -1
          t.pendingSegment_ = null
          t.mimeType_ = null
          t.sourceUpdater_ = null
          t.xhrOptions_ = null
          t.activeInitSegmentId_ = null
          t.initSegments_ = {}
          t.cacheEncryptionKeys_ = e.cacheEncryptionKeys
          t.keyCache_ = {}
          if (t.loaderType_ === 'main') {
            t.captionParser_ = new $l()
          } else {
            t.captionParser_ = null
          }
          t.decrypter_ = e.decrypter
          t.syncController_ = e.syncController
          t.syncPoint_ = { segmentIndex: 0, time: 0 }
          t.syncController_.on('syncinfoupdate', function() {
            return t.trigger('syncinfoupdate')
          })
          t.mediaSource_.addEventListener('sourceopen', function() {
            return (t.ended_ = false)
          })
          t.fetchAtBuffer_ = false
          t.logger_ = Rh('SegmentLoader[' + t.loaderType_ + ']')
          Object.defineProperty(t, 'state', {
            get: function e() {
              return this.state_
            },
            set: function e(t) {
              if (t !== this.state_) {
                this.logger_(this.state_ + ' -> ' + t)
                this.state_ = t
              }
            },
          })
          return t
        }
        dd(r, [
          {
            key: 'resetStats_',
            value: function e() {
              this.mediaBytesTransferred = 0
              this.mediaRequests = 0
              this.mediaRequestsAborted = 0
              this.mediaRequestsTimedout = 0
              this.mediaRequestsErrored = 0
              this.mediaTransferDuration = 0
              this.mediaSecondsLoaded = 0
            },
          },
          {
            key: 'dispose',
            value: function e() {
              this.state = 'DISPOSED'
              this.pause()
              this.abort_()
              if (this.sourceUpdater_) {
                this.sourceUpdater_.dispose()
              }
              this.resetStats_()
              if (this.captionParser_) {
                this.captionParser_.reset()
              }
            },
          },
          {
            key: 'abort',
            value: function e() {
              if (this.state !== 'WAITING') {
                if (this.pendingSegment_) {
                  this.pendingSegment_ = null
                }
                return
              }
              this.abort_()
              this.state = 'READY'
              if (!this.paused()) {
                this.monitorBuffer_()
              }
            },
          },
          {
            key: 'abort_',
            value: function e() {
              if (this.pendingSegment_) {
                this.pendingSegment_.abortRequests()
              }
              this.pendingSegment_ = null
            },
          },
          {
            key: 'error',
            value: function e(t) {
              if (typeof t !== 'undefined') {
                this.error_ = t
              }
              this.pendingSegment_ = null
              return this.error_
            },
          },
          {
            key: 'endOfStream',
            value: function e() {
              this.ended_ = true
              this.pause()
              this.trigger('ended')
            },
          },
          {
            key: 'buffered_',
            value: function e() {
              if (!this.sourceUpdater_) {
                return Ho.createTimeRanges()
              }
              return this.sourceUpdater_.buffered()
            },
          },
          {
            key: 'initSegment',
            value: function e(t) {
              var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false
              if (!t) {
                return null
              }
              var n = sc(t)
              var i = this.initSegments_[n]
              if (r && !i && t.bytes) {
                this.initSegments_[n] = i = {
                  resolvedUri: t.resolvedUri,
                  byterange: t.byterange,
                  bytes: t.bytes,
                  timescales: t.timescales,
                  videoTrackIds: t.videoTrackIds,
                }
              }
              return i || t
            },
          },
          {
            key: 'segmentKey',
            value: function e(t) {
              var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false
              if (!t) {
                return null
              }
              var n = oc(t)
              var i = this.keyCache_[n]
              if (this.cacheEncryptionKeys_ && r && !i && t.bytes) {
                this.keyCache_[n] = i = { resolvedUri: t.resolvedUri, bytes: t.bytes }
              }
              var a = { resolvedUri: (i || t).resolvedUri }
              if (i) {
                a.bytes = i.bytes
              }
              return a
            },
          },
          {
            key: 'couldBeginLoading_',
            value: function e() {
              return (
                this.playlist_ &&
                (this.sourceUpdater_ || (this.mimeType_ && this.state === 'INIT')) &&
                !this.paused()
              )
            },
          },
          {
            key: 'load',
            value: function e() {
              this.monitorBuffer_()
              if (!this.playlist_) {
                return
              }
              this.syncController_.setDateTimeMapping(this.playlist_)
              if (this.state === 'INIT' && this.couldBeginLoading_()) {
                return this.init_()
              }
              if (!this.couldBeginLoading_() || (this.state !== 'READY' && this.state !== 'INIT')) {
                return
              }
              this.state = 'READY'
            },
          },
          {
            key: 'init_',
            value: function e() {
              this.state = 'READY'
              this.sourceUpdater_ = new Oh(
                this.mediaSource_,
                this.mimeType_,
                this.loaderType_,
                this.sourceBufferEmitter_
              )
              this.resetEverything()
              return this.monitorBuffer_()
            },
          },
          {
            key: 'playlist',
            value: function e(t) {
              var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}
              if (!t) {
                return
              }
              var n = this.playlist_
              var i = this.pendingSegment_
              this.playlist_ = t
              this.xhrOptions_ = r
              if (!this.hasPlayed_()) {
                t.syncInfo = { mediaSequence: t.mediaSequence, time: 0 }
              }
              var a = null
              if (n) {
                if (n.id) {
                  a = n.id
                } else if (n.uri) {
                  a = n.uri
                }
              }
              this.logger_('playlist update [' + a + ' => ' + (t.id || t.uri) + ']')
              this.trigger('syncinfoupdate')
              if (this.state === 'INIT' && this.couldBeginLoading_()) {
                return this.init_()
              }
              if (!n || n.uri !== t.uri) {
                if (this.mediaIndex !== null) {
                  this.resyncLoader()
                }
                return
              }
              var s = t.mediaSequence - n.mediaSequence
              this.logger_('live window shift [' + s + ']')
              if (this.mediaIndex !== null) {
                this.mediaIndex -= s
              }
              if (i) {
                i.mediaIndex -= s
                if (i.mediaIndex >= 0) {
                  i.segment = t.segments[i.mediaIndex]
                }
              }
              this.syncController_.saveExpiredSegmentInfo(n, t)
            },
          },
          {
            key: 'pause',
            value: function t() {
              if (this.checkBufferTimeout_) {
                e.clearTimeout(this.checkBufferTimeout_)
                this.checkBufferTimeout_ = null
              }
            },
          },
          {
            key: 'paused',
            value: function e() {
              return this.checkBufferTimeout_ === null
            },
          },
          {
            key: 'mimeType',
            value: function e(t, r) {
              if (this.mimeType_) {
                return
              }
              this.mimeType_ = t
              this.sourceBufferEmitter_ = r
              if (this.state === 'INIT' && this.couldBeginLoading_()) {
                this.init_()
              }
            },
          },
          {
            key: 'resetEverything',
            value: function e(t) {
              this.ended_ = false
              this.resetLoader()
              this.remove(0, this.duration_(), t)
              if (this.captionParser_) {
                this.captionParser_.clearAllCaptions()
              }
              this.trigger('reseteverything')
            },
          },
          {
            key: 'resetLoader',
            value: function e() {
              this.fetchAtBuffer_ = false
              this.resyncLoader()
            },
          },
          {
            key: 'resyncLoader',
            value: function e() {
              this.mediaIndex = null
              this.syncPoint_ = null
              this.abort()
            },
          },
          {
            key: 'remove',
            value: function e(t, r, n) {
              if (this.sourceUpdater_) {
                this.sourceUpdater_.remove(t, r, n)
              }
              Mc(t, r, this.segmentMetadataTrack_)
              if (this.inbandTextTracks_) {
                for (var i in this.inbandTextTracks_) {
                  Mc(t, r, this.inbandTextTracks_[i])
                }
              }
            },
          },
          {
            key: 'monitorBuffer_',
            value: function t() {
              if (this.checkBufferTimeout_) {
                e.clearTimeout(this.checkBufferTimeout_)
              }
              this.checkBufferTimeout_ = e.setTimeout(this.monitorBufferTick_.bind(this), 1)
            },
          },
          {
            key: 'monitorBufferTick_',
            value: function t() {
              if (this.state === 'READY') {
                this.fillBuffer_()
              }
              if (this.checkBufferTimeout_) {
                e.clearTimeout(this.checkBufferTimeout_)
              }
              this.checkBufferTimeout_ = e.setTimeout(this.monitorBufferTick_.bind(this), ep)
            },
          },
          {
            key: 'fillBuffer_',
            value: function e() {
              if (this.sourceUpdater_.updating()) {
                return
              }
              if (!this.syncPoint_) {
                this.syncPoint_ = this.syncController_.getSyncPoint(
                  this.playlist_,
                  this.duration_(),
                  this.currentTimeline_,
                  this.currentTime_()
                )
              }
              var t = this.checkBuffer_(
                this.buffered_(),
                this.playlist_,
                this.mediaIndex,
                this.hasPlayed_(),
                this.currentTime_(),
                this.syncPoint_
              )
              if (!t) {
                return
              }
              if (this.isEndOfStream_(t.mediaIndex)) {
                this.endOfStream()
                return
              }
              if (
                t.mediaIndex === this.playlist_.segments.length - 1 &&
                this.mediaSource_.readyState === 'ended' &&
                !this.seeking_()
              ) {
                return
              }
              if (t.timeline !== this.currentTimeline_) {
                this.syncController_.reset()
                t.timestampOffset = t.startOfSegment
                if (this.captionParser_) {
                  this.captionParser_.clearAllCaptions()
                }
              }
              this.loadSegment_(t)
            },
          },
          {
            key: 'isEndOfStream_',
            value: function e(t) {
              var r =
                arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_
              return tp(r, this.mediaSource_, t) && !this.sourceUpdater_.updating()
            },
          },
          {
            key: 'checkBuffer_',
            value: function e(t, r, n, i, a, s) {
              var o = 0
              var u = void 0
              if (t.length) {
                o = t.end(t.length - 1)
              }
              var l = Math.max(0, o - a)
              if (!r.segments.length) {
                return null
              }
              if (l >= this.goalBufferLength_()) {
                return null
              }
              if (!i && l >= 1) {
                return null
              }
              if (s === null) {
                n = this.getSyncSegmentCandidate_(r)
                return this.generateSegmentInfo_(r, n, null, true)
              }
              if (n !== null) {
                var f = r.segments[n]
                u = o
                return this.generateSegmentInfo_(r, n + 1, u, false)
              }
              if (this.fetchAtBuffer_) {
                var d = $d.getMediaInfoForTime(r, o, s.segmentIndex, s.time)
                n = d.mediaIndex
                u = d.startTime
              } else {
                var c = $d.getMediaInfoForTime(r, a, s.segmentIndex, s.time)
                n = c.mediaIndex
                u = c.startTime
              }
              return this.generateSegmentInfo_(r, n, u, false)
            },
          },
          {
            key: 'getSyncSegmentCandidate_',
            value: function e(t) {
              var r = this
              if (this.currentTimeline_ === -1) {
                return 0
              }
              var n = t.segments
                .map(function(e, t) {
                  return { timeline: e.timeline, segmentIndex: t }
                })
                .filter(function(e) {
                  return e.timeline === r.currentTimeline_
                })
              if (n.length) {
                return n[Math.min(n.length - 1, 1)].segmentIndex
              }
              return Math.max(t.segments.length - 1, 0)
            },
          },
          {
            key: 'generateSegmentInfo_',
            value: function e(t, r, n, i) {
              if (r < 0 || r >= t.segments.length) {
                return null
              }
              var a = t.segments[r]
              return {
                requestId: 'segment-loader-' + Math.random(),
                uri: a.resolvedUri,
                mediaIndex: r,
                isSyncRequest: i,
                startOfSegment: n,
                playlist: t,
                bytes: null,
                encryptedBytes: null,
                timestampOffset: null,
                timeline: a.timeline,
                duration: a.duration,
                segment: a,
              }
            },
          },
          {
            key: 'abortRequestEarly_',
            value: function e(t) {
              if (
                this.hls_.tech_.paused() ||
                !this.xhrOptions_.timeout ||
                !this.playlist_.attributes.BANDWIDTH
              ) {
                return false
              }
              if (Date.now() - (t.firstBytesReceivedAt || Date.now()) < 1e3) {
                return false
              }
              var r = this.currentTime_()
              var n = t.bandwidth
              var i = this.pendingSegment_.duration
              var a = $d.estimateSegmentRequestTime(i, n, this.playlist_, t.bytesReceived)
              var s = Rc(this.buffered_(), r, this.hls_.tech_.playbackRate()) - 1
              if (a <= s) {
                return false
              }
              var o = $h({
                master: this.hls_.playlists.master,
                currentTime: r,
                bandwidth: n,
                duration: this.duration_(),
                segmentDuration: i,
                timeUntilRebuffer: s,
                currentTimeline: this.currentTimeline_,
                syncController: this.syncController_,
              })
              if (!o) {
                return
              }
              var u = a - s
              var l = u - o.rebufferingImpact
              var f = 0.5
              if (s <= Ec) {
                f = 1
              }
              if (!o.playlist || o.playlist.uri === this.playlist_.uri || l < f) {
                return false
              }
              this.bandwidth = o.playlist.attributes.BANDWIDTH * Mh.BANDWIDTH_VARIANCE + 1
              this.abort()
              this.trigger('earlyabort')
              return true
            },
          },
          {
            key: 'handleProgress_',
            value: function e(t, r) {
              if (
                !this.pendingSegment_ ||
                r.requestId !== this.pendingSegment_.requestId ||
                this.abortRequestEarly_(r.stats)
              ) {
                return
              }
              this.trigger('progress')
            },
          },
          {
            key: 'loadSegment_',
            value: function e(t) {
              this.state = 'WAITING'
              this.pendingSegment_ = t
              this.trimBackBuffer_(t)
              t.abortRequests = Hh(
                this.hls_.xhr,
                this.xhrOptions_,
                this.decrypter_,
                this.captionParser_,
                this.createSimplifiedSegmentObj_(t),
                this.handleProgress_.bind(this),
                this.segmentRequestFinished_.bind(this)
              )
            },
          },
          {
            key: 'trimBackBuffer_',
            value: function e(t) {
              var r = ip(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10)
              if (r > 0) {
                this.remove(0, r)
              }
            },
          },
          {
            key: 'createSimplifiedSegmentObj_',
            value: function e(t) {
              var r = t.segment
              var n = { resolvedUri: r.resolvedUri, byterange: r.byterange, requestId: t.requestId }
              if (r.key) {
                var i =
                  r.key.iv || new Uint32Array([0, 0, 0, t.mediaIndex + t.playlist.mediaSequence])
                n.key = this.segmentKey(r.key)
                n.key.iv = i
              }
              if (r.map) {
                n.map = this.initSegment(r.map)
              }
              return n
            },
          },
          {
            key: 'segmentRequestFinished_',
            value: function e(t, r) {
              this.mediaRequests += 1
              if (r.stats) {
                this.mediaBytesTransferred += r.stats.bytesReceived
                this.mediaTransferDuration += r.stats.roundTripTime
              }
              if (!this.pendingSegment_) {
                this.mediaRequestsAborted += 1
                return
              }
              if (r.requestId !== this.pendingSegment_.requestId) {
                return
              }
              if (t) {
                this.pendingSegment_ = null
                this.state = 'READY'
                if (t.code === kh.ABORTED) {
                  this.mediaRequestsAborted += 1
                  return
                }
                this.pause()
                if (t.code === kh.TIMEOUT) {
                  this.mediaRequestsTimedout += 1
                  this.bandwidth = 1
                  this.roundTrip = NaN
                  this.trigger('bandwidthupdate')
                  return
                }
                this.mediaRequestsErrored += 1
                this.error(t)
                this.trigger('error')
                return
              }
              this.bandwidth = r.stats.bandwidth
              this.roundTrip = r.stats.roundTripTime
              if (r.map) {
                r.map = this.initSegment(r.map, true)
              }
              if (r.key) {
                this.segmentKey(r.key, true)
              }
              this.processSegmentResponse_(r)
            },
          },
          {
            key: 'processSegmentResponse_',
            value: function e(t) {
              var r = this.pendingSegment_
              r.bytes = t.bytes
              if (t.map) {
                r.segment.map.bytes = t.map.bytes
              }
              r.endOfAllRequests = t.endOfAllRequests
              if (t.fmp4Captions) {
                Jh(this.inbandTextTracks_, this.hls_.tech_, t.captionStreams)
                Zh({
                  inbandTextTracks: this.inbandTextTracks_,
                  captionArray: t.fmp4Captions,
                  timestampOffset: 0,
                })
                if (this.captionParser_) {
                  this.captionParser_.clearParsedCaptions()
                }
              }
              this.handleSegment_()
            },
          },
          {
            key: 'handleSegment_',
            value: function e() {
              var t = this
              if (!this.pendingSegment_) {
                this.state = 'READY'
                return
              }
              var r = this.pendingSegment_
              var n = r.segment
              var i = this.syncController_.probeSegmentInfo(r)
              if (
                typeof this.startingMedia_ === 'undefined' &&
                i &&
                (i.containsAudio || i.containsVideo)
              ) {
                this.startingMedia_ = {
                  containsAudio: i.containsAudio,
                  containsVideo: i.containsVideo,
                }
              }
              var a = np(this.loaderType_, this.startingMedia_, i)
              if (a) {
                this.error({ message: a, blacklistDuration: Infinity })
                this.trigger('error')
                return
              }
              if (r.isSyncRequest) {
                this.trigger('syncinfoupdate')
                this.pendingSegment_ = null
                this.state = 'READY'
                return
              }
              if (
                r.timestampOffset !== null &&
                r.timestampOffset !== this.sourceUpdater_.timestampOffset()
              ) {
                if (i && i.segmentTimestampInfo) {
                  var s = i.segmentTimestampInfo[0].ptsTime
                  var o = i.segmentTimestampInfo[0].dtsTime
                  r.timestampOffset -= s - o
                }
                this.sourceUpdater_.timestampOffset(r.timestampOffset)
                this.trigger('timestampoffset')
              }
              var u = this.syncController_.mappingForTimeline(r.timeline)
              if (u !== null) {
                this.trigger({ type: 'segmenttimemapping', mapping: u })
              }
              this.state = 'APPENDING'
              if (n.map) {
                var l = sc(n.map)
                if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== l) {
                  var f = this.initSegment(n.map)
                  this.sourceUpdater_.appendBuffer({ bytes: f.bytes }, function() {
                    t.activeInitSegmentId_ = l
                  })
                }
              }
              r.byteLength = r.bytes.byteLength
              if (typeof n.start === 'number' && typeof n.end === 'number') {
                this.mediaSecondsLoaded += n.end - n.start
              } else {
                this.mediaSecondsLoaded += n.duration
              }
              this.logger_(ap(r))
              this.sourceUpdater_.appendBuffer(
                {
                  bytes: r.bytes,
                  videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(
                    this,
                    r.requestId
                  ),
                },
                this.handleUpdateEnd_.bind(this)
              )
            },
          },
          {
            key: 'handleVideoSegmentTimingInfo_',
            value: function e(t, r) {
              if (!this.pendingSegment_ || t !== this.pendingSegment_.requestId) {
                return
              }
              var n = this.pendingSegment_.segment
              if (!n.videoTimingInfo) {
                n.videoTimingInfo = {}
              }
              n.videoTimingInfo.transmuxerPrependedSeconds =
                r.videoSegmentTimingInfo.prependedContentDuration || 0
              n.videoTimingInfo.transmuxedPresentationStart =
                r.videoSegmentTimingInfo.start.presentation
              n.videoTimingInfo.transmuxedPresentationEnd =
                r.videoSegmentTimingInfo.end.presentation
              n.videoTimingInfo.baseMediaDecodeTime = r.videoSegmentTimingInfo.baseMediaDecodeTime
            },
          },
          {
            key: 'handleUpdateEnd_',
            value: function e() {
              if (!this.pendingSegment_) {
                this.state = 'READY'
                if (!this.paused()) {
                  this.monitorBuffer_()
                }
                return
              }
              var t = this.pendingSegment_
              var r = t.segment
              var n = this.mediaIndex !== null
              this.pendingSegment_ = null
              this.recordThroughput_(t)
              this.addSegmentMetadataCue_(t)
              this.state = 'READY'
              this.mediaIndex = t.mediaIndex
              this.fetchAtBuffer_ = true
              this.currentTimeline_ = t.timeline
              this.trigger('syncinfoupdate')
              if (r.end && this.currentTime_() - r.end > t.playlist.targetDuration * 3) {
                this.resetEverything()
                return
              }
              if (n) {
                this.trigger('bandwidthupdate')
              }
              this.trigger('progress')
              if (this.isEndOfStream_(t.mediaIndex + 1, t.playlist)) {
                this.endOfStream()
              }
              if (!this.paused()) {
                this.monitorBuffer_()
              }
            },
          },
          {
            key: 'recordThroughput_',
            value: function e(t) {
              var r = this.throughput.rate
              var n = Date.now() - t.endOfAllRequests + 1
              var i = Math.floor((t.byteLength / n) * 8 * 1e3)
              this.throughput.rate += (i - r) / ++this.throughput.count
            },
          },
          {
            key: 'addSegmentMetadataCue_',
            value: function t(r) {
              if (!this.segmentMetadataTrack_) {
                return
              }
              var n = r.segment
              var i = n.start
              var a = n.end
              if (!rp(i) || !rp(a)) {
                return
              }
              Mc(i, a, this.segmentMetadataTrack_)
              var s = e.WebKitDataCue || e.VTTCue
              var o = {
                custom: n.custom,
                dateTimeObject: n.dateTimeObject,
                dateTimeString: n.dateTimeString,
                bandwidth: r.playlist.attributes.BANDWIDTH,
                resolution: r.playlist.attributes.RESOLUTION,
                codecs: r.playlist.attributes.CODECS,
                byteLength: r.byteLength,
                uri: r.uri,
                timeline: r.timeline,
                playlist: r.playlist.uri,
                start: i,
                end: a,
              }
              var u = JSON.stringify(o)
              var l = new s(i, a, u)
              l.value = o
              this.segmentMetadataTrack_.addCue(l)
            },
          },
        ])
        return r
      })(Ho.EventTarget)
      var op = function e(t) {
        return decodeURIComponent(escape(String.fromCharCode.apply(null, t)))
      }
      var up = new Uint8Array(
        '\n\n'.split('').map(function(e) {
          return e.charCodeAt(0)
        })
      )
      var lp = (function(t) {
        hd(r, t)
        function r(e) {
          var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}
          fd(this, r)
          var n = pd(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this, e, t))
          n.mediaSource_ = null
          n.subtitlesTrack_ = null
          return n
        }
        dd(r, [
          {
            key: 'buffered_',
            value: function e() {
              if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {
                return Ho.createTimeRanges()
              }
              var t = this.subtitlesTrack_.cues
              var r = t[0].startTime
              var n = t[t.length - 1].startTime
              return Ho.createTimeRanges([[r, n]])
            },
          },
          {
            key: 'initSegment',
            value: function e(t) {
              var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false
              if (!t) {
                return null
              }
              var n = sc(t)
              var i = this.initSegments_[n]
              if (r && !i && t.bytes) {
                var a = up.byteLength + t.bytes.byteLength
                var s = new Uint8Array(a)
                s.set(t.bytes)
                s.set(up, t.bytes.byteLength)
                this.initSegments_[n] = i = {
                  resolvedUri: t.resolvedUri,
                  byterange: t.byterange,
                  bytes: s,
                }
              }
              return i || t
            },
          },
          {
            key: 'couldBeginLoading_',
            value: function e() {
              return this.playlist_ && this.subtitlesTrack_ && !this.paused()
            },
          },
          {
            key: 'init_',
            value: function e() {
              this.state = 'READY'
              this.resetEverything()
              return this.monitorBuffer_()
            },
          },
          {
            key: 'track',
            value: function e(t) {
              if (typeof t === 'undefined') {
                return this.subtitlesTrack_
              }
              this.subtitlesTrack_ = t
              if (this.state === 'INIT' && this.couldBeginLoading_()) {
                this.init_()
              }
              return this.subtitlesTrack_
            },
          },
          {
            key: 'remove',
            value: function e(t, r) {
              Mc(t, r, this.subtitlesTrack_)
            },
          },
          {
            key: 'fillBuffer_',
            value: function e() {
              var t = this
              if (!this.syncPoint_) {
                this.syncPoint_ = this.syncController_.getSyncPoint(
                  this.playlist_,
                  this.duration_(),
                  this.currentTimeline_,
                  this.currentTime_()
                )
              }
              var r = this.checkBuffer_(
                this.buffered_(),
                this.playlist_,
                this.mediaIndex,
                this.hasPlayed_(),
                this.currentTime_(),
                this.syncPoint_
              )
              r = this.skipEmptySegments_(r)
              if (!r) {
                return
              }
              if (this.syncController_.timestampOffsetForTimeline(r.timeline) === null) {
                var n = function e() {
                  t.state = 'READY'
                  if (!t.paused()) {
                    t.monitorBuffer_()
                  }
                }
                this.syncController_.one('timestampoffset', n)
                this.state = 'WAITING_ON_TIMELINE'
                return
              }
              this.loadSegment_(r)
            },
          },
          {
            key: 'skipEmptySegments_',
            value: function e(t) {
              while (t && t.segment.empty) {
                t = this.generateSegmentInfo_(
                  t.playlist,
                  t.mediaIndex + 1,
                  t.startOfSegment + t.duration,
                  t.isSyncRequest
                )
              }
              return t
            },
          },
          {
            key: 'handleSegment_',
            value: function t() {
              var r = this
              if (!this.pendingSegment_ || !this.subtitlesTrack_) {
                this.state = 'READY'
                return
              }
              this.state = 'APPENDING'
              var n = this.pendingSegment_
              var i = n.segment
              if (
                typeof e.WebVTT !== 'function' &&
                this.subtitlesTrack_ &&
                this.subtitlesTrack_.tech_
              ) {
                var a = void 0
                var s = function e() {
                  r.subtitlesTrack_.tech_.off('vttjsloaded', a)
                  r.error({ message: 'Error loading vtt.js' })
                  r.state = 'READY'
                  r.pause()
                  r.trigger('error')
                }
                a = function e() {
                  r.subtitlesTrack_.tech_.off('vttjserror', s)
                  r.handleSegment_()
                }
                this.state = 'WAITING_ON_VTTJS'
                this.subtitlesTrack_.tech_.one('vttjsloaded', a)
                this.subtitlesTrack_.tech_.one('vttjserror', s)
                return
              }
              i.requested = true
              try {
                this.parseVTTCues_(n)
              } catch (e) {
                this.error({ message: e.message })
                this.state = 'READY'
                this.pause()
                return this.trigger('error')
              }
              this.updateTimeMapping_(n, this.syncController_.timelines[n.timeline], this.playlist_)
              if (n.isSyncRequest) {
                this.trigger('syncinfoupdate')
                this.pendingSegment_ = null
                this.state = 'READY'
                return
              }
              n.byteLength = n.bytes.byteLength
              this.mediaSecondsLoaded += i.duration
              if (n.cues.length) {
                this.remove(n.cues[0].endTime, n.cues[n.cues.length - 1].endTime)
              }
              n.cues.forEach(function(e) {
                r.subtitlesTrack_.addCue(e)
              })
              this.handleUpdateEnd_()
            },
          },
          {
            key: 'parseVTTCues_',
            value: function t(r) {
              var n = void 0
              var i = false
              if (typeof e.TextDecoder === 'function') {
                n = new e.TextDecoder('utf8')
              } else {
                n = e.WebVTT.StringDecoder()
                i = true
              }
              var a = new e.WebVTT.Parser(e, e.vttjs, n)
              r.cues = []
              r.timestampmap = { MPEGTS: 0, LOCAL: 0 }
              a.oncue = r.cues.push.bind(r.cues)
              a.ontimestampmap = function(e) {
                return (r.timestampmap = e)
              }
              a.onparsingerror = function(e) {
                Ho.log.warn('Error encountered when parsing cues: ' + e.message)
              }
              if (r.segment.map) {
                var s = r.segment.map.bytes
                if (i) {
                  s = op(s)
                }
                a.parse(s)
              }
              var o = r.bytes
              if (i) {
                o = op(o)
              }
              a.parse(o)
              a.flush()
            },
          },
          {
            key: 'updateTimeMapping_',
            value: function e(t, r, n) {
              var i = t.segment
              if (!r) {
                return
              }
              if (!t.cues.length) {
                i.empty = true
                return
              }
              var a = t.timestampmap
              var s = a.MPEGTS / 9e4 - a.LOCAL + r.mapping
              t.cues.forEach(function(e) {
                e.startTime += s
                e.endTime += s
              })
              if (!n.syncInfo) {
                var o = t.cues[0].startTime
                var u = t.cues[t.cues.length - 1].startTime
                n.syncInfo = {
                  mediaSequence: n.mediaSequence + t.mediaIndex,
                  time: Math.min(o, u - i.duration),
                }
              }
            },
          },
        ])
        return r
      })(sp)
      var fp = function e(t, r) {
        var n = t.cues
        for (var i = 0; i < n.length; i++) {
          var a = n[i]
          if (r >= a.adStartTime && r <= a.adEndTime) {
            return a
          }
        }
        return null
      }
      var dp = function t(r, n) {
        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0
        if (!r.segments) {
          return
        }
        var a = i
        var s = void 0
        for (var o = 0; o < r.segments.length; o++) {
          var u = r.segments[o]
          if (!s) {
            s = fp(n, a + u.duration / 2)
          }
          if (s) {
            if ('cueIn' in u) {
              s.endTime = a
              s.adEndTime = a
              a += u.duration
              s = null
              continue
            }
            if (a < s.endTime) {
              a += u.duration
              continue
            }
            s.endTime += u.duration
          } else {
            if ('cueOut' in u) {
              s = new e.VTTCue(a, a + u.duration, u.cueOut)
              s.adStartTime = a
              s.adEndTime = a + parseFloat(u.cueOut)
              n.addCue(s)
            }
            if ('cueOutCont' in u) {
              var l = void 0
              var f = void 0
              var d = u.cueOutCont.split('/').map(parseFloat)
              var c = vd(d, 2)
              l = c[0]
              f = c[1]
              s = new e.VTTCue(a, a + u.duration, '')
              s.adStartTime = a - l
              s.adEndTime = s.adStartTime + f
              n.addCue(s)
            }
          }
          a += u.duration
        }
      }
      var cp = zf.inspect
      var hp = [
        {
          name: 'VOD',
          run: function e(t, r, n, i, a) {
            if (n !== Infinity) {
              var s = { time: 0, segmentIndex: 0 }
              return s
            }
            return null
          },
        },
        {
          name: 'ProgramDateTime',
          run: function e(t, r, n, i, a) {
            if (!t.datetimeToDisplayTime) {
              return null
            }
            var s = r.segments || []
            var o = null
            var u = null
            a = a || 0
            for (var l = 0; l < s.length; l++) {
              var f = s[l]
              if (f.dateTimeObject) {
                var d = f.dateTimeObject.getTime() / 1e3
                var c = d + t.datetimeToDisplayTime
                var h = Math.abs(a - c)
                if (u !== null && (h === 0 || u < h)) {
                  break
                }
                u = h
                o = { time: c, segmentIndex: l }
              }
            }
            return o
          },
        },
        {
          name: 'Segment',
          run: function e(t, r, n, i, a) {
            var s = r.segments || []
            var o = null
            var u = null
            a = a || 0
            for (var l = 0; l < s.length; l++) {
              var f = s[l]
              if (f.timeline === i && typeof f.start !== 'undefined') {
                var d = Math.abs(a - f.start)
                if (u !== null && u < d) {
                  break
                }
                if (!o || u === null || u >= d) {
                  u = d
                  o = { time: f.start, segmentIndex: l }
                }
              }
            }
            return o
          },
        },
        {
          name: 'Discontinuity',
          run: function e(t, r, n, i, a) {
            var s = null
            a = a || 0
            if (r.discontinuityStarts && r.discontinuityStarts.length) {
              var o = null
              for (var u = 0; u < r.discontinuityStarts.length; u++) {
                var l = r.discontinuityStarts[u]
                var f = r.discontinuitySequence + u + 1
                var d = t.discontinuities[f]
                if (d) {
                  var c = Math.abs(a - d.time)
                  if (o !== null && o < c) {
                    break
                  }
                  if (!s || o === null || o >= c) {
                    o = c
                    s = { time: d.time, segmentIndex: l }
                  }
                }
              }
            }
            return s
          },
        },
        {
          name: 'Playlist',
          run: function e(t, r, n, i, a) {
            if (r.syncInfo) {
              var s = {
                time: r.syncInfo.time,
                segmentIndex: r.syncInfo.mediaSequence - r.mediaSequence,
              }
              return s
            }
            return null
          },
        },
      ]
      var pp = (function(e) {
        hd(t, e)
        function t() {
          fd(this, t)
          var e = pd(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this))
          e.inspectCache_ = undefined
          e.timelines = []
          e.discontinuities = []
          e.datetimeToDisplayTime = null
          e.logger_ = Rh('SyncController')
          return e
        }
        dd(t, [
          {
            key: 'getSyncPoint',
            value: function e(t, r, n, i) {
              var a = this.runStrategies_(t, r, n, i)
              if (!a.length) {
                return null
              }
              return this.selectSyncPoint_(a, { key: 'time', value: i })
            },
          },
          {
            key: 'getExpiredTime',
            value: function e(t, r) {
              if (!t || !t.segments) {
                return null
              }
              var n = this.runStrategies_(t, r, t.discontinuitySequence, 0)
              if (!n.length) {
                return null
              }
              var i = this.selectSyncPoint_(n, { key: 'segmentIndex', value: 0 })
              if (i.segmentIndex > 0) {
                i.time *= -1
              }
              return Math.abs(i.time + kd(t, i.segmentIndex, 0))
            },
          },
          {
            key: 'runStrategies_',
            value: function e(t, r, n, i) {
              var a = []
              for (var s = 0; s < hp.length; s++) {
                var o = hp[s]
                var u = o.run(this, t, r, n, i)
                if (u) {
                  u.strategy = o.name
                  a.push({ strategy: o.name, syncPoint: u })
                }
              }
              return a
            },
          },
          {
            key: 'selectSyncPoint_',
            value: function e(t, r) {
              var n = t[0].syncPoint
              var i = Math.abs(t[0].syncPoint[r.key] - r.value)
              var a = t[0].strategy
              for (var s = 1; s < t.length; s++) {
                var o = Math.abs(t[s].syncPoint[r.key] - r.value)
                if (o < i) {
                  i = o
                  n = t[s].syncPoint
                  a = t[s].strategy
                }
              }
              this.logger_(
                'syncPoint for [' +
                  r.key +
                  ': ' +
                  r.value +
                  '] chosen with strategy' +
                  (' [' + a + ']: [time:' + n.time + ',') +
                  (' segmentIndex:' + n.segmentIndex + ']')
              )
              return n
            },
          },
          {
            key: 'saveExpiredSegmentInfo',
            value: function e(t, r) {
              var n = r.mediaSequence - t.mediaSequence
              for (var i = n - 1; i >= 0; i--) {
                var a = t.segments[i]
                if (a && typeof a.start !== 'undefined') {
                  r.syncInfo = { mediaSequence: t.mediaSequence + i, time: a.start }
                  this.logger_(
                    'playlist refresh sync: [time:' +
                      r.syncInfo.time +
                      ',' +
                      (' mediaSequence: ' + r.syncInfo.mediaSequence + ']')
                  )
                  this.trigger('syncinfoupdate')
                  break
                }
              }
            },
          },
          {
            key: 'setDateTimeMapping',
            value: function e(t) {
              if (
                !this.datetimeToDisplayTime &&
                t.segments &&
                t.segments.length &&
                t.segments[0].dateTimeObject
              ) {
                var r = t.segments[0].dateTimeObject.getTime() / 1e3
                this.datetimeToDisplayTime = -r
              }
            },
          },
          {
            key: 'reset',
            value: function e() {
              this.inspectCache_ = undefined
            },
          },
          {
            key: 'probeSegmentInfo',
            value: function e(t) {
              var r = t.segment
              var n = t.playlist
              var i = void 0
              if (r.map) {
                i = this.probeMp4Segment_(t)
              } else {
                i = this.probeTsSegment_(t)
              }
              if (i) {
                if (this.calculateSegmentTimeMapping_(t, i)) {
                  this.saveDiscontinuitySyncInfo_(t)
                  if (!n.syncInfo) {
                    n.syncInfo = { mediaSequence: n.mediaSequence + t.mediaIndex, time: r.start }
                  }
                }
              }
              return i
            },
          },
          {
            key: 'probeMp4Segment_',
            value: function e(t) {
              var r = t.segment
              var n = gl.timescale(r.map.bytes)
              var i = gl.startTime(n, t.bytes)
              if (t.timestampOffset !== null) {
                t.timestampOffset -= i
              }
              return { start: i, end: i + r.duration }
            },
          },
          {
            key: 'probeTsSegment_',
            value: function e(t) {
              var r = cp(t.bytes, this.inspectCache_)
              var n = void 0
              var i = void 0
              var a = void 0
              if (!r) {
                return null
              }
              if (r.video && r.video.length === 2) {
                this.inspectCache_ = r.video[1].dts
                n = r.video[0].dtsTime
                i = r.video[1].dtsTime
                a = r.video
              } else if (r.audio && r.audio.length === 2) {
                this.inspectCache_ = r.audio[1].dts
                n = r.audio[0].dtsTime
                i = r.audio[1].dtsTime
                a = r.audio
              }
              var s = {
                segmentTimestampInfo: a,
                start: n,
                end: i,
                containsVideo: r.video && r.video.length === 2,
                containsAudio: r.audio && r.audio.length === 2,
              }
              return s
            },
          },
          {
            key: 'timestampOffsetForTimeline',
            value: function e(t) {
              if (typeof this.timelines[t] === 'undefined') {
                return null
              }
              return this.timelines[t].time
            },
          },
          {
            key: 'mappingForTimeline',
            value: function e(t) {
              if (typeof this.timelines[t] === 'undefined') {
                return null
              }
              return this.timelines[t].mapping
            },
          },
          {
            key: 'calculateSegmentTimeMapping_',
            value: function e(t, r) {
              var n = t.segment
              var i = this.timelines[t.timeline]
              if (t.timestampOffset !== null) {
                i = { time: t.startOfSegment, mapping: t.startOfSegment - r.start }
                this.timelines[t.timeline] = i
                this.trigger('timestampoffset')
                this.logger_(
                  'time mapping for timeline ' +
                    t.timeline +
                    ': ' +
                    ('[time: ' + i.time + '] [mapping: ' + i.mapping + ']')
                )
                n.start = t.startOfSegment
                n.end = r.end + i.mapping
              } else if (i) {
                n.start = r.start + i.mapping
                n.end = r.end + i.mapping
              } else {
                return false
              }
              return true
            },
          },
          {
            key: 'saveDiscontinuitySyncInfo_',
            value: function e(t) {
              var r = t.playlist
              var n = t.segment
              if (n.discontinuity) {
                this.discontinuities[n.timeline] = { time: n.start, accuracy: 0 }
              } else if (r.discontinuityStarts && r.discontinuityStarts.length) {
                for (var i = 0; i < r.discontinuityStarts.length; i++) {
                  var a = r.discontinuityStarts[i]
                  var s = r.discontinuitySequence + i + 1
                  var o = a - t.mediaIndex
                  var u = Math.abs(o)
                  if (!this.discontinuities[s] || this.discontinuities[s].accuracy > u) {
                    var l = void 0
                    if (o < 0) {
                      l = n.start - kd(r, t.mediaIndex, a)
                    } else {
                      l = n.end + kd(r, t.mediaIndex + 1, a)
                    }
                    this.discontinuities[s] = { time: l, accuracy: u }
                  }
                }
              }
            },
          },
        ])
        return t
      })(Ho.EventTarget)
      var vp = new Gc('./decrypter-worker.worker.js', function(e, t) {
        var r = this
        var n = (function() {
          function e(e) {
            return e.subarray(0, e.byteLength - e[e.byteLength - 1])
          }
          var t = function e(t, r) {
            if (!(t instanceof r)) {
              throw new TypeError('Cannot call a class as a function')
            }
          }
          var n = (function() {
            function e(e, t) {
              for (var r = 0; r < t.length; r++) {
                var n = t[r]
                n.enumerable = n.enumerable || false
                n.configurable = true
                if ('value' in n) n.writable = true
                Object.defineProperty(e, n.key, n)
              }
            }
            return function(t, r, n) {
              if (r) e(t.prototype, r)
              if (n) e(t, n)
              return t
            }
          })()
          var i = function e(t, r) {
            if (typeof r !== 'function' && r !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' + typeof r
              )
            }
            t.prototype = Object.create(r && r.prototype, {
              constructor: { value: t, enumerable: false, writable: true, configurable: true },
            })
            if (r) Object.setPrototypeOf ? Object.setPrototypeOf(t, r) : (t.__proto__ = r)
          }
          var a = function e(t, r) {
            if (!t) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
            }
            return r && (typeof r === 'object' || typeof r === 'function') ? r : t
          }
          var s = function e() {
            var t = [[[], [], [], [], []], [[], [], [], [], []]]
            var r = t[0]
            var n = t[1]
            var i = r[4]
            var a = n[4]
            var s = void 0
            var o = void 0
            var u = void 0
            var l = []
            var f = []
            var d = void 0
            var c = void 0
            var h = void 0
            var p = void 0
            var v = void 0
            var g = void 0
            for (s = 0; s < 256; s++) {
              f[(l[s] = (s << 1) ^ ((s >> 7) * 283)) ^ s] = s
            }
            for (o = u = 0; !i[o]; o ^= d || 1, u = f[u] || 1) {
              p = u ^ (u << 1) ^ (u << 2) ^ (u << 3) ^ (u << 4)
              p = (p >> 8) ^ (p & 255) ^ 99
              i[o] = p
              a[p] = o
              h = l[(c = l[(d = l[o])])]
              g = (h * 16843009) ^ (c * 65537) ^ (d * 257) ^ (o * 16843008)
              v = (l[p] * 257) ^ (p * 16843008)
              for (s = 0; s < 4; s++) {
                r[s][o] = v = (v << 24) ^ (v >>> 8)
                n[s][p] = g = (g << 24) ^ (g >>> 8)
              }
            }
            for (s = 0; s < 5; s++) {
              r[s] = r[s].slice(0)
              n[s] = n[s].slice(0)
            }
            return t
          }
          var o = null
          var u = (function() {
            function e(r) {
              t(this, e)
              if (!o) {
                o = s()
              }
              this._tables = [
                [
                  o[0][0].slice(),
                  o[0][1].slice(),
                  o[0][2].slice(),
                  o[0][3].slice(),
                  o[0][4].slice(),
                ],
                [
                  o[1][0].slice(),
                  o[1][1].slice(),
                  o[1][2].slice(),
                  o[1][3].slice(),
                  o[1][4].slice(),
                ],
              ]
              var n = void 0
              var i = void 0
              var a = void 0
              var u = void 0
              var l = void 0
              var f = this._tables[0][4]
              var d = this._tables[1]
              var c = r.length
              var h = 1
              if (c !== 4 && c !== 6 && c !== 8) {
                throw new Error('Invalid aes key size')
              }
              u = r.slice(0)
              l = []
              this._key = [u, l]
              for (n = c; n < 4 * c + 28; n++) {
                a = u[n - 1]
                if (n % c === 0 || (c === 8 && n % c === 4)) {
                  a =
                    (f[a >>> 24] << 24) ^
                    (f[(a >> 16) & 255] << 16) ^
                    (f[(a >> 8) & 255] << 8) ^
                    f[a & 255]
                  if (n % c === 0) {
                    a = (a << 8) ^ (a >>> 24) ^ (h << 24)
                    h = (h << 1) ^ ((h >> 7) * 283)
                  }
                }
                u[n] = u[n - c] ^ a
              }
              for (i = 0; n; i++, n--) {
                a = u[i & 3 ? n : n - 4]
                if (n <= 4 || i < 4) {
                  l[i] = a
                } else {
                  l[i] =
                    d[0][f[a >>> 24]] ^
                    d[1][f[(a >> 16) & 255]] ^
                    d[2][f[(a >> 8) & 255]] ^
                    d[3][f[a & 255]]
                }
              }
            }
            e.prototype.decrypt = function e(t, r, n, i, a, s) {
              var o = this._key[1]
              var u = t ^ o[0]
              var l = i ^ o[1]
              var f = n ^ o[2]
              var d = r ^ o[3]
              var c = void 0
              var h = void 0
              var p = void 0
              var v = o.length / 4 - 2
              var g = void 0
              var m = 4
              var y = this._tables[1]
              var _ = y[0]
              var T = y[1]
              var E = y[2]
              var b = y[3]
              var S = y[4]
              for (g = 0; g < v; g++) {
                c = _[u >>> 24] ^ T[(l >> 16) & 255] ^ E[(f >> 8) & 255] ^ b[d & 255] ^ o[m]
                h = _[l >>> 24] ^ T[(f >> 16) & 255] ^ E[(d >> 8) & 255] ^ b[u & 255] ^ o[m + 1]
                p = _[f >>> 24] ^ T[(d >> 16) & 255] ^ E[(u >> 8) & 255] ^ b[l & 255] ^ o[m + 2]
                d = _[d >>> 24] ^ T[(u >> 16) & 255] ^ E[(l >> 8) & 255] ^ b[f & 255] ^ o[m + 3]
                m += 4
                u = c
                l = h
                f = p
              }
              for (g = 0; g < 4; g++) {
                a[(3 & -g) + s] =
                  (S[u >>> 24] << 24) ^
                  (S[(l >> 16) & 255] << 16) ^
                  (S[(f >> 8) & 255] << 8) ^
                  S[d & 255] ^
                  o[m++]
                c = u
                u = l
                l = f
                f = d
                d = c
              }
            }
            return e
          })()
          var l = (function() {
            function e() {
              t(this, e)
              this.listeners = {}
            }
            e.prototype.on = function e(t, r) {
              if (!this.listeners[t]) {
                this.listeners[t] = []
              }
              this.listeners[t].push(r)
            }
            e.prototype.off = function e(t, r) {
              if (!this.listeners[t]) {
                return false
              }
              var n = this.listeners[t].indexOf(r)
              this.listeners[t].splice(n, 1)
              return n > -1
            }
            e.prototype.trigger = function e(t) {
              var r = this.listeners[t]
              if (!r) {
                return
              }
              if (arguments.length === 2) {
                var n = r.length
                for (var i = 0; i < n; ++i) {
                  r[i].call(this, arguments[1])
                }
              } else {
                var a = Array.prototype.slice.call(arguments, 1)
                var s = r.length
                for (var o = 0; o < s; ++o) {
                  r[o].apply(this, a)
                }
              }
            }
            e.prototype.dispose = function e() {
              this.listeners = {}
            }
            e.prototype.pipe = function e(t) {
              this.on('data', function(e) {
                t.push(e)
              })
            }
            return e
          })()
          var f = (function(e) {
            i(r, e)
            function r() {
              t(this, r)
              var n = a(this, e.call(this, l))
              n.jobs = []
              n.delay = 1
              n.timeout_ = null
              return n
            }
            r.prototype.processJob_ = function e() {
              this.jobs.shift()()
              if (this.jobs.length) {
                this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
              } else {
                this.timeout_ = null
              }
            }
            r.prototype.push = function e(t) {
              this.jobs.push(t)
              if (!this.timeout_) {
                this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
              }
            }
            return r
          })(l)
          var d = function e(t) {
            return (t << 24) | ((t & 65280) << 8) | ((t & 16711680) >> 8) | (t >>> 24)
          }
          var c = function e(t, r, n) {
            var i = new Int32Array(t.buffer, t.byteOffset, t.byteLength >> 2)
            var a = new u(Array.prototype.slice.call(r))
            var s = new Uint8Array(t.byteLength)
            var o = new Int32Array(s.buffer)
            var l = void 0
            var f = void 0
            var c = void 0
            var h = void 0
            var p = void 0
            var v = void 0
            var g = void 0
            var m = void 0
            var y = void 0
            l = n[0]
            f = n[1]
            c = n[2]
            h = n[3]
            for (y = 0; y < i.length; y += 4) {
              p = d(i[y])
              v = d(i[y + 1])
              g = d(i[y + 2])
              m = d(i[y + 3])
              a.decrypt(p, v, g, m, o, y)
              o[y] = d(o[y] ^ l)
              o[y + 1] = d(o[y + 1] ^ f)
              o[y + 2] = d(o[y + 2] ^ c)
              o[y + 3] = d(o[y + 3] ^ h)
              l = p
              f = v
              c = g
              h = m
            }
            return s
          }
          var h = (function() {
            function r(n, i, a, s) {
              t(this, r)
              var o = r.STEP
              var u = new Int32Array(n.buffer)
              var l = new Uint8Array(n.byteLength)
              var c = 0
              this.asyncStream_ = new f()
              this.asyncStream_.push(this.decryptChunk_(u.subarray(c, c + o), i, a, l))
              for (c = o; c < u.length; c += o) {
                a = new Uint32Array([d(u[c - 4]), d(u[c - 3]), d(u[c - 2]), d(u[c - 1])])
                this.asyncStream_.push(this.decryptChunk_(u.subarray(c, c + o), i, a, l))
              }
              this.asyncStream_.push(function() {
                s(null, e(l))
              })
            }
            r.prototype.decryptChunk_ = function e(t, r, n, i) {
              return function() {
                var e = c(t, r, n)
                i.set(e, t.byteOffset)
              }
            }
            n(r, null, [
              {
                key: 'STEP',
                get: function e() {
                  return 32e3
                },
              },
            ])
            return r
          })()
          var p = function e(t) {
            var r = {}
            Object.keys(t).forEach(function(e) {
              var n = t[e]
              if (ArrayBuffer.isView(n)) {
                r[e] = { bytes: n.buffer, byteOffset: n.byteOffset, byteLength: n.byteLength }
              } else {
                r[e] = n
              }
            })
            return r
          }
          var v = function e(t) {
            t.onmessage = function(e) {
              var r = e.data
              var n = new Uint8Array(
                r.encrypted.bytes,
                r.encrypted.byteOffset,
                r.encrypted.byteLength
              )
              var i = new Uint32Array(r.key.bytes, r.key.byteOffset, r.key.byteLength / 4)
              var a = new Uint32Array(r.iv.bytes, r.iv.byteOffset, r.iv.byteLength / 4)
              new h(n, i, a, function(e, n) {
                t.postMessage(p({ source: r.source, decrypted: n }), [n.buffer])
              })
            }
          }
          var g = new v(r)
          return g
        })()
      })
      var gp = function e(t) {
        var r = t['default'] ? 'main' : 'alternative'
        if (
          t.characteristics &&
          t.characteristics.indexOf('public.accessibility.describes-video') >= 0
        ) {
          r = 'main-desc'
        }
        return r
      }
      var mp = function e(t, r) {
        t.abort()
        t.pause()
        if (r && r.activePlaylistLoader) {
          r.activePlaylistLoader.pause()
          r.activePlaylistLoader = null
        }
      }
      var yp = function e(t, r) {
        r.activePlaylistLoader = t
        t.load()
      }
      var _p = function e(t, r) {
        return function() {
          var e = r.segmentLoaders,
            n = e[t],
            i = e.main,
            a = r.mediaTypes[t]
          var s = a.activeTrack()
          var o = a.activeGroup(s)
          var u = a.activePlaylistLoader
          mp(n, a)
          if (!o) {
            return
          }
          if (!o.playlistLoader) {
            if (u) {
              i.resetEverything()
            }
            return
          }
          n.resyncLoader()
          yp(o.playlistLoader, a)
        }
      }
      var Tp = function e(t, r) {
        return function() {
          var e = r.segmentLoaders,
            n = e[t],
            i = e.main,
            a = r.mediaTypes[t]
          var s = a.activeTrack()
          var o = a.activeGroup(s)
          var u = a.activePlaylistLoader
          mp(n, a)
          if (!o) {
            return
          }
          if (!o.playlistLoader) {
            i.resetEverything()
            return
          }
          if (u === o.playlistLoader) {
            yp(o.playlistLoader, a)
            return
          }
          if (n.track) {
            n.track(s)
          }
          n.resetEverything()
          yp(o.playlistLoader, a)
        }
      }
      var Ep = {
        AUDIO: function e(t, r) {
          return function() {
            var e = r.segmentLoaders[t],
              n = r.mediaTypes[t],
              i = r.blacklistCurrentPlaylist
            mp(e, n)
            var a = n.activeTrack()
            var s = n.activeGroup()
            var o = (
              s.filter(function(e) {
                return e['default']
              })[0] || s[0]
            ).id
            var u = n.tracks[o]
            if (a === u) {
              i({ message: 'Problem encountered loading the default audio track.' })
              return
            }
            Ho.log.warn(
              'Problem encountered loading the alternate audio track.' +
                'Switching back to default.'
            )
            for (var l in n.tracks) {
              n.tracks[l].enabled = n.tracks[l] === u
            }
            n.onTrackChanged()
          }
        },
        SUBTITLES: function e(t, r) {
          return function() {
            var e = r.segmentLoaders[t],
              n = r.mediaTypes[t]
            Ho.log.warn(
              'Problem encountered loading the subtitle track.' + 'Disabling subtitle track.'
            )
            mp(e, n)
            var i = n.activeTrack()
            if (i) {
              i.mode = 'disabled'
            }
            n.onTrackChanged()
          }
        },
      }
      var bp = {
        AUDIO: function e(t, r, n) {
          if (!r) {
            return
          }
          var i = n.tech,
            a = n.requestOptions,
            s = n.segmentLoaders[t]
          r.on('loadedmetadata', function() {
            var e = r.media()
            s.playlist(e, a)
            if (!i.paused() || (e.endList && i.preload() !== 'none')) {
              s.load()
            }
          })
          r.on('loadedplaylist', function() {
            s.playlist(r.media(), a)
            if (!i.paused()) {
              s.load()
            }
          })
          r.on('error', Ep[t](t, n))
        },
        SUBTITLES: function e(t, r, n) {
          var i = n.tech,
            a = n.requestOptions,
            s = n.segmentLoaders[t],
            o = n.mediaTypes[t]
          r.on('loadedmetadata', function() {
            var e = r.media()
            s.playlist(e, a)
            s.track(o.activeTrack())
            if (!i.paused() || (e.endList && i.preload() !== 'none')) {
              s.load()
            }
          })
          r.on('loadedplaylist', function() {
            s.playlist(r.media(), a)
            if (!i.paused()) {
              s.load()
            }
          })
          r.on('error', Ep[t](t, n))
        },
      }
      var Sp = {
        AUDIO: function e(t, r) {
          var n = r.hls,
            i = r.sourceType,
            a = r.segmentLoaders[t],
            s = r.requestOptions,
            o = r.master.mediaGroups,
            u = r.mediaTypes[t],
            l = u.groups,
            f = u.tracks,
            d = r.masterPlaylistLoader
          if (!o[t] || Object.keys(o[t]).length === 0) {
            o[t] = { main: { default: { default: true } } }
          }
          for (var c in o[t]) {
            if (!l[c]) {
              l[c] = []
            }
            for (var h in o[t][c]) {
              var p = o[t][c][h]
              var v = void 0
              if (p.resolvedUri) {
                v = new Id(p.resolvedUri, n, s)
              } else if (p.playlists && i === 'dash') {
                v = new Ch(p.playlists[0], n, s, d)
              } else {
                v = null
              }
              p = Ho.mergeOptions({ id: h, playlistLoader: v }, p)
              bp[t](t, p.playlistLoader, r)
              l[c].push(p)
              if (typeof f[h] === 'undefined') {
                var g = new Ho.AudioTrack({
                  id: h,
                  kind: gp(p),
                  enabled: false,
                  language: p.language,
                  default: p['default'],
                  label: h,
                })
                f[h] = g
              }
            }
          }
          a.on('error', Ep[t](t, r))
        },
        SUBTITLES: function e(t, r) {
          var n = r.tech,
            i = r.hls,
            a = r.sourceType,
            s = r.segmentLoaders[t],
            o = r.requestOptions,
            u = r.master.mediaGroups,
            l = r.mediaTypes[t],
            f = l.groups,
            d = l.tracks,
            c = r.masterPlaylistLoader
          for (var h in u[t]) {
            if (!f[h]) {
              f[h] = []
            }
            for (var p in u[t][h]) {
              if (u[t][h][p].forced) {
                continue
              }
              var v = u[t][h][p]
              var g = void 0
              if (a === 'hls') {
                g = new Id(v.resolvedUri, i, o)
              } else if (a === 'dash') {
                g = new Ch(v.playlists[0], i, o, c)
              }
              v = Ho.mergeOptions({ id: p, playlistLoader: g }, v)
              bp[t](t, v.playlistLoader, r)
              f[h].push(v)
              if (typeof d[p] === 'undefined') {
                var m = n.addRemoteTextTrack(
                  {
                    id: p,
                    kind: 'subtitles',
                    default: v['default'] && v.autoselect,
                    language: v.language,
                    label: p,
                  },
                  false
                ).track
                d[p] = m
              }
            }
          }
          s.on('error', Ep[t](t, r))
        },
        'CLOSED-CAPTIONS': function e(t, r) {
          var n = r.tech,
            i = r.master.mediaGroups,
            a = r.mediaTypes[t],
            s = a.groups,
            o = a.tracks
          for (var u in i[t]) {
            if (!s[u]) {
              s[u] = []
            }
            for (var l in i[t][u]) {
              var f = i[t][u][l]
              if (!f.instreamId.match(/CC\d/)) {
                continue
              }
              s[u].push(Ho.mergeOptions({ id: l }, f))
              if (typeof o[l] === 'undefined') {
                var d = n.addRemoteTextTrack(
                  {
                    id: f.instreamId,
                    kind: 'captions',
                    default: f['default'] && f.autoselect,
                    language: f.language,
                    label: l,
                  },
                  false
                ).track
                o[l] = d
              }
            }
          }
        },
      }
      var wp = function e(t, r) {
        return function(e) {
          var n = r.masterPlaylistLoader,
            i = r.mediaTypes[t].groups
          var a = n.media()
          if (!a) {
            return null
          }
          var s = null
          if (a.attributes[t]) {
            s = i[a.attributes[t]]
          }
          s = s || i.main
          if (typeof e === 'undefined') {
            return s
          }
          if (e === null) {
            return null
          }
          return (
            s.filter(function(t) {
              return t.id === e.id
            })[0] || null
          )
        }
      }
      var Ap = {
        AUDIO: function e(t, r) {
          return function() {
            var e = r.mediaTypes[t].tracks
            for (var n in e) {
              if (e[n].enabled) {
                return e[n]
              }
            }
            return null
          }
        },
        SUBTITLES: function e(t, r) {
          return function() {
            var e = r.mediaTypes[t].tracks
            for (var n in e) {
              if (e[n].mode === 'showing') {
                return e[n]
              }
            }
            return null
          }
        },
      }
      var Ip = function e(t) {
        ;['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function(e) {
          Sp[e](e, t)
        })
        var r = t.mediaTypes,
          n = t.masterPlaylistLoader,
          i = t.tech,
          a = t.hls
        ;['AUDIO', 'SUBTITLES'].forEach(function(e) {
          r[e].activeGroup = wp(e, t)
          r[e].activeTrack = Ap[e](e, t)
          r[e].onGroupChanged = _p(e, t)
          r[e].onTrackChanged = Tp(e, t)
        })
        var s = r.AUDIO.activeGroup()
        var o = (
          s.filter(function(e) {
            return e['default']
          })[0] || s[0]
        ).id
        r.AUDIO.tracks[o].enabled = true
        r.AUDIO.onTrackChanged()
        n.on('mediachange', function() {
          ;['AUDIO', 'SUBTITLES'].forEach(function(e) {
            return r[e].onGroupChanged()
          })
        })
        var u = function e() {
          r.AUDIO.onTrackChanged()
          i.trigger({ type: 'usage', name: 'hls-audio-change' })
        }
        i.audioTracks().addEventListener('change', u)
        i.remoteTextTracks().addEventListener('change', r.SUBTITLES.onTrackChanged)
        a.on('dispose', function() {
          i.audioTracks().removeEventListener('change', u)
          i.remoteTextTracks().removeEventListener('change', r.SUBTITLES.onTrackChanged)
        })
        i.clearTracks('audio')
        for (var l in r.AUDIO.tracks) {
          i.audioTracks().addTrack(r.AUDIO.tracks[l])
        }
      }
      var Cp = function e() {
        var t = {}
        ;['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function(e) {
          t[e] = {
            groups: {},
            tracks: {},
            activePlaylistLoader: null,
            activeGroup: Dh,
            activeTrack: Dh,
            onGroupChanged: Dh,
            onTrackChanged: Dh,
          }
        })
        return t
      }
      var Rp = 60 * 2
      var Dp = void 0
      var Op = [
        'mediaRequests',
        'mediaRequestsAborted',
        'mediaRequestsTimedout',
        'mediaRequestsErrored',
        'mediaTransferDuration',
        'mediaBytesTransferred',
      ]
      var Mp = function e(t) {
        return this.audioSegmentLoader_[t] + this.mainSegmentLoader_[t]
      }
      var kp = (function(t) {
        hd(r, t)
        function r(e) {
          fd(this, r)
          var t = pd(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this))
          var n = e.url,
            i = e.handleManifestRedirects,
            a = e.withCredentials,
            s = e.tech,
            o = e.bandwidth,
            u = e.externHls,
            l = e.useCueTags,
            f = e.blacklistDuration,
            d = e.enableLowInitialPlaylist,
            c = e.sourceType,
            h = e.seekTo,
            p = e.cacheEncryptionKeys
          if (!n) {
            throw new Error('A non-empty playlist URL is required')
          }
          Dp = u
          t.withCredentials = a
          t.tech_ = s
          t.hls_ = s.hls
          t.seekTo_ = h
          t.sourceType_ = c
          t.useCueTags_ = l
          t.blacklistDuration = f
          t.enableLowInitialPlaylist = d
          if (t.useCueTags_) {
            t.cueTagsTrack_ = t.tech_.addTextTrack('metadata', 'ad-cues')
            t.cueTagsTrack_.inBandMetadataTrackDispatchType = ''
          }
          t.requestOptions_ = { withCredentials: a, handleManifestRedirects: i, timeout: null }
          t.mediaTypes_ = Cp()
          t.mediaSource = new Ho.MediaSource()
          t.mediaSource.addEventListener('sourceopen', t.handleSourceOpen_.bind(t))
          t.seekable_ = Ho.createTimeRanges()
          t.hasPlayed_ = function() {
            return false
          }
          t.syncController_ = new pp(e)
          t.segmentMetadataTrack_ = s.addRemoteTextTrack(
            { kind: 'metadata', label: 'segment-metadata' },
            false
          ).track
          t.decrypter_ = new vp()
          t.inbandTextTracks_ = {}
          var v = {
            hls: t.hls_,
            mediaSource: t.mediaSource,
            currentTime: t.tech_.currentTime.bind(t.tech_),
            seekable: function e() {
              return t.seekable()
            },
            seeking: function e() {
              return t.tech_.seeking()
            },
            duration: function e() {
              return t.mediaSource.duration
            },
            hasPlayed: function e() {
              return t.hasPlayed_()
            },
            goalBufferLength: function e() {
              return t.goalBufferLength()
            },
            bandwidth: o,
            syncController: t.syncController_,
            decrypter: t.decrypter_,
            sourceType: t.sourceType_,
            inbandTextTracks: t.inbandTextTracks_,
            cacheEncryptionKeys: p,
          }
          t.masterPlaylistLoader_ =
            t.sourceType_ === 'dash'
              ? new Ch(n, t.hls_, t.requestOptions_)
              : new Id(n, t.hls_, t.requestOptions_)
          t.setupMasterPlaylistLoaderListeners_()
          t.mainSegmentLoader_ = new sp(
            Ho.mergeOptions(v, {
              segmentMetadataTrack: t.segmentMetadataTrack_,
              loaderType: 'main',
            }),
            e
          )
          t.audioSegmentLoader_ = new sp(Ho.mergeOptions(v, { loaderType: 'audio' }), e)
          t.subtitleSegmentLoader_ = new lp(Ho.mergeOptions(v, { loaderType: 'vtt' }), e)
          t.setupSegmentLoaderListeners_()
          Op.forEach(function(e) {
            t[e + '_'] = Mp.bind(t, e)
          })
          t.logger_ = Rh('MPC')
          t.masterPlaylistLoader_.load()
          return t
        }
        dd(r, [
          {
            key: 'setupMasterPlaylistLoaderListeners_',
            value: function e() {
              var t = this
              this.masterPlaylistLoader_.on('loadedmetadata', function() {
                var e = t.masterPlaylistLoader_.media()
                var r = e.targetDuration * 1.5 * 1e3
                if (Xd(t.masterPlaylistLoader_.master, t.masterPlaylistLoader_.media())) {
                  t.requestOptions_.timeout = 0
                } else {
                  t.requestOptions_.timeout = r
                }
                if (e.endList && t.tech_.preload() !== 'none') {
                  t.mainSegmentLoader_.playlist(e, t.requestOptions_)
                  t.mainSegmentLoader_.load()
                }
                Ip({
                  sourceType: t.sourceType_,
                  segmentLoaders: {
                    AUDIO: t.audioSegmentLoader_,
                    SUBTITLES: t.subtitleSegmentLoader_,
                    main: t.mainSegmentLoader_,
                  },
                  tech: t.tech_,
                  requestOptions: t.requestOptions_,
                  masterPlaylistLoader: t.masterPlaylistLoader_,
                  hls: t.hls_,
                  master: t.master(),
                  mediaTypes: t.mediaTypes_,
                  blacklistCurrentPlaylist: t.blacklistCurrentPlaylist.bind(t),
                })
                t.triggerPresenceUsage_(t.master(), e)
                try {
                  t.setupSourceBuffers_()
                } catch (e) {
                  Ho.log.warn('Failed to create SourceBuffers', e)
                  return t.mediaSource.endOfStream('decode')
                }
                t.setupFirstPlay()
                if (
                  !t.mediaTypes_.AUDIO.activePlaylistLoader ||
                  t.mediaTypes_.AUDIO.activePlaylistLoader.media()
                ) {
                  t.trigger('selectedinitialmedia')
                } else {
                  t.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function() {
                    t.trigger('selectedinitialmedia')
                  })
                }
              })
              this.masterPlaylistLoader_.on('loadedplaylist', function() {
                var e = t.masterPlaylistLoader_.media()
                if (!e) {
                  t.excludeUnsupportedVariants_()
                  var r = void 0
                  if (t.enableLowInitialPlaylist) {
                    r = t.selectInitialPlaylist()
                  }
                  if (!r) {
                    r = t.selectPlaylist()
                  }
                  t.initialMedia_ = r
                  t.masterPlaylistLoader_.media(t.initialMedia_)
                  return
                }
                if (t.useCueTags_) {
                  t.updateAdCues_(e)
                }
                t.mainSegmentLoader_.playlist(e, t.requestOptions_)
                t.updateDuration()
                if (!t.tech_.paused()) {
                  t.mainSegmentLoader_.load()
                  if (t.audioSegmentLoader_) {
                    t.audioSegmentLoader_.load()
                  }
                }
                if (!e.endList) {
                  var n = function e() {
                    var r = t.seekable()
                    if (r.length !== 0) {
                      t.mediaSource.addSeekableRange_(r.start(0), r.end(0))
                    }
                  }
                  if (t.duration() !== Infinity) {
                    var i = function e() {
                      if (t.duration() === Infinity) {
                        n()
                      } else {
                        t.tech_.one('durationchange', e)
                      }
                    }
                    t.tech_.one('durationchange', i)
                  } else {
                    n()
                  }
                }
              })
              this.masterPlaylistLoader_.on('error', function() {
                t.blacklistCurrentPlaylist(t.masterPlaylistLoader_.error)
              })
              this.masterPlaylistLoader_.on('mediachanging', function() {
                t.mainSegmentLoader_.abort()
                t.mainSegmentLoader_.pause()
              })
              this.masterPlaylistLoader_.on('mediachange', function() {
                var e = t.masterPlaylistLoader_.media()
                var r = e.targetDuration * 1.5 * 1e3
                if (Xd(t.masterPlaylistLoader_.master, t.masterPlaylistLoader_.media())) {
                  t.requestOptions_.timeout = 0
                } else {
                  t.requestOptions_.timeout = r
                }
                t.mainSegmentLoader_.playlist(e, t.requestOptions_)
                t.mainSegmentLoader_.load()
                t.tech_.trigger({ type: 'mediachange', bubbles: true })
              })
              this.masterPlaylistLoader_.on('playlistunchanged', function() {
                var e = t.masterPlaylistLoader_.media()
                var r = t.stuckAtPlaylistEnd_(e)
                if (r) {
                  t.blacklistCurrentPlaylist({ message: 'Playlist no longer updating.' })
                  t.tech_.trigger('playliststuck')
                }
              })
              this.masterPlaylistLoader_.on('renditiondisabled', function() {
                t.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' })
              })
              this.masterPlaylistLoader_.on('renditionenabled', function() {
                t.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' })
              })
            },
          },
          {
            key: 'triggerPresenceUsage_',
            value: function e(t, r) {
              var n = t.mediaGroups || {}
              var i = true
              var a = Object.keys(n.AUDIO)
              for (var s in n.AUDIO) {
                for (var o in n.AUDIO[s]) {
                  var u = n.AUDIO[s][o]
                  if (!u.uri) {
                    i = false
                  }
                }
              }
              if (i) {
                this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' })
              }
              if (Object.keys(n.SUBTITLES).length) {
                this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' })
              }
              if (Dp.Playlist.isAes(r)) {
                this.tech_.trigger({ type: 'usage', name: 'hls-aes' })
              }
              if (Dp.Playlist.isFmp4(r)) {
                this.tech_.trigger({ type: 'usage', name: 'hls-fmp4' })
              }
              if (a.length && Object.keys(n.AUDIO[a[0]]).length > 1) {
                this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' })
              }
              if (this.useCueTags_) {
                this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' })
              }
            },
          },
          {
            key: 'setupSegmentLoaderListeners_',
            value: function e() {
              var t = this
              this.mainSegmentLoader_.on('bandwidthupdate', function() {
                var e = t.selectPlaylist()
                var r = t.masterPlaylistLoader_.media()
                var n = t.tech_.buffered()
                var i = n.length ? n.end(n.length - 1) - t.tech_.currentTime() : 0
                var a = t.bufferLowWaterLine()
                if (
                  !r.endList ||
                  t.duration() < Mh.MAX_BUFFER_LOW_WATER_LINE ||
                  e.attributes.BANDWIDTH < r.attributes.BANDWIDTH ||
                  i >= a
                ) {
                  t.masterPlaylistLoader_.media(e)
                }
                t.tech_.trigger('bandwidthupdate')
              })
              this.mainSegmentLoader_.on('progress', function() {
                t.trigger('progress')
              })
              this.mainSegmentLoader_.on('error', function() {
                t.blacklistCurrentPlaylist(t.mainSegmentLoader_.error())
              })
              this.mainSegmentLoader_.on('syncinfoupdate', function() {
                t.onSyncInfoUpdate_()
              })
              this.mainSegmentLoader_.on('timestampoffset', function() {
                t.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' })
              })
              this.audioSegmentLoader_.on('syncinfoupdate', function() {
                t.onSyncInfoUpdate_()
              })
              this.mainSegmentLoader_.on('ended', function() {
                t.onEndOfStream()
              })
              this.mainSegmentLoader_.on('earlyabort', function() {
                t.blacklistCurrentPlaylist(
                  {
                    message:
                      "Aborted early because there isn't enough bandwidth to complete the " +
                      'request without rebuffering.',
                  },
                  Rp
                )
              })
              this.mainSegmentLoader_.on('reseteverything', function() {
                t.tech_.trigger('hls-reset')
              })
              this.mainSegmentLoader_.on('segmenttimemapping', function(e) {
                t.tech_.trigger({ type: 'hls-segment-time-mapping', mapping: e.mapping })
              })
              this.audioSegmentLoader_.on('ended', function() {
                t.onEndOfStream()
              })
            },
          },
          {
            key: 'mediaSecondsLoaded_',
            value: function e() {
              return Math.max(
                this.audioSegmentLoader_.mediaSecondsLoaded +
                  this.mainSegmentLoader_.mediaSecondsLoaded
              )
            },
          },
          {
            key: 'load',
            value: function e() {
              this.mainSegmentLoader_.load()
              if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                this.audioSegmentLoader_.load()
              }
              if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
                this.subtitleSegmentLoader_.load()
              }
            },
          },
          {
            key: 'smoothQualityChange_',
            value: function e() {
              var t = this.selectPlaylist()
              if (t !== this.masterPlaylistLoader_.media()) {
                this.masterPlaylistLoader_.media(t)
                this.mainSegmentLoader_.resetLoader()
              }
            },
          },
          {
            key: 'fastQualityChange_',
            value: function e() {
              var t = this
              var r = this.selectPlaylist()
              if (r === this.masterPlaylistLoader_.media()) {
                return
              }
              this.masterPlaylistLoader_.media(r)
              this.mainSegmentLoader_.resetEverything(function() {
                if (Ho.browser.IE_VERSION || Ho.browser.IS_EDGE) {
                  t.tech_.setCurrentTime(t.tech_.currentTime() + 0.04)
                } else {
                  t.tech_.setCurrentTime(t.tech_.currentTime())
                }
              })
            },
          },
          {
            key: 'play',
            value: function e() {
              if (this.setupFirstPlay()) {
                return
              }
              if (this.tech_.ended()) {
                this.seekTo_(0)
              }
              if (this.hasPlayed_()) {
                this.load()
              }
              var t = this.tech_.seekable()
              if (this.tech_.duration() === Infinity) {
                if (this.tech_.currentTime() < t.start(0)) {
                  return this.seekTo_(t.end(t.length - 1))
                }
              }
            },
          },
          {
            key: 'setupFirstPlay',
            value: function e() {
              var t = this
              var r = this.masterPlaylistLoader_.media()
              if (!r || this.tech_.paused() || this.hasPlayed_()) {
                return false
              }
              if (!r.endList) {
                var n = this.seekable()
                if (!n.length) {
                  return false
                }
                if (Ho.browser.IE_VERSION && this.tech_.readyState() === 0) {
                  this.tech_.one('loadedmetadata', function() {
                    t.trigger('firstplay')
                    t.seekTo_(n.end(0))
                    t.hasPlayed_ = function() {
                      return true
                    }
                  })
                  return false
                }
                this.trigger('firstplay')
                this.seekTo_(n.end(0))
              }
              this.hasPlayed_ = function() {
                return true
              }
              this.load()
              return true
            },
          },
          {
            key: 'handleSourceOpen_',
            value: function e() {
              try {
                this.setupSourceBuffers_()
              } catch (e) {
                Ho.log.warn('Failed to create Source Buffers', e)
                return this.mediaSource.endOfStream('decode')
              }
              if (this.tech_.autoplay()) {
                var t = this.tech_.play()
                if (typeof t !== 'undefined' && typeof t.then === 'function') {
                  t.then(null, function(e) {})
                }
              }
              this.trigger('sourceopen')
            },
          },
          {
            key: 'onEndOfStream',
            value: function e() {
              var t = this.mainSegmentLoader_.ended_
              if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                if (
                  !this.mainSegmentLoader_.startingMedia_ ||
                  this.mainSegmentLoader_.startingMedia_.containsVideo
                ) {
                  t = t && this.audioSegmentLoader_.ended_
                } else {
                  t = this.audioSegmentLoader_.ended_
                }
              }
              if (!t) {
                return
              }
              this.logger_('calling mediaSource.endOfStream()')
              try {
                this.mediaSource.endOfStream()
              } catch (e) {
                Ho.log.warn('Failed to call media source endOfStream', e)
              }
            },
          },
          {
            key: 'stuckAtPlaylistEnd_',
            value: function e(t) {
              var r = this.seekable()
              if (!r.length) {
                return false
              }
              var n = this.syncController_.getExpiredTime(t, this.mediaSource.duration)
              if (n === null) {
                return false
              }
              var i = Dp.Playlist.playlistEnd(t, n)
              var a = this.tech_.currentTime()
              var s = this.tech_.buffered()
              if (!s.length) {
                return i - a <= bc
              }
              var o = s.end(s.length - 1)
              return o - a <= bc && i - o <= bc
            },
          },
          {
            key: 'blacklistCurrentPlaylist',
            value: function e() {
              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}
              var r = arguments[1]
              var n = void 0
              var i = void 0
              n = t.playlist || this.masterPlaylistLoader_.media()
              r = r || t.blacklistDuration || this.blacklistDuration
              if (!n) {
                this.error = t
                try {
                  return this.mediaSource.endOfStream('network')
                } catch (e) {
                  return this.trigger('error')
                }
              }
              var a = this.masterPlaylistLoader_.master.playlists.filter(Hd).length === 1
              var s = this.masterPlaylistLoader_.master.playlists
              if (s.length === 1) {
                Ho.log.warn(
                  'Problem encountered with the current ' +
                    'HLS playlist. Trying again since it is the only playlist.'
                )
                this.tech_.trigger('retryplaylist')
                return this.masterPlaylistLoader_.load(a)
              }
              if (a) {
                Ho.log.warn(
                  'Removing all playlists from the blacklist because the last ' +
                    'rendition is about to be blacklisted.'
                )
                s.forEach(function(e) {
                  if (e.excludeUntil !== Infinity) {
                    delete e.excludeUntil
                  }
                })
                this.tech_.trigger('retryplaylist')
              }
              n.excludeUntil = Date.now() + r * 1e3
              this.tech_.trigger('blacklistplaylist')
              this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' })
              i = this.selectPlaylist()
              Ho.log.warn(
                'Problem encountered with the current HLS playlist.' +
                  (t.message ? ' ' + t.message : '') +
                  ' Switching to another playlist.'
              )
              return this.masterPlaylistLoader_.media(i, a)
            },
          },
          {
            key: 'pauseLoading',
            value: function e() {
              this.mainSegmentLoader_.pause()
              if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                this.audioSegmentLoader_.pause()
              }
              if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
                this.subtitleSegmentLoader_.pause()
              }
            },
          },
          {
            key: 'setCurrentTime',
            value: function e(t) {
              var r = wc(this.tech_.buffered(), t)
              if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {
                return 0
              }
              if (!this.masterPlaylistLoader_.media().segments) {
                return 0
              }
              if (r && r.length) {
                return t
              }
              this.mainSegmentLoader_.resetEverything()
              this.mainSegmentLoader_.abort()
              if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                this.audioSegmentLoader_.resetEverything()
                this.audioSegmentLoader_.abort()
              }
              if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
                this.subtitleSegmentLoader_.resetEverything()
                this.subtitleSegmentLoader_.abort()
              }
              this.load()
            },
          },
          {
            key: 'duration',
            value: function e() {
              if (!this.masterPlaylistLoader_) {
                return 0
              }
              if (this.mediaSource) {
                return this.mediaSource.duration
              }
              return Dp.Playlist.duration(this.masterPlaylistLoader_.media())
            },
          },
          {
            key: 'seekable',
            value: function e() {
              return this.seekable_
            },
          },
          {
            key: 'onSyncInfoUpdate_',
            value: function e() {
              var t = void 0
              var r = void 0
              if (!this.masterPlaylistLoader_) {
                return
              }
              var n = this.masterPlaylistLoader_.media()
              if (!n) {
                return
              }
              var i = this.syncController_.getExpiredTime(n, this.mediaSource.duration)
              if (i === null) {
                return
              }
              t = Dp.Playlist.seekable(n, i)
              if (t.length === 0) {
                return
              }
              if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                n = this.mediaTypes_.AUDIO.activePlaylistLoader.media()
                i = this.syncController_.getExpiredTime(n, this.mediaSource.duration)
                if (i === null) {
                  return
                }
                r = Dp.Playlist.seekable(n, i)
                if (r.length === 0) {
                  return
                }
              }
              var a = void 0
              var s = void 0
              if (this.seekable_ && this.seekable_.length) {
                a = this.seekable_.end(0)
                s = this.seekable_.start(0)
              }
              if (!r) {
                this.seekable_ = t
              } else if (r.start(0) > t.end(0) || t.start(0) > r.end(0)) {
                this.seekable_ = t
              } else {
                this.seekable_ = Ho.createTimeRanges([
                  [
                    r.start(0) > t.start(0) ? r.start(0) : t.start(0),
                    r.end(0) < t.end(0) ? r.end(0) : t.end(0),
                  ],
                ])
              }
              if (this.seekable_ && this.seekable_.length) {
                if (this.seekable_.end(0) === a && this.seekable_.start(0) === s) {
                  return
                }
              }
              this.logger_('seekable updated [' + Cc(this.seekable_) + ']')
              this.tech_.trigger('seekablechanged')
            },
          },
          {
            key: 'updateDuration',
            value: function e() {
              var t = this
              var r = this.mediaSource.duration
              var n = Dp.Playlist.duration(this.masterPlaylistLoader_.media())
              var i = this.tech_.buffered()
              var a = function e() {
                t.logger_('Setting duration from ' + t.mediaSource.duration + ' => ' + n)
                try {
                  t.mediaSource.duration = n
                } catch (e) {
                  Ho.log.warn('Failed to set media source duration', e)
                }
                t.tech_.trigger('durationchange')
                t.mediaSource.removeEventListener('sourceopen', e)
              }
              if (i.length > 0) {
                n = Math.max(n, i.end(i.length - 1))
              }
              if (r !== n) {
                if (this.mediaSource.readyState !== 'open') {
                  this.mediaSource.addEventListener('sourceopen', a)
                } else {
                  a()
                }
              }
            },
          },
          {
            key: 'dispose',
            value: function e() {
              var t = this
              this.decrypter_.terminate()
              this.masterPlaylistLoader_.dispose()
              this.mainSegmentLoader_.dispose()
              ;['AUDIO', 'SUBTITLES'].forEach(function(e) {
                var r = t.mediaTypes_[e].groups
                for (var n in r) {
                  r[n].forEach(function(e) {
                    if (e.playlistLoader) {
                      e.playlistLoader.dispose()
                    }
                  })
                }
              })
              this.audioSegmentLoader_.dispose()
              this.subtitleSegmentLoader_.dispose()
            },
          },
          {
            key: 'master',
            value: function e() {
              return this.masterPlaylistLoader_.master
            },
          },
          {
            key: 'media',
            value: function e() {
              return this.masterPlaylistLoader_.media() || this.initialMedia_
            },
          },
          {
            key: 'setupSourceBuffers_',
            value: function e() {
              var t = this.masterPlaylistLoader_.media()
              var r = void 0
              if (!t || this.mediaSource.readyState !== 'open') {
                return
              }
              r = rh(this.masterPlaylistLoader_.master, t)
              if (r.length < 1) {
                this.error =
                  'No compatible SourceBuffer configuration for the variant stream:' + t.resolvedUri
                return this.mediaSource.endOfStream('decode')
              }
              this.configureLoaderMimeTypes_(r)
              this.excludeIncompatibleVariants_(t)
            },
          },
          {
            key: 'configureLoaderMimeTypes_',
            value: function e(t) {
              var r =
                t.length > 1 && t[0].indexOf(',') === -1 && t[0] !== t[1]
                  ? new Ho.EventTarget()
                  : null
              this.mainSegmentLoader_.mimeType(t[0], r)
              if (t[1]) {
                this.audioSegmentLoader_.mimeType(t[1], r)
              }
            },
          },
          {
            key: 'excludeUnsupportedVariants_',
            value: function t() {
              this.master().playlists.forEach(function(t) {
                if (
                  t.attributes.CODECS &&
                  e.MediaSource &&
                  e.MediaSource.isTypeSupported &&
                  !e.MediaSource.isTypeSupported(
                    'video/mp4; codecs="' + Qc(t.attributes.CODECS) + '"'
                  )
                ) {
                  t.excludeUntil = Infinity
                }
              })
            },
          },
          {
            key: 'excludeIncompatibleVariants_',
            value: function e(t) {
              var r = 2
              var n = null
              var i = void 0
              if (t.attributes.CODECS) {
                i = $c(t.attributes.CODECS)
                n = i.videoCodec
                r = i.codecCount
              }
              this.master().playlists.forEach(function(e) {
                var t = { codecCount: 2, videoCodec: null }
                if (e.attributes.CODECS) {
                  t = $c(e.attributes.CODECS)
                }
                if (t.codecCount !== r) {
                  e.excludeUntil = Infinity
                }
                if (t.videoCodec !== n) {
                  e.excludeUntil = Infinity
                }
              })
            },
          },
          {
            key: 'updateAdCues_',
            value: function e(t) {
              var r = 0
              var n = this.seekable()
              if (n.length) {
                r = n.start(0)
              }
              dp(t, this.cueTagsTrack_, r)
            },
          },
          {
            key: 'goalBufferLength',
            value: function e() {
              var t = this.tech_.currentTime()
              var r = Mh.GOAL_BUFFER_LENGTH
              var n = Mh.GOAL_BUFFER_LENGTH_RATE
              var i = Math.max(r, Mh.MAX_GOAL_BUFFER_LENGTH)
              return Math.min(r + t * n, i)
            },
          },
          {
            key: 'bufferLowWaterLine',
            value: function e() {
              var t = this.tech_.currentTime()
              var r = Mh.BUFFER_LOW_WATER_LINE
              var n = Mh.BUFFER_LOW_WATER_LINE_RATE
              var i = Math.max(r, Mh.MAX_BUFFER_LOW_WATER_LINE)
              return Math.min(r + t * n, i)
            },
          },
        ])
        return r
      })(Ho.EventTarget)
      var Pp = function e(t, r, n) {
        return function(e) {
          var i = t.master.playlists[r]
          var a = qd(i)
          var s = Hd(i)
          if (typeof e === 'undefined') {
            return s
          }
          if (e) {
            delete i.disabled
          } else {
            i.disabled = true
          }
          if (e !== s && !a) {
            n()
            if (e) {
              t.trigger('renditionenabled')
            } else {
              t.trigger('renditiondisabled')
            }
          }
          return e
        }
      }
      var Np = function e(t, r, n) {
        fd(this, e)
        var i = t.masterPlaylistController_,
          a = t.options_.smoothQualityChange
        var s = a ? 'smooth' : 'fast'
        var o = i[s + 'QualityChange_'].bind(i)
        if (r.attributes.RESOLUTION) {
          var u = r.attributes.RESOLUTION
          this.width = u.width
          this.height = u.height
        }
        this.bandwidth = r.attributes.BANDWIDTH
        this.id = n
        this.enabled = Pp(t.playlists, r.uri, o)
      }
      var Lp = function e(t) {
        var r = t.playlists
        t.representations = function() {
          return r.master.playlists
            .filter(function(e) {
              return !qd(e)
            })
            .map(function(e, r) {
              return new Np(t, e, e.uri)
            })
        }
      }
      var xp = ['seeking', 'seeked', 'pause', 'playing', 'error']
      var Fp = (function() {
        function t(r) {
          var n = this
          fd(this, t)
          this.tech_ = r.tech
          this.seekable = r.seekable
          this.seekTo = r.seekTo
          this.allowSeeksWithinUnsafeLiveWindow = r.allowSeeksWithinUnsafeLiveWindow
          this.media = r.media
          this.consecutiveUpdates = 0
          this.lastRecordedTime = null
          this.timer_ = null
          this.checkCurrentTimeTimeout_ = null
          this.logger_ = Rh('PlaybackWatcher')
          this.logger_('initialize')
          var i = function e() {
            return n.monitorCurrentTime_()
          }
          var a = function e() {
            return n.techWaiting_()
          }
          var s = function e() {
            return n.cancelTimer_()
          }
          var o = function e() {
            return n.fixesBadSeeks_()
          }
          this.tech_.on('seekablechanged', o)
          this.tech_.on('waiting', a)
          this.tech_.on(xp, s)
          this.tech_.on('canplay', i)
          this.dispose = function() {
            n.logger_('dispose')
            n.tech_.off('seekablechanged', o)
            n.tech_.off('waiting', a)
            n.tech_.off(xp, s)
            n.tech_.off('canplay', i)
            if (n.checkCurrentTimeTimeout_) {
              e.clearTimeout(n.checkCurrentTimeTimeout_)
            }
            n.cancelTimer_()
          }
        }
        dd(t, [
          {
            key: 'monitorCurrentTime_',
            value: function t() {
              this.checkCurrentTime_()
              if (this.checkCurrentTimeTimeout_) {
                e.clearTimeout(this.checkCurrentTimeTimeout_)
              }
              this.checkCurrentTimeTimeout_ = e.setTimeout(this.monitorCurrentTime_.bind(this), 250)
            },
          },
          {
            key: 'checkCurrentTime_',
            value: function e() {
              if (this.tech_.seeking() && this.fixesBadSeeks_()) {
                this.consecutiveUpdates = 0
                this.lastRecordedTime = this.tech_.currentTime()
                return
              }
              if (this.tech_.paused() || this.tech_.seeking()) {
                return
              }
              var t = this.tech_.currentTime()
              var r = this.tech_.buffered()
              if (this.lastRecordedTime === t && (!r.length || t + bc >= r.end(r.length - 1))) {
                return this.techWaiting_()
              }
              if (this.consecutiveUpdates >= 5 && t === this.lastRecordedTime) {
                this.consecutiveUpdates++
                this.waiting_()
              } else if (t === this.lastRecordedTime) {
                this.consecutiveUpdates++
              } else {
                this.consecutiveUpdates = 0
                this.lastRecordedTime = t
              }
            },
          },
          {
            key: 'cancelTimer_',
            value: function e() {
              this.consecutiveUpdates = 0
              if (this.timer_) {
                this.logger_('cancelTimer_')
                clearTimeout(this.timer_)
              }
              this.timer_ = null
            },
          },
          {
            key: 'fixesBadSeeks_',
            value: function e() {
              var t = this.tech_.seeking()
              if (!t) {
                return false
              }
              var r = this.seekable()
              var n = this.tech_.currentTime()
              var i = this.afterSeekableWindow_(
                r,
                n,
                this.media(),
                this.allowSeeksWithinUnsafeLiveWindow
              )
              var a = void 0
              if (i) {
                var s = r.end(r.length - 1)
                a = s
              }
              if (this.beforeSeekableWindow_(r, n)) {
                var o = r.start(0)
                a = o + bc
              }
              if (typeof a !== 'undefined') {
                this.logger_(
                  'Trying to seek outside of seekable at time ' +
                    n +
                    ' with ' +
                    ('seekable range ' + Cc(r) + '. Seeking to ') +
                    (a + '.')
                )
                this.seekTo(a)
                return true
              }
              return false
            },
          },
          {
            key: 'waiting_',
            value: function e() {
              if (this.techWaiting_()) {
                return
              }
              var t = this.tech_.currentTime()
              var r = this.tech_.buffered()
              var n = wc(r, t)
              if (n.length && t + 3 <= n.end(0)) {
                this.cancelTimer_()
                this.seekTo(t)
                this.logger_(
                  'Stopped at ' +
                    t +
                    ' while inside a buffered region ' +
                    ('[' + n.start(0) + ' -> ' + n.end(0) + ']. Attempting to resume ') +
                    'playback by seeking to the current time.'
                )
                this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' })
                return
              }
            },
          },
          {
            key: 'techWaiting_',
            value: function e() {
              var t = this.seekable()
              var r = this.tech_.currentTime()
              if (this.tech_.seeking() && this.fixesBadSeeks_()) {
                return true
              }
              if (this.tech_.seeking() || this.timer_ !== null) {
                return true
              }
              if (this.beforeSeekableWindow_(t, r)) {
                var n = t.end(t.length - 1)
                this.logger_(
                  'Fell out of live window at time ' +
                    r +
                    '. Seeking to ' +
                    ('live point (seekable end) ' + n)
                )
                this.cancelTimer_()
                this.seekTo(n)
                this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' })
                return true
              }
              var i = this.tech_.buffered()
              var a = Ac(i, r)
              if (this.videoUnderflow_(a, i, r)) {
                this.cancelTimer_()
                this.seekTo(r)
                this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' })
                return true
              }
              if (a.length > 0) {
                var s = a.start(0) - r
                this.logger_(
                  'Stopped at ' +
                    r +
                    ', setting timer for ' +
                    s +
                    ', seeking ' +
                    ('to ' + a.start(0))
                )
                this.timer_ = setTimeout(this.skipTheGap_.bind(this), s * 1e3, r)
                return true
              }
              return false
            },
          },
          {
            key: 'afterSeekableWindow_',
            value: function e(t, r, n) {
              var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false
              if (!t.length) {
                return false
              }
              var a = t.end(t.length - 1) + bc
              var s = !n.endList
              if (s && i) {
                a = t.end(t.length - 1) + n.targetDuration * 3
              }
              if (r > a) {
                return true
              }
              return false
            },
          },
          {
            key: 'beforeSeekableWindow_',
            value: function e(t, r) {
              if (t.length && t.start(0) > 0 && r < t.start(0) - bc) {
                return true
              }
              return false
            },
          },
          {
            key: 'videoUnderflow_',
            value: function e(t, r, n) {
              if (t.length === 0) {
                var i = this.gapFromVideoUnderflow_(r, n)
                if (i) {
                  this.logger_(
                    'Encountered a gap in video from ' +
                      i.start +
                      ' to ' +
                      i.end +
                      '. ' +
                      ('Seeking to current time ' + n)
                  )
                  return true
                }
              }
              return false
            },
          },
          {
            key: 'skipTheGap_',
            value: function e(t) {
              var r = this.tech_.buffered()
              var n = this.tech_.currentTime()
              var i = Ac(r, n)
              this.cancelTimer_()
              if (i.length === 0 || n !== t) {
                return
              }
              this.logger_(
                'skipTheGap_:',
                'currentTime:',
                n,
                'scheduled currentTime:',
                t,
                'nextRange start:',
                i.start(0)
              )
              this.seekTo(i.start(0) + Ec)
              this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' })
            },
          },
          {
            key: 'gapFromVideoUnderflow_',
            value: function e(t, r) {
              var n = Ic(t)
              for (var i = 0; i < n.length; i++) {
                var a = n.start(i)
                var s = n.end(i)
                if (r - a < 4 && r - a > 2) {
                  return { start: a, end: s }
                }
              }
              return null
            },
          },
        ])
        return t
      })()
      var Up = {
        errorInterval: 30,
        getSource: function e(t) {
          var r = this.tech({ IWillNotUseThisInPlugins: true })
          var n = r.currentSource_
          return t(n)
        },
      }
      var Bp = function e(t, r) {
        var n = 0
        var i = 0
        var a = Ho.mergeOptions(Up, r)
        t.ready(function() {
          t.trigger({ type: 'usage', name: 'hls-error-reload-initialized' })
        })
        var s = function e() {
          if (i) {
            t.currentTime(i)
          }
        }
        var o = function e(r) {
          if (r === null || r === undefined) {
            return
          }
          i = (t.duration() !== Infinity && t.currentTime()) || 0
          t.one('loadedmetadata', s)
          t.src(r)
          t.trigger({ type: 'usage', name: 'hls-error-reload' })
          t.play()
        }
        var u = function e() {
          if (Date.now() - n < a.errorInterval * 1e3) {
            t.trigger({ type: 'usage', name: 'hls-error-reload-canceled' })
            return
          }
          if (!a.getSource || typeof a.getSource !== 'function') {
            Ho.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!')
            return
          }
          n = Date.now()
          return a.getSource.call(t, o)
        }
        var l = function e() {
          t.off('loadedmetadata', s)
          t.off('error', u)
          t.off('dispose', e)
        }
        var f = function r(n) {
          l()
          e(t, n)
        }
        t.on('error', u)
        t.on('dispose', l)
        t.reloadSourceOnError = f
      }
      var jp = function e(t) {
        Bp(this, t)
      }
      var Gp = '1.10.6'
      Ho.use('*', function(e) {
        return {
          setSource: function e(t, r) {
            r(null, t)
          },
          setCurrentTime: function t(r) {
            if (e.vhs && e.currentSource().src === e.vhs.source_.src) {
              e.vhs.setCurrentTime(r)
            }
            return r
          },
          play: function t() {
            if (e.vhs && e.currentSource().src === e.vhs.source_.src) {
              e.vhs.setCurrentTime(e.tech_.currentTime())
            }
          },
        }
      })
      var qp = {
        PlaylistLoader: Id,
        Playlist: $d,
        Decrypter: od,
        AsyncStream: id,
        decrypt: sd,
        utils: dc,
        STANDARD_PLAYLIST_SELECTOR: Xh,
        INITIAL_PLAYLIST_SELECTOR: Qh,
        comparePlaylistBandwidth: Yh,
        comparePlaylistResolution: Wh,
        xhr: Zd(),
      }
      ;[
        'GOAL_BUFFER_LENGTH',
        'MAX_GOAL_BUFFER_LENGTH',
        'GOAL_BUFFER_LENGTH_RATE',
        'BUFFER_LOW_WATER_LINE',
        'MAX_BUFFER_LOW_WATER_LINE',
        'BUFFER_LOW_WATER_LINE_RATE',
        'BANDWIDTH_VARIANCE',
      ].forEach(function(e) {
        Object.defineProperty(qp, e, {
          get: function t() {
            Ho.log.warn('using Hls.' + e + ' is UNSAFE be sure you know what you are doing')
            return Mh[e]
          },
          set: function t(r) {
            Ho.log.warn('using Hls.' + e + ' is UNSAFE be sure you know what you are doing')
            if (typeof r !== 'number' || r < 0) {
              Ho.log.warn('value of Hls.' + e + ' must be greater than or equal to 0')
              return
            }
            Mh[e] = r
          },
        })
      })
      var Hp = 'videojs-vhs'
      var Vp = function e(t) {
        var r = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i
        if (r.test(t)) {
          return 'hls'
        }
        var n = /^application\/dash\+xml/i
        if (n.test(t)) {
          return 'dash'
        }
        return null
      }
      var Kp = function e(t, r) {
        var n = r.media()
        var i = -1
        for (var a = 0; a < t.length; a++) {
          if (t[a].id === n.uri) {
            i = a
            break
          }
        }
        t.selectedIndex_ = i
        t.trigger({ selectedIndex: i, type: 'change' })
      }
      var Yp = function e(t, r) {
        r.representations().forEach(function(e) {
          t.addQualityLevel(e)
        })
        Kp(t, r.playlists)
      }
      qp.canPlaySource = function() {
        return Ho.log.warn(
          'HLS is no longer a tech. Please remove it from ' + "your player's techOrder."
        )
      }
      var Wp = function e(t, r, n) {
        if (!t) {
          return t
        }
        var i = {}
        for (var a in t) {
          i[a] = {
            audioContentType: 'audio/mp4; codecs="' + n.attributes.CODECS + '"',
            videoContentType: 'video/mp4; codecs="' + r.attributes.CODECS + '"',
          }
          if (r.contentProtection && r.contentProtection[a] && r.contentProtection[a].pssh) {
            i[a].pssh = r.contentProtection[a].pssh
          }
          if (typeof t[a] === 'string') {
            i[a].url = t[a]
          }
        }
        return Ho.mergeOptions(t, i)
      }
      var zp = function e(t) {
        if (t.options_.sourceType !== 'dash') {
          return
        }
        var r = Ho.players[t.tech_.options_.playerId]
        if (r.eme) {
          var n = Wp(
            t.source_.keySystems,
            t.playlists.media(),
            t.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media()
          )
          if (n) {
            r.currentSource().keySystems = n
            if (r.eme.initializeMediaKeys) {
              r.eme.initializeMediaKeys()
            }
          }
        }
      }
      var Xp = function e() {
        if (!window.localStorage) {
          return null
        }
        var t = window.localStorage.getItem(Hp)
        if (!t) {
          return null
        }
        try {
          return JSON.parse(t)
        } catch (e) {
          return null
        }
      }
      var $p = function e(t) {
        if (!window.localStorage) {
          return false
        }
        var r = Xp()
        r = r ? Ho.mergeOptions(r, t) : t
        try {
          window.localStorage.setItem(Hp, JSON.stringify(r))
        } catch (e) {
          return false
        }
        return r
      }
      qp.supportsNativeHls = (function() {
        var e = t.createElement('video')
        if (!Ho.getTech('Html5').isSupported()) {
          return false
        }
        var r = [
          'application/vnd.apple.mpegurl',
          'audio/mpegurl',
          'audio/x-mpegurl',
          'application/x-mpegurl',
          'video/x-mpegurl',
          'video/mpegurl',
          'application/mpegurl',
        ]
        return r.some(function(t) {
          return /maybe|probably/i.test(e.canPlayType(t))
        })
      })()
      qp.supportsNativeDash = (function() {
        if (!Ho.getTech('Html5').isSupported()) {
          return false
        }
        return /maybe|probably/i.test(t.createElement('video').canPlayType('application/dash+xml'))
      })()
      qp.supportsTypeNatively = function(e) {
        if (e === 'hls') {
          return qp.supportsNativeHls
        }
        if (e === 'dash') {
          return qp.supportsNativeDash
        }
        return false
      }
      qp.isSupported = function() {
        return Ho.log.warn(
          'HLS is no longer a tech. Please remove it from ' + "your player's techOrder."
        )
      }
      var Qp = Ho.getComponent('Component')
      var Jp = (function(e) {
        hd(r, e)
        function r(e, n, i) {
          fd(this, r)
          var a = pd(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this, n, i.hls))
          if (n.options_ && n.options_.playerId) {
            var s = Ho(n.options_.playerId)
            if (!s.hasOwnProperty('hls')) {
              Object.defineProperty(s, 'hls', {
                get: function e() {
                  Ho.log.warn('player.hls is deprecated. Use player.tech().hls instead.')
                  n.trigger({ type: 'usage', name: 'hls-player-access' })
                  return a
                },
                configurable: true,
              })
            }
            s.vhs = a
            s.dash = a
            a.player_ = s
          }
          a.tech_ = n
          a.source_ = e
          a.stats = {}
          a.setOptions_()
          if (
            a.options_.overrideNative &&
            n.overrideNativeAudioTracks &&
            n.overrideNativeVideoTracks
          ) {
            n.overrideNativeAudioTracks(true)
            n.overrideNativeVideoTracks(true)
          } else if (
            a.options_.overrideNative &&
            (n.featuresNativeVideoTracks || n.featuresNativeAudioTracks)
          ) {
            throw new Error(
              'Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB'
            )
          }
          a.on(
            t,
            [
              'fullscreenchange',
              'webkitfullscreenchange',
              'mozfullscreenchange',
              'MSFullscreenChange',
            ],
            function(e) {
              var r =
                t.fullscreenElement ||
                t.webkitFullscreenElement ||
                t.mozFullScreenElement ||
                t.msFullscreenElement
              if (r && r.contains(a.tech_.el())) {
                a.masterPlaylistController_.smoothQualityChange_()
              }
            }
          )
          a.on(a.tech_, 'seeking', function() {
            if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {
              this.setCurrentTime(0)
            }
          })
          a.on(a.tech_, 'error', function() {
            if (this.masterPlaylistController_) {
              this.masterPlaylistController_.pauseLoading()
            }
          })
          a.on(a.tech_, 'play', a.play)
          return a
        }
        dd(r, [
          {
            key: 'setOptions_',
            value: function e() {
              var t = this
              this.options_.withCredentials = this.options_.withCredentials || false
              this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false
              this.options_.limitRenditionByPlayerDimensions =
                this.options_.limitRenditionByPlayerDimensions === false ? false : true
              this.options_.smoothQualityChange = this.options_.smoothQualityChange || false
              this.options_.useBandwidthFromLocalStorage =
                typeof this.source_.useBandwidthFromLocalStorage !== 'undefined'
                  ? this.source_.useBandwidthFromLocalStorage
                  : this.options_.useBandwidthFromLocalStorage || false
              this.options_.customTagParsers = this.options_.customTagParsers || []
              this.options_.customTagMappers = this.options_.customTagMappers || []
              this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false
              if (typeof this.options_.blacklistDuration !== 'number') {
                this.options_.blacklistDuration = 5 * 60
              }
              if (typeof this.options_.bandwidth !== 'number') {
                if (this.options_.useBandwidthFromLocalStorage) {
                  var r = Xp()
                  if (r && r.bandwidth) {
                    this.options_.bandwidth = r.bandwidth
                    this.tech_.trigger({ type: 'usage', name: 'hls-bandwidth-from-local-storage' })
                  }
                  if (r && r.throughput) {
                    this.options_.throughput = r.throughput
                    this.tech_.trigger({ type: 'usage', name: 'hls-throughput-from-local-storage' })
                  }
                }
              }
              if (typeof this.options_.bandwidth !== 'number') {
                this.options_.bandwidth = Mh.INITIAL_BANDWIDTH
              }
              this.options_.enableLowInitialPlaylist =
                this.options_.enableLowInitialPlaylist &&
                this.options_.bandwidth === Mh.INITIAL_BANDWIDTH
              ;[
                'withCredentials',
                'limitRenditionByPlayerDimensions',
                'bandwidth',
                'smoothQualityChange',
                'customTagParsers',
                'customTagMappers',
                'handleManifestRedirects',
                'cacheEncryptionKeys',
              ].forEach(function(e) {
                if (typeof t.source_[e] !== 'undefined') {
                  t.options_[e] = t.source_[e]
                }
              })
              this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions
            },
          },
          {
            key: 'src',
            value: function e(t, r) {
              var n = this
              if (!t) {
                return
              }
              this.setOptions_()
              this.options_.url = this.source_.src
              this.options_.tech = this.tech_
              this.options_.externHls = qp
              this.options_.sourceType = Vp(r)
              this.options_.seekTo = function(e) {
                n.tech_.setCurrentTime(e)
                n.setCurrentTime(e)
              }
              this.masterPlaylistController_ = new kp(this.options_)
              this.playbackWatcher_ = new Fp(
                Ho.mergeOptions(this.options_, {
                  seekable: function e() {
                    return n.seekable()
                  },
                  media: function e() {
                    return n.masterPlaylistController_.media()
                  },
                })
              )
              this.masterPlaylistController_.on('error', function() {
                var e = Ho.players[n.tech_.options_.playerId]
                e.error(n.masterPlaylistController_.error)
              })
              this.masterPlaylistController_.selectPlaylist = this.selectPlaylist
                ? this.selectPlaylist.bind(this)
                : qp.STANDARD_PLAYLIST_SELECTOR.bind(this)
              this.masterPlaylistController_.selectInitialPlaylist = qp.INITIAL_PLAYLIST_SELECTOR.bind(
                this
              )
              this.playlists = this.masterPlaylistController_.masterPlaylistLoader_
              this.mediaSource = this.masterPlaylistController_.mediaSource
              Object.defineProperties(this, {
                selectPlaylist: {
                  get: function e() {
                    return this.masterPlaylistController_.selectPlaylist
                  },
                  set: function e(t) {
                    this.masterPlaylistController_.selectPlaylist = t.bind(this)
                  },
                },
                throughput: {
                  get: function e() {
                    return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate
                  },
                  set: function e(t) {
                    this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = t
                    this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1
                  },
                },
                bandwidth: {
                  get: function e() {
                    return this.masterPlaylistController_.mainSegmentLoader_.bandwidth
                  },
                  set: function e(t) {
                    this.masterPlaylistController_.mainSegmentLoader_.bandwidth = t
                    this.masterPlaylistController_.mainSegmentLoader_.throughput = {
                      rate: 0,
                      count: 0,
                    }
                  },
                },
                systemBandwidth: {
                  get: function e() {
                    var t = 1 / (this.bandwidth || 1)
                    var r = void 0
                    if (this.throughput > 0) {
                      r = 1 / this.throughput
                    } else {
                      r = 0
                    }
                    var n = Math.floor(1 / (t + r))
                    return n
                  },
                  set: function e() {
                    Ho.log.error('The "systemBandwidth" property is read-only')
                  },
                },
              })
              if (this.options_.bandwidth) {
                this.bandwidth = this.options_.bandwidth
              }
              if (this.options_.throughput) {
                this.throughput = this.options_.throughput
              }
              Object.defineProperties(this.stats, {
                bandwidth: {
                  get: function e() {
                    return n.bandwidth || 0
                  },
                  enumerable: true,
                },
                mediaRequests: {
                  get: function e() {
                    return n.masterPlaylistController_.mediaRequests_() || 0
                  },
                  enumerable: true,
                },
                mediaRequestsAborted: {
                  get: function e() {
                    return n.masterPlaylistController_.mediaRequestsAborted_() || 0
                  },
                  enumerable: true,
                },
                mediaRequestsTimedout: {
                  get: function e() {
                    return n.masterPlaylistController_.mediaRequestsTimedout_() || 0
                  },
                  enumerable: true,
                },
                mediaRequestsErrored: {
                  get: function e() {
                    return n.masterPlaylistController_.mediaRequestsErrored_() || 0
                  },
                  enumerable: true,
                },
                mediaTransferDuration: {
                  get: function e() {
                    return n.masterPlaylistController_.mediaTransferDuration_() || 0
                  },
                  enumerable: true,
                },
                mediaBytesTransferred: {
                  get: function e() {
                    return n.masterPlaylistController_.mediaBytesTransferred_() || 0
                  },
                  enumerable: true,
                },
                mediaSecondsLoaded: {
                  get: function e() {
                    return n.masterPlaylistController_.mediaSecondsLoaded_() || 0
                  },
                  enumerable: true,
                },
                buffered: {
                  get: function e() {
                    return Dc(n.tech_.buffered())
                  },
                  enumerable: true,
                },
                currentTime: {
                  get: function e() {
                    return n.tech_.currentTime()
                  },
                  enumerable: true,
                },
                currentSource: {
                  get: function e() {
                    return n.tech_.currentSource_
                  },
                  enumerable: true,
                },
                currentTech: {
                  get: function e() {
                    return n.tech_.name_
                  },
                  enumerable: true,
                },
                duration: {
                  get: function e() {
                    return n.tech_.duration()
                  },
                  enumerable: true,
                },
                master: {
                  get: function e() {
                    return n.playlists.master
                  },
                  enumerable: true,
                },
                playerDimensions: {
                  get: function e() {
                    return n.tech_.currentDimensions()
                  },
                  enumerable: true,
                },
                seekable: {
                  get: function e() {
                    return Dc(n.tech_.seekable())
                  },
                  enumerable: true,
                },
                timestamp: {
                  get: function e() {
                    return Date.now()
                  },
                  enumerable: true,
                },
                videoPlaybackQuality: {
                  get: function e() {
                    return n.tech_.getVideoPlaybackQuality()
                  },
                  enumerable: true,
                },
              })
              this.tech_.one(
                'canplay',
                this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_)
              )
              this.tech_.on('bandwidthupdate', function() {
                if (n.options_.useBandwidthFromLocalStorage) {
                  $p({ bandwidth: n.bandwidth, throughput: Math.round(n.throughput) })
                }
              })
              this.masterPlaylistController_.on('selectedinitialmedia', function() {
                Lp(n)
                zp(n)
              })
              this.on(this.masterPlaylistController_, 'progress', function() {
                this.tech_.trigger('progress')
              })
              this.tech_.ready(function() {
                return n.setupQualityLevels_()
              })
              if (!this.tech_.el()) {
                return
              }
              this.tech_.src(Ho.URL.createObjectURL(this.masterPlaylistController_.mediaSource))
            },
          },
          {
            key: 'setupQualityLevels_',
            value: function e() {
              var t = this
              var r = Ho.players[this.tech_.options_.playerId]
              if (r && r.qualityLevels) {
                this.qualityLevels_ = r.qualityLevels()
                this.masterPlaylistController_.on('selectedinitialmedia', function() {
                  Yp(t.qualityLevels_, t)
                })
                this.playlists.on('mediachange', function() {
                  Kp(t.qualityLevels_, t.playlists)
                })
              }
            },
          },
          {
            key: 'play',
            value: function e() {
              this.masterPlaylistController_.play()
            },
          },
          {
            key: 'setCurrentTime',
            value: function e(t) {
              this.masterPlaylistController_.setCurrentTime(t)
            },
          },
          {
            key: 'duration',
            value: function e() {
              return this.masterPlaylistController_.duration()
            },
          },
          {
            key: 'seekable',
            value: function e() {
              return this.masterPlaylistController_.seekable()
            },
          },
          {
            key: 'dispose',
            value: function e() {
              if (this.playbackWatcher_) {
                this.playbackWatcher_.dispose()
              }
              if (this.masterPlaylistController_) {
                this.masterPlaylistController_.dispose()
              }
              if (this.qualityLevels_) {
                this.qualityLevels_.dispose()
              }
              if (this.player_) {
                delete this.player_.vhs
                delete this.player_.dash
                delete this.player_.hls
              }
              if (this.tech_ && this.tech_.hls) {
                delete this.tech_.hls
              }
              cd(r.prototype.__proto__ || Object.getPrototypeOf(r.prototype), 'dispose', this).call(
                this
              )
            },
          },
          {
            key: 'convertToProgramTime',
            value: function e(t, r) {
              return _c({ playlist: this.masterPlaylistController_.media(), time: t, callback: r })
            },
          },
          {
            key: 'seekToProgramTime',
            value: function e(t, r) {
              var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true
              var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2
              return Tc({
                programTime: t,
                playlist: this.masterPlaylistController_.media(),
                retryCount: i,
                pauseAfterSeek: n,
                seekTo: this.options_.seekTo,
                tech: this.options_.tech,
                callback: r,
              })
            },
          },
        ])
        return r
      })(Qp)
      var Zp = {
        name: 'videojs-http-streaming',
        VERSION: Gp,
        canHandleSource: function e(t) {
          var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}
          var n = Ho.mergeOptions(Ho.options, r)
          return Zp.canPlayType(t.type, n)
        },
        handleSource: function e(t, r) {
          var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}
          var i = Ho.mergeOptions(Ho.options, n)
          r.hls = new Jp(t, r, i)
          r.hls.xhr = Zd()
          r.hls.src(t.src, t.type)
          return r.hls
        },
        canPlayType: function e(t) {
          var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}
          var n = Ho.mergeOptions(Ho.options, r),
            i = n.hls.overrideNative
          var a = Vp(t)
          var s = a && (!qp.supportsTypeNatively(a) || i)
          return s ? 'maybe' : ''
        },
      }
      if (typeof Ho.MediaSource === 'undefined' || typeof Ho.URL === 'undefined') {
        Ho.MediaSource = mh
        Ho.URL = yh
      }
      if (mh.supportsNativeMediaSources()) {
        Ho.getTech('Html5').registerSourceHandler(Zp, 0)
      }
      Ho.HlsHandler = Jp
      Ho.HlsSourceHandler = Zp
      Ho.Hls = qp
      if (!Ho.use) {
        Ho.registerComponent('Hls', qp)
      }
      Ho.options.hls = Ho.options.hls || {}
      if (Ho.registerPlugin) {
        Ho.registerPlugin('reloadSourceOnError', jp)
      } else {
        Ho.plugin('reloadSourceOnError', jp)
      }
      return Ho
    })
  },
  function(e, t, r) {
    var n = false ? global : typeof window !== 'undefined' ? window : {}
    var i = r(347)
    var a
    if (typeof document !== 'undefined') {
      a = document
    } else {
      a = n['__GLOBAL_DOCUMENT_CACHE@4']
      if (!a) {
        a = n['__GLOBAL_DOCUMENT_CACHE@4'] = i
      }
    }
    e.exports = a
  },
  function(e, t, r) {
    var n
    if (typeof window !== 'undefined') {
      n = window
    } else if (false) {
      n = global
    } else if (typeof self !== 'undefined') {
      n = self
    } else {
      n = {}
    }
    e.exports = n
  },
  function(e, t) {
    e.exports = function(e) {
      if (!e.webpackPolyfill) {
        e.deprecate = function() {}
        e.paths = []
        if (!e.children) e.children = []
        Object.defineProperty(e, 'loaded', {
          enumerable: true,
          get: function() {
            return e.l
          },
        })
        Object.defineProperty(e, 'id', {
          enumerable: true,
          get: function() {
            return e.i
          },
        })
        e.webpackPolyfill = 1
      }
      return e
    }
  },
  function(e, t) {
    ;(function(e) {
      'use strict'
      if (e.fetch) {
        return
      }
      var t = {
        searchParams: 'URLSearchParams' in e,
        iterable: 'Symbol' in e && 'iterator' in Symbol,
        blob:
          'FileReader' in e &&
          'Blob' in e &&
          (function() {
            try {
              new Blob()
              return true
            } catch (e) {
              return false
            }
          })(),
        formData: 'FormData' in e,
        arrayBuffer: 'ArrayBuffer' in e,
      }
      if (t.arrayBuffer) {
        var r = [
          '[object Int8Array]',
          '[object Uint8Array]',
          '[object Uint8ClampedArray]',
          '[object Int16Array]',
          '[object Uint16Array]',
          '[object Int32Array]',
          '[object Uint32Array]',
          '[object Float32Array]',
          '[object Float64Array]',
        ]
        var n = function(e) {
          return e && DataView.prototype.isPrototypeOf(e)
        }
        var i =
          ArrayBuffer.isView ||
          function(e) {
            return e && r.indexOf(Object.prototype.toString.call(e)) > -1
          }
      }
      function a(e) {
        if (typeof e !== 'string') {
          e = String(e)
        }
        if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e)) {
          throw new TypeError('Invalid character in header field name')
        }
        return e.toLowerCase()
      }
      function s(e) {
        if (typeof e !== 'string') {
          e = String(e)
        }
        return e
      }
      function o(e) {
        var r = {
          next: function() {
            var t = e.shift()
            return { done: t === undefined, value: t }
          },
        }
        if (t.iterable) {
          r[Symbol.iterator] = function() {
            return r
          }
        }
        return r
      }
      function u(e) {
        this.map = {}
        if (e instanceof u) {
          e.forEach(function(e, t) {
            this.append(t, e)
          }, this)
        } else if (Array.isArray(e)) {
          e.forEach(function(e) {
            this.append(e[0], e[1])
          }, this)
        } else if (e) {
          Object.getOwnPropertyNames(e).forEach(function(t) {
            this.append(t, e[t])
          }, this)
        }
      }
      u.prototype.append = function(e, t) {
        e = a(e)
        t = s(t)
        var r = this.map[e]
        this.map[e] = r ? r + ',' + t : t
      }
      u.prototype['delete'] = function(e) {
        delete this.map[a(e)]
      }
      u.prototype.get = function(e) {
        e = a(e)
        return this.has(e) ? this.map[e] : null
      }
      u.prototype.has = function(e) {
        return this.map.hasOwnProperty(a(e))
      }
      u.prototype.set = function(e, t) {
        this.map[a(e)] = s(t)
      }
      u.prototype.forEach = function(e, t) {
        for (var r in this.map) {
          if (this.map.hasOwnProperty(r)) {
            e.call(t, this.map[r], r, this)
          }
        }
      }
      u.prototype.keys = function() {
        var e = []
        this.forEach(function(t, r) {
          e.push(r)
        })
        return o(e)
      }
      u.prototype.values = function() {
        var e = []
        this.forEach(function(t) {
          e.push(t)
        })
        return o(e)
      }
      u.prototype.entries = function() {
        var e = []
        this.forEach(function(t, r) {
          e.push([r, t])
        })
        return o(e)
      }
      if (t.iterable) {
        u.prototype[Symbol.iterator] = u.prototype.entries
      }
      function l(e) {
        if (e.bodyUsed) {
          return Promise.reject(new TypeError('Already read'))
        }
        e.bodyUsed = true
      }
      function f(e) {
        return new Promise(function(t, r) {
          e.onload = function() {
            t(e.result)
          }
          e.onerror = function() {
            r(e.error)
          }
        })
      }
      function d(e) {
        var t = new FileReader()
        var r = f(t)
        t.readAsArrayBuffer(e)
        return r
      }
      function c(e) {
        var t = new FileReader()
        var r = f(t)
        t.readAsText(e)
        return r
      }
      function h(e) {
        var t = new Uint8Array(e)
        var r = new Array(t.length)
        for (var n = 0; n < t.length; n++) {
          r[n] = String.fromCharCode(t[n])
        }
        return r.join('')
      }
      function p(e) {
        if (e.slice) {
          return e.slice(0)
        } else {
          var t = new Uint8Array(e.byteLength)
          t.set(new Uint8Array(e))
          return t.buffer
        }
      }
      function v() {
        this.bodyUsed = false
        this._initBody = function(e) {
          this._bodyInit = e
          if (!e) {
            this._bodyText = ''
          } else if (typeof e === 'string') {
            this._bodyText = e
          } else if (t.blob && Blob.prototype.isPrototypeOf(e)) {
            this._bodyBlob = e
          } else if (t.formData && FormData.prototype.isPrototypeOf(e)) {
            this._bodyFormData = e
          } else if (t.searchParams && URLSearchParams.prototype.isPrototypeOf(e)) {
            this._bodyText = e.toString()
          } else if (t.arrayBuffer && t.blob && n(e)) {
            this._bodyArrayBuffer = p(e.buffer)
            this._bodyInit = new Blob([this._bodyArrayBuffer])
          } else if (t.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(e) || i(e))) {
            this._bodyArrayBuffer = p(e)
          } else {
            throw new Error('unsupported BodyInit type')
          }
          if (!this.headers.get('content-type')) {
            if (typeof e === 'string') {
              this.headers.set('content-type', 'text/plain;charset=UTF-8')
            } else if (this._bodyBlob && this._bodyBlob.type) {
              this.headers.set('content-type', this._bodyBlob.type)
            } else if (t.searchParams && URLSearchParams.prototype.isPrototypeOf(e)) {
              this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
            }
          }
        }
        if (t.blob) {
          this.blob = function() {
            var e = l(this)
            if (e) {
              return e
            }
            if (this._bodyBlob) {
              return Promise.resolve(this._bodyBlob)
            } else if (this._bodyArrayBuffer) {
              return Promise.resolve(new Blob([this._bodyArrayBuffer]))
            } else if (this._bodyFormData) {
              throw new Error('could not read FormData body as blob')
            } else {
              return Promise.resolve(new Blob([this._bodyText]))
            }
          }
          this.arrayBuffer = function() {
            if (this._bodyArrayBuffer) {
              return l(this) || Promise.resolve(this._bodyArrayBuffer)
            } else {
              return this.blob().then(d)
            }
          }
        }
        this.text = function() {
          var e = l(this)
          if (e) {
            return e
          }
          if (this._bodyBlob) {
            return c(this._bodyBlob)
          } else if (this._bodyArrayBuffer) {
            return Promise.resolve(h(this._bodyArrayBuffer))
          } else if (this._bodyFormData) {
            throw new Error('could not read FormData body as text')
          } else {
            return Promise.resolve(this._bodyText)
          }
        }
        if (t.formData) {
          this.formData = function() {
            return this.text().then(_)
          }
        }
        this.json = function() {
          return this.text().then(JSON.parse)
        }
        return this
      }
      var g = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']
      function m(e) {
        var t = e.toUpperCase()
        return g.indexOf(t) > -1 ? t : e
      }
      function y(e, t) {
        t = t || {}
        var r = t.body
        if (e instanceof y) {
          if (e.bodyUsed) {
            throw new TypeError('Already read')
          }
          this.url = e.url
          this.credentials = e.credentials
          if (!t.headers) {
            this.headers = new u(e.headers)
          }
          this.method = e.method
          this.mode = e.mode
          if (!r && e._bodyInit != null) {
            r = e._bodyInit
            e.bodyUsed = true
          }
        } else {
          this.url = String(e)
        }
        this.credentials = t.credentials || this.credentials || 'omit'
        if (t.headers || !this.headers) {
          this.headers = new u(t.headers)
        }
        this.method = m(t.method || this.method || 'GET')
        this.mode = t.mode || this.mode || null
        this.referrer = null
        if ((this.method === 'GET' || this.method === 'HEAD') && r) {
          throw new TypeError('Body not allowed for GET or HEAD requests')
        }
        this._initBody(r)
      }
      y.prototype.clone = function() {
        return new y(this, { body: this._bodyInit })
      }
      function _(e) {
        var t = new FormData()
        e.trim()
          .split('&')
          .forEach(function(e) {
            if (e) {
              var r = e.split('=')
              var n = r.shift().replace(/\+/g, ' ')
              var i = r.join('=').replace(/\+/g, ' ')
              t.append(decodeURIComponent(n), decodeURIComponent(i))
            }
          })
        return t
      }
      function T(e) {
        var t = new u()
        var r = e.replace(/\r?\n[\t ]+/g, ' ')
        r.split(/\r?\n/).forEach(function(e) {
          var r = e.split(':')
          var n = r.shift().trim()
          if (n) {
            var i = r.join(':').trim()
            t.append(n, i)
          }
        })
        return t
      }
      v.call(y.prototype)
      function E(e, t) {
        if (!t) {
          t = {}
        }
        this.type = 'default'
        this.status = t.status === undefined ? 200 : t.status
        this.ok = this.status >= 200 && this.status < 300
        this.statusText = 'statusText' in t ? t.statusText : 'OK'
        this.headers = new u(t.headers)
        this.url = t.url || ''
        this._initBody(e)
      }
      v.call(E.prototype)
      E.prototype.clone = function() {
        return new E(this._bodyInit, {
          status: this.status,
          statusText: this.statusText,
          headers: new u(this.headers),
          url: this.url,
        })
      }
      E.error = function() {
        var e = new E(null, { status: 0, statusText: '' })
        e.type = 'error'
        return e
      }
      var b = [301, 302, 303, 307, 308]
      E.redirect = function(e, t) {
        if (b.indexOf(t) === -1) {
          throw new RangeError('Invalid status code')
        }
        return new E(null, { status: t, headers: { location: e } })
      }
      e.Headers = u
      e.Request = y
      e.Response = E
      e.fetch = function(e, r) {
        return new Promise(function(n, i) {
          var a = new y(e, r)
          var s = new XMLHttpRequest()
          s.onload = function() {
            var e = {
              status: s.status,
              statusText: s.statusText,
              headers: T(s.getAllResponseHeaders() || ''),
            }
            e.url = 'responseURL' in s ? s.responseURL : e.headers.get('X-Request-URL')
            var t = 'response' in s ? s.response : s.responseText
            n(new E(t, e))
          }
          s.onerror = function() {
            i(new TypeError('Network request failed'))
          }
          s.ontimeout = function() {
            i(new TypeError('Network request failed'))
          }
          s.open(a.method, a.url, true)
          if (a.credentials === 'include') {
            s.withCredentials = true
          } else if (a.credentials === 'omit') {
            s.withCredentials = false
          }
          if ('responseType' in s && t.blob) {
            s.responseType = 'blob'
          }
          a.headers.forEach(function(e, t) {
            s.setRequestHeader(t, e)
          })
          s.send(typeof a._bodyInit === 'undefined' ? null : a._bodyInit)
        })
      }
      e.fetch.polyfill = true
    })(typeof self !== 'undefined' ? self : this)
  },
  function(e, t) {},
  function(e, t) {},
  function(e, t) {},
  function(e, t) {},
])
